cset: moving following pidspec: 30081
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.34924714 seconds)
loading group "string"... done (took 0.580757595 seconds)
loading group "linalg"... done (took 7.366548947 seconds)
loading group "parallel"... done (took 0.163010428 seconds)
loading group "find"... done (took 1.187628106 seconds)
loading group "tuple"... done (took 2.075509012 seconds)
loading group "dates"... done (took 1.310354852 seconds)
loading group "micro"... done (took 0.243577906 seconds)
loading group "io"... done (took 0.952866961 seconds)
loading group "scalar"... done (took 39.18429361 seconds)
loading group "sparse"... done (took 12.29435186 seconds)
loading group "broadcast"... done (took 0.978330986 seconds)
loading group "union"... done (took 13.412158576 seconds)
loading group "simd"... done (took 4.52679378 seconds)
loading group "random"... done (took 9.169199399 seconds)
loading group "problem"... done (took 1.925423108 seconds)
loading group "array"... done (took 21.567999726 seconds)
loading group "misc"... done (took 1.916302298 seconds)
loading group "sort"... done (took 3.297039492 seconds)
loading group "collection"... done (took 18.585102734 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.544618897 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137533127 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114445232 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134270582 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.180075808 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.121217467 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138057078 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082115015 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.867947803 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160726778 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13556835 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.490017469 seconds)
done (took 4.750557506 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.187197329 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082808646 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092525939 seconds)
  done (took 0.775382794 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061985654 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122002409 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074218788 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063310685 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062144149 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076553794 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062655448 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062637201 seconds)
  done (took 1.133620712 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068807984 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063123934 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.079785377 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.063049122 seconds)
  done (took 0.885830517 seconds)
done (took 3.65512358 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.877395142 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.228716294 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.179057004 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460336603 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147045458 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.177643578 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.65942127 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.25014148 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197190347 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098036398 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101736571 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385006724 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104289993 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649521294 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.072784823 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.103858973 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.15410523 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.35612071 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076500883 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.079582504 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.098664026 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.125037014 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.097219788 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.087740631 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.155755815 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07829409 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14891155 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079214862 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079826913 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.231825645 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.185137273 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657140793 seconds)
  done (took 10.030246081 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.093877572 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.109816705 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066125805 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136472207 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09284913 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08149983 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.068267535 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078582572 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.084568472 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.139874944 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.083213859 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.113854934 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076613366 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067626666 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.082176532 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214524768 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088652627 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077828071 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067296198 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088034556 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103435954 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.088696404 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074692776 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090869907 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.137317233 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18636482 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093924976 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10828299 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066065974 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094343797 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.12408914 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125942441 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063121202 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07893436 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133767652 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091696871 seconds)
  done (took 4.193475652 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.102294159 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.168228029 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089974273 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153198342 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094746501 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063088773 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.12676702 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.078012295 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096979059 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.221152492 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.076997652 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.481250419 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125133589 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.084787906 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064140677 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08350951 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.064301168 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.645004352 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144081558 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118567497 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082537362 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086154883 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068052105 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35389776 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065322693 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06331944 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08128386 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056866057 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143852866 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065423885 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.202083457 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084589586 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082376077 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098778933 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193173085 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090042481 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100071087 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.102420077 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07961932 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062859569 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173096378 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070580761 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080049463 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080311677 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116977405 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117449965 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065559407 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079123839 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.174290892 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064419286 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079913627 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.875807493 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159915217 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07479644 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062716015 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289756554 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.081706708 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080719758 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060372818 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.226458607 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.150639084 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.062835631 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080196459 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.063168984 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.063618339 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364530292 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083320458 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.699205655 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066330295 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073849542 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081965866 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.064693882 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086211087 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06990354 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096644657 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064148826 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06405224 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079371899 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062520258 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.064088999 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077316371 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082687152 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.193246437 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084471402 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.063851987 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077141908 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.083937988 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106866051 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067201024 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.062441875 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112313634 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065807905 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080146084 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.098288941 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08059872 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08263333 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082870243 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.124338706 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064865927 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.086005071 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063305533 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108041259 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069454472 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.075928937 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095653833 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097262041 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064113546 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144503357 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077073881 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.062132135 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.063099718 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077663211 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.065549635 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.064137936 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09527435 seconds)
  done (took 20.387346842 seconds)
done (took 36.318663236 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.306754594 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089049171 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.089168916 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.072237733 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089728188 seconds)
  done (took 1.325493682 seconds)
done (took 1.976464472 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.145231461 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098483675 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076014472 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093525479 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.060345124 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114975541 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112398135 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078393791 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113440224 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.060283459 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109074732 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.060789684 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.059813622 seconds)
  done (took 1.857475426 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079140641 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.079175341 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081727187 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.077837195 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.059959063 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093420805 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07630291 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100791362 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.076662623 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067225529 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076981752 seconds)
  done (took 1.518190972 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.077792874 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.079069206 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080972826 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.076801583 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.059400432 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09175095 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.076243563 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097594988 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.076469946 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083829389 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060854373 seconds)
  done (took 1.518628676 seconds)
done (took 5.537440467 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075542892 seconds)
  done (took 0.727111059 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.727186064 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.717050718 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079286626 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132813954 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.235084811 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.151174781 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.440731782 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.107158667 seconds)
  done (took 10.44586903 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096491133 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082114873 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.080096006 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084512792 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066224221 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068855518 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081817098 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065686734 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08393249 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068375681 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082774052 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065723497 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066971437 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082032835 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067606292 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.079798736 seconds)
  done (took 1.945518625 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10105363 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09993525 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.087405045 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072022093 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086070692 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068865414 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088678977 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070344591 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083541838 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069209899 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086713755 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071168732 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084375871 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062665206 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.087661979 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073570216 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.082918788 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072435032 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087350919 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073240808 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.08697972 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06188371 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069168744 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.086177506 seconds)
  done (took 2.68424503 seconds)
done (took 16.454280051 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.126206919 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07093233 seconds)
  done (took 0.856948041 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078692327 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.094630955 seconds)
  done (took 0.839167086 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.079350576 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.076879129 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085109799 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.089583719 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063612964 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078191803 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.097873035 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063128948 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062734516 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078232507 seconds)
  done (took 1.439702702 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066277769 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.089928861 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066152965 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.092477615 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070234586 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.075905687 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070461826 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.079442486 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074791686 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.074463494 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.067351253 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.094573698 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068068067 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.095226609 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070018167 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.079846734 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067072796 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.078816552 seconds)
  done (took 2.041973727 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063144288 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06392821 seconds)
  done (took 0.795290508 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06411857 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060017694 seconds)
    (3/7) benchmarking "month"...
    done (took 0.078437952 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06382345 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075015319 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059844622 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075227638 seconds)
  done (took 1.145987884 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.411943303 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.106138847 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261118995 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068293995 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.100744305 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267452548 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.07973894 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067504114 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.08409655 seconds)
  done (took 2.158925494 seconds)
done (took 9.939100852 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076806082 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.077577077 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.108155647 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.43162498 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.101817235 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062508977 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.138607758 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.202633019 seconds)
done (took 1.867176011 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.123071052 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.622564764 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.409154027 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213805618 seconds)
  done (took 1.919285152 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.3620887 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086406756 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069091267 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064420546 seconds)
  done (took 1.259047193 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062747995 seconds)
    (2/2) benchmarking "read"...
    done (took 0.065774443 seconds)
  done (took 0.804131604 seconds)
done (took 4.776740056 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062985162 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062597918 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.075428267 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062381995 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.108519948 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.059777846 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060058786 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077624347 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062945556 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06259624 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.079065764 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.062648613 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062417063 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07973707 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060317785 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059656855 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0776188 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060138072 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059338047 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075926575 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063191979 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061860186 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076103943 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.059921291 seconds)
  done (took 2.349480641 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081182675 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.078638651 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07119117 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06767448 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082445324 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067601405 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083223281 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063675797 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.083633175 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065238903 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08121061 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067078257 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.079420132 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067315384 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065108014 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081959681 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068182879 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078380159 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065086311 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.081713703 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.067859361 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062851485 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.081981239 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0671808 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082275832 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066939115 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081230919 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063657945 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083360913 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066848327 seconds)
  done (took 2.883826058 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068382024 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059869515 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.076225351 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067332263 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060058762 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077869687 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060655262 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061242204 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.076991515 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.060233001 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076810668 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.05990572 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060608318 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.076963664 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061318751 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063607999 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.091964287 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061304421 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060490942 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077550126 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063554216 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06017153 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076807274 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060576373 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076214336 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060273682 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060592384 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.075499049 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.060854816 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.060619435 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.079049846 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064140586 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.059983255 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.082660939 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06351827 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.060208747 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080131304 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060277737 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.060885706 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.075806379 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060195641 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.059690389 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076583595 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.067662292 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076099877 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062473347 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060753103 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077632598 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061183513 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064004508 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076558839 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060826442 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.076591504 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062226063 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064510963 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07588262 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061502957 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059986041 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077408233 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.060377189 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060725149 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076141139 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063238165 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060662058 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.091815749 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067232523 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075580968 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062383757 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062356142 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.078671915 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062934194 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074654946 seconds)
  done (took 5.56316084 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113635036 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089732973 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079073127 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062648242 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05855582 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078023519 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.064913567 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076524785 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062608312 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081967856 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061576275 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062966474 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078358786 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076300661 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061455018 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07930762 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06696312 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074820637 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061282535 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064299184 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077308379 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064609034 seconds)
  done (took 2.280370749 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.182957812 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083678613 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107553756 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086860009 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065086836 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086941599 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066784781 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083160579 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066948554 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081477578 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065783322 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082382853 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065280129 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080536868 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065821422 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065055685 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083131557 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065450348 seconds)
  done (took 2.171723231 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075313903 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063069197 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101804122 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063503786 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079983315 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06622611 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084738766 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072328854 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081780775 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063343335 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087396556 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066002181 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065251525 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079529881 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067085413 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079129429 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065865975 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062596405 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087580525 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0678927 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084648581 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087005469 seconds)
  done (took 2.340310408 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077889181 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06419283 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097573739 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065897725 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075709653 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061474831 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085339457 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063335235 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083883369 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064861247 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063292394 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07878766 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069086445 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078810059 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067857236 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063105181 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080688534 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063524527 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080279751 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058930534 seconds)
  done (took 2.131998549 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084412381 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080236576 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065465574 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088273007 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064939338 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063653677 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090215072 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063796699 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081002039 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104227607 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064595642 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065171897 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089187047 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08601202 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064885951 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089140273 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072945706 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088040447 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06513656 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080641109 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088684507 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080740431 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072196037 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08107446 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06511208 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080993755 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065460641 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085719555 seconds)
  done (took 2.862556767 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063492341 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06375275 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.07687654 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060800625 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06074646 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076647296 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060899653 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060684468 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078838918 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060285225 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064236643 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.079165788 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063728278 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062609189 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078888745 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062974418 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063149603 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076555115 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060818806 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060506088 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.182397353 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062778103 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062138664 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076580439 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060738714 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06236853 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077076495 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060916076 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078220032 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060726875 seconds)
  done (took 2.810331707 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070841318 seconds)
    (2/2) benchmarking "in"...
    done (took 0.083691524 seconds)
  done (took 0.847923363 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060882121 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077698616 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077079089 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067373727 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084348252 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064413109 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.087293492 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067874903 seconds)
  done (took 1.278171365 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079376427 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075227455 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081285729 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076225957 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09095125 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.080433343 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.148963711 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.080952895 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071221582 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062137984 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095060461 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.063346277 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.0861725 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063527017 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070247175 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086555352 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06180445 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.085269543 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065738827 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062910513 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081414136 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075554961 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082006493 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06044565 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064518723 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090638166 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.074583172 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081372838 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067198322 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.086874431 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.06946818 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05759336 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080499621 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064771865 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06109041 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.090659577 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095300274 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066617067 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074032227 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081539696 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073466565 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.075561279 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068151559 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086321711 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073592835 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063951312 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.080866864 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059349836 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061154252 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082192257 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059811768 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079659444 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059210572 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070873896 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.083694973 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074482186 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078708782 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065366088 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066767186 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085268245 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.070959365 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.081788887 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066454475 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063270795 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08801125 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068162133 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089470398 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059102143 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057904049 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078757182 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07442718 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103597925 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070666997 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081127062 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06548225 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060724688 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083048749 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0651863 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085878272 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.070007151 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063795013 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086259837 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070307286 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079970848 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065744974 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.08793166 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062255357 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.065554352 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078173457 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080093664 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079029478 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062318558 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.061033177 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.086810752 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066654929 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.080006269 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061115629 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070686298 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074431705 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064634407 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080878934 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06429611 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.090484975 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069171632 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08576788 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073294852 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071275139 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080233105 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067308188 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07650065 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064782898 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062892678 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087276247 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058600254 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065699051 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081046418 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064555394 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089007208 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061846935 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.079758433 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071443303 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068530792 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078796835 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060675571 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.065681495 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.079978967 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067124618 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08865648 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062585065 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.074624216 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058765261 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068443678 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.080590925 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.067453195 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084718468 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.066804231 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.05825439 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.078205469 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.06820271 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.089162816 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06383568 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06438254 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.086367509 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064775563 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.079173862 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.070064511 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.0663532 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.079741143 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069836226 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081352939 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059756944 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06659808 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.082815091 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062366531 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083442236 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067383102 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066280115 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.081831352 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063253041 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084843162 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065002475 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062475331 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080479374 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062326684 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090713591 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065621232 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058786384 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0772881 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070701755 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.077848068 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064193016 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06221918 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.083090614 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065003797 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077221733 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062976485 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065352183 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092156773 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068713481 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081290428 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069453083 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.087931713 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064029816 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067023919 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.080474907 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065228646 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.080163967 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.069049477 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069000625 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085788376 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066392551 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076832453 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069401818 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070388133 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080056553 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061685328 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.079398498 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067676108 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.0689531 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083579925 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064556201 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078427037 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064500534 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066166956 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083587225 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063276321 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.079251824 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068737847 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062541999 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087210743 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064353953 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090462952 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.066923671 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.075299049 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067528442 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061251784 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.086272175 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059459586 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077494665 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063074023 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064988016 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.079342218 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067000224 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05762807 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087154722 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071265205 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.080509395 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063063968 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063825082 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087127849 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065393562 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084380621 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067433015 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069890296 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0912244 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06314125 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0835477 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074445265 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.079806459 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057863271 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068675907 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079278786 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063217125 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061878569 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079609478 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067915281 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088917308 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07182974 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075228521 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066837608 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062394914 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.07948827 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059503419 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.066964926 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.083686783 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064939204 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086986419 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064832554 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063466483 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084612538 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062931354 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.081187404 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064750067 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066401358 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.081631401 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066377159 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.079769222 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066717842 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061906203 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.078438766 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065603804 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.080285737 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.064151799 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06928311 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.079717939 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063943668 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082553376 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064882033 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064732023 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.081604818 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063273035 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066773866 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081903791 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064427812 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.082759504 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059365465 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070285152 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.080570046 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071615779 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08048681 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060791681 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068565962 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.083673303 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069336393 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.081244423 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064836171 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.063989566 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080837472 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.066744074 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.086816099 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062558 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.068906755 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088569776 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064220502 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.083079388 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064534597 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064824638 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079826559 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064965711 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.081650288 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064257945 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063594165 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.085264205 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06746219 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.080121751 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065816851 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064322332 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081219199 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065157003 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057976244 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079718418 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064506945 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.080605137 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0749646 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063576893 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080922381 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063030648 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081631922 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063083284 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059821897 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088337901 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071951628 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08203477 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073037223 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.079956065 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066028926 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091260146 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060862914 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.061726296 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078798188 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.061646697 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070661428 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082000829 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073440025 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.080169538 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06376693 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060855147 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.081253253 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062680621 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058322713 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078942535 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067307576 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.079674039 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062835511 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063494799 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085397886 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06529017 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091067122 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063524181 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063688385 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.081881783 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061058489 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078833947 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062856503 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.066380966 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.081294265 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061846661 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060439896 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.080768725 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064433939 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.081336948 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064215363 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065744564 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088277293 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063287947 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082980286 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067280862 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059264827 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.083578186 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063330582 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063227547 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080646497 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067495017 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083966233 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065544178 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.084979104 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063976778 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064255583 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081511 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062294825 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.062775476 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.080648552 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064418301 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079812519 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065379025 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072035942 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079410027 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066907582 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080750388 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064289076 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071203557 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.081730736 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067146955 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087411785 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064180212 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.064788151 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.085217312 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067705125 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084255684 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064995203 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081889948 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071095195 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062559646 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.087390625 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064484311 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.0801315 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067151588 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061614565 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080900633 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064875875 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062187173 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087857689 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064123297 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.079918727 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063136508 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060982191 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082036282 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067563943 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088089003 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067043303 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067842539 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077278672 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061497483 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080780837 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061350547 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065763696 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085493441 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071676319 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065241304 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082155169 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063062644 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.086453555 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070948028 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.067085352 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079991003 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.067944211 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08170915 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066237012 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.0645437 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081119358 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065682172 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086688367 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.065513625 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063807789 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090181614 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066983094 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081325638 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066134984 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065095258 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.081347306 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059703979 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063208582 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083744207 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069048321 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08334453 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064645423 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091913325 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06154941 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063972709 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084279817 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063448473 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.084663414 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059685627 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065311638 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082577702 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06497596 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058672407 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081244106 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061723045 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.083164405 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063829994 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059313143 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09219869 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.069045747 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084367912 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06323532 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062939272 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076762575 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059540923 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062984734 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083865383 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06667197 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.091994532 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063557654 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062598581 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077191037 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064563282 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083869607 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06813665 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060592604 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077336614 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063588081 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083811398 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069550876 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062147875 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.081210961 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067763367 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065069502 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080329521 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067604749 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077712342 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067588214 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094263977 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064681509 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064250524 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.087902917 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072551156 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.081554783 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059618019 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064013856 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.084165081 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064231215 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.081963141 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064813105 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096769481 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067451638 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062675643 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.080727503 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066721357 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079876843 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072969348 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064119773 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.082172244 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069181484 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.082607943 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072805483 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066149171 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090539624 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066203594 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084449858 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062913915 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081138009 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062223513 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062179731 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.08223197 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064724278 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085034894 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071654071 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062768314 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092659988 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.072566621 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.083139247 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061254358 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062401855 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081253344 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059595191 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.081888603 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063150148 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062378236 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.079776805 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062875551 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064463641 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087089496 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065286834 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.082077576 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064701632 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057869968 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.083753984 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066273275 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063852146 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078841113 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063704059 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.081440441 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069060073 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066567081 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080355916 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065753464 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082943429 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0645722 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.05888676 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.087734013 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063235471 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066166232 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.081240491 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064782233 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.082673981 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067878527 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085771955 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065457265 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065607892 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.090356881 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066961466 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.078332562 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061604209 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.06913196 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079865131 seconds)
  done (took 43.990584499 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104615657 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078543557 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060126161 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076646895 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071775057 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077748595 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060264693 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059830976 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077999675 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063191762 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058807057 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078045191 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067829028 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10093224 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088623455 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064524212 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076365237 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060803038 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058565211 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078138801 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06859793 seconds)
  done (took 2.25374456 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.083200422 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.094178603 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074224491 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095345236 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067610117 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09336513 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.091554701 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074092451 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094698396 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071054845 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094981805 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090902223 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071555357 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087523191 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070632709 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089532446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077511505 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086702555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074662653 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092525957 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071011237 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091929813 seconds)
  done (took 2.570480614 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064008995 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063759737 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.082757918 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05901064 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063301717 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076747953 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066801756 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.060171123 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085952945 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.062073507 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.079501169 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070606612 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064278251 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07918745 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.063181158 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061005881 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.126744663 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.085247008 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062688776 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.082370187 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.059352958 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06478037 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.077603852 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059694447 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061161387 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.085050748 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064248625 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.079774212 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063737905 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062114116 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081309619 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061697327 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064326947 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.082033107 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062472372 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.079206598 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063272073 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063136663 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.077154659 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062317477 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.063691518 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.077248077 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063612199 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06457657 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080971684 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061961114 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082584108 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063630513 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058247183 seconds)
  done (took 4.175015866 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081646083 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.133530618 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.082928852 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.115359202 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077894243 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.088901673 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067270234 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.118137575 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060626997 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081495893 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07841346 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.097232895 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08191913 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068903618 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068797473 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083029686 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064154711 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080593148 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067829294 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.081198051 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06760062 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.088263795 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078206856 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.094978173 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.084295333 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063139758 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063199822 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.086494818 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075897697 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.086274559 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067458816 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087735175 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.096168283 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06940404 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08045535 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066149507 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.098208878 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064281691 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.083200829 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061784208 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065205556 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.085528529 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069272294 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.098163477 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063145075 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.086796108 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063824954 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.078509007 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076136542 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.083546932 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071893283 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.096995864 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.083926314 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064001299 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06742445 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.09698989 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.080588948 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061971582 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066135643 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.093591048 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061128788 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.085300681 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076609867 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.083994536 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069603187 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.095945219 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.08642162 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068103607 seconds)
  done (took 6.284548189 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073600241 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087206439 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077558483 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096393373 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068561963 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089116723 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087176727 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070020961 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086516346 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076019947 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087956111 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110340159 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065603062 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08998724 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070209762 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087878901 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070046755 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086776855 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070442865 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087208548 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070582047 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095741102 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069343406 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097084342 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117524924 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065219457 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087040297 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069631288 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095911771 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087080492 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081487288 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.087596249 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07051306 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095997487 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.099801351 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069591407 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080537388 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06956034 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.087817448 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069626595 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082964109 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077543374 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087968531 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065043379 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088315941 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0696384 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095590459 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.09925797 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072802968 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092855221 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069354518 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096139045 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087572946 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070803581 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096107058 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.121016516 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078949482 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096089254 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069501902 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097066805 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095603789 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.102710111 seconds)
  done (took 5.962394762 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084945008 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091205064 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074088454 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.078361736 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061961638 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086139787 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061793188 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06128065 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090471155 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.089545819 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07456828 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085276109 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069710785 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09338167 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067991931 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088705471 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067274303 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085580011 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089069507 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068137598 seconds)
  done (took 2.310903217 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072759563 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09915396 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064562358 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069551478 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08521634 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069431958 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084713528 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067797959 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082405715 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066906623 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091964872 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073895246 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082837814 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071037594 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092054178 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070914784 seconds)
  done (took 1.992379674 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076298952 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.093213413 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078781387 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083168985 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062280526 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060298341 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.083582321 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059048912 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.078753452 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078422349 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.082868603 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.066275506 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062830988 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.081179982 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061255278 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084275756 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06055751 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060655435 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.081613025 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079573497 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.093308837 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062512391 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.082729773 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065530189 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.082571 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070283536 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061929031 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.081678442 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061908236 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082737653 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064468954 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.084985948 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061586219 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061661592 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.081224698 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061502988 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.08148334 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064691903 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066265083 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082258963 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062348949 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.08166243 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064192018 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063467637 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.07915196 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064020487 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.078265814 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066887813 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061417883 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.082722358 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063790908 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.084597711 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065233908 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.092019872 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067607361 seconds)
  done (took 4.757035636 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077078933 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066424031 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078495737 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061845184 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08467804 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065371973 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066890848 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.084771641 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066192396 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079449638 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06606576 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066890615 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084197303 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067183897 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083639939 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067472474 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059190431 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.083885449 seconds)
  done (took 2.059664261 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069860177 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063146064 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.08952432 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064167542 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.081310522 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065785634 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059796941 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081389014 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062790638 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062625545 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082634361 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066312376 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080114879 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066100343 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063279548 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08187541 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066681916 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061597063 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082467045 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060050098 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083812545 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06296916 seconds)
  done (took 2.305123791 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.069461332 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090822943 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.158676092 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.10432029 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.079161354 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.095591829 seconds)
  done (took 1.349276154 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087862866 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095456485 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065029029 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083474538 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090821673 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064140194 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085267416 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06564775 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093355447 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097524192 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065734569 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091901517 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073257708 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094225805 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088915663 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072525388 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083399409 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065385197 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082249875 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083580717 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084213922 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074008502 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083379328 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065170619 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083631444 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07217485 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092673033 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097357863 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06539551 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091900747 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071237906 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084083086 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074596799 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097505658 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066149006 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093122811 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083525663 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082656577 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089579914 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072355361 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085772372 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070823995 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093969278 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088978811 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073816547 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083794281 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072030964 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084118132 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066070237 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108218531 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089978469 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073306173 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089903612 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07371981 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092940202 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107961116 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096011479 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073549739 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089974756 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077765607 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09261884 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089226097 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07347986 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09732608 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071032862 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092750936 seconds)
  done (took 6.215074529 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079260858 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101336894 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065742155 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097559407 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072869413 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085271929 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064599031 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083938521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064752542 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083600823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12542278 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066354729 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092473356 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073169118 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084477381 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064767383 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08443477 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09168661 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065672163 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109466141 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065829221 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092295573 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092203822 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072954802 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0971111 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071451504 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084214987 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065798529 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084062277 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065555476 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089643558 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065261061 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09279101 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082607867 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073466763 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084894365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065723745 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089556421 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066181957 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0900046 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073893127 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101914558 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083826154 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065807756 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096568686 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065317077 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084000408 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065133668 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084187286 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065751197 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097067807 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078833752 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096983879 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091990747 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0658665 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084617777 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066070778 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08386454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066665386 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089673144 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074454222 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084421037 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108051247 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065701354 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084093787 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073783218 seconds)
  done (took 6.103738924 seconds)
done (took 120.522728394 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.180099283 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.157493223 seconds)
  done (took 1.086645301 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.065755477 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093411834 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095272663 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.121761032 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080472825 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.093885493 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.091709505 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09316374 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.064657364 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.083067977 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.064875706 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.065694838 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.143676651 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06293082 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.062046278 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.084125973 seconds)
  done (took 2.117847699 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100998321 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197956031 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107013248 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.062634104 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096176171 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073135651 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.081816366 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074841827 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069159495 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.0833045 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072892726 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092331067 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064151427 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092612428 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070246732 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091524947 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063604265 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091772973 seconds)
  done (took 2.345743059 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102491654 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.137666206 seconds)
  done (took 0.997585856 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.18884608 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.114656259 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.193889353 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.408058349 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205155772 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.170638496 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.167860986 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.166260319 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.148433566 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.161173437 seconds)
  done (took 2.669560351 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09653802 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169250413 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312056564 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.135258235 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085383585 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113381308 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.134694688 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08699802 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.098934988 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.098086587 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078489041 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094596407 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095636476 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092044638 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072544111 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093584195 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.09783057 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.090671429 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073747484 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09227343 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096390142 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083053351 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07280746 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.090177633 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076005382 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.095101681 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06443314 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.082090587 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073627767 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071685307 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092594519 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111256079 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074961043 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.127884147 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099400801 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.128602861 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.094267908 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070509611 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071215083 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090294925 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.073745297 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.094540491 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.100205779 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074633465 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.063621527 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094084062 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064136982 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.082379478 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074645153 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.093587767 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074443383 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092612764 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128897696 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.075109442 seconds)
  done (took 5.914091455 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.74406442 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108798089 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087718916 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.801507564 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074708783 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0914648 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.709020483 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107221168 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.197247916 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757305287 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084586364 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.090259634 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.174532132 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.207066925 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913703507 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.274770986 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.624830111 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07038008 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124278811 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.120087256 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134458052 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13885709 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.154261694 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.376787559 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091088113 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066385716 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.149139468 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072276907 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.130803848 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.097838748 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067075375 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.143009332 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.218019898 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.168019319 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070323692 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084789812 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066537013 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.138868295 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.22630602 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.162030025 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.150032737 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082559103 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066014206 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135082461 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117620466 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063080875 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.151705407 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.144519877 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.14095043 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066371086 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.090560154 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13707848 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134269904 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.134301167 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095723451 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286690245 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.254862632 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085642272 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115948765 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074227707 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.22446248 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078670579 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.190341556 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126643716 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.176874733 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066654647 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.715067878 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.158325099 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066233635 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068327368 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.114671549 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086764762 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136407013 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.136463063 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.360853515 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139961103 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067095685 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084651785 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188536432 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098967472 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06569921 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.131630842 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089619077 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097233495 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.158721475 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141322171 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.138188422 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.202800704 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.156761553 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135053506 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067695878 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11927681 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.089953091 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.181488871 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.163656865 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.131187424 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.198667443 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135525279 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.134667496 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.139554699 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.087967798 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.143601127 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.114721045 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073852013 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132995032 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.182102259 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.115630288 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077419551 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086829212 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134924459 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.117192221 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08011061 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.154068537 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.140733741 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.422543203 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.138840986 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082754662 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081567106 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133831006 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.151111107 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067758726 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.202793607 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118105675 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.15842862 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096371929 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083089506 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115073106 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.133995841 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070418197 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119842551 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.156741986 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070913142 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.2098039 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186243332 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072034181 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210066624 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.136264618 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.090974748 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.144520545 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116274766 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.140177685 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070234909 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.158602448 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073598224 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743603 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139596703 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116915074 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067635584 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156715424 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065920553 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098137832 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.096970025 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06375282 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.718235021 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099876504 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.094502629 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078040469 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089209091 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11642002 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133072318 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068963628 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133531769 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.196854779 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070835032 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116112461 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099164376 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.132558555 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070731401 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099022693 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09761108 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078743183 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118608472 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089173962 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081119974 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.142306109 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.136037161 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.188654128 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.558476631 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066466813 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100056638 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.176836372 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088942438 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.237350366 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133074582 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.190651179 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.133017495 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095499167 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.270654092 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.135650011 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.159216042 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084584992 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.146433956 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085731628 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137076969 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.139119298 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067912368 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.089479793 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.136342462 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144698825 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142279733 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926951585 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065337365 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.214610377 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064662787 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.140984059 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09024282 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069926975 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.262210906 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066528415 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141487487 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157303714 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068773805 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101079816 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.668444929 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077826285 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.153735087 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07036337 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.19209749 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.137300721 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134385252 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136734317 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093189361 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.136916798 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.181653441 seconds)
  done (took 38.714035021 seconds)
done (took 54.600383984 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278318623 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.186396148 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.248789228 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145289436 seconds)
  done (took 1.708187007 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.143878118 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104842464 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116682044 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.082291483 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103249615 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088865345 seconds)
  done (took 1.41857701 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.424564696 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275753438 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238990854 seconds)
  done (took 1.720140561 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.298392757 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.225277538 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.453958349 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299169131 seconds)
  done (took 2.159000948 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.188142146 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.111996449 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063611603 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102874117 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159020436 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.299917137 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123110281 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.165753848 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097352134 seconds)
  done (took 2.138025149 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197332532 seconds)
done (took 10.115691037 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.106081928 seconds)
    (2/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.298164392 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.109280804 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.327996985 seconds)
    (5/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.231443848 seconds)
    (6/309) benchmarking ("sort", Int8, false)...
    done (took 0.172874204 seconds)
    (7/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.243300093 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132696484 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.102389116 seconds)
    (10/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.288742846 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.069001282 seconds)
    (12/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.240833307 seconds)
    (13/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.229555491 seconds)
    (14/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.129280564 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.167492986 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.075340153 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.117497051 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070210533 seconds)
    (19/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094753751 seconds)
    (20/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07221512 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.199379575 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.260495157 seconds)
    (23/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.179479754 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070804118 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.123151521 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.128261846 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.048781342 seconds)
    (28/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.215046224 seconds)
    (29/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.087391465 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085784695 seconds)
    (31/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.264414772 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.253254881 seconds)
    (33/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089610834 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.081748091 seconds)
    (35/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.121553735 seconds)
    (36/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.208201382 seconds)
    (37/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.177886184 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088787072 seconds)
    (39/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.082422593 seconds)
    (40/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.226480978 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072171483 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.063394041 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.223493471 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.129527189 seconds)
    (45/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077700943 seconds)
    (46/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.143477602 seconds)
    (47/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.096723988 seconds)
    (48/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091798921 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073041416 seconds)
    (50/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.246107142 seconds)
    (51/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070971353 seconds)
    (52/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.121577257 seconds)
    (53/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.22808303 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.098013394 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.09474851 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.087062946 seconds)
    (57/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.051418399 seconds)
    (58/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074309864 seconds)
    (59/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103596699 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09461162 seconds)
    (61/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089337904 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.049809507 seconds)
    (63/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.19841568 seconds)
    (64/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.168290603 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.22667944 seconds)
    (66/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.131091379 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176084063 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11353224 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.220234922 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093701596 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.218952729 seconds)
    (72/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.048285578 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093450483 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049293306 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.158400194 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070589429 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.262287821 seconds)
    (78/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07115357 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114406961 seconds)
    (80/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067585513 seconds)
    (81/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.129126367 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077457864 seconds)
    (83/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.139984923 seconds)
    (84/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086923157 seconds)
    (85/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.048901817 seconds)
    (86/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.058265345 seconds)
    (87/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.070266232 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.216754544 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.107370758 seconds)
    (90/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.062414566 seconds)
    (91/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.121409119 seconds)
    (92/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.061745574 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.107686485 seconds)
    (94/309) benchmarking ("sort", BigInt, false)...
    done (took 0.202625078 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072026429 seconds)
    (96/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.211195663 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089895466 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068846104 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071591346 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072444085 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.082088595 seconds)
    (102/309) benchmarking ("sort", Int64, false)...
    done (took 0.062997032 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.107281785 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.117771209 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.170539063 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19244207 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089504935 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.134862031 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.151410676 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095771559 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098519333 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063976099 seconds)
    (113/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07202309 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.091973141 seconds)
    (115/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.103161904 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.060680775 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.246556792 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.09243349 seconds)
    (119/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.191842578 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127671558 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050386876 seconds)
    (122/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.135038004 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067900184 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08180625 seconds)
    (125/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.049650779 seconds)
    (126/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070855627 seconds)
    (127/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091315835 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.069692435 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.061345375 seconds)
    (130/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.12680591 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.130689814 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.082977888 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140692248 seconds)
    (134/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.097283213 seconds)
    (135/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.070717006 seconds)
    (136/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093305385 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.070636055 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.15948339 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.240921865 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 0.133627314 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.0912015 seconds)
    (142/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072064004 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.084480731 seconds)
    (144/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088809129 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.068599778 seconds)
    (146/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.082269629 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.047649305 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.048078631 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.088801181 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.088294286 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.088396254 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.0662559 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.114991318 seconds)
    (154/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069106203 seconds)
    (155/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.048738743 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070890805 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.047918728 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069301806 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.196183661 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078486391 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.135914602 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063800604 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.136928889 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.146159208 seconds)
    (165/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097595303 seconds)
    (166/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090748715 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08555231 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063182911 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093797829 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05061906 seconds)
    (171/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068269141 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085158009 seconds)
    (173/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.196968318 seconds)
    (174/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.240026378 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.048577092 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093665487 seconds)
    (177/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088116684 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.087631198 seconds)
    (179/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051037824 seconds)
    (180/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.049195352 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062255235 seconds)
    (182/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072813332 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069119625 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.073149241 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092448293 seconds)
    (186/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05022759 seconds)
    (187/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.172928395 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064193431 seconds)
    (189/309) benchmarking ("sort", Float64, false)...
    done (took 0.148017172 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.1667976 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072202833 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076706781 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.073374923 seconds)
    (194/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075451077 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.048540593 seconds)
    (196/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.070413427 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101114832 seconds)
    (198/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.088875174 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142592372 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.082277674 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.048718906 seconds)
    (202/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.048609035 seconds)
    (203/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.04918789 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.103234286 seconds)
    (205/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069773168 seconds)
    (206/309) benchmarking ("sort", Float32, false)...
    done (took 0.144756334 seconds)
    (207/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.048772737 seconds)
    (208/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.1004316 seconds)
    (209/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071709883 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.062892939 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.108855545 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.067549806 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.082802588 seconds)
    (214/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.194619037 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.086540215 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.061193331 seconds)
    (217/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.047487529 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.129061034 seconds)
    (219/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070653471 seconds)
    (220/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.086186108 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093250206 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067955581 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.068201976 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.048116568 seconds)
    (225/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.048865475 seconds)
    (226/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.07026543 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072609464 seconds)
    (228/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065517547 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094068118 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.04995792 seconds)
    (231/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071685595 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189811016 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113041811 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087813412 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.156703172 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068331319 seconds)
    (237/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.048508508 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.083545816 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.061065987 seconds)
    (240/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.126282963 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.048458202 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135869001 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.084322342 seconds)
    (244/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07184544 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.103537457 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064664511 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.158950219 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064044311 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.068804947 seconds)
    (250/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.06931815 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.048012502 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.047988216 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.083489049 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.061709623 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.06934934 seconds)
    (256/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068037118 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086575469 seconds)
    (258/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.062881275 seconds)
    (259/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.08555346 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.193545305 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12220652 seconds)
    (262/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.049014472 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.090622234 seconds)
    (264/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.049615364 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.04909687 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.092197923 seconds)
    (267/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.049159367 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.04738298 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.048939118 seconds)
    (270/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.096183751 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072142441 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.047375299 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.082608769 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088120835 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070768246 seconds)
    (276/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065728376 seconds)
    (277/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.064878541 seconds)
    (278/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.080364492 seconds)
    (279/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.047932672 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069622695 seconds)
    (281/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.048642979 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.10655223 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061063148 seconds)
    (284/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.132918693 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.061587209 seconds)
    (286/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.056777281 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.082836519 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.061156598 seconds)
    (289/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.063039103 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09279087 seconds)
    (291/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.047835418 seconds)
    (292/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063384041 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.184240909 seconds)
    (294/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.058844122 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.084959762 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.067499282 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.083898435 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.082963173 seconds)
    (299/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.062408717 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.070552675 seconds)
    (301/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069221412 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.063011658 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.090781908 seconds)
    (304/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.191123915 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.048699824 seconds)
    (306/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.048262016 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.156405525 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.048658477 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083511621 seconds)
  done (took 33.22561634 seconds)
done (took 34.007657513 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.077408195 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109901438 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.0709412 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.109723572 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076742646 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094598904 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069331979 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076252381 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.097947283 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078427632 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096237407 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.050402024 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.092523458 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072440142 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071778363 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110313547 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.074719572 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.090304909 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.070756316 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.082311584 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.070186015 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.061336256 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.08491348 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.050518251 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074215287 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089281979 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.069561033 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.092685763 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062921227 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062142094 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085920246 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.06975008 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.061734773 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096008857 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.067838115 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.090554469 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07169401 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.072388167 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.084462646 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061388164 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.069845946 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.083083964 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.068740907 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069082202 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.089384111 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.060905855 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.090832907 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077580377 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109161033 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063987734 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.070417882 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.094294606 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072084312 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.089225475 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.065774401 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070362278 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.082314228 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087597683 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.091028515 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.063941253 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.069658531 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091825804 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.060895205 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.090844884 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069477666 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071692502 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09390317 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.06090699 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.092926468 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.067466934 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061227671 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.091033322 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.064791985 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061944256 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.093589255 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.072514908 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081199562 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068020071 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.068628545 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.088753344 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061588551 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.063111407 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.084780579 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067801003 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06375665 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071906791 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.065678406 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.266976752 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.082730329 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.070553614 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.067192263 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089406903 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064463099 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093559947 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061170935 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.061363313 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.083032742 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062018421 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063368979 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.086540929 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061034391 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063372305 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.091281199 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062690269 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067631128 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096747894 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061733697 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.088619478 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.061146961 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061379529 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100008057 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07152715 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.082038012 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064400199 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060569691 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.084469614 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061089204 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061213846 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.082829087 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061613438 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067381146 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082703638 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063510721 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.063682786 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.095733982 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.060960114 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065633167 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08707828 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061707248 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.088217208 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061809496 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061393167 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.083873389 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.058591809 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063297975 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.082563406 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.063282872 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063549667 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09116179 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063338592 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.069871405 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.087159067 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067720374 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.061198822 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.081589534 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.054903181 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.063925752 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084320978 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063332118 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061383944 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.084449711 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061698485 seconds)
done (took 12.412691477 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064254526 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167912888 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.120999286 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093410403 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106335975 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062015783 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.098415828 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101424919 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.085915325 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119076706 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085027325 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.080961816 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.13177367 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.083320595 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.061913988 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065408332 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.085132176 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.07947253 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.120430018 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.079866575 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.133812117 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.083551773 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094138575 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.105856093 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085050655 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120334722 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062885354 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.08690759 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.062407788 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111201568 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.082003181 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.083357089 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062302166 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.117413638 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090878306 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.103237472 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.061828917 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.10157852 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064564014 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064608514 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.109385006 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.117704202 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078218587 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.099264309 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065663186 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.089098175 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063803594 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.103880365 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.086205133 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.098332958 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100722671 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106235926 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.086491343 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082037103 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.083666763 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082676801 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103475795 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06759754 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.083304376 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068101878 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064249614 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.082801474 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079803855 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.111383404 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065889329 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103873568 seconds)
  done (took 6.775830093 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080772497 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.1099627 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077356737 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.098104986 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062337516 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062314785 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.083720779 seconds)
  done (took 1.404559374 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064491344 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083788283 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.106793811 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08450198 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.103401599 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083023181 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09395615 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.062704088 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.101015473 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063649096 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083391845 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122599871 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.063407854 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091685836 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087524044 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.084108481 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.087301244 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062627856 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.087810605 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086205023 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087670771 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082487438 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.086897282 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063167908 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077347282 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.085061995 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108302031 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089406208 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064567779 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065941748 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083119444 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102786209 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.098503575 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07380739 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084790083 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07823615 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.100390872 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.061760761 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.079560627 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.089645212 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.077271509 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.085357189 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064826409 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.061372327 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.089415855 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.073835654 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064397778 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.085830005 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065970493 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105446421 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064290121 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07794833 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.085927632 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067314388 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.064497884 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090477629 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072752872 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.08541277 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.0829431 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065520801 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.101949426 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.080456464 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.099324075 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.080094405 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087588362 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077305755 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.077419212 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.08863743 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06502522 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.088869885 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.080580929 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.061564156 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.087486837 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.074946403 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.087395655 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.087345517 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.108830518 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06544029 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.073352874 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.085039255 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06392531 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.063034129 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.10851493 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066597422 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085294317 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068127057 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06635448 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.083591141 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062215151 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06645138 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.083944448 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.065446147 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06657846 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.085970924 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.066277783 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102081511 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064685726 seconds)
  done (took 8.660445895 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067708182 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066735022 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.087027786 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063659263 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066728223 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.089661537 seconds)
  done (took 1.287287861 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094014181 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.088987077 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.07280897 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069773517 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.119439136 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101034891 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.078949435 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100214101 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.076320045 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.092991455 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.078580617 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.100969962 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.083850233 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.093659496 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.07802738 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069104328 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.100512447 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072729467 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.092377577 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071951265 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.10622284 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072401593 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.093999403 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.078971067 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.08915741 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070201694 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.097509794 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.071951518 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.071170096 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.100893717 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072368967 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.088590634 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.067609905 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099759667 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.078541936 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.090245401 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070260684 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.09007279 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07316472 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.088259277 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.079117044 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072303257 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.096777258 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.067744091 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.099868283 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.067523118 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.089764076 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075317851 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.100614232 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.067294636 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.090843109 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069322314 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.06646133 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.089654535 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.067914237 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100838415 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.067331414 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.100673239 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071338478 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.090074037 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068276326 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.088538573 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078722378 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.088686266 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.076493769 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.088581136 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.068112206 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072754152 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093608823 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069812667 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.089546001 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067834036 seconds)
  done (took 6.834030811 seconds)
done (took 25.788079686 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.663743013 seconds)
  done (took 1.504445604 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.76126389 seconds)
  done (took 1.604534125 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.528624815 seconds)
  done (took 16.377095591 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.605387498 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.775837446 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.818569438 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129770641 seconds)
  done (took 3.169957011 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.868086851 seconds)
  done (took 1.733134282 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237747492 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.244203523 seconds)
  done (took 1.330781798 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.696743354 seconds)
  done (took 1.547985814 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.278424594 seconds)
  done (took 2.127766708 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327837162 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178069674 seconds)
  done (took 1.362131579 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.516812012 seconds)
  done (took 1.37033817 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.311139329 seconds)
  done (took 7.16943746 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226159763 seconds)
  done (took 1.091481235 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.264858106 seconds)
  done (took 1.122788056 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.188566506 seconds)
  done (took 4.046482987 seconds)
done (took 46.404829413 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.075208262 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.078148507 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.099321236 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075066072 seconds)
  done (took 1.181792853 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074468036 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.06983762 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.095767299 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.068602395 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.097186956 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.069753795 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070915431 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.096308364 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.068470499 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.092610456 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.06932754 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068709245 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.094690879 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070751267 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.089913044 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.072001357 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.095464535 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.069408747 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072428874 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.091702017 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.067162931 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094217314 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.072616396 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067845922 seconds)
  done (took 2.766143003 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074377822 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.06893631 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.093310641 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.0682381 seconds)
  done (took 1.171878211 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073765181 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088405512 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.108399823 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.073083048 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.11198669 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105954344 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.066174253 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.065443744 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09045206 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.073707479 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064517294 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.11731548 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107117955 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.072717722 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.074846095 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.084862213 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064502341 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.10682024 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.073575875 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.073343319 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088672076 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073616551 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.085932664 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086880292 seconds)
  done (took 2.900272847 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.073346556 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.099432743 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.097352466 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.084568005 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.110288712 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061593468 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.094742837 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087201663 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.145803002 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061116883 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.089309829 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062429633 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.068439737 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.084836171 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.073271871 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.129135465 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10902125 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.088171382 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.093300599 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061301687 seconds)
  done (took 2.64477795 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072388019 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065589722 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.084548148 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065065554 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07316075 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091978016 seconds)
  done (took 1.324453271 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064547204 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.062512409 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.085735888 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063115232 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068574594 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085729266 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062480117 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063064752 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085491011 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063423544 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062339913 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.08425369 seconds)
  done (took 1.717251873 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.442405621 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064165406 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.087122414 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.061940989 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067434556 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.085290649 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.074457042 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064656804 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.107551749 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.061825026 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063444814 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087645642 seconds)
  done (took 2.134849566 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255817386 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073050251 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31799201 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162655795 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131512125 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149848372 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100030371 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141450592 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19197032 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133157411 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220091037 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194110991 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129154128 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162085402 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109469256 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.12780936 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179957513 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214525019 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12375339 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194647098 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199664513 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150705582 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175925165 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122768594 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128589482 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139298248 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06825233 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09993983 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22590459 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156962648 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193999781 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132197102 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091548446 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260691186 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192167635 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187746767 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157708343 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08144531 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.150487921 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.160253602 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247851206 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108332381 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212740603 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105944592 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100922491 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165367856 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150018577 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173982866 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129481311 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087340736 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19157156 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231071351 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.161934442 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083947545 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130801478 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132691266 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.136764882 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122150956 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238500171 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210830023 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153081782 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.066764496 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117019763 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18137258 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187242932 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.135700356 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.147976273 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108174538 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164003264 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183225986 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136408548 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191009389 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.148544315 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085306426 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174163317 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167528955 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149001139 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224016542 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14786457 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.068791314 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14571806 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121023597 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100467359 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140174286 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094745237 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227153585 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095259312 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135061917 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134130973 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137724931 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131117315 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21197078 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172735852 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124337204 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.062011028 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124300286 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.144611485 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167489089 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107521672 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135814101 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140597562 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.098124817 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160530952 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.070867528 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146096443 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.098025583 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156673735 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155109675 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.095635393 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147619943 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123016991 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105089707 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182173653 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188043769 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10974627 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078729332 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219351141 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147967405 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125208026 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170935011 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208276936 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127750313 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121857565 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172574754 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236101483 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109883886 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215366226 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101286324 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104106431 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.084219707 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171889504 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111201909 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.140390907 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103679638 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.149826692 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220799324 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.071640358 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116216404 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159218025 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101889067 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077958173 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133144993 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11996296 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.114921236 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097019817 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.126815791 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184918356 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147966582 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127520529 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149399215 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120165427 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213994751 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085389852 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.126270772 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125172312 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067036236 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.157672947 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211222301 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074856347 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219042455 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.184923525 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100812063 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152022646 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104622954 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164384379 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097522051 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068012171 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165558929 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142448603 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131749682 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203485655 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100629375 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.172863999 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.145732566 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156090131 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154892001 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.156408281 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126935229 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113709273 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140338735 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148974703 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.093561613 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.087809456 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.103303584 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124978909 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090648288 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103200572 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165206522 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173272619 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095469124 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141913076 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117933654 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174462447 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.096016776 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154555751 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153778458 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114887016 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18081685 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207649185 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157253176 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121488672 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193551174 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068111926 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070760756 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.109636116 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164893688 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103725288 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080451007 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159528787 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17685391 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161585412 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183661796 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10123194 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145005728 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207653447 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06746093 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.138955355 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173911535 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146320141 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.147734347 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113171109 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095992682 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1935197 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101677996 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264668295 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149524017 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159214629 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211180124 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10126463 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100554807 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131273761 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161434347 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125572143 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199168813 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103605754 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110315133 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141389478 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.100803065 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121322934 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151634196 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141133703 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168283815 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.138722087 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179180516 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074823629 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137776944 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146689208 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141968597 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084011017 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15216965 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215381517 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092333247 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151368048 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205768885 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099378927 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122678169 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230568137 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205369663 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104809531 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105000527 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145061276 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178600969 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152590788 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16646787 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13029248 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169464098 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132753926 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.110942836 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084780243 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120485864 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128956262 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092120286 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.157660218 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.138957937 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.091438774 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154188994 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132452008 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132322534 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151549508 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.119113619 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.111230517 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094653284 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229733496 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143675191 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227278038 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.121766383 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.173983997 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219996025 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095468075 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076329059 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.09995298 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167208225 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080789768 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180162447 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.093412432 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126134448 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149098988 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166128943 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116337505 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.064274749 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138089516 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180991776 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099967435 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119845287 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.125092037 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215537474 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100044757 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100163367 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147676626 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125153403 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100256506 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225790292 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081895973 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093792709 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096340679 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077170915 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152848222 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205948081 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.103778668 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.124449376 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148633467 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167765384 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154736197 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120533234 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09384702 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13524299 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195082352 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15167858 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086683797 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135076148 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184713825 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184452499 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128633906 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11686879 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222479048 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182525571 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.219294438 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.108282344 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148681106 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14997704 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13834772 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168564862 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104933785 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218151058 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081139771 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186361251 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123591955 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089469848 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151162103 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.13222892 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109444827 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173493635 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140915522 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103248075 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076172261 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13350881 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144538291 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123964967 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.094520592 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164124393 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.069146029 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185875332 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196654765 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1024458 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127224008 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123554411 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076901219 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12765919 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124160073 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083758844 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.136825374 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224916685 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.116056254 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17754917 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190297563 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138782794 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17288417 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123163005 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.658377581 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.098876642 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182508446 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140512758 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163356911 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119624605 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151407082 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13892516 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144392987 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191759417 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127870153 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173879285 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180751842 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.144560919 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075887181 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125827355 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133118658 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.110094701 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129455983 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148570796 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136440566 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.120095916 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.145450448 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152703026 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.077811767 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117193267 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210485668 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141558655 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168394877 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165496197 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10656982 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151865319 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190630336 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078310767 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.14620873 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208486049 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129993111 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120714382 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078783264 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.128919333 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224431011 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.070297762 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212295907 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147099766 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139540804 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146418655 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.167417381 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158165161 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128053991 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148782944 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111811159 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.144927105 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138245374 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081373406 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.100312947 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127810865 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133574864 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102823443 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123288732 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.136449895 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180569516 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.092162939 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092204751 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124589567 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192144676 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233564314 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093871317 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104909981 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14033101 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135234496 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.138484762 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149460926 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077646446 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104889652 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.107410417 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.108110606 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.130262465 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138372288 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124215357 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144072427 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220984998 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081848198 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.247085644 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092178872 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131453831 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089790005 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076960654 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116609456 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117727219 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101292866 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1196997 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224350742 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094397264 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.112153825 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10835358 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07069834 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103561869 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155119868 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1343087 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144096709 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118421605 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.060130084 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127814939 seconds)
  done (took 68.765541886 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126823883 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.098032109 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.113959555 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.164024157 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.141257321 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.355135273 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.171644584 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217486038 seconds)
  done (took 2.326758129 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064690488 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09778782 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098862759 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.109675042 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062906786 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.086318535 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.291190743 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.10314791 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.062397971 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.11000925 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.111955033 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.084032658 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.440966962 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.085973681 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.063420861 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081041426 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.085336632 seconds)
  done (took 2.969830157 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.432091169 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.60490829 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.449274833 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.069584206 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.72256761 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.083915878 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.139772855 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.152766854 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.067220044 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.408708795 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.742184278 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.122059269 seconds)
  done (took 16.930377087 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.070603818 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.065541382 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.104022444 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.079873141 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.067906033 seconds)
  done (took 1.334987376 seconds)
done (took 109.018115008 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076330287 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.361290388 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.049282412 seconds)
  done (took 1.384361923 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.080303105 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081358632 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.106523609 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.079328103 seconds)
  done (took 1.296193063 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.070976703 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.072821394 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.105504742 seconds)
  done (took 1.194769155 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.275266544 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138183534 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.110353869 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078701743 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.072481736 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.098058904 seconds)
  done (took 1.192151459 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068582081 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071248551 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.092929727 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071894154 seconds)
  done (took 1.243828852 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.072770907 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.048950004 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.050689044 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075927653 seconds)
  done (took 1.192943306 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086465388 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.099310199 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077705807 seconds)
  done (took 1.20345833 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104474725 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.106719096 seconds)
  done (took 1.156585322 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077627129 seconds)
  done (took 1.018245376 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088542292 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.135441751 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.146463057 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.103556479 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.149501057 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.131729739 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.100907079 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.073740303 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.097393712 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.076290167 seconds)
  done (took 2.049484567 seconds)
done (took 14.47152905 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074488974 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.195859262 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.350567048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111886751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.648420497 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.344775956 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.896575956 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.112861582 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.103840789 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087403107 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080724067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.627784482 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.887833455 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.127429636 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.87506545 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.162184812 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.626595692 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088738172 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064113249 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087751342 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.856838179 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06291965 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088509209 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064403225 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.62540944 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.384507612 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.063624046 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.185937006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064978457 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.065299566 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.368402789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064498825 seconds)
  done (took 14.387461439 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066292697 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.137766551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070852372 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079657531 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092510147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065902143 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.092295445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0654271 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141162613 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064339609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105070883 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064440696 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068293785 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089475665 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083857679 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064044318 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089972666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064693242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088778409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064957889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082693434 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089085764 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064868033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088611263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064589587 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076297427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090196291 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064961167 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064536799 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.090936809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067316303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089393772 seconds)
  done (took 3.544490097 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110722871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146800749 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071223642 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123779251 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109340752 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09166075 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.165603719 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089324233 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145060247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064279091 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105829522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064952372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121249353 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065320798 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083187437 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089932862 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065223694 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089506683 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06495218 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064728139 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.10856377 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063943976 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089119881 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066179959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064981987 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102356214 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064855219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089281247 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065535361 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068989654 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092362286 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065785616 seconds)
  done (took 3.822739099 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068776221 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070597436 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.103899819 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080497612 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065315291 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.092582758 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069062699 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090769604 seconds)
  done (took 1.595771715 seconds)
done (took 24.292691227 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075286916 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065516643 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.094725669 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.077167319 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.068162123 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.100345516 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063232518 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.096100732 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073376491 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068581945 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.097367482 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064054266 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066936501 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.088503028 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071116599 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.088906026 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.076611569 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.067624879 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.101285456 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.075651206 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.091285673 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072883651 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.069906085 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.100375395 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07519772 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.100103045 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.091287975 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094136035 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065454893 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065863685 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.097729476 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080792358 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.0645136 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.100900524 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064571523 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.088938263 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.064613535 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.063730355 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.100924 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074358546 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.092003528 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075071397 seconds)
  done (took 4.320621889 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085513396 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088362216 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.107621297 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.058146999 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.089840145 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.0582699 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085252925 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082233593 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058115147 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085265344 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077185065 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.054794957 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.055609276 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074924677 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.054236076 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.052882514 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.056233393 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077592514 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.054298979 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.054152641 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081635085 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.050880211 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.056211648 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.055861785 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078208132 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.058460385 seconds)
  done (took 2.752405314 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073049961 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.078386963 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.108585176 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120808898 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.127234209 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.071599534 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.099968057 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08274858 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107281799 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063907321 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.066540792 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.118942266 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084073619 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.095657695 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068116544 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.078398335 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.101447873 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066688274 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.0949052 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.085973354 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.080154981 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.099860004 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.085246411 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100759699 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064005101 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.065484509 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095367188 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.077859462 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069969705 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.0981887 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.06897981 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.092610715 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071512046 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07501659 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.094307045 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.0651047 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.108972706 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074092775 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.073267825 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.090703799 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.067073117 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.091733661 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.085995173 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133005713 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064709349 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070691342 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0931199 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07403217 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064730162 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109229726 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074252779 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090810688 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068105789 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065213044 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.091286966 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075129348 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066043648 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095131017 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.071936073 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.092437232 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.07690726 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068380384 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.105860588 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065667719 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.070577514 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090916981 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065164185 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.087923513 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.088180539 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069334261 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.130806467 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064736996 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.090773554 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.073150376 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.071603458 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099765032 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064019649 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104478162 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074370089 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.06655981 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.099534662 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067786766 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091910211 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.083031191 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065821013 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.090992835 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066158309 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069609306 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.091400892 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06556293 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101989251 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063726519 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066342537 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101853719 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066195316 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064649734 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.095077953 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068125183 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.088125483 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077234332 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068462801 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.090547859 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.073160167 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090592763 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067534224 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.074374727 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.095305434 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063961152 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067948744 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09691076 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064402638 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092255082 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067386671 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066187796 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.09957262 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070544594 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.067238103 seconds)
  done (took 10.587212742 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.186331583 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.179313008 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066608113 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.172662484 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072724201 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.101461489 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.173968513 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.092589437 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090150587 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06499465 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07379779 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.127645965 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.095540361 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.129056401 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.100691743 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063799387 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107765973 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104318316 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.175947046 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.169603317 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082557394 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099031764 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06554105 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.090933657 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066974329 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.072456667 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.10494575 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07271212 seconds)
  done (took 3.977268132 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078192482 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.118216522 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.069930609 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.081321076 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.113724373 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064144305 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.091093525 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066021434 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.076459836 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.101308093 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064440485 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.094873883 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071065042 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.092757463 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065816407 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07068675 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.097245451 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066056261 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.066589199 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093381942 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.071820295 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101921397 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068058253 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063053503 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.096536055 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063373486 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086308398 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082323055 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.090004268 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.083723858 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062288547 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.096589124 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.075142332 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.090923439 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064110271 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.063825777 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.092511179 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066763984 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065576766 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.08861547 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063092165 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.053720156 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.089336699 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076578163 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.095949759 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056398577 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070006266 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.095316845 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069836153 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061317993 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.093146121 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066535339 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.066721862 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.097048859 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068287307 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068713091 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.089639652 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.062406581 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.095944561 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066802842 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.060211368 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.088505113 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069577763 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.062825338 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.09861449 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068743742 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063380977 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092558158 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.065208244 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096630832 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066721953 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.066594014 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.088360468 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066864315 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068469482 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.09508454 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065147626 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062905767 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.089935105 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064709438 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.051608696 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.091100943 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.051249434 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066494357 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088192199 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063020708 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.063042664 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.096301557 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077885506 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094327197 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070789249 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064545181 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088575785 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06703898 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.082108718 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067870266 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078591941 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.106175784 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.063739936 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.088234464 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078308652 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068801009 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.0900401 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.053381823 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.070034175 seconds)
  done (took 9.086398927 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.089420356 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088329175 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.092052534 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.077731183 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.115693487 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088499929 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.096943851 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.071044062 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06484638 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107294454 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065065016 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073350069 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.090135872 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.073548641 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.113910731 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.072544307 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065602566 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.099034934 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068190747 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.125415013 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.077560622 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.077900167 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.100497901 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064485931 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.094863889 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076019114 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090961782 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.100862693 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.073803568 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.103697846 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.074883975 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089819928 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.105167385 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.068348874 seconds)
  done (took 3.921971976 seconds)
done (took 35.590480339 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.041910025 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.247139235 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.021946756 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.085625776 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.042968733 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.039910516 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.037460531 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.025932789 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.099872177 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.024682391 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.268907799 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.580423167 seconds)
done (took 57.489458364 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.100875031 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.164390547 seconds)
    (2/2) benchmarking "String"...
    done (took 1.293434856 seconds)
  done (took 3.429490978 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.446918236 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 4.97132152 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.309735735 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.022711093 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.025325576 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.474656393 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.540079112 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.836052546 seconds)
  done (took 26.151990086 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.032180536 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.373826957 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.269818088 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.27231934 seconds)
  done (took 16.922484554 seconds)
done (took 56.027735131 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.013354703 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.076985869 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.046452118 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.018450912 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.128558101 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.049054821 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.225312355 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.901042536 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.023268228 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.018275001 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.045907908 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.025354008 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.030530975 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.24550508 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.030773107 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.033699339 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.053505448 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.219973757 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.399527658 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.033134058 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.028137965 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.081333583 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.031327754 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.029641517 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.066014571 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.027862308 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.02385156 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.024891525 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.1560483 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.026037551 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.109158988 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.451172652 seconds)
  done (took 184.647641581 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.024418162 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.016425319 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.098974992 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.038206461 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.570730891 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.222616136 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.160764254 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.625571868 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.038190362 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.045324541 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.256337988 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.027266068 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.320539716 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.011239918 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.035260941 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.11070278 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.343787858 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.349819907 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.04075529 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.300136021 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.032487175 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.395848662 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.33846771 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.199936452 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.041242423 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.141995423 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.036213791 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.053316717 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.216668282 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.296645022 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.036102638 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.040957225 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.575940746 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.88576001 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.029925668 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.052683503 seconds)
  done (took 143.98571667 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.307944273 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.024550202 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.024825494 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.025517362 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.025019552 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.05491631 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.02453226 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.540124485 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.542815252 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.525806034 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.637794697 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.085672984 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.17263066 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.026225337 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.114628977 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.037670614 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.025863161 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.040207106 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.05201569 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.025984889 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.025190311 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.540261543 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.040565818 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.252248541 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.035438718 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.026094206 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.055302029 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.418299494 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.025785025 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.055202453 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.336397567 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.069087613 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.025610137 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.216577594 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.125553003 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.026733007 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.133143968 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.029218022 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.056032966 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.025897466 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.290025256 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.027584245 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.027040499 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.029992489 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.555226355 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.029431776 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.542539927 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.030432788 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.871472824 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.027432157 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.026519219 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.763833779 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.372507846 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.027108615 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.026485311 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.029713452 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.027651825 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.027250287 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.056934522 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.767261198 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.123833623 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.02848789 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.030221827 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.056082012 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.027499713 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.066658503 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.030647766 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.100175406 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.082303309 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.139407449 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.543948511 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.031020817 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.114968472 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.144375944 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.027505871 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.027584103 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.027687407 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.028478725 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.132388832 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.027963188 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.028378632 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.382203553 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.03510121 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.029466732 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.086605347 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.11923245 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.029156376 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.237888534 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.031995435 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.029006694 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.66086703 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.115919163 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.028600685 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.028046581 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.02808804 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.386195829 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.545885747 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.15054933 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.034000947 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.791282336 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.034019583 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.399344815 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.52549508 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.029262166 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.5962501 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.030216616 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.134082807 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.033653863 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.030717428 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.028545759 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.05789457 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.030335177 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.084955745 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.030101242 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.423650334 seconds)
  done (took 325.103590341 seconds)
done (took 656.021099838 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.651812 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.637474199 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.743908698 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.632769617 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.619233434 seconds)
  done (took 9.263868492 seconds)
done (took 10.24379445 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.205616186 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.207482497 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.085693693 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.207563919 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.059615264 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.223209749 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.187194808 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.052999664 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.12595601 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.102272801 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.127538822 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.076206355 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.055629699 seconds)
  done (took 15.696397797 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.339685018 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.325584273 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.096266408 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.347162188 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.072134224 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.348249952 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.225813822 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.232530993 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.220319685 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.0471477 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.044419634 seconds)
  done (took 14.280458612 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.342751974 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.33297895 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.099660058 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.365188115 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.075251482 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.340685018 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.232645898 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.242956481 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.224201547 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.046647472 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.044522053 seconds)
  done (took 14.328610918 seconds)
done (took 45.287993239 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.040871263 seconds)
  done (took 2.021182539 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.074360923 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.236775511 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.055790667 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.046698031 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.041531346 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.044163609 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.046408018 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.042395113 seconds)
  done (took 9.570128946 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.037995503 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.038517555 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.041410446 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.040343399 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.038291131 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.040688889 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.0383226 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.038208626 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.040895665 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.040925987 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.041649382 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.038667965 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.040879513 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.03846154 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.040861318 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.038551016 seconds)
  done (took 17.616405094 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.039915404 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.038914647 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.038128794 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.039076445 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.038514707 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.03865924 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.039775139 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.038496204 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.038112561 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.038664876 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.04043812 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.039310991 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.040232357 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.038378417 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.039061656 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.039408906 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.039470715 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.03952205 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.043652825 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.03932193 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.040064794 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.039176646 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.040243538 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.04011459 seconds)
  done (took 25.931056131 seconds)
done (took 56.12190869 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.778958485 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.462995063 seconds)
  done (took 8.224697507 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.042174971 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.041489405 seconds)
  done (took 3.069227023 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.041850268 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.042164571 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.042790674 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.042067571 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.041993137 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.04127148 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.042664231 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.042181162 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.042231473 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.042323582 seconds)
  done (took 11.404645121 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.042411438 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.04257558 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.039236795 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.042408172 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.042548681 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.040334382 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.042726436 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.042293321 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.042255538 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.039771354 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.043490957 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.040512771 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.043712569 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.040596638 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.043311859 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.041533264 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.040357223 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.040970712 seconds)
  done (took 19.734952187 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.043387112 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.043398485 seconds)
  done (took 3.071017226 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.040994418 seconds)
    (2/7) benchmarking "second"...
    done (took 1.040855026 seconds)
    (3/7) benchmarking "month"...
    done (took 1.040995348 seconds)
    (4/7) benchmarking "year"...
    done (took 1.041164009 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.041615118 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.041185804 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.04168006 seconds)
  done (took 8.272612822 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.04517636 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.214071712 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.295300594 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.623151725 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.04495953 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.047288327 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.908497284 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.048378336 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.049126331 seconds)
  done (took 12.260793579 seconds)
done (took 67.023176358 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.035746845 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.04249094 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.86958387 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.051414612 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.057308359 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.337893442 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.039085904 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.169191053 seconds)
done (took 35.589750284 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.044347126 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.726121012 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.727486239 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.041945302 seconds)
  done (took 10.481376053 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.032886865 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.93281516 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.026720758 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.029326746 seconds)
  done (took 17.008615771 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.622073641 seconds)
    (2/2) benchmarking "read"...
    done (took 1.372591617 seconds)
  done (took 3.979778377 seconds)
done (took 38.501282363 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.046497487 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.044683322 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.043013339 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.045166397 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.043655933 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.043492721 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.042861902 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.043216275 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.04535505 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.045432412 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.045526394 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.045070643 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.045851699 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.045426061 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.0434513 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.043889247 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.046196252 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.043560418 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.043489918 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.043863996 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.045855855 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.045148529 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.04417015 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.043140653 seconds)
  done (took 26.054434977 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.045509972 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.045105585 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.046049343 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.046665073 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.043975083 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.046726866 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.047013446 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.044080007 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.047213077 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.046775184 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.043568676 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.043651453 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.04664841 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.044190426 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.046442124 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.044217853 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.047531939 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.044236878 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.046772135 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.044521849 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.046741691 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.04486808 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.043991629 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.047543469 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.044615939 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.044289023 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.047421189 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.046002717 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.047105258 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.044863471 seconds)
  done (took 32.356433355 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.051747447 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.053828168 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.047284126 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.047098573 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.046987986 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.047124344 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.047522767 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.047996835 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.04805748 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.047572896 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.047826949 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.048295864 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.047254088 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.047462476 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.048143755 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.048082092 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.048274287 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.047670709 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.04796668 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.048480596 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.047991761 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.04880004 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.047157784 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.048250969 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.047994358 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.048349105 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.048530087 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.048598374 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.048239959 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.048954331 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.048346334 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.048870223 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.048345247 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.048987522 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.048552712 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.048977536 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.053157017 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.055451559 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.049151442 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.049576372 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.049232935 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.048602892 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.049130984 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.049424279 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.049565573 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.04908496 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.049119375 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.049324177 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.050064402 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.049315583 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.049553797 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.049638718 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.049929407 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.049748371 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.049231769 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.050373678 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.049635433 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.04957019 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.050164628 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.04999382 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.050089626 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.05023647 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.049855443 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.050352094 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.050232625 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.050174833 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.049498713 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.050124967 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.049546996 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.050543588 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.049807601 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.050375752 seconds)
  done (took 76.529208863 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.049429501 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.048386698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.047193991 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.047490126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.048115677 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.049585792 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.04782471 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.04991965 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.047814556 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.050106423 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.050355303 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.048067084 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.048426936 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.051556973 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.04995634 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.048461105 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.050661902 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.048361733 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.050505164 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.05179207 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.050290364 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.048193028 seconds)
  done (took 24.073972849 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.05102563 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.051052317 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.048120043 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.051098798 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.048387846 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.051475388 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.051349091 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.051441009 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.051396583 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.049235741 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.048828678 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.051815162 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.048465362 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.04939193 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.048031972 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.048993672 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.050895279 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.049603254 seconds)
  done (took 19.892726157 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.049851761 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.049421837 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.051912112 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.049134967 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.050262223 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.052621805 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.050122462 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.05285317 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.051861253 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.05049577 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.051813713 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.052351423 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.052697558 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.050220238 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.053435949 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.050143366 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.052452624 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.050155443 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.05258618 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.050526604 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.05033927 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.053477612 seconds)
  done (took 24.121286472 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.052262747 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.052926281 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.051631751 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.050325848 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.051044213 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.053108046 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.053565705 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.050738774 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.05295575 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.05325196 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.050760545 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.054307797 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.050795776 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.052051287 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.051599199 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.051374758 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.053740546 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.052312908 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.054509732 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.051409814 seconds)
  done (took 22.038949472 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.054765855 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.055435757 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.055350265 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.055507565 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.056087677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.055561747 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.055540181 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.055925183 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.055828515 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.056635635 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.055797299 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.055948168 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.0553465 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.056671808 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.05581207 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.055661652 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.056230602 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.055802979 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.05536099 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.055672233 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.056468684 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.055614071 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.055750446 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.055514085 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.056021299 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.056306289 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.056764075 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.055884286 seconds)
  done (took 30.559719248 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.05579264 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.055564838 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.053390065 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.053186585 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.052839012 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.053453468 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.053409782 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.054224483 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.055445637 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.053125359 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.055887497 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.056296036 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.056484238 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.055914366 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.055931137 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.056420596 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.056649968 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.054278021 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.053608084 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.05365082 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.056527597 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.056116255 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.055945717 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.053914518 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.054024362 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.056642312 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.053974031 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.054871402 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.056729755 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.054305985 seconds)
  done (took 32.645454536 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.101104158 seconds)
    (2/2) benchmarking "in"...
    done (took 1.101037644 seconds)
  done (took 3.199438721 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.054141099 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.056866743 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.057042692 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.055098139 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.054407245 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.057374684 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.057438986 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.054929816 seconds)
  done (took 9.444976292 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.055693562 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.057058512 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.057871292 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.057336017 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.058806641 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.056849913 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.063265601 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.07512324 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.057909417 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.05821241 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.062552345 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.064117634 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.060293778 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.057270629 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.057529814 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.059374126 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.058345616 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.058650349 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.05931259 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.058401658 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.058833229 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.060146344 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.060266104 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.05547009 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.059065608 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.06845436 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.06473368 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.05856219 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.057830559 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.062568678 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.058597398 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.056807458 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.058993171 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.060016149 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.060151067 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.058934864 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.0663158 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.074256045 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.064713951 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.059310975 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.059351556 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.056428431 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.059851399 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.059607084 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.059865651 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.05931072 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.059435799 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.056627396 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.057952376 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.061449907 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.062796121 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.057515536 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.057018318 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.063896569 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.060222812 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.06632545 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.077046874 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.061684871 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.066169212 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.068332463 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.071364246 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.065808809 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.061450999 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.060330743 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.068404033 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.081196102 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.066210019 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.074848659 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.058231069 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.060814277 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.066246951 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.071870377 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.068886992 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.060889847 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.06077978 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.060472137 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.060179001 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.060875107 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.066445313 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.080651358 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.061181465 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.061619046 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.068915548 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.082461068 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.060211031 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.061272612 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.061405805 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.061860581 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.061637258 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.070061092 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.079565007 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.060927962 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.060319535 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.06009719 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.061324752 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.061388459 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.060882689 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.06093596 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.059156843 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.061470888 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.06192204 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.064510109 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.06926254 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.062406965 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.062322184 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.067436771 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.062450401 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.060720119 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.068175641 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.06289605 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.062603651 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.062398329 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.067044313 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.059740162 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.064141353 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.069832185 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.062379173 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.063056538 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.062952937 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.062230381 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.070726873 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.087330044 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.061993846 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.062739914 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.066192416 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.073393682 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.062497804 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.065288679 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.062832926 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.060394738 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.059880964 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.064253563 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.063166724 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.062761492 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.063253613 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.063055884 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.060184907 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.063442219 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.063290373 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.063206823 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.064446878 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.063373458 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.064195469 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.06501286 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.063854485 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.064054216 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.069177665 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.062428447 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.06454951 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.063603926 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.061252411 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.063191454 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.06397679 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.06432261 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.063048312 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.063783069 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.062945425 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.064027613 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.064679749 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.063925572 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.064188067 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.064094726 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.066477228 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.064473174 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.066617039 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.063429606 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.062436148 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.065301737 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.064682504 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.063660048 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.064930672 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.062464112 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.066909723 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.071149916 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.064551221 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.065260084 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.065543678 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.064597365 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.064574445 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.065281798 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.066494823 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.071544319 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.065730602 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.070604183 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.065719686 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.065015523 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.065255267 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.064994909 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.065026788 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.065961167 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.067548061 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.072351377 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.077169186 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.073405297 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.066714516 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.06976197 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.065902748 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.069838771 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.069960383 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.066584348 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.066528244 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.066731406 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.065584339 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.067486111 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.067441932 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.067241878 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.065385949 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.067044296 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.067065057 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.067339326 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.067543331 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.067016733 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.067096294 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.064871623 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.067448382 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.067389623 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.065218648 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.064906678 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.065646701 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.065895192 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.067557636 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.068571412 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.073936903 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.065771553 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.068233502 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.06801086 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.066622889 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.066126248 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.06790519 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.068728071 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.066911324 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.073864516 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.083468628 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.06773466 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.073772652 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.083254746 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.066913739 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.070361567 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.068342606 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.06596308 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.070681961 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.074681605 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.06818795 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.068596597 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.068585626 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.06778201 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.070165144 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.074479148 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.066614621 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.067282851 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.069294645 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.06980454 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.067560605 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.069832766 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.068679475 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.069239636 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.070487452 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.069255913 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.069552391 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.069517258 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.069585634 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.069633433 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.069625619 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.071523153 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.076699124 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.074298492 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.06911176 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.072003447 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.069906408 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.073124255 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.070104507 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.070596081 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.069077195 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.081835327 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.081184579 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.074825161 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.07118628 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.07100523 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.074641063 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.071769709 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.073473901 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.06920914 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.069838023 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.071544396 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.069485009 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.068585307 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.070473196 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.07186584 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.071585343 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.071769425 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.074812541 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.072235533 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.06942142 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.0721433 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.071866077 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.071905117 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.070425183 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.071187086 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.072612837 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.073198427 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.069786262 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.069652774 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.077017337 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.089403821 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.072091805 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.070751763 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.070511554 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.070552366 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.072521282 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.072306211 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.07444086 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.080002449 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.074667148 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.079929575 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.072831058 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.080426078 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.07296425 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.074592752 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.079954106 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.069868271 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.070493563 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.072106257 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.072518153 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.077826114 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.091011095 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.072193846 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.076324856 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.072913411 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.07263378 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.073424989 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.073798706 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.073598454 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.07474498 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.079894398 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.090195855 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.076085648 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.074367551 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.070785195 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.073524455 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.073893933 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.07159295 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.077351451 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.073926406 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.07497157 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.074306369 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.073624999 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.073485244 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.074410969 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.073616834 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.0717929 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.074050985 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.079579486 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.093190146 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.078894667 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.074131875 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.081711613 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.074394424 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.079743083 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.092721401 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.074261504 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.074469708 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.074469588 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.075158565 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.074678161 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.074781357 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.075093039 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.07477138 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.076532351 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.075329996 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.076190055 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.074978183 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.076423984 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.074902967 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.083858549 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.098399678 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.075733001 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.079080566 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.073607795 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.075700389 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.080483535 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.075534366 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.074230999 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.077660422 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.084352779 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.083683578 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.075554691 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.07389496 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.075399001 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.07616028 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.076566779 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.076003346 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.07714741 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.076509138 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.075906663 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.076289012 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.079814667 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.07651727 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.077634237 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.076760398 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.07697592 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.085656065 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.076853101 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.076738475 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.07711325 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.076927679 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.076585652 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.076189442 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.076944457 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.076210077 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.077293744 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.077254148 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.081885928 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.081722068 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.077692719 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.075328648 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.078192273 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.076546742 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.076630106 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.078116982 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.077971207 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.077900426 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.078087142 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.078036708 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.077168275 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.075303649 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.077281951 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.078077335 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.078286257 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.079602229 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.082697006 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.077494326 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.076140397 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.077266047 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.077998776 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.075681667 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.07676149 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.084485298 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.080408974 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.086853147 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.084645669 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.081911054 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.077270701 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.079655001 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.08458458 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.077273103 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.077509324 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.078498614 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.079737034 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.079637973 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.080788989 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.079108162 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.083793478 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.07755688 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.077245368 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.085582483 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.095800934 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.07927635 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.078886512 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.081039564 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.077660757 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.076363212 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.079190406 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.078121242 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.085260111 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.096824144 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.079951424 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.079827042 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.077354121 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.080269581 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.084405499 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.079663421 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.080402803 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.077367573 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.080128081 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.08055078 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.080998746 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.078437454 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.079085503 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.079253914 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.082138627 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.086020513 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.077903778 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.08364429 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.08134984 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.081934723 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.081409089 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.080990865 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.07790388 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.077681651 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.079609297 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.08066108 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.079789248 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.081852031 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.079366811 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.0805391 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.083089456 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.080644788 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.084350956 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.089702924 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.088495837 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.079380122 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.080045498 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.081839789 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.083515477 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.082037289 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.081474866 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.0812481 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.082281214 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.082310641 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.081652766 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.081964715 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.084156123 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.095752278 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.097571405 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.081685238 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.0814616 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.085641682 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.081743457 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.080196352 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.082314261 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.083214646 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.084656264 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.089588817 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.082615956 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.087934889 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.097800061 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.083690959 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.086212755 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.08471492 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.088769697 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.084468305 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.083093393 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.083349747 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.08666453 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.098568601 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.083668433 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.092570625 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.113781982 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.099440874 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.08441432 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.083692159 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.081399977 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.083088284 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.083839907 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.084017592 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.082109035 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.085096176 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.08364205 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.084249876 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.090001511 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.085686159 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.083626802 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.085339968 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.083954805 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.082962226 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.081700242 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.085196374 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.084412116 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.083431074 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.086233098 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.084718708 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.084350041 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.094483533 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.094938662 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.08318384 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.085134828 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.082618568 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.088616675 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.086472433 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.094152236 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.092140757 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.085408802 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.084986336 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.084644879 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.086060776 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.082914052 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.08490958 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.084105463 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.084723295 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.08222023 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.097387719 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.09517571 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.090044049 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.084322254 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.086787854 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.087820417 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.086543201 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.08594515 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.086316735 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.087224143 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.085351784 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.08933029 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.08529931 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.087408231 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.089577751 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.094764344 seconds)
  done (took 640.719388806 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.086225143 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.084049057 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.084437981 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.08328444 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.083369944 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.083324772 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.08456636 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.084495704 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.084262873 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.086422852 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.085640526 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.083667998 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.084546695 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.08472301 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.08361847 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.085866345 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.086427029 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.084359947 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.084547118 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.083791154 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.084689153 seconds)
  done (took 23.800978722 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.088445005 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.084596085 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.085203119 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.088566657 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.086628432 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.087758975 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.087279353 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.086837861 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.087400049 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.084776097 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.087742923 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.086329752 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.084270468 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.084665554 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.085005703 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.087414244 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.087123191 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.085095263 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.087351727 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.085502368 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.088247447 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.087777621 seconds)
  done (took 24.926806529 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.087648019 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.087735426 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.085925724 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.08513757 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.087376776 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.085610794 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.087887328 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.088475491 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.088563302 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.087271368 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.085988186 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.088219499 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.093472705 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.092532706 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.089699826 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.088875434 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.233053874 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.088552241 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.089069585 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.08879452 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.08641684 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.092664999 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.086753059 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.085597456 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.086599598 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.088643207 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.090093853 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.090027659 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.08941757 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.089146056 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.092511604 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.089062143 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.088495417 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.090198819 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.088013403 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.090241254 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.094323773 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.091306926 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.087583569 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.091914492 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.098880973 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.110624277 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.091144943 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.095253161 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.091041566 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.092269274 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.09268104 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.096931045 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.086346393 seconds)
  done (took 54.578887942 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.092203365 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.091601719 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.089146278 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.090153822 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.092335103 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.092409479 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.092341147 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.089355614 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.089636482 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.088990791 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.092341913 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.090521484 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.089005261 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.090987511 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.094057259 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.090646468 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.088779609 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.090887795 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.091023058 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.08840707 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.088131946 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.090290264 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.093533644 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.090248745 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.092987467 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.089690789 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.0903565 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.094600581 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.093349692 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.092463451 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.091299709 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.095060954 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.096900864 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.092616464 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.089304579 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.091248443 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.092147782 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.092167416 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.091809833 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.089878217 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.092439949 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.094807238 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.091128588 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.091620534 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.089323234 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.092767671 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.088363106 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.092356865 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.090086314 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.091696591 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.092364529 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.090109332 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.095532982 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.093273114 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.091078456 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.095812799 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.089341078 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.091352337 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.092971981 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.092349257 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.091803499 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.094978439 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.091246947 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.095160224 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.092217233 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.092635747 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.091546644 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.094247599 seconds)
  done (took 75.266825596 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.095336106 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.096286321 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.095742864 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.094071287 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.09566798 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.096033595 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.09571102 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.092644505 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.094979408 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.093134267 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.094296852 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.096924252 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.094230518 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.092581604 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.095936208 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.095630503 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.09762294 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.095150162 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.093333429 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.096427005 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.093916654 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.09746849 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.095312587 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.092272723 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.095613864 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.095903725 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.094002362 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.093111342 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.09684449 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.093578404 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.094758367 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.095053188 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.093645594 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.097159891 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.094279246 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.093651534 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.095261762 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.09528813 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.097894628 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.096003975 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.093718131 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.09458085 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.094522019 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.097075511 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.095725636 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.09691435 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.094767616 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.09484409 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.097757291 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.096660032 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.094696424 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.093997074 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.095599402 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.093979896 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.094008606 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.098138228 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.096028351 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.094773637 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.096158004 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.095073253 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.094875857 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.096100873 seconds)
  done (took 68.93583401 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.094479533 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.096510895 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.092315801 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.092525664 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.095249039 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.094471468 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.099143053 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.097392162 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.098892598 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.098082438 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.100096283 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.096694268 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.094676972 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.09992865 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.094119812 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.093917825 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.093820328 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.093163428 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.096379855 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.094469421 seconds)
  done (took 22.949614619 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.095919424 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.094998378 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.095975969 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.092935563 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.09557948 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.098676343 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.099655693 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.096828452 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.093968875 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.100644273 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.099827373 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.097607987 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.093464183 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.096886349 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.100726229 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.097469138 seconds)
  done (took 18.583795261 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.094798914 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.101549762 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.098473568 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.100843732 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.09650296 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.097532459 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.098322364 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.097502967 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.09729696 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.100422276 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.099481998 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.099418851 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.098104231 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.098017006 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.095882255 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.100370365 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.09451596 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.094879874 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.098243454 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.097924906 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.096483132 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.097339894 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.101287775 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.09783861 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.09510798 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.095286389 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.098615894 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.097432927 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.095231834 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.099614168 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.095005626 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.098479451 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.09668411 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.096264452 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.099218332 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.097282717 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.101280032 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.101134843 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.098257058 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.100127567 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.10341992 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.099356974 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.100261673 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.100918184 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.09819463 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.099317196 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.095974101 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.097388967 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.096394332 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.097826372 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.099061113 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.100833221 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.098587416 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.100327504 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.0983905 seconds)
  done (took 61.439179217 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.10028097 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.101115073 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.097782355 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.099632009 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.102861504 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.099431689 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.099873663 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.099053973 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.099899987 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.100867166 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.100757582 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.099588628 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.096518678 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.103380034 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.10103037 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.099477461 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.097011026 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.096864089 seconds)
  done (took 20.831796047 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.09913426 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.100158909 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.102146281 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.101120184 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.098297001 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.10111278 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.100355163 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.103771116 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.103567469 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.102263414 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.101090962 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.100406615 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.102080715 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.101894347 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.099544732 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.099930951 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.10222347 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.103930989 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.098427608 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.101054317 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.10133912 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.104339182 seconds)
  done (took 25.266831406 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.098790574 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.098680851 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.116772247 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.139986577 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.126457682 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.101714084 seconds)
  done (took 7.721014542 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.099560364 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.102990581 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.101089404 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.103910122 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.103628998 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101382654 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.098762411 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.099944205 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.103919429 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.099720547 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.102313805 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.102574729 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.1018123 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.097473421 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101027705 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.103744684 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.099254465 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.100912191 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.103305164 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.1045144 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.102158316 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.104024137 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098509825 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.102678093 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.102990842 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.102400816 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.103402604 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.100243083 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.102952085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.104985435 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.102415598 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.100294807 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.102556714 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.100613971 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.103036618 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.105533125 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.09958502 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.102988498 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.106003633 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.100153495 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.106356571 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.104581111 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.106142799 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.103727339 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.106784139 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101902385 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.100439344 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.100615327 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.100487235 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.106291714 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.102753474 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.103842259 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.105975022 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.105643777 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106197271 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106346498 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.10044483 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.10166751 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.103035954 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.100412048 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.103740433 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.103247698 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.100265805 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.104449224 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106984909 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.103612542 seconds)
  done (took 73.814735442 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.103854748 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.102686344 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101628668 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.10414051 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.104752539 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.104351156 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.105376232 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.103418544 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.102713791 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.10399676 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.106290638 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.105382196 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.104043095 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.10445708 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.10459164 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.103895573 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.105129371 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.10348679 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.103591724 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.107805661 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.105054944 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.104881427 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.104276287 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.105638745 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.105556199 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.105863645 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.10438496 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.105695391 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.104022782 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.10404716 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.105190052 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.10386221 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.1042843 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.105413936 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.105646233 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.104766925 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.105618632 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.104332241 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.102600952 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.110038843 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.103972176 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.105630735 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.10665008 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.103771051 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.107692125 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.104644133 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.105171396 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.103420754 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.105581026 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.104357838 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.105273038 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.106762337 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.103875347 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.102891543 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.104788746 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.10384613 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.104183344 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.10446518 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.104495957 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.106703251 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.106457909 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.104596968 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.152552303 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215332919 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214779701 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214790705 seconds)
  done (took 74.336781234 seconds)
done (took 1495.077722186 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.274960682 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.313325638 seconds)
  done (took 13.738729565 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.374661642 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.325958053 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.211888533 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.245772181 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.211772413 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.214730791 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.220065914 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.211900027 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.212217071 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.211254665 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.213176999 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.424143603 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.210148316 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.211824211 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.212834276 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.306208991 seconds)
  done (took 41.169864984 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.239304401 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.220166959 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.325810299 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.235330973 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.239305156 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.392706586 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.271256587 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.217727792 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.377317068 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.253807776 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.700798057 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.238731931 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.215932234 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.310424419 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.23398447 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.394770283 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.453544872 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.706942481 seconds)
  done (took 28.17635547 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.644308361 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.231509221 seconds)
  done (took 9.023850104 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.23391769 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.216626346 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.258175679 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.250214379 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.244776231 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.245314807 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.234108612 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.237622212 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.27253651 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.228005208 seconds)
  done (took 63.570611016 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.234285072 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.216319006 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.216592125 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.214572961 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.206328802 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.210714823 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.214739499 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.212042187 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.655085584 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.33715815 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.231931806 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.222635951 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.215994136 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.216226643 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.212722142 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.252973138 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.340872823 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.212946775 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.211897121 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.22156264 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.215773134 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.320642502 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.258259304 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.216914356 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.33560283 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.674694053 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.22117308 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.22239727 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.333423643 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.214590375 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.214816166 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.215527404 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.21797578 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.788155833 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.76289301 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.227332574 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.239743834 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.225574395 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.214371461 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.357608057 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.217677037 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.222741483 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.20859572 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.734616493 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.367072984 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.32430143 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.455706736 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.219282023 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.217660077 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.275998905 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.217829514 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.216658837 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.243905492 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.960554815 seconds)
  done (took 104.569615201 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.222407095 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.699118151 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.377997368 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.230089365 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.05783677 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.981919249 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.212411782 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.479963799 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.235530365 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.207890912 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.486885464 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.701684326 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.215631505 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.267871081 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.737837169 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.224258924 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.2069528 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.092061146 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.209557209 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.208025765 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.621831936 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.233159119 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.209715352 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.371518048 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.243736295 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.656975732 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.603180134 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.727411199 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.211322407 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.206877444 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.657051258 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.215262892 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.243737139 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.209047283 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.471348731 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.54597555 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.524923732 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.212496338 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.206100449 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.208966448 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.230644386 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.645301163 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.531758862 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.208158458 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.206657615 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.65423492 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.206990362 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.209053219 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.208220963 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.410550241 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.119147636 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.207125498 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.566663819 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.20919255 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.56028925 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.303529626 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.220435453 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.677565455 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.208996664 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.257395596 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.226530142 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.204623438 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.209732304 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.208537482 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.206384432 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.53321722 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.49933428 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.204697612 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.532488756 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.644361098 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.206904161 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.703147165 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.110519669 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.22372428 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.244441231 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.207169931 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.881995954 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.662008709 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.252336507 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.20297736 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.501684956 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.203919787 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.470197956 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.216986143 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.202617064 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.617813576 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.222599147 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.232821876 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.201754118 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.216709055 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.978587161 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.206879724 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.451760077 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.215162694 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.202078071 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.202342654 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.240840256 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.199137128 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.216720901 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.204538245 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.686563407 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.209164293 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.476477858 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.219039558 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.200968375 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.204033639 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.200488348 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.201367967 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.419874655 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.801426765 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.204163753 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.200457233 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.199974617 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.203476168 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.33882578 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.206726898 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.466074417 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.202029264 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201375766 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.22129962 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.980671736 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.241237881 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.200704626 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.209990182 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.013005838 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.40702282 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.217047966 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.217364309 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.203251423 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.214396586 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.38445618 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.202501204 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.262068074 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.207213924 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.862119193 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.227190266 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.230677011 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.777304983 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.207628294 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.040542131 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.225465715 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.201677907 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.495317412 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.459966169 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.409944356 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.204674265 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.219569495 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.863042622 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.223427841 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.337115156 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.224450905 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.249754521 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.401636341 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.328090489 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.204870082 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.765682395 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.205132322 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.424380507 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.207056331 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.522018576 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.659900038 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.207479169 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.208262037 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.871724261 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877785308 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.960922745 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.207466573 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.46074515 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.174686172 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.656862857 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.205638991 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.204849432 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.780898059 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.206350367 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.212070832 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.205015409 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.204466431 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.266409028 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.376964743 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.867225433 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.214371738 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.624145389 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.244503523 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.20325564 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.21022736 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.207134678 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.557347942 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.264822442 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.209674656 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.24501356 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.208257522 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.207499266 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.635365994 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.132629917 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.20820622 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.356282155 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793950749 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.209958331 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.207873575 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.951338926 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.435665571 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.709228286 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.242663847 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.473140272 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.209272793 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.242091011 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.958846909 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.282270722 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.630865122 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.210863803 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.208503806 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.775395221 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.209998853 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.255813506 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.207541849 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.20841322 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.704784115 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.210335577 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.209211879 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.40230008 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.221989635 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453549825 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.21208482 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.242072599 seconds)
  done (took 1082.174631544 seconds)
done (took 1343.575721262 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.211176888 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.212325367 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.200657022 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.211390818 seconds)
  done (took 25.980666289 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.222673405 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.213611008 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.21497653 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.214318089 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.215481361 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.217587347 seconds)
  done (took 8.449940883 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.276241498 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.209727651 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.210548528 seconds)
  done (took 18.848004965 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.410859663 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.355243479 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.541926492 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.115251786 seconds)
  done (took 9.575909832 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.219136084 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.217402634 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.216571453 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.218822425 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.22300915 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.300909537 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.219993861 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.220436118 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.222320188 seconds)
  done (took 12.210112545 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.668158612 seconds)
done (took 80.881684277 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.239616362 seconds)
    (2/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.407905228 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.178591157 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.210413112 seconds)
    (5/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.497646078 seconds)
    (6/309) benchmarking ("sort", Int8, false)...
    done (took 4.300756911 seconds)
    (7/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.630309006 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.312523711 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.404525054 seconds)
    (10/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.631767702 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.447314655 seconds)
    (12/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.352434152 seconds)
    (13/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.913654285 seconds)
    (14/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.863106668 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.627030323 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.251785547 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.734529987 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.236610506 seconds)
    (19/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.237330977 seconds)
    (20/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.338069971 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.319666847 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.665356422 seconds)
    (23/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.170361545 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.991948044 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.26171754 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.040340293 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.497546861 seconds)
    (28/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.215787195 seconds)
    (29/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.225669218 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.040159907 seconds)
    (31/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.791206794 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.408815124 seconds)
    (33/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.277566698 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.86623526 seconds)
    (35/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.239487402 seconds)
    (36/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.007436071 seconds)
    (37/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.388339756 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.41035673 seconds)
    (39/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.548494502 seconds)
    (40/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.478860038 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.240726818 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.685736353 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.470797274 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.203784677 seconds)
    (45/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.175863749 seconds)
    (46/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.224908691 seconds)
    (47/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.344929055 seconds)
    (48/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.441170897 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.318463537 seconds)
    (50/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.196309177 seconds)
    (51/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.317768436 seconds)
    (52/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.742976978 seconds)
    (53/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.975420397 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.211192812 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.595480794 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.226150488 seconds)
    (57/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.204027956 seconds)
    (58/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.26168511 seconds)
    (59/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.66499591 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.800379808 seconds)
    (61/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.279600554 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.41981521 seconds)
    (63/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.200736409 seconds)
    (64/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.919501553 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.214997585 seconds)
    (66/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.332862192 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.216801827 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.212458825 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.353996933 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.999620102 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.488170542 seconds)
    (72/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.357050179 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.225472192 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.664701651 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.240729108 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.326112429 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.23090552 seconds)
    (78/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.50109167 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.304235513 seconds)
    (80/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.64164781 seconds)
    (81/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.380154833 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.740903543 seconds)
    (83/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.581522156 seconds)
    (84/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.275410881 seconds)
    (85/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.481875565 seconds)
    (86/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.343437478 seconds)
    (87/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.551702426 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.263987557 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.909460575 seconds)
    (90/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.221390657 seconds)
    (91/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.547860751 seconds)
    (92/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.451722359 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.033583957 seconds)
    (94/309) benchmarking ("sort", BigInt, false)...
    done (took 6.23225769 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.270508368 seconds)
    (96/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.369974229 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.570674895 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.202653388 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.329692335 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.226384592 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.059489265 seconds)
    (102/309) benchmarking ("sort", Int64, false)...
    done (took 5.33713524 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.175728789 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.340525504 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.75967397 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.21739373 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.443798641 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.290638907 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.322054155 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.250361638 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.350235232 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.803924806 seconds)
    (113/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.312646764 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.24199728 seconds)
    (115/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.555132979 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.302132364 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.977072919 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.219844567 seconds)
    (119/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.713374857 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.204210998 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.426235241 seconds)
    (122/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.230488749 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.889711041 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.001995081 seconds)
    (125/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.017985655 seconds)
    (126/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.302150991 seconds)
    (127/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.240426483 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.432887595 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.54556063 seconds)
    (130/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.564800162 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.233459835 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.703622475 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.215917703 seconds)
    (134/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.364828596 seconds)
    (135/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.229755482 seconds)
    (136/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.302274683 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.220345072 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.242649377 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.703476201 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 1.735920682 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.24115256 seconds)
    (142/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.215768266 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.897204151 seconds)
    (144/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.297464218 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.478010947 seconds)
    (146/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.450168654 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.877477273 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.240211702 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.899251935 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.478404213 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.243706495 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.236450226 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.21563666 seconds)
    (154/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.236590982 seconds)
    (155/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.462571181 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.784837682 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.421289665 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.347857329 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.218581532 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.386385024 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.203268548 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.917548935 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.204164003 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.298047879 seconds)
    (165/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.95504007 seconds)
    (166/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.336391088 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.558558367 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.903267264 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.243640724 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.703668375 seconds)
    (171/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.315536436 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.882742792 seconds)
    (173/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.725670967 seconds)
    (174/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.511287587 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.441949539 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.258775216 seconds)
    (177/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.233124087 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.339997209 seconds)
    (179/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.646674326 seconds)
    (180/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.305804473 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.323142763 seconds)
    (182/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.72880303 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.622177271 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.615517074 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.255492091 seconds)
    (186/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.392611296 seconds)
    (187/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.790542417 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.220597116 seconds)
    (189/309) benchmarking ("sort", Float64, false)...
    done (took 5.468582164 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.218883855 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.229382195 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.309969682 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.217545574 seconds)
    (194/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.892738314 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.70955338 seconds)
    (196/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.53767787 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.352401825 seconds)
    (198/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.325896156 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.203254215 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.579099547 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.651720362 seconds)
    (202/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.710322366 seconds)
    (203/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.188973226 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.415429923 seconds)
    (205/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.22320528 seconds)
    (206/309) benchmarking ("sort", Float32, false)...
    done (took 5.137626321 seconds)
    (207/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.173646558 seconds)
    (208/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.42911728 seconds)
    (209/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.234469145 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.198261157 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.020843121 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.22189549 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.199134411 seconds)
    (214/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.450313212 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.26475632 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.246064524 seconds)
    (217/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.313236297 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.176094017 seconds)
    (219/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.215590605 seconds)
    (220/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.251659147 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.235235476 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.496830003 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.275197441 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.55375943 seconds)
    (225/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.367252437 seconds)
    (226/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.860750324 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.830055127 seconds)
    (228/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.272924548 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.397106749 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.58727079 seconds)
    (231/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.212989764 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.24272792 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.307442487 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.897785068 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.186379776 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.224025341 seconds)
    (237/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.475572338 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.606490622 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.225705242 seconds)
    (240/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.337244817 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.398613442 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.183524328 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.180936315 seconds)
    (244/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.306988401 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.400102396 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.233822735 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.179584405 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.165629376 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.218243933 seconds)
    (250/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.164727776 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.684838338 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.168130518 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.571039397 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.3771994 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.213241296 seconds)
    (256/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.756817214 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.190455226 seconds)
    (258/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.173795218 seconds)
    (259/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.309196708 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.295160631 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.246820185 seconds)
    (262/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.157807849 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.218755665 seconds)
    (264/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.209177215 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.948217508 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.561085941 seconds)
    (267/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.707357545 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.939854966 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.459148899 seconds)
    (270/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.852492778 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.297245601 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.930211535 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.508177091 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.230375695 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.157493279 seconds)
    (276/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.175238592 seconds)
    (277/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.300493166 seconds)
    (278/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.465504682 seconds)
    (279/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.54085332 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.284957305 seconds)
    (281/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.708560428 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.181863889 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.262231102 seconds)
    (284/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.326791542 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.017520234 seconds)
    (286/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.504293708 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.925266952 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.295326398 seconds)
    (289/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.204871483 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.949565472 seconds)
    (291/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.670385858 seconds)
    (292/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.263115599 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.175134434 seconds)
    (294/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.839506137 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.239547633 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.216847385 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.200420365 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.520479598 seconds)
    (299/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.228307546 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.395316199 seconds)
    (301/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.17487826 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.17876221 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.20165539 seconds)
    (304/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.175561969 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.178804942 seconds)
    (306/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.752344664 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.281139914 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.147715344 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.18480364 seconds)
  done (took 865.426600785 seconds)
done (took 866.579924502 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.208053066 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.201811233 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.185270223 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.207724289 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.29705004 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.218438339 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.196933557 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.188122261 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.233676734 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.236852476 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.184375781 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.218182269 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.186850354 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.185802239 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.186167709 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.200650563 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.108626557 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.186797981 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.202219875 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.195960942 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.202186571 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.185518956 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.23596626 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.217867687 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.189573746 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.189179709 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.190763037 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.206650776 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.298580686 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.189430775 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.189312002 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.198048555 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.119705975 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.187484654 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.181380733 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.206504048 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.199117824 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.196172911 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.191403687 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.218951535 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.452473186 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.186346947 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.190223974 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.188157875 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.188204369 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.191971806 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.188615622 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.194183491 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.200335821 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.20060359 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.445433255 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.202273444 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.190292545 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.188454025 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.199163903 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.188036196 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.192005581 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.205113808 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.207774038 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.20337571 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.116425099 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.195744594 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.191361453 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.205579415 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.195786769 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.488287579 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.183938732 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.192786433 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.459228091 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.192489599 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.488396048 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.196646286 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.190832048 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.203148731 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.220826655 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.127911387 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.188314921 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.189729175 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.196998061 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.187381588 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.199404565 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.202718565 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.194141355 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.190169124 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.20376511 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.220817494 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.199159374 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.190426029 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.199426159 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.209001407 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.197102216 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.200893436 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.192815878 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.185529803 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.200448733 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.192683042 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.192051079 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.190952559 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.193636491 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.199668741 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.460927235 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.205210985 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.185072946 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.180679279 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.182985972 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.19808783 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.463779935 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.184189074 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.206009358 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.233493042 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.1829007 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.113998517 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.187026687 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.195765233 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.190937957 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.184388272 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.176793999 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.117327683 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.452351341 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.192412645 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.179933859 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.177769578 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.194145956 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.181349009 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.173843222 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.119075792 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.181219911 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.190993605 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.29846637 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.188522256 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.209365131 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.175254361 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.181049868 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.210352681 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.193709541 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.210394644 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.180522211 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.193341528 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.193486249 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.175717057 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.189218433 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.188948459 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.179028586 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.184542291 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.173088098 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.206648071 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.189772314 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.190893327 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.199132792 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.299030055 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.175759374 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.110843078 seconds)
done (took 200.709648682 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.238255587 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.169936112 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.271838104 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.175031338 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.272788395 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.27012662 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.172487074 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.173096768 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.171961202 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.589085065 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.17330347 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.174151607 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.169499841 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.173087321 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.256929567 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.175506817 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.173227906 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.553449971 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.176267607 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.268085779 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.175866254 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.173472874 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.175676578 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.61431161 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.175331812 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.16869832 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.269002406 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.176590333 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.583469113 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.175123128 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.176447242 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.584264138 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.287609248 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.193366226 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.186648015 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.18364907 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.274820087 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.190645451 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.259076591 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.25895819 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.27422019 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.215555332 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.175719083 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.177951515 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.178361501 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.178122755 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.174431367 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.203893126 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.17781599 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.174705548 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.553690644 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.187164195 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.175061055 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.175363743 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.175248548 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.206420976 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.175318661 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.178150774 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.287914721 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.177696877 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.241892413 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.61422712 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.593083016 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.177564373 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.17248764 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.1755041 seconds)
  done (took 138.389261378 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.273991244 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.250006524 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.311024744 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.177785812 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.228995957 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.312845833 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.179250532 seconds)
  done (took 9.846579675 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.18407686 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.17820516 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.227417682 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.228026594 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.178852447 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.325803654 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.178345594 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.189930431 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.17736689 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.23165643 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.180919654 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.179754574 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.184752198 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.174618572 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.226787144 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.189965598 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.294159291 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.179895051 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.17986675 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.33245827 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.176924499 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.185700787 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.230760778 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.19034196 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.180529243 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.184261399 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.755971073 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.180004143 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.176744417 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.17958628 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.177954838 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.217613376 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.179535928 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.177269348 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.177283199 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.295716074 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.17998955 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.177537351 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.179942571 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.178158237 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.179701852 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.180219098 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.179734905 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.177768376 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.17903104 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.202870237 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.179893841 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.180639955 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.180825766 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.180624475 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.231099629 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.180826342 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.177291048 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.178704874 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.237488954 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.188413102 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.181751922 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.178618854 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.181478811 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.178370656 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.33560773 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.227892061 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.181333284 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.229149048 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.181331648 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.181503135 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.181765533 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.18187416 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.235983819 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.181760245 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.228544586 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.179383343 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.337055995 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.203798343 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.18324761 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.184528229 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.184536883 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.181706786 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.177178717 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.188101202 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.179191531 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.183299003 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.186972373 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.179855208 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.179869322 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.28459537 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.290745019 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.18046174 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.19398854 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.189303281 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.180567105 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.235734337 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.182428286 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.180192422 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.233743217 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.297649474 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.23651833 seconds)
  done (took 138.217721942 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.188671431 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.190488331 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.185284602 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.198939552 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.183131128 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.182118452 seconds)
  done (took 8.244996284 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.183811501 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.182427529 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.183319825 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.183674162 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.183080004 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.185020268 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.183792088 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.184122219 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.186047987 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.18255664 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.184093261 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.185604894 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.185322533 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.183635976 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.184159043 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.183749143 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.184046892 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.18079415 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.183899014 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.185311898 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.281356912 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.1839928 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.183213318 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.183870872 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.188700888 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.184809789 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.192436812 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.184320007 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.185316208 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.191924231 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.18649143 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.185056413 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.185415112 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.190117021 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.188336667 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.186283709 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.188290087 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.186691495 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.182683718 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.186345108 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.186026981 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.185426544 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.185317656 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.186681435 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.186634622 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.188901631 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.189408786 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.194376472 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.185573718 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.187018733 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.186943254 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.185115523 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.187448646 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.187833126 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.188169638 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.191626377 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.191044801 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.188227495 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.185578404 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.187475685 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.186302966 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.187217491 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.188076123 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.189845144 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.195232646 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.187146343 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.186982495 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.189303939 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.186912678 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.186135709 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.187494385 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.184863714 seconds)
  done (took 87.634258833 seconds)
done (took 383.443027814 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.626865602 seconds)
  done (took 7.747334804 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.346357879 seconds)
  done (took 7.466960892 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.031139069 seconds)
  done (took 20.154232755 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.273139732 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.24976794 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.193206529 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.182578969 seconds)
  done (took 26.016939449 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.275107773 seconds)
  done (took 7.396767831 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.179900069 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.179521772 seconds)
  done (took 13.48151047 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.245959415 seconds)
  done (took 7.367461156 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.303549484 seconds)
  done (took 7.425775273 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.181402533 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.190303795 seconds)
  done (took 13.731398463 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.164778191 seconds)
  done (took 7.284479417 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.754064672 seconds)
  done (took 7.873196903 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.191811322 seconds)
  done (took 7.314035165 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.209072379 seconds)
  done (took 7.330106655 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.529923583 seconds)
  done (took 8.649538951 seconds)
done (took 150.36236498 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.175047477 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.184180586 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.1786989 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.184708471 seconds)
  done (took 25.841651821 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.225480271 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.224126697 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.221720949 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.235086328 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.219363418 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.224579198 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.211677205 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.215095348 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.234458223 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.22505841 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.224319142 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.225384903 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.223635243 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.21501716 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.226162749 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.222758615 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.233707087 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.224771548 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.215632212 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.224563275 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.188460158 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.234283323 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.227008689 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.190010419 seconds)
  done (took 30.440106257 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.383920884 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.257072754 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.343311706 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.240118873 seconds)
  done (took 6.347479891 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.240082379 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.243134163 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.257316204 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.29514354 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.318404213 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.250089754 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.213665364 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.209911904 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.198662961 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.240323769 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.317852548 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.257751128 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.324913748 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.191562031 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.372714284 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.1881404 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.191461844 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.244783238 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.294951125 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.315853006 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.192091755 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.243711231 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.245779502 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.257921263 seconds)
  done (took 31.229549014 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.187036823 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.19907867 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.195129532 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.189381441 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.191923444 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.189103867 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.197596433 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.191288132 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.209233907 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.188026198 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.192395543 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.191503122 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.188497133 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.191125274 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.189838031 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.206093655 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.205157095 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.190190897 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.191624739 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.19567819 seconds)
  done (took 25.006870882 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.185413469 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.039484744 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.541828247 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.442443522 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.185472235 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.186727849 seconds)
  done (took 26.7118685 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.253492722 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.377013358 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.194471465 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.506997229 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.582280528 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.192434699 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.191435745 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.409799274 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.678266022 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.667156464 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.243424324 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.252112146 seconds)
  done (took 17.67912872 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.187154068 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.186512075 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.191415311 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.205556638 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.236048335 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.19726224 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.194904236 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.186123453 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.241789119 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.248336898 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.197357039 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.241760714 seconds)
  done (took 35.646163635 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.275759392 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232913468 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.090142234 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921153647 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908250491 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.398031276 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.944581323 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600040651 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.192241964 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.461786081 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.927876993 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.291437402 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.443016198 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.200432081 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.188786856 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.110955246 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4164885 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637136348 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.191141422 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857457034 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.212417621 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.204469575 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.01382509 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.213756139 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.40189821 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.164846043 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.445450992 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.968673633 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444749265 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.199558279 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.196820411 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.188564331 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.461566851 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820209843 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.282568362 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.199369777 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.885916143 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.736765146 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.184226455 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.873832075 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.661662017 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.194705486 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.197373584 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.192105873 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.123712718 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.199271856 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605863625 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.195341069 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.903301642 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.188783904 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.200398563 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.28442969 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.193323007 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.7615012 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186776953 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.191204787 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.189232492 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.196938462 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764552672 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.323532747 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.206274497 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.126929749 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.556296022 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.868006508 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759040389 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.294776845 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.195199345 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.195684002 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.126264061 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.98154159 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.208042656 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338681664 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.231997987 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.837708025 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823224997 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.943680391 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.138079258 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706774602 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.192794143 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.130414745 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416937919 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.971319244 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122424371 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.132690542 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.126285145 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851375565 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.200726944 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.541778201 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.195216594 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606812101 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.20231973 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.210147454 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.215015695 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.414068178 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.075426771 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.189066887 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.728048337 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330367585 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.214961633 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604487514 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122032358 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.192928105 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.450101923 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.402640809 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.192677641 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.130439767 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374124496 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.198005814 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.210883416 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.200206812 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.199683952 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.712278519 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.207924463 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.359847141 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.212090226 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.96678459 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895854793 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.199416367 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.293653554 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.956564323 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.430891052 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.917943387 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.345477601 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.257285775 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.197003085 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.188500092 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.976873023 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.046406332 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.076874199 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.192361745 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.201270622 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.204300269 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.192071756 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.144122699 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.187686749 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977415949 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.973271056 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.420725472 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.202725016 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.472357239 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.129219938 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340688917 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203933613 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.415563313 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.306732468 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.194158535 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453632847 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.200236563 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.19695021 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.206756605 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.212680667 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.289497301 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.217354769 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.201806507 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.450800165 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.193451037 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.194699801 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.980440781 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.975593238 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.196752206 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.200810663 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.003764282 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.714184006 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175710755 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.201066611 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079913457 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.208453451 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.263816967 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.200079577 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.205493842 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.826806771 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998849164 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.197292064 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.197785589 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422384324 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.206471412 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.964797393 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279400955 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.376490857 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.71842255 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.213106222 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.12611568 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.901946365 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.889178372 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.196867878 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.383308517 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.1962175 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.205286825 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.206580429 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.709389375 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.718964606 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.202081837 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.888121103 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.204115216 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.203539788 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.203173855 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.19469019 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.805062864 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.358667502 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.209171116 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.21058868 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336555796 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.205586337 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.131611107 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.713928849 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.202764371 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.195929229 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.970373288 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.232270916 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.888187806 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660008589 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458037399 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.19472587 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.210972159 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.984007844 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.224932031 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.197338208 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.747077577 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.217824902 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.211587263 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.207978898 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.209185323 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.974996279 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.638668154 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.766866422 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850956209 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.674980834 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077527447 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.198647233 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.078303808 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.617344934 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.133573362 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.855244255 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367606204 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616972437 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145481451 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382267764 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.314433965 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894238162 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.211295866 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426689184 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069149389 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.774424762 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.227229246 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.409925115 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.233455768 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.197675347 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.132401852 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.504101647 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414374705 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.726886975 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.282168158 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619297532 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.770258719 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.992340519 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.199043065 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.852032079 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593553299 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.830159753 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.589489652 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.207338835 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.002263511 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671010343 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.206850483 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.726932572 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.774996256 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.214274238 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.383343279 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.134091337 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.208656667 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.209176033 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.202298993 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.3281231 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.171506988 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.469933515 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.209632364 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.136247422 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.198823242 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693597108 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.050377878 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.201729778 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.200861953 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900100759 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.200024034 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462758772 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.210186888 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.803238075 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.206116415 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.13625049 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.135292776 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.893439008 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.201280846 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176731885 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643217959 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.5506569 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.217921032 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.228488581 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053035517 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.455711543 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.213520948 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.730243781 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428048459 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.201483326 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.224479416 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.299483554 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.824040794 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.202085204 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.083367001 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.437575317 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012456646 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.423383456 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.105354576 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.106353424 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.196401392 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.412939124 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.079130377 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.016314362 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435967042 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.914893349 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.224627166 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858283042 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.229637048 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.033668594 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.225860748 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.567339114 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.211458507 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.272397777 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.211577574 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.211899604 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.212907579 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595744325 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.210440432 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.206583723 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.218416346 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.297597484 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.383169611 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.808208824 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.978094569 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.735962352 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875345878 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.736888015 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.218309408 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.205149964 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.214142239 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.137262089 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352840248 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.730336537 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.476357776 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335133212 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.633832087 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.225831024 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.838259253 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.223633771 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418895319 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.478482153 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074560199 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.200814201 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.867376533 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.087018119 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.213923009 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.416928781 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658503196 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72055019 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326557666 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.20436703 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.62206863 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.480969849 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.298285572 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.205990976 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.779521387 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.211440562 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.878340788 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.211722367 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.074578245 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353412272 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.21308485 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841090967 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.215165738 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.36429995 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.975704357 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.928505771 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.463135522 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609710171 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.216878321 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73741488 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.839078439 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.471725943 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.273074012 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.217114861 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.306371386 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350631427 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.207054609 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.09112773 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.205675001 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048077473 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.918686845 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.215754304 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740579787 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4725459 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.20495287 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.210895344 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.232479228 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.216451404 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.431248435 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876193972 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.430565454 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.21478036 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.210186513 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.776163735 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741537665 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.221364997 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.141674428 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.211447471 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425498587 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.441872868 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.232472222 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.675080909 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.917703306 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729358539 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.181683343 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.227980893 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.214956398 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846883878 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.743387137 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.823581176 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664803611 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.868237491 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.207368393 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.485309866 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.213457134 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.208948632 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.497947954 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.21240323 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.221497852 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.222716947 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.740251151 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921404392 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.219272162 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.944158706 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.148555752 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.4348816 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.842925622 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.147097 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.216350882 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.617153495 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.226838067 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340922723 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.22168272 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.20949497 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.223271426 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.945714928 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481794315 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.214686654 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.201446293 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.151711816 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.213755276 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.219888239 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427597616 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.217877199 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.877795947 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.558343166 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.466104533 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.21113869 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.199319929 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.214460917 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.210051039 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.919777531 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180610924 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.727818172 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733980805 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.214690533 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.222935109 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.21464465 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.427789828 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422799058 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.06288507 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.238304031 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.211777021 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.244315427 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.116605147 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.978374242 seconds)
  done (took 1512.456418509 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.213346092 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.226680968 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.21918832 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.280154499 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.244088721 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.376375814 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.240087252 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.272808503 seconds)
  done (took 51.222843006 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.209371113 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.250992217 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.224313514 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.218567747 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.223880328 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.22158699 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.638195908 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.225551205 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.224223369 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.221860654 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.213072559 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.216533309 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.825584524 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.222906114 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.215161924 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.20827152 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.220023422 seconds)
  done (took 62.933066934 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.212623252 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.401639922 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.297929033 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.215344976 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.810059717 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.217055323 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.3140905 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.215845888 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.210355276 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.492174889 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.868553809 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.230247063 seconds)
  done (took 81.638085934 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.220796456 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.220761203 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.221163644 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.220996016 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.221523736 seconds)
  done (took 7.258591562 seconds)
done (took 1915.540155393 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.457386809 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.835106952 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.818737915 seconds)
  done (took 4.805966112 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.360504525 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.409510653 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.528857352 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.53545479 seconds)
  done (took 6.985073633 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.522525859 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.585258495 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.404222957 seconds)
  done (took 5.663576042 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.474213808 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.228837334 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.335260008 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.213390539 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.21712041 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.214619717 seconds)
  done (took 19.798536047 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.217645036 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.220773272 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.218024033 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.219113966 seconds)
  done (took 6.023448717 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.198689145 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.901849232 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.203127398 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.216805638 seconds)
  done (took 17.672541452 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.966532222 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.978428502 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.961853999 seconds)
  done (took 7.060076922 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.225640215 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.061858743 seconds)
  done (took 9.438385591 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.49478207 seconds)
  done (took 2.649042184 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.350410631 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.54206714 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.223242284 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.174272341 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.247860329 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.619771495 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.664505308 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.293970494 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.109978827 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.13821439 seconds)
  done (took 25.513286825 seconds)
done (took 118.259184225 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.719737837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.222280098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.42115433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.735129633 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.442941458 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422489371 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.424472862 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.699605115 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.241348053 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.195877196 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.694880852 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.44994778 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.372393529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.221923024 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.372390119 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.602397392 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.443375398 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.765597154 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.383071176 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.578692137 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.427989104 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.332949145 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.529269835 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.39269174 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.443904647 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.376264813 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.925817512 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.595975976 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.556613886 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.978485519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.376325322 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.754533813 seconds)
  done (took 181.256292347 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.224412081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.220170716 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.230079209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.221863899 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.217941319 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.218310574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.218142767 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.217552282 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.228579108 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.223806531 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.217739509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.216321891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.218675321 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.231637903 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.219996922 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.216749894 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.234859218 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.217395608 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.218227414 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.218064615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.233101772 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.217975989 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.218530066 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.218616277 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.225411184 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.219197749 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.230969696 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.222024341 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.217872982 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.218876398 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.220703598 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.241390431 seconds)
  done (took 200.273751671 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.22893715 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.218572459 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.220656075 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.227016594 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.223599462 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.222970209 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.220863802 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.219764428 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.225297753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.220669466 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.228388426 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.219142342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.230286909 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.227218135 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.218724239 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.21874473 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.219112196 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.22140296 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.226243036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.221918383 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.220676289 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.221695833 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.219988815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.219561236 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.228670553 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.220578299 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.233432258 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.219160166 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.220426164 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.229127459 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.222904499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.220844782 seconds)
  done (took 200.295820739 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.421270315 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.22758529 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.227873785 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.184807372 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.228937719 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.227162296 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.222472185 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.41703066 seconds)
  done (took 13.316206932 seconds)
done (took 596.294517365 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.459795544 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.174326523 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.420764603 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.249368521 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.944272749 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.251640837 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.248606922 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.402524321 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.148350148 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.406978595 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.42715831 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.24635428 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.572507764 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.247569391 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.482961603 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.339402162 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.074416475 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.189572759 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.551896017 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.726015724 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.494793946 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.692985664 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.404604876 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.127500884 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.579572037 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.64771595 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.804315929 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.074656384 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.248857969 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.550224157 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.776209142 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.129994862 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.297943801 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.284775405 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.338628458 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.319535079 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.025665436 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.279368654 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.424507654 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.442219905 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.722023266 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.970741858 seconds)
  done (took 85.362860214 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.216614054 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.2171027 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.2164575 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.217012323 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.218764812 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.217601902 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.21619036 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.216676874 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.21619442 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.217093365 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.216486858 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.217625228 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.217403844 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.218582632 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.217603882 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.21717696 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.217650272 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.219760137 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.21597807 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.216991669 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.217726544 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.216636621 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.218398749 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.217385893 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.219282807 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.217757521 seconds)
  done (took 32.813072302 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.231132791 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.477506143 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.631970396 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.238727359 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.230821478 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.234830025 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.300730152 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.233565884 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.23501914 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.233745602 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.393326889 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.236675768 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.266614768 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.649822462 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.235234275 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.231107461 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.232738831 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.230672443 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.483943232 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.243107003 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.318189083 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.234968992 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.300598703 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.24297902 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.249966966 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.232640537 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.237649358 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.789026992 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.237076587 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.39814671 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.922806935 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.301400003 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.722865064 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.63830766 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.926617986 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.236228604 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.232329909 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.398445353 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.236276539 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.233216635 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.301356869 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.235796927 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.666015076 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.852278904 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.249610534 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.233219193 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.79380116 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.399188025 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.453558369 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.243032086 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.684717768 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.239405042 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.234812273 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.234355543 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.451519331 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.236740878 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.234058375 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.801776035 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.254132223 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.303657386 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.235869303 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.234521558 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.501453047 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.235549482 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.481493672 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.237249418 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.242020467 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.235810991 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.649394742 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.238336446 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.871502946 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.250688507 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.234153453 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.398260208 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.497592383 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.831483976 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.239711847 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.496224028 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.732958224 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.303801011 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.2406232 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.77049953 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.307780611 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.241287751 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.237204231 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.237032572 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.236122155 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.286178157 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.301915886 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.795352488 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.862176885 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.825001377 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.322903793 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.243969441 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.236727829 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.807422444 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.252327828 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.235106368 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.632479487 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.871747051 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.25210387 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.244181351 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.857099803 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.252870124 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.30629124 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.243959601 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.651352648 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.239468246 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.28795325 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.236049683 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.24391464 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.23979243 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.305902865 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.241312695 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.235784061 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.842744627 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.419301008 seconds)
  done (took 163.803185718 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.231017545 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.230836164 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.229315631 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.231021834 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.229669259 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.235440733 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.230426644 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.229657221 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.235923508 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.229680764 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.234112041 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.232085378 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.232429467 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.245338435 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.240036515 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.237156119 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.889007198 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.229963157 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.244115457 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.231661211 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.005421438 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.232630267 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.230586374 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.232789872 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.230847008 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.233662076 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.240224012 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.251733282 seconds)
  done (took 149.155189527 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.237855377 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.746006189 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.241123025 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.353348818 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.257622537 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.235117059 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.352511551 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.289737558 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.24224394 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.23554899 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.235285626 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.507989199 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.240419417 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.702921566 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.403844286 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.357195106 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.706008481 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.240719484 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.236413964 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.235697776 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.356271204 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.24547967 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.512220024 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.752695725 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.24137714 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.751369269 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.229792324 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.23902733 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.237465345 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.752141848 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.238702204 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.513550408 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.3088353 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.294188405 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.755060129 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.703337157 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.707557146 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.369754897 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.239593294 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.236959125 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.237422446 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.227461775 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.751823318 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.24295951 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.240392895 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.746559534 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.254090156 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.240426122 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.248503318 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.237418442 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.291842587 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.29396393 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.519199337 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.758905017 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.30961731 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.262803376 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.356585193 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.606007779 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.24523812 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.707564085 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.230047751 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.754364492 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.245462105 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.227917359 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.241144311 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.244593081 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.371270758 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.359674978 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.709742706 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.242967258 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.706272735 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.376060486 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.240911168 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.239916366 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.242391692 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.758926464 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.710477296 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.374968576 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.362193691 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.824219373 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.23295497 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.239519184 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.230036459 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.310059866 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.241574673 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.759316603 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.711398161 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.243245294 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.242359885 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.243301654 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.242503953 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.396666819 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.762482704 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.31107183 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.705337331 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.53362539 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.520982743 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.244613177 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.29464404 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.242386888 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.521055311 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.246245641 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.293437858 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.667171467 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.522405784 seconds)
  done (took 148.117842542 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.481318921 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.36263585 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.327118028 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.352290702 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.803626419 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.781223417 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.449688176 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.3614328 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.342885564 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.475643726 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.317973409 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.332071626 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.413186094 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.310205605 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.934295259 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.304906777 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.327217368 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.361777026 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.346597967 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.220390582 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.833170941 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.51051308 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.399991419 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.100613895 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.328062079 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.99033828 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.765140491 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.791627932 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.408840383 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.479391794 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.777187102 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.307468 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.133659293 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.866907788 seconds)
  done (took 60.473445048 seconds)
done (took 640.886435298 seconds)
SAVING RESULT...
DONE!
