cset: moving following pidspec: 30630
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.318301447 seconds)
loading group "string"... done (took 0.575457732 seconds)
loading group "linalg"... done (took 7.261490715 seconds)
loading group "parallel"... done (took 0.161496507 seconds)
loading group "find"... done (took 1.162441977 seconds)
loading group "tuple"... done (took 2.0189389 seconds)
loading group "dates"... done (took 1.288908097 seconds)
loading group "micro"... done (took 0.238494191 seconds)
loading group "io"... done (took 0.841924438 seconds)
loading group "scalar"... done (took 39.35805568 seconds)
loading group "sparse"... done (took 12.65536602 seconds)
loading group "broadcast"... done (took 0.99689616 seconds)
loading group "union"... done (took 13.651347189 seconds)
loading group "simd"... done (took 4.624356854 seconds)
loading group "random"... done (took 9.318938825 seconds)
loading group "problem"... done (took 1.988900702 seconds)
loading group "array"... done (took 22.115336537 seconds)
loading group "misc"... done (took 1.971291974 seconds)
loading group "sort"... done (took 3.375248829 seconds)
loading group "collection"... done (took 18.993939271 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548992697 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140211767 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114841543 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130785112 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.17856203 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12182632 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138227094 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081966935 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.893417807 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153672442 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135219173 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.491611745 seconds)
done (took 4.854556767 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.189405803 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083225016 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09191098 seconds)
  done (took 0.850532177 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061229337 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124167271 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.07517602 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063903879 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062367095 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07551466 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062939394 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.061043543 seconds)
  done (took 1.208173153 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069255321 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064226831 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.079955022 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06417196 seconds)
  done (took 0.959725839 seconds)
done (took 3.960533636 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.885782932 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.223200803 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180451247 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462930685 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147024129 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.177147796 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.660812547 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311356415 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.198265773 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097246779 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101395101 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.383154544 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.103813361 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.661118212 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.071965269 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.102345294 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.1535737 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.415338443 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076743299 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.07892936 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.098259816 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.124553266 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.097580173 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.087077921 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153422065 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.076461958 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147500288 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.076550369 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07798087 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.232354058 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18520539 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.675889764 seconds)
  done (took 10.247172671 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094578696 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.109267365 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06476967 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135575084 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094604569 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081536867 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.068333106 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077541173 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.084295092 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.139076586 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.083122922 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.113633478 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075688773 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067205983 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.082146067 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.216112047 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.089002419 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077766159 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066559924 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086981043 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103386958 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.089033926 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075332623 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090160552 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136764788 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188847699 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093636528 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.106781868 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064874003 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093789135 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.124658737 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124844703 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063557594 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.078129912 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.13393002 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091489653 seconds)
  done (took 4.260221122 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.099708746 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.169363655 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08787671 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15084907 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081059808 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107367071 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.079194266 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095147151 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230851539 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.171063732 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.461247109 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12483226 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097794928 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.063752635 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080193048 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.064026466 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.650112998 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142674774 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098695846 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09882438 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084560081 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067030953 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.38346909 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.064883801 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062487181 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080295387 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.055389027 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143622597 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064566245 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.207245121 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086150401 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082576921 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098971761 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.187026247 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093894061 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101769635 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101000021 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080031239 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.061885067 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.1716521 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086172313 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.063986177 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.094486068 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101013191 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116920804 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.078568594 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.063803859 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.175268377 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.060341701 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.07760035 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080449079 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.904938853 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159427645 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.073398825 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061561742 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286363921 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.079915716 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079927711 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060186433 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.264807063 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.151542232 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08683512 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082401559 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.062385287 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07817304 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.064838924 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368633327 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.063433258 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.859992958 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080189995 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073690001 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079653943 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.064045442 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068715989 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084253572 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.081521096 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.062260748 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081000002 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.062516498 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077526024 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065217635 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09748399 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.196501562 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06617768 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.062401483 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076858896 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061488832 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.081300872 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10980234 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.079558919 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.062480501 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110708013 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065617869 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.063904595 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.11418277 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.063092207 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.098909563 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079473854 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109896342 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077448525 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.117852387 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064107672 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.1072241 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068359205 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110232724 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094842952 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064888339 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144208047 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06009993 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076478938 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.063855721 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.061597841 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079420203 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06473534 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092260713 seconds)
  done (took 20.789383725 seconds)
done (took 37.077592035 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.30355606 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088501928 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.088450179 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.072930902 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087964812 seconds)
  done (took 1.395773875 seconds)
done (took 2.121109742 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143940362 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097592703 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075387936 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093795051 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.059316936 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114178812 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111777605 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078049164 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112174977 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.059752206 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108139359 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.060604517 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.059516862 seconds)
  done (took 1.930897723 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.078346696 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.078247718 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081056667 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.077058439 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.058864636 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092812134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.075107816 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099795274 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.076564029 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067243581 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074889627 seconds)
  done (took 1.584051217 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.077007026 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.079028492 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080883413 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.076428753 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.059019227 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091256713 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.074849632 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095989816 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.077176156 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082066388 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06032614 seconds)
  done (took 1.581447986 seconds)
done (took 5.813867024 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075148182 seconds)
  done (took 0.791472307 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.730568938 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.871212605 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080063907 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13425767 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.233170044 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155177078 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.452886659 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.105637889 seconds)
  done (took 10.67576151 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096088273 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094359875 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068012218 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08143024 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068208207 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.065825107 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083453115 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06499944 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.079204494 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067578208 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080307568 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067102131 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.067508365 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.080114284 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066125844 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083277157 seconds)
  done (took 2.003419989 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100308561 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099546995 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.086971061 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07170108 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085173679 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069429039 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087509818 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071666794 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082631745 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069348593 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086155473 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070568897 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.083734085 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062496901 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.086015251 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072595301 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.082999073 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07190514 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.086555046 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07178077 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.087037559 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061377077 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068327132 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.086020209 seconds)
  done (took 2.735267018 seconds)
done (took 16.928622253 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.126852113 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071229837 seconds)
  done (took 0.925385973 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078443749 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.094086643 seconds)
  done (took 0.906670265 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078445102 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.076742926 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085547507 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.088300202 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.062528177 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077243019 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.098232173 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06354613 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062081974 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077663982 seconds)
  done (took 1.50443714 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065444758 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.089287159 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066833695 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09327955 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070291673 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.075637263 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070172044 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.079940346 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075544711 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07413951 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.067071803 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.094349152 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067652659 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.096366373 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070213227 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.079912293 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066487242 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.078522777 seconds)
  done (took 2.112805959 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062651007 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063871467 seconds)
  done (took 0.859772907 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063157556 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059931245 seconds)
    (3/7) benchmarking "month"...
    done (took 0.078005643 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062967676 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075065184 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059152754 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075182373 seconds)
  done (took 1.210353489 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40614612 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10567717 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259696042 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068389588 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.100253479 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.266026089 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.078891421 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066538094 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.083137432 seconds)
  done (took 2.210325439 seconds)
done (took 10.463154877 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076538569 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.077654439 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10661687 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.429898497 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.102253237 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062680052 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.127233384 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.215081245 seconds)
done (took 1.934359598 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.122274803 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.61693364 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.40572903 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210652181 seconds)
  done (took 1.971580792 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360802403 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087029779 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068382681 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.062937833 seconds)
  done (took 1.324216865 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062582608 seconds)
    (2/2) benchmarking "read"...
    done (took 0.065915742 seconds)
  done (took 0.872155261 seconds)
done (took 5.03255021 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062777399 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.108689339 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062975106 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.060159765 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078925567 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.05991637 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.059989903 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079133068 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062172686 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.062338886 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.077680835 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062001154 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059418808 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075137592 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060225291 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062278134 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.074945204 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059838225 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06241814 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075002806 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062737262 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060239058 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.074956855 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.062681355 seconds)
  done (took 2.405978933 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08150386 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.080545134 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068266938 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067407741 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082533906 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068043901 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.084299246 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062998205 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.083238438 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065789803 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081687697 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067003537 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.079260404 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066579536 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06457458 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082483399 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067768798 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078420051 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064467631 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082582979 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06838166 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062865408 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.082230566 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067052663 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081909047 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067133899 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08012715 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063668069 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082763875 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066583454 seconds)
  done (took 2.948973252 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066920849 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059581678 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.076282941 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066948257 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.05966881 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077434648 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060503906 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060814847 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.076443968 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.059917446 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076727372 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.059915703 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059686357 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.076433795 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061285043 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063596932 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.091985338 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06049861 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.05955122 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076803104 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063413903 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059265476 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076534973 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060071066 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.075761182 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060151228 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060717156 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.074773485 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.060903498 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.060233968 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078475784 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063622003 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.060145551 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083093021 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063859088 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.060024688 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.079408807 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060078374 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061358695 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07495987 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059886872 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.059642657 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076608805 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066661697 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076023348 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063055005 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060396854 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077927073 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.060818851 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063752089 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.075811706 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059898102 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.077027398 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.061475105 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064520062 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.075141476 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061406905 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059907302 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.07754052 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.059889183 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060433468 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075811115 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063064515 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060622232 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.091382881 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066950888 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075429785 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062428672 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06210175 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.078054653 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062085026 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.0744393 seconds)
  done (took 5.608274733 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113509965 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089073153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078828786 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06192255 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058829031 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077114398 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.064221755 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075901801 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062283484 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081493595 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06093502 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062351296 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077457554 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07592466 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060295407 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.077767859 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066432922 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074163874 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061088909 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064104875 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076127408 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.063859379 seconds)
  done (took 2.334743424 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.183841187 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083837126 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106446223 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086792316 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064301498 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08591941 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06653881 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081900474 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066934152 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080791507 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06585735 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082517799 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064711742 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080084887 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064938318 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064917665 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081808175 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065044037 seconds)
  done (took 2.228423959 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07487739 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062586321 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101415601 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063312603 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078668262 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065216535 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083787077 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070684739 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.080839704 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06380438 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087171431 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065533295 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065567619 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078366204 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066560294 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078107615 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065380064 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062711633 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087121481 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067202713 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083924618 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087291842 seconds)
  done (took 2.393039131 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077819504 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064233504 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097237587 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065403269 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075148457 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061651736 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085557364 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062260098 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08478724 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064781984 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063232967 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07840615 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067262536 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07836704 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068300782 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062937608 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079873056 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062470009 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080141666 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059030804 seconds)
  done (took 2.190449388 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083648834 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079464497 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064809498 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087817511 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064420615 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06365336 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08835331 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064796892 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080772918 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103756702 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064731708 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064766345 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087580111 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085140355 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064725614 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088148042 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072379766 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088132128 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06446092 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080538573 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089135312 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080255523 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071939375 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080496692 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064701089 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080073631 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065185919 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085759497 seconds)
  done (took 2.916130455 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063017685 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062875538 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.076395451 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061315917 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061262012 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07653408 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060811327 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060388051 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078601926 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061079322 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063076082 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.079162744 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06341903 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063486886 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079127122 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063159934 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062250117 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076334892 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060031701 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060872988 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.185263346 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062434924 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062134377 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0764013 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060220549 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062683651 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076647948 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060187119 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078775265 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060830014 seconds)
  done (took 2.873797071 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071141831 seconds)
    (2/2) benchmarking "in"...
    done (took 0.08415071 seconds)
  done (took 0.913271003 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061147109 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077019548 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076735104 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067132714 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083625225 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063683611 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.087200596 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06708311 seconds)
  done (took 1.339243784 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.078770251 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.074793135 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.080930006 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075546781 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.090409784 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.079996284 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.148887416 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.080386357 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.069624655 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.0611087 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094405105 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.062900448 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.085617673 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063980375 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.069624093 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08608745 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061845394 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.084623298 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065001663 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.061630566 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080941942 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074665651 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081438019 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059771603 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064359336 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089787173 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075842851 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.080807359 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066279825 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.087305631 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069168039 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057329659 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079747304 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064145054 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060651032 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.089421866 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095719494 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066773304 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073730216 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081449309 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074059602 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.074742182 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.067745909 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.085438106 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073590913 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063173253 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.080280414 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059173405 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06076746 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082561507 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058762928 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079078642 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05831161 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070663675 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.083355142 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074088951 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078016786 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065433432 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066068329 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084548004 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.070289298 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.081580085 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066077455 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063313029 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086450621 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.067600016 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088786916 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058971755 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058150978 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078860967 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.073595617 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103010019 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070006717 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.080879025 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064692248 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061727203 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083391045 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065231583 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085166921 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.069947422 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063386724 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085036975 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070802509 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079725957 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065814641 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.086766913 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.061460317 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.065187783 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077653921 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079782794 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0783375 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062141698 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060912154 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.085608749 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06631762 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.07946728 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061664353 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069690884 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073473033 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064144514 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080214938 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063839523 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.090729969 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068495136 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085459976 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072983417 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071278853 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079637861 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066742505 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.076893885 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064137725 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062398967 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086709382 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057994528 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08181762 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064375305 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063668663 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088470515 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061290542 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.079895564 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071134299 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068268661 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079444166 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060014584 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.082122852 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063914299 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067153877 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08774753 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061964542 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07487607 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059057635 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067445593 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.079541715 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.067942319 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084425497 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.066687053 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058243789 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.077610923 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.067427448 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.088789802 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.063449685 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.063913843 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.085427887 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064459442 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.079730153 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.0703123 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.065975834 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.078792123 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069962915 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080748954 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059135448 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066376714 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.082602877 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061993619 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083394111 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066914349 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065267298 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.080519996 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062658632 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085236323 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065037258 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061730992 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079340721 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061755077 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090393848 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065308584 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058189743 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076690622 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070851101 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.077709056 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063891979 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062182395 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082173132 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064657788 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077497427 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062518996 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065472213 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091091338 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067927218 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080666185 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068997959 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.087619174 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063406804 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066545462 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.079199647 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06496894 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.080564277 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.068884478 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.068316586 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084930617 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.065936145 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077032362 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06933238 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07063842 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.079545447 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06113129 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.078542257 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067345092 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.068631646 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083125634 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064463863 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078300944 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064414555 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082948614 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066695916 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063209515 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078894783 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068297552 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.078639719 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069994788 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06407633 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090209852 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067330605 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.075426779 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067206629 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.060775002 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.086278106 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058439125 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077197363 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062120257 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06478133 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.079107172 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066785026 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057364906 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08690294 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071484392 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.080167474 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062446668 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.062367981 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.086302542 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065040451 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083910241 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066729285 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.086473116 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075079103 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063304641 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.083790865 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07385313 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.079758779 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058057691 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068438743 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079259431 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062617358 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.078326689 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.061355902 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066454827 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088233883 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07159152 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.074223557 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066393437 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061875633 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079292597 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059054524 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.083275884 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.066908373 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063944463 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087000354 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065138749 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.079941122 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.067444802 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063442077 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.081145379 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065107594 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082048434 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063982552 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06635626 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.079705529 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067400849 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061949222 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077628038 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065603957 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.079697067 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.063926729 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068745699 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.079668796 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063909999 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08231688 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064201461 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064201029 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.081333131 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06285904 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082988596 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064476984 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063871073 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.082996237 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058957666 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070992614 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.079426804 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071752979 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.080557412 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060629731 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068424747 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.082337871 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068558284 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.081640715 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06499467 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064395996 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.079866967 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.067143768 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08689356 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061076433 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.069536117 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088272711 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063843485 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.083071543 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.063644496 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064208756 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079257522 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063898035 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.080455904 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.063910214 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06302547 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.084865764 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065754947 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.080593308 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065347894 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064616778 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.080715191 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064824719 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.05764621 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079517549 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063153826 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.080148863 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074937022 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08122061 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063423056 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063405111 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081408352 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063092254 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060345724 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087806792 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071626327 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.081505899 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072278112 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.079623381 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065431852 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091002462 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060878791 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062232496 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078271681 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062065722 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070545893 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.081533569 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.072976993 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.080246014 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062659387 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060832991 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.081437602 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062292726 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058491506 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078182273 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067104091 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.079229009 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062948849 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06326657 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084220631 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065577489 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090832712 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063306383 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063469473 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.080598407 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060459 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078904599 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06369583 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.066014936 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.081026466 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061503353 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059955531 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08041353 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064193583 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.081186786 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063839826 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065501704 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087855646 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064065203 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.083187807 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067098318 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058332311 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.083316999 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063669153 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.080390293 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063116326 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067604262 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084294663 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065438072 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.085178882 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063190159 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063584214 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080762264 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061855335 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.062323078 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.080616914 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063847736 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079766433 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065104698 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071582596 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078971979 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066558624 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080055641 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063859184 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071143293 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.081259852 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066644738 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088031603 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064838856 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.064467434 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084974978 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066942575 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08389727 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064491269 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081761854 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070965355 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062506848 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.086811656 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.063808636 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.080783346 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065612886 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061323557 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080183093 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064152195 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062105928 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.086992899 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064610082 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.079817627 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062776147 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061786583 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08094217 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067276426 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087863348 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066066977 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066947279 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07596069 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061196774 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081336446 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061904861 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065244327 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085483438 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071369189 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065803986 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08077701 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062324238 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.085629305 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071478203 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.083893224 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062556628 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.067477426 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08141037 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066548248 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.063953742 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08145355 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065894272 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086357681 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066112918 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062950166 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089966256 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067394803 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081899042 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065155969 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064212636 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.080927795 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060248969 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.080489903 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065833692 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068827017 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.082839138 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064300156 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091005182 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061685363 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063641477 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084644136 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063727355 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.084573563 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059342554 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064685289 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082404653 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065630927 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076130293 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063663035 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061892194 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.083408325 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063420641 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059012524 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093206671 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.068748853 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084388548 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062943234 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062186285 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076186221 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059385409 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079261794 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065173837 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065189028 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.091238745 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063402951 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.079482471 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059558086 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064150697 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084118395 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067353971 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060174483 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.076945201 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062466387 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083221546 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069474724 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062511747 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.080594422 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066920423 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.082236183 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062313194 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067394747 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077438731 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066855407 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094839519 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064800412 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063473763 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.087452559 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071736807 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.081564727 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059119954 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063385801 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.084765359 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063482405 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.081670457 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065147694 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09643393 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067138568 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062026516 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.079911324 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066406707 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079948599 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072127041 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06497843 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.082345505 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.06849376 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.082446699 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072358423 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083563944 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071923192 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066419009 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085606655 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062847578 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080750799 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062547915 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062158509 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.082612139 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065372408 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08532616 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071950425 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062426409 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092717927 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.073029052 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.083876737 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060863528 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062555154 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.080585509 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060140238 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.082106848 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062849699 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062218233 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.079913336 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063083861 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065035882 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086554748 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06485663 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.081941412 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063728998 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057689036 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.083698366 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066850311 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080900463 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060868789 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063789767 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.081816733 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.0691089 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083816768 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062775676 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065397196 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08280375 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06512536 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059281232 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08828505 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063119268 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.083021865 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063446112 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064095991 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.081731437 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067488598 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085532755 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065090738 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065530048 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.090734335 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067006011 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.078518 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061227639 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068320547 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079153829 seconds)
  done (took 43.875488125 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10528958 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078863245 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.05907454 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076698634 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07125371 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077930968 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059665295 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060353951 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078188573 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062654481 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.05838405 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076409773 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067709343 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100405463 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088766969 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064425378 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076140119 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060589333 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058358197 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078169743 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068141433 seconds)
  done (took 2.330833963 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.082985145 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.094208576 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075299966 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095275717 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068019941 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092625806 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09091845 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075071073 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095933589 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070454952 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09509049 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091562731 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070659777 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087618954 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071110142 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089719047 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078067121 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087058875 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.076065079 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092392507 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071509675 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09268056 seconds)
  done (took 2.650520794 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064668838 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063158964 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.082372367 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059520264 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062952815 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.07644523 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067675157 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06084221 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085562059 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.062022194 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.079648504 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070367124 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065044404 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078823396 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.063594023 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061041084 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.126178203 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.084781856 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062854737 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.081883689 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.058807537 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06448735 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.076989079 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059395043 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061807345 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.084578292 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064235583 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.07917427 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063604571 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061535105 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.080455869 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061097824 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064045323 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.081222553 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062194632 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.079461927 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063065102 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.062848946 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.075931867 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062576211 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064310583 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.076979703 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06372141 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.063729327 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.07953315 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061413845 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.081725093 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.062837955 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058320925 seconds)
  done (took 4.24887629 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081108748 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.136909914 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.083699195 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11958174 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078582028 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.08928292 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067140072 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.119243579 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06044735 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08079356 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079541231 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.097489726 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.080819326 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06838795 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069072543 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081674697 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064169026 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080160811 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067103995 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.080089937 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067806167 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.086817444 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076914425 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.094369834 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.084554953 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062773164 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061789269 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.086131998 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075573366 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.086009331 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067443123 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08767539 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.09536744 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065920017 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.079521312 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066133962 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.096742901 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063886103 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065290601 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.079799875 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064830556 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.085499453 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069720272 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.097640541 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062565948 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.086732176 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063614281 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.078202344 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076644745 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.083310923 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070900095 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.096094884 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066421406 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.082033386 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067360219 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.096772156 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06358674 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.079045326 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066787211 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.094711921 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061007773 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.085199857 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077062789 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.083220961 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.06962924 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.095303229 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.085871517 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066992718 seconds)
  done (took 6.351096529 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073709263 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087273969 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078010276 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096308108 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069141531 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089584597 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087006454 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069867587 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08641843 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074900102 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087362435 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111685032 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065769591 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091500073 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070079052 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087237859 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.0706974 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087298994 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069698211 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087628382 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069925965 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096748455 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069516262 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.095967283 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117559354 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06508706 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087255907 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070003639 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096538131 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087009406 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081924526 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.087405484 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070143638 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096817541 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.099136979 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069254876 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080605186 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069885329 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.087508215 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069982353 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083016171 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078967994 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087259507 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065740049 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088071019 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070733126 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096484945 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.099442198 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072668071 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092976307 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070325975 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096719732 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087156548 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070928604 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096534213 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12096943 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078656673 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096885544 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069528614 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096429805 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096124453 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.102748442 seconds)
  done (took 6.045762171 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085149584 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091124036 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074661938 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.078803869 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062046667 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086472354 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062524693 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061163613 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091512077 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.089938875 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076125898 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084764189 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071622474 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093339543 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067437381 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08904629 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067332689 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086920809 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089739885 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068117827 seconds)
  done (took 2.393186869 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072878608 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09962419 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064439025 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069227747 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085624894 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069362062 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084560486 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066712038 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082443387 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066386277 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092237845 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074847257 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082361373 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069990771 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092085672 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070669672 seconds)
  done (took 2.063704173 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076457337 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.093322276 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078781907 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.082913412 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062663552 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.05946435 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.082649814 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059399986 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.078786956 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077734406 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.082372901 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067012873 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06319439 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.081249452 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061477124 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084294453 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061284851 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061904162 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.082334789 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079227506 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09341058 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062612038 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.083087285 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065539347 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.082516741 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070192678 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063097477 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080862133 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06263251 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082583641 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065228699 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.08585179 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061559945 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061672002 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.080868124 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061517425 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.081917695 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064291922 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066238444 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082119343 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063045095 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.082078143 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064535983 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064330156 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079038298 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064297087 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077878492 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066894386 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061623424 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083210596 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063655905 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.084722505 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065024969 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.092024849 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068168221 seconds)
  done (took 4.835688135 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077773269 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067031991 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078936943 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061937323 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084598624 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066032368 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066720015 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.084418244 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06568811 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079300951 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065672455 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06637893 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084645891 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067411897 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084134541 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067703166 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059335228 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.084417642 seconds)
  done (took 2.135013071 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069312424 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063290916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.089876728 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064754205 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.082135084 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066831669 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059920039 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081050123 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063094309 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06342947 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082338113 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065701333 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080648195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066509608 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064318957 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082225689 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066996855 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062133213 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082694943 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060559581 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084040732 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063431026 seconds)
  done (took 2.385319082 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.069331953 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091224418 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.159269232 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.104672376 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080240032 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.096498457 seconds)
  done (took 1.426838611 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088210907 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096938137 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064573036 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084904893 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091388679 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064812554 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085457927 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065430897 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092910747 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097468117 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066417989 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092599297 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074562688 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096282545 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09006453 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071692873 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084036577 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066207148 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08244826 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084174536 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084823738 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074328403 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084743465 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065981721 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084049621 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074789293 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093108918 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09744619 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065665472 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092411507 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071807499 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084281632 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074857979 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098287917 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066427914 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094211191 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084721936 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083497014 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090764222 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073087181 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085918319 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071128345 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094349768 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089113028 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075627236 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084822009 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070924165 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084146316 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065575764 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110157348 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090454181 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073597967 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090963409 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074605541 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092861702 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110259445 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097815635 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073898261 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090362916 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078952671 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092598877 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089846002 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074486464 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097495896 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071129519 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092992354 seconds)
  done (took 6.331510822 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080973684 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101739551 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066433381 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098485568 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074111325 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085510261 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065645726 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08463559 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066028961 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08455691 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125816047 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066396922 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092890106 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0732225 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084909753 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066008509 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084406176 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092938359 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065707567 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109382293 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065767945 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092891291 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093219525 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074583262 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09773834 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071442274 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085100111 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064903595 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084274499 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064985205 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089924823 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065318014 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093257216 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08397723 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074220319 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084609217 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066238853 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089586271 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066178436 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090786821 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073294244 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103062559 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08480621 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066470897 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098909547 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065848415 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084500882 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065722557 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084496341 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065275334 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09859887 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079631828 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099444688 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092271658 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066625167 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08533119 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066495856 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084946458 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06618998 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090863399 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074784154 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084295851 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110291012 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066434063 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084125994 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074576928 seconds)
  done (took 6.219326812 seconds)
done (took 122.189431474 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.217987641 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.191033939 seconds)
  done (took 1.234798061 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.065652771 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094346319 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095180979 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.125704579 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083172137 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.097892641 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.095905446 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096144173 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.064010723 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.083236026 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.064027971 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.065196468 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.148061881 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.064380406 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.063955676 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085728177 seconds)
  done (took 2.226338937 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101985781 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196128286 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107405774 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.062227013 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09689224 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072826775 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.082002915 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075104832 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069186443 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.083927834 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073255467 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.0920749 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.063319546 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093037492 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070124915 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091441412 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063760354 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091818238 seconds)
  done (took 2.421517633 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102920327 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.137170131 seconds)
  done (took 1.074694396 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.193614361 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.118180886 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200881036 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.416153883 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.207165288 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.171369161 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.170131308 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171066935 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.152596775 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.164570336 seconds)
  done (took 2.797675281 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.095491323 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169653938 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313161491 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.135404735 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085221754 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11309309 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.135080114 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086696788 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.099105211 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.098994785 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078541884 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094456557 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095627268 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091978007 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071585438 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093741049 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098105931 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.090566207 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073811715 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09170082 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.094664013 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.082920056 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072486481 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.089872599 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074983034 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.095241978 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06385181 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08169456 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073423006 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071184113 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091912533 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112410274 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075490596 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.128663167 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098692991 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.128533561 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09422423 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069942302 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070996375 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089808474 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074117447 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.094562374 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.100288705 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074801752 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.063060043 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.093748734 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.063775914 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.081871046 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075550671 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.094632478 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.075414726 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092418618 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129432021 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.075110919 seconds)
  done (took 5.994054811 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.751635702 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110481942 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090915189 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.818682862 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0763869 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094390178 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.722359347 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11056835 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200091671 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.77283792 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086219373 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093136438 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.178351378 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.209728082 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.970926564 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.281533427 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.643553965 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071358829 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127496192 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.124097801 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138845018 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14433838 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.158926669 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.379662194 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.093181806 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068427267 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.153751075 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073442524 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.135559857 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101936049 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069358271 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147235678 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.22284405 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.173576955 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072697233 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087159156 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067770788 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.143601727 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231948127 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165000116 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.153104489 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084486747 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067591674 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139149215 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12024165 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064359345 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156033014 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.149874195 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.143974851 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067869821 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092897339 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141151883 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139575881 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.138844683 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09869816 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285056033 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.260240433 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088285364 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118789601 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075067113 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230888822 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080245316 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.195620354 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129156752 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.183582035 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067666563 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733661625 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16362733 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067369457 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069707951 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118259938 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090019789 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138549417 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138846474 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.364480758 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143255398 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06758101 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087208814 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.192476057 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10028352 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067645443 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137184012 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091713814 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101603276 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165264463 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.146061787 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.14312885 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207617996 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.162129771 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140731428 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069637789 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123411239 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09264791 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.187342708 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170750251 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.135775806 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.204495936 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139652762 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.138026289 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.144985634 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091502678 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.146597624 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118534641 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075332357 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138444369 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188685051 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.119057046 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07936625 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089872098 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13907966 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.122941047 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082413406 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.159387541 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.144941134 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.425933211 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.141294043 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.085060742 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083725723 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136890517 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156171588 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06924801 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.207880246 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121315788 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164449303 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099360434 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.085344423 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119712645 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.137385116 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072023455 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121578982 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.157416471 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071491767 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.209371064 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186792474 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071941785 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21119609 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.135708273 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092654023 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.145791892 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119842924 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141710751 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072179768 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.158093139 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072751328 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758178681 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143069586 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120675214 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069519058 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160728303 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066269321 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100895644 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099754652 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065166065 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.724065662 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103842764 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097039638 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080420168 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090851996 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120519082 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137787756 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068855828 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135342168 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200065408 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07157965 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118052327 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100411451 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.135222826 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071592404 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101119883 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100583305 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081372986 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122332601 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088248196 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082278626 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14181983 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.135840111 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.190286147 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.558751937 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068326196 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100804535 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.17976086 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087760573 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.238076241 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135266064 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199067341 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.13688932 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098979133 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.278212592 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.139666542 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.159163906 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084767324 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.147230454 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085696408 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137049781 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.13929574 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066623238 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.089647125 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.137738441 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1443236 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141900813 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.929520209 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066859571 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.220785415 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065663793 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.144055427 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092949756 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071531938 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266621785 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067666865 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14676224 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159672713 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069198762 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100247323 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.680286338 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080962373 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.158190602 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071963563 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.190954966 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.138306394 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136251875 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136630024 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092626165 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138137397 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.180615321 seconds)
  done (took 39.548836977 seconds)
done (took 56.132342002 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280359278 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19308867 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.253876398 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145096237 seconds)
  done (took 1.808083538 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144596345 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103542307 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120935834 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.082637706 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102357572 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083116176 seconds)
  done (took 1.493837277 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.429975418 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275851572 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237507992 seconds)
  done (took 1.800334555 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.300793559 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.226050477 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456300576 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.302111221 seconds)
  done (took 2.25068956 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.190181784 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11203544 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064577878 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104504165 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159199777 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.304152373 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123027694 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.16590758 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097902155 seconds)
  done (took 2.227271364 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19886434 seconds)
done (took 10.640391525 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.33248503 seconds)
    (2/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.131303184 seconds)
    (3/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.216376533 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.210583955 seconds)
    (5/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087141455 seconds)
    (6/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092511248 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070207591 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.282247315 seconds)
    (9/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069854494 seconds)
    (10/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.135348986 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080509072 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.251845904 seconds)
    (13/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.140287642 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.132992145 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07573147 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.119672711 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096466685 seconds)
    (18/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080823578 seconds)
    (19/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.179454726 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074989929 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129228337 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071003038 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.275087949 seconds)
    (24/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.240877647 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120613344 seconds)
    (26/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.254890563 seconds)
    (27/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.168597332 seconds)
    (28/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095672306 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072445311 seconds)
    (30/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072607461 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069546522 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.073566153 seconds)
    (33/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.174862404 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.16249396 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.1098153 seconds)
    (36/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07170936 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.112004223 seconds)
    (38/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.27666929 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069869721 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094278775 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084655375 seconds)
    (42/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.13034198 seconds)
    (43/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.253559779 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.102303192 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.117375708 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104370573 seconds)
    (47/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09452369 seconds)
    (48/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071093885 seconds)
    (49/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.138405653 seconds)
    (50/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.261361474 seconds)
    (51/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07513987 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070780651 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094891215 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063625809 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091828086 seconds)
    (56/309) benchmarking ("sort", BigInt, false)...
    done (took 0.214115353 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073707408 seconds)
    (58/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.097055198 seconds)
    (59/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109311525 seconds)
    (60/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075481876 seconds)
    (61/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071349151 seconds)
    (62/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.096541889 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086809571 seconds)
    (64/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.199579715 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113109475 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088283429 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.085091883 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.195071124 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.236037681 seconds)
    (70/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.049165515 seconds)
    (71/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.214297669 seconds)
    (72/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.26380089 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.118036337 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.242201001 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.190082772 seconds)
    (76/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071152871 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067936738 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.083372839 seconds)
    (79/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.095371972 seconds)
    (80/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.219240588 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.178564653 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093751825 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.247321852 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.215134268 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069543867 seconds)
    (86/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.095884311 seconds)
    (87/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065512607 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.063791447 seconds)
    (89/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089399245 seconds)
    (90/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.190529164 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.253894269 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.081704178 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126065493 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.086827755 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19713346 seconds)
    (96/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076665276 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071224417 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.265292102 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.064263734 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.254030943 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.072022772 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079545127 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062342038 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085927792 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.06989496 seconds)
    (106/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.226374903 seconds)
    (107/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.049096877 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.116244196 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131945367 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.117855052 seconds)
    (111/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.048163431 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.208751066 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146052801 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.070657606 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.189553972 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188268275 seconds)
    (117/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.058707939 seconds)
    (118/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064205487 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.164975693 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069152719 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120147855 seconds)
    (122/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.119743196 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069281782 seconds)
    (124/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071354207 seconds)
    (125/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.087812008 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072593142 seconds)
    (127/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.068477164 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.069764045 seconds)
    (129/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.1306069 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.090516403 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.142978643 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093338428 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070462565 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093020057 seconds)
    (135/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.049186835 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068852799 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083944168 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09084223 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1376788 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084726055 seconds)
    (141/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093494883 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.064319498 seconds)
    (143/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093671945 seconds)
    (144/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.106298427 seconds)
    (145/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.217564723 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070973866 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.048875831 seconds)
    (148/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.091758232 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.170262149 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087755044 seconds)
    (151/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.058029658 seconds)
    (152/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.071690255 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.049385359 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063186749 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092379436 seconds)
    (156/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.059450414 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065176735 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119660211 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.048849286 seconds)
    (160/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113329271 seconds)
    (161/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088657595 seconds)
    (162/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.050403159 seconds)
    (163/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.092732129 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072523952 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091993348 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112540024 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.098283451 seconds)
    (168/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.058919051 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.04910776 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.250701149 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07068384 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096022094 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140643717 seconds)
    (174/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114422785 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092836892 seconds)
    (176/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109990515 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145439869 seconds)
    (178/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.070895863 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.050165365 seconds)
    (180/309) benchmarking ("sort", Float64, false)...
    done (took 0.146582672 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.063894952 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.154328648 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112160651 seconds)
    (184/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.049863604 seconds)
    (185/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.086937361 seconds)
    (186/309) benchmarking ("sort", Int8, false)...
    done (took 0.164063295 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070203054 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.066062883 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098249809 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07146912 seconds)
    (191/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.071881833 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064178909 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064436391 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.057552026 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.145060795 seconds)
    (196/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.102323078 seconds)
    (197/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.15004056 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085975056 seconds)
    (199/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064588266 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065119325 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084924054 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.170298693 seconds)
    (203/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10092768 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.073475087 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.072043683 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069438858 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063154806 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.07138051 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072961245 seconds)
    (210/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.058604842 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191192985 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071237325 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07143632 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063039595 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.048977157 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.070847116 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.051314777 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.048884332 seconds)
    (219/309) benchmarking ("sort", Float32, false)...
    done (took 0.149172208 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064082104 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090178768 seconds)
    (222/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.140510637 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092278717 seconds)
    (224/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.059559098 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069774876 seconds)
    (226/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.049471523 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085673867 seconds)
    (228/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.063981613 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.083510014 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083927238 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.104936587 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.049303851 seconds)
    (233/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066620609 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.12408907 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138306798 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.071517492 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130028071 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.112420349 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063936629 seconds)
    (240/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.063192946 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.111837541 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063445617 seconds)
    (243/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.071376744 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087449401 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.050277995 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.071214481 seconds)
    (247/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06810006 seconds)
    (248/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.050954264 seconds)
    (249/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.082627569 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118113237 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.049991262 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073208667 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.08990969 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.049837009 seconds)
    (255/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.080917638 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063030442 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.062562063 seconds)
    (258/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.100607422 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090591087 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.086294101 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069631654 seconds)
    (262/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.049903487 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.072427466 seconds)
    (264/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.049193058 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072149601 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.072202376 seconds)
    (267/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065442219 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.060162818 seconds)
    (269/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.059664493 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.135149909 seconds)
    (271/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.049154063 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.109102221 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076817185 seconds)
    (274/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.073395784 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.050034826 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191209929 seconds)
    (277/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.064941964 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090212207 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086487896 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.049539327 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.158633225 seconds)
    (282/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062189552 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168496613 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063019388 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072377367 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085169855 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062511583 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062858249 seconds)
    (289/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.071474599 seconds)
    (290/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066148607 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072117483 seconds)
    (292/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.191767538 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200024677 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.049426108 seconds)
    (295/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.050020789 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071468359 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069285293 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06313872 seconds)
    (299/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.101297389 seconds)
    (300/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.051537076 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093480832 seconds)
    (302/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077010333 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063222805 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.095193094 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.06918054 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06518431 seconds)
    (307/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.121564397 seconds)
    (308/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.058966288 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063391087 seconds)
  done (took 33.554033198 seconds)
done (took 34.418833899 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.079016647 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112664012 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072419521 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.113134002 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079304404 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097446228 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071155416 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077805606 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.100422944 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081269673 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099067082 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.051977356 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094409549 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07341948 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072904373 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112778189 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076665985 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092820619 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072096405 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085474348 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07130849 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063700461 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.087506923 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.051922649 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076010669 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092397363 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.070360364 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.096701617 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063404466 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063238777 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.088648704 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071359324 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.062895121 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.098819955 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070309956 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.093411046 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073481326 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075023903 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.086623775 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06345115 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.070979984 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085274871 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070766408 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071415954 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.091611971 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.062643528 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.092495041 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078917066 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112609443 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064937695 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.070913418 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.096863507 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074441019 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.092157821 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066561934 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07102363 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.08454094 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090177374 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094857223 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065300358 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070846764 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094507923 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.062031052 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093297008 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071387289 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.072962198 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09562277 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.062504125 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09508968 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.06844888 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063390145 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.093265103 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066196835 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063750488 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095844165 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.073761678 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.083857441 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069063283 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070951711 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09145649 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063710092 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065889916 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.086863382 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070089992 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065372076 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074420868 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067268546 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.28745725 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08480601 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071156584 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069419695 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.091585773 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065278089 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.096517898 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063060705 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.063326897 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.085175931 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063010975 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065064095 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.088897635 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062818684 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065937393 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.093993167 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065067979 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069729613 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.099653261 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063496152 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.090942918 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062509807 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062718978 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103176593 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072593466 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.084917833 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065672689 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062252995 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.086835319 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064125805 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063482879 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085677065 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062724181 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068797173 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08546204 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064829926 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.064780795 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098688948 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062780888 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066308841 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089539819 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062820693 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09054488 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063662021 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063315299 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.086943241 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060782489 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065191204 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.085024826 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.065118218 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065581524 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094154552 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065361521 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072590459 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.08961552 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068437632 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.062542323 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.084892136 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.055660364 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065869718 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086923467 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064394639 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062345994 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086332329 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.0624754 seconds)
done (took 12.830610288 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065779926 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.173216969 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.12466812 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095696138 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109851776 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062796835 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102079398 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104300744 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.088325242 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123165098 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087230136 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083218042 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.137306429 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085749615 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06321305 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067220669 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.088155073 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082589089 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123896576 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082768909 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.137120398 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085173047 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09598885 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.108669077 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086532348 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115386869 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06331963 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.089199537 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.063138437 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.122748014 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.084780299 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.085348783 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063371929 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122148575 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092749894 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.106530091 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063056073 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.104262366 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065426051 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06584979 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112346502 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.120373528 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080740687 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.102697863 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066966818 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.091646482 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065302193 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.107022835 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090024556 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.100988593 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.104152893 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.110394458 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.088401711 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084434669 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085281994 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085723012 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107189952 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069099383 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.084926935 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068968684 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066268898 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.085759654 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081967999 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114795252 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067959197 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105824346 seconds)
  done (took 7.031863271 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080969136 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.113209198 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080220112 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.102211941 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063585907 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06367056 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.086095576 seconds)
  done (took 1.509929927 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064713411 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08653885 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110863715 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087380893 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.106292353 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085420799 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097048569 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06409102 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.104712247 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065355546 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086074361 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126937458 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.0657507 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.095490098 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090587008 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087681739 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089435722 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064722115 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090722671 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088985994 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090269516 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.084780315 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089524166 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064569951 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079934887 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.087893789 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110539059 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092304606 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065544623 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068394293 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085289192 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104598227 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102089999 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075782153 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086879483 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079963203 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.102768297 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062542691 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081300403 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093211708 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079117531 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088185732 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065892909 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063194791 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092464838 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076543983 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065672478 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.088159494 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067334803 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.107950245 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065980768 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078803897 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087187717 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068262724 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066458611 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093418648 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074744325 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.088253074 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08501586 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06695491 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.105534884 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082185008 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102464036 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08156731 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089947981 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079469762 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10186511 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067663785 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066263763 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.090566795 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082126674 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.062771974 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.088750249 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07590501 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.089449938 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089162969 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112140541 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0670003 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075680344 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.087456687 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065461324 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.064702847 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111321593 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068259664 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087368619 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069312247 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067362053 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.085719199 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063827712 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068291589 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.085819378 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066194675 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067819334 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.087901178 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067954852 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105058904 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065965086 seconds)
  done (took 8.957030438 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06900329 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068656182 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090091224 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066006655 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069213954 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091582407 seconds)
  done (took 1.389537139 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096672855 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.09194223 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.074797558 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072181329 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.122939288 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103966289 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.080189916 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103513168 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.07816946 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.096189838 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08004261 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104457797 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.085946032 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.09616244 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.079712471 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070714157 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103764256 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075158615 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095551377 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074259872 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.109054929 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073417908 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096855139 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081478079 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09217914 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071102168 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100925908 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.073299349 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.073446923 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.104151114 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073411856 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.091416997 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069569752 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103384543 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.080557565 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093205019 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071974992 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.09290927 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074902788 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.09146625 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081089197 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073987439 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.100295667 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.069069214 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.103805923 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069402294 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.092561728 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077108587 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103117921 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068914049 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.092493871 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070818665 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.090477284 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.069827915 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.06989401 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103817229 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.069311986 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.103315742 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073666251 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.093964418 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069037489 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.091471708 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080568043 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.091362495 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078932561 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.092062637 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069956509 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073703749 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097321013 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07129385 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.091983128 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069968134 seconds)
  done (took 7.091743911 seconds)
done (took 26.898177308 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.664132679 seconds)
  done (took 1.59177484 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.798472744 seconds)
  done (took 1.729939254 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.160106622 seconds)
  done (took 16.095911622 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.622809227 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.79003245 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.834580643 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132461898 seconds)
  done (took 3.311740475 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.865093229 seconds)
  done (took 1.820287474 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241674635 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.249016009 seconds)
  done (took 1.428955509 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.72780676 seconds)
  done (took 1.668098191 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.290884695 seconds)
  done (took 2.226717574 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336348239 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183146992 seconds)
  done (took 1.463474459 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.525391531 seconds)
  done (took 1.4704979 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.451281216 seconds)
  done (took 7.399948126 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227850117 seconds)
  done (took 1.182033984 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267976798 seconds)
  done (took 1.213380778 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.147394302 seconds)
  done (took 4.094865939 seconds)
done (took 47.637494505 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.075742742 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.07907833 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102476935 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076676086 seconds)
  done (took 1.276400261 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076586322 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070872597 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.098913958 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.06974673 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100230101 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071477203 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073267426 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099261918 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.069965585 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095437619 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070654075 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070399201 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09707943 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072939248 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091804262 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073582485 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098127079 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071188279 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072981685 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095029197 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068366123 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096976053 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074512973 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069471915 seconds)
  done (took 2.904134744 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07531916 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070719298 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09532522 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069786411 seconds)
  done (took 1.266505502 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07533468 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090977894 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.111155596 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.075023989 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.114975281 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109339473 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067930651 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067243731 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.092807892 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075204024 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066263254 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.122105211 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110718408 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.074545124 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07611458 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088310335 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066399345 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109355135 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.075039417 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07515498 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091784152 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074364117 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.088832229 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089155837 seconds)
  done (took 3.04471694 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074730155 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101348945 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.10041924 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087214948 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.113118054 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063023221 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.097914474 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090039183 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149823256 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063065876 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.091714789 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063823077 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.069503117 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.087189363 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074576583 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132498364 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110714164 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.090518958 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095163859 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063508704 seconds)
  done (took 2.779694222 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07389049 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.0677546 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086893341 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066363051 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075209054 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.094026216 seconds)
  done (took 1.427186206 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065879479 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064292819 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.088114974 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064584871 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069363403 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.088787522 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063714311 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064613221 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088368065 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065264102 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064170428 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.087583367 seconds)
  done (took 1.833168149 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.455769908 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066672227 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.090096858 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064448823 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068344325 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088132132 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076714603 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066000409 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.111341211 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064187064 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064727694 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090568387 seconds)
  done (took 2.266314206 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26306656 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075427255 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329471698 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166535657 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137632434 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155313952 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102182428 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146735223 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198622141 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138021239 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226116268 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199477137 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132416893 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167048588 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111949496 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.130780674 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186045543 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221361644 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127026548 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200893023 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207225997 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155412935 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178958176 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126838761 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133151935 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144125589 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069508124 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102428766 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233866915 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161277172 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200660967 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136904937 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094363709 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243522386 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222596518 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193591136 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161219356 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083548677 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.15602913 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164983821 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258065315 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110794556 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221196464 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107612918 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104116189 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171762759 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154016522 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.156383701 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132689906 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111870379 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197972514 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214891793 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19022948 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085246892 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135073027 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137979707 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141990183 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125938379 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246685221 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219383645 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15883951 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.068775082 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119626308 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186961867 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194314265 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139042749 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153594728 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088689031 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193314888 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187891237 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140624457 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198013493 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.153746532 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087801358 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180180494 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173092735 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153040378 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229054151 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152648409 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070853635 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1490996 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125372033 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104009333 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142856164 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098286347 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233624096 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097854249 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.137645107 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136861635 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141818094 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136884494 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217115677 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178877437 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128530118 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.063696396 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128323716 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148503044 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173730712 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110883794 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140428098 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145504952 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.100982035 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165153948 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073624484 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151191531 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.100609139 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161555087 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159935897 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.098628047 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151267909 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126574052 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.108226816 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18788193 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194871137 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112388791 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081041154 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226059939 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152923536 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129044149 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174391223 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214467948 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.13235163 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125450365 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178918109 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242871822 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112546087 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19887037 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127594058 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106439966 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086666149 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17632785 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114677222 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.145794427 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107006792 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153889753 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229977444 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07251294 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120670193 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165028055 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10355544 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080451009 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136950594 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1240168 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.118377198 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100067624 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.130145566 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193402376 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15371964 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13123501 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152905773 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124414411 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222046905 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088325636 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12902722 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128582583 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068952958 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.162632848 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217455888 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0775601 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225841555 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.167502996 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128167339 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156435328 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106847646 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170708726 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076661029 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093117159 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171148712 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147130754 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135916071 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209995364 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104074409 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178591471 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151744756 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162773907 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161196866 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161363893 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130962096 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.117115626 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146422903 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154392283 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095361476 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090325171 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.105849214 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128386179 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095080851 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10659519 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170415622 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179305033 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097228706 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146164795 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120899718 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180935941 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.099446195 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158987663 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.157922845 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118529155 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186916174 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216355026 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163632138 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125115241 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174927541 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.092869846 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071967387 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.11304627 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169941698 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107425537 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082132821 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142534779 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205073744 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167573306 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165618404 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127746189 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149811668 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213683047 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070021206 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140648592 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180791442 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15088401 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.15626909 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110819757 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099738486 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200930345 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104935591 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273462088 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15532334 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164301856 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219904191 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.1041011 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103562823 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136871835 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16751737 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129211002 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206233563 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106540604 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112997715 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146621353 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103528707 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101400405 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180319691 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145250523 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175759759 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143118665 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184777521 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076121907 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142634164 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149530436 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147121054 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.085529232 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157439451 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222097871 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094984779 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154564711 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212010838 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101430468 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124667554 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239495993 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212708495 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083986471 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133008705 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14847741 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183272688 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158065179 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171514662 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135389448 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174112219 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1361508 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114405878 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087764298 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122634698 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131641688 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094247075 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.162691431 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.142658948 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093606876 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159053722 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136691349 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13637607 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15528236 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121410583 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.11359572 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097249317 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236324906 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147908007 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234653183 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12423616 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179447159 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228305261 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097238437 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078877168 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.102172028 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170970279 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083159513 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186580705 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09619191 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129438564 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15397787 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170940699 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119473293 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066263303 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143440915 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187298727 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103690208 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123587538 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.129873577 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223575756 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103175355 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103070407 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153635191 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12773635 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101942829 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234087461 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.084348728 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09508421 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098380526 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079464839 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156937529 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212140545 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107290412 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.128078465 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15554901 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172858299 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158732263 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124185705 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09725687 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13879673 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177831255 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179232904 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08932523 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138404189 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190880407 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190550527 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130790322 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.119127825 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22885615 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187664735 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226096631 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.110971352 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152787351 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152678209 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143010926 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174401805 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107768492 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226665151 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083137792 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191209769 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104004461 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115958618 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155162874 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.136347682 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112511325 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181087395 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14523385 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105694037 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077589723 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138447754 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148514828 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127725784 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.097202411 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170166832 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070310741 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190028963 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201718842 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105213363 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130955738 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102413584 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101903547 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1325602 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128186063 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085947729 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.141324705 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231926135 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.120811483 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183793783 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195505402 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141878111 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178260564 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125581075 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.661664662 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10041069 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187915647 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145165632 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168299929 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124279152 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15674434 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143772458 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149133875 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196780939 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131604236 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178205978 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185480874 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.14928162 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078198782 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128755579 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136226634 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.11420533 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132780872 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15229206 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141352779 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123846514 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.147866641 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156307923 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080306043 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119164259 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217078007 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146485032 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17318761 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170233945 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109676469 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157027647 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19645402 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081018607 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151678385 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213944965 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134762713 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12353893 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080990861 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133015633 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230658788 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071280124 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219250743 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151546474 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143531593 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151460424 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.171326016 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163441126 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131682051 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153600767 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115246827 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149522221 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144253478 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08417159 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101529695 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131203388 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140105685 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.106066963 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126572668 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142018179 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186626162 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094013278 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093887497 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127272967 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199029647 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242305739 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.096354097 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106961588 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144049622 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138529593 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142441694 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152973946 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080332253 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107475648 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110614652 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.110761644 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.133243735 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141909807 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12802172 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148782461 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201608751 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108819618 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249585727 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094989358 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134204427 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092249391 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078172893 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120591073 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119707675 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104268284 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122502365 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23042873 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096882221 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.115160259 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112016119 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071242432 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106043043 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158337172 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137544986 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147838576 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120899464 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061550274 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132981314 seconds)
  done (took 70.901359905 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.139389797 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.101590799 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117507935 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.170888855 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145383119 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.358399232 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.177396548 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221001967 seconds)
  done (took 2.46338646 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066664155 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09952663 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101502841 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.112998612 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06519176 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.089905288 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.299830268 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.106307623 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064749287 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.112658096 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.1164817 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.086148484 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.452189954 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.088460664 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064880173 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081991448 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.086585816 seconds)
  done (took 3.120181228 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.439303455 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.588601705 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.457027777 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070789467 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.725252336 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086537072 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.039053657 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.154714023 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.068955005 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.405981987 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.74371467 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124991083 seconds)
  done (took 16.927787986 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071983552 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06658431 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106379587 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081430573 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069332343 seconds)
  done (took 1.429777528 seconds)
done (took 112.582277232 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078067719 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.371386342 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.050392316 seconds)
  done (took 1.482541384 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081867439 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083264372 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108258054 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081215594 seconds)
  done (took 1.390581103 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07222179 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.073374119 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107660124 seconds)
  done (took 1.287697334 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.282448759 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.1403167 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.112360947 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08128419 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075250284 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.100563994 seconds)
  done (took 1.292608496 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07067997 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072648834 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.095751331 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074153632 seconds)
  done (took 1.345122621 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074093869 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.049423601 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.052164214 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077943104 seconds)
  done (took 1.290640406 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088484169 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.101122162 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079293261 seconds)
  done (took 1.302385576 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107177316 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.109358956 seconds)
  done (took 1.255069738 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.07972477 seconds)
  done (took 1.11374636 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09071257 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.14004551 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.149373427 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.105546676 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.154289095 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135788185 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.103079008 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.074966006 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.101041376 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.078686564 seconds)
  done (took 2.17363756 seconds)
done (took 15.578278742 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07654504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.382200422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359374163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114388225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666903485 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35330543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992582551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.114559639 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107035357 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089476301 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08340018 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645432608 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981862435 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.313762698 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968433001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.312731255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647045496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090631721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065525347 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089788088 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952871022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06479663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09036582 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066155868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647666763 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.393672488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065867824 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.337218546 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066149367 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06753112 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.378124341 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065428732 seconds)
  done (took 15.67934341 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067857246 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.141287796 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072120118 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081433254 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.094384282 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066968586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093989403 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066855943 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144363408 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066260433 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107700307 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066420702 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069093097 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.091462863 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085587006 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065936643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.092097739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065827135 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090520376 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066597634 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083549871 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091409802 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066246962 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089890056 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066529404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07763631 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09139342 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06620327 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065695523 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094052865 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068729258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.091514925 seconds)
  done (took 3.693716237 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113189038 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.150451576 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072366573 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126229825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112296305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093921125 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.167353831 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092055868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148115113 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065163922 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.108382004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066855569 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124549626 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067992903 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086108688 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091510469 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067250236 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091625533 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067057422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065785195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110303808 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065698684 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090982426 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066683554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066316854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.104362937 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066426651 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.091001836 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066735954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069692122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.094291327 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067068915 seconds)
  done (took 3.978705562 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069819494 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072378236 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.106443157 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082106942 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06699492 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.095347129 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070362044 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.092642541 seconds)
  done (took 1.703396102 seconds)
done (took 26.094089441 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076958811 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067556276 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.096381241 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.078615344 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069600378 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102499131 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064468169 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.096711529 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07567448 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069954982 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.099311729 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064814327 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.06779094 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090613909 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072517789 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.090980714 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.077498785 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.06839131 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.10346276 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077295673 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.092738402 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07474002 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070739263 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.103347938 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077339044 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.102726526 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.093021081 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09664567 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067220692 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067876131 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.100215169 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083337628 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.066410901 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103271331 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064933326 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091099221 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.06557473 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064795948 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.103353009 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076454592 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.093505492 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076093702 seconds)
  done (took 4.484640363 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087264573 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090370804 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110304956 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.059098249 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091978655 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.059410438 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087115577 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.084208309 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059381377 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086497706 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.078826604 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.056208368 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.056700239 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.0772873 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.055358838 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.053642191 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.057867387 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.079864706 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.056220524 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.055159987 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082755792 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.051733251 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.057677456 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.056834848 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.079276658 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.059645785 seconds)
  done (took 2.883256883 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074143869 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.079926423 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112376126 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122546084 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.130682815 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.074263223 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.102103606 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.084335328 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109576535 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065541178 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067986603 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122340211 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085197058 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.098010149 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06889989 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.07946093 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.103565417 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067644468 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.097577138 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086596022 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.081969122 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101656777 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.08648461 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.102796142 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065623379 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067201579 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097603095 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080362632 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07209507 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.101390239 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070678346 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09436729 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073898481 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077233344 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.106724417 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066526212 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.11206562 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076130628 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.100684289 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067040634 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.068106077 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.094200266 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.087713092 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.136665569 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066671361 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071478718 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095196262 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075724525 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.092219754 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085870436 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075420366 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093444561 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069385245 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06727005 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093289819 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077162649 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067297175 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097430969 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.072638477 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094307307 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.07878079 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068975442 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108138021 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066060182 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098181058 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066960683 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06516147 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.089864893 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.089300683 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071509267 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.13232795 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066035396 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.092812899 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074603685 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.098042178 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07645909 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06478788 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107415468 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075590763 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068390671 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101810333 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069448487 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.093625382 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.0845275 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066815821 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.093380984 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06645079 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070595644 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.09446469 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066219718 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.105204082 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065100727 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068037475 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.105037215 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067090678 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065389375 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098143979 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069275594 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.090343446 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078537272 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070376199 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093163534 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074100728 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093029022 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069249171 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075567625 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.097522361 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065605325 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069665126 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.097871201 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064980786 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094758153 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069084047 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06712716 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.101791803 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071986077 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069446681 seconds)
  done (took 10.897959398 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.190230494 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.183628457 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068653507 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.17586865 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074266547 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.105086698 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177943311 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095289445 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.092282523 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066378518 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066078917 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.134310002 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.09781489 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.135140473 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.103246845 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065729527 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083835925 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132986939 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.18091204 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.173322199 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084566481 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102526339 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067180305 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066214256 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.094328085 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075044608 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.10842967 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075251643 seconds)
  done (took 4.137846784 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080205894 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.120952649 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072026862 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.083170056 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.116432523 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065847997 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094894868 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067736815 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.07829324 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.104070396 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065368968 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.097461197 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072324598 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.094801301 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066561542 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07274448 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.099269756 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067567811 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068880089 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096491737 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074028289 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.1053113 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069851073 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064319968 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.099248223 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06516342 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089139993 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084419802 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092370163 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.08511982 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063381391 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099065454 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.0774131 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093453416 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065707967 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065286547 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.094772885 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067893949 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06656547 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091003397 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064691449 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.055207857 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.09109994 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078020582 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098736707 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057667962 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071294417 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.097600834 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070802301 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063086733 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095458575 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068974214 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.068574794 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.099786192 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.0704345 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070787606 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093228286 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.064730031 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098873407 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068416164 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.061838692 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090328069 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071660621 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06568822 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101453756 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071523255 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064365472 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.094664345 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.067356759 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.099250613 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069234111 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068267506 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090376481 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068342283 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070292957 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097840141 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066943408 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064552436 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092635248 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066041956 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.053325975 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.092954479 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052006372 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.068161005 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091224214 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064455 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064963721 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.098657778 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07878287 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096148215 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072153927 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066253226 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091858123 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068875345 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084676293 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069151598 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08041646 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110063441 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065535986 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.091540684 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079548822 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.06983534 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092307896 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.054051058 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072464318 seconds)
  done (took 9.390209482 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.090239818 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090247311 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094711708 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.079150742 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.118757284 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089822181 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099978934 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.072157297 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066605838 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11096821 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065945149 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074047389 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093291409 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074789142 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.116800101 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073274216 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067424047 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.101834704 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069802172 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.129561837 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.078928983 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079522796 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.103520376 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066337435 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097469362 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078712859 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092926607 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103343199 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.074697625 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.107071522 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.076278274 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09272421 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.108450482 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.070361276 seconds)
  done (took 4.083749304 seconds)
done (took 36.919248398 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.124706982 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.325757473 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.118111753 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.208830906 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.152241089 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.154596478 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.130295938 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.115713457 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.231643274 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.118090751 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.339579943 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.662573348 seconds)
done (took 58.746748524 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.164953915 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.259986943 seconds)
    (2/2) benchmarking "String"...
    done (took 1.389449722 seconds)
  done (took 3.710783518 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.533396729 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.047489332 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.399549037 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.126117919 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.116042954 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.572718621 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.566653065 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.882097784 seconds)
  done (took 26.771202238 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.117787264 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.437287619 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.13669451 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.125837998 seconds)
  done (took 16.87926214 seconds)
done (took 57.121382449 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.10496538 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.178223523 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.125882329 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.100070011 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.21301823 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.136056909 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.340803385 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.34353207 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.117208528 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.10733781 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.115544623 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.113745136 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.124879848 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.390042133 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.117251935 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.115035177 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.131317155 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.559686861 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.455833986 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.11611722 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.134835497 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.161854627 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.116904472 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.11850741 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.13170397 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.114540011 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.11308022 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.128197737 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.825426828 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.117560814 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.18160819 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.567061379 seconds)
  done (took 187.77830675 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.112960141 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.197794407 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.245613804 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.149316125 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.546203711 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.312950826 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.250945314 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.71749324 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.124936747 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.127335809 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.368084706 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.115934343 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.411595285 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.094640117 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.124383043 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.217125171 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.405647887 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.418839249 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.135371243 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.392212951 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.12421677 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.533304694 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.468998182 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.304706587 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.128702623 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.187737936 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.143280569 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.122877314 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.305343918 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.358061952 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.146035752 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.156947037 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.602119756 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.975404909 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.12834869 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.145348373 seconds)
  done (took 147.359860861 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.381155298 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.115089581 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.114292566 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.116178982 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.140593226 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.115180123 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.561637781 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.559365351 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.602872483 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.602148736 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.173992672 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.24481169 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.115670552 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.202479003 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.127674722 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.1171783 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.13080852 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.141722447 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.116125515 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.115333632 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.55928946 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.12925592 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.303746513 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.124813289 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.116241644 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.141203372 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.503802636 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.115319198 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.14127057 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.416791802 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.152578203 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.116544098 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.331525905 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.7442974 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.116065485 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218685118 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.118231207 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.141346152 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.117226161 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.373616306 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.11602107 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.116476182 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.11904674 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.620075725 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.11752365 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.563168788 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.116945876 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.928879192 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.116171728 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.116052157 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.116972738 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.403131506 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.40286091 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.116084556 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.116861402 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.120070391 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.116326111 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.115700488 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.141105641 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.42822363 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.211791182 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.118244779 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.117783552 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.120608621 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.142965073 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.117946926 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.259831814 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.119874891 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.313424486 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.174691916 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.336452081 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.564270858 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.119985115 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.204702915 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230709816 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.117173684 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.116903815 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.117453111 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.118345704 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.219270334 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.118734552 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.461959842 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.123932279 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.119501126 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.17441083 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.118309834 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.206608553 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.118757366 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.312153326 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.119278842 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.118406031 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.719956198 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.205314214 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.118708876 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.119393311 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.118917345 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.461398651 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.565293258 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.205985585 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.122617905 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.427672653 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.121924106 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.471720558 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.557150976 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.615806941 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.120207444 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.219740447 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.122593465 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.120194847 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.119132418 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.147384153 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.119873255 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.178282512 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.118523079 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.510504594 seconds)
  done (took 332.912654347 seconds)
done (took 670.492939573 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.744335951 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.727496603 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.830298448 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.725185571 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.711792884 seconds)
  done (took 9.803646979 seconds)
done (took 10.867681443 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.28134381 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.282427338 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.169334918 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.282907018 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.144537974 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.296255197 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.259688931 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.140998833 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.20998833 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.183067951 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.209402881 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.162520446 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.143436999 seconds)
  done (took 16.831230397 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.414168197 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.410712069 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.184511649 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.408832451 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.160790991 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.408218115 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.310765642 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.317500103 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.306074541 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.13658921 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.13487874 seconds)
  done (took 15.259244523 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.419765896 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.410022526 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.189787736 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.467517167 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.16302326 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.411104014 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.319729321 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.315702357 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.307718768 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.138197391 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.134318229 seconds)
  done (took 15.343617297 seconds)
done (took 48.497739527 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.129802177 seconds)
  done (took 2.195147346 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.160023294 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.321290554 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.144017691 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.136003805 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.130891298 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.133304939 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.136448918 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.131755902 seconds)
  done (took 10.361583857 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.126987172 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.129794411 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.130379785 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.127527261 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.129591921 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.127712633 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.129339352 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.127886388 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.12813849 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.131703712 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.12833909 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.130114647 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.131008694 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.127558048 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.127778197 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.130403042 seconds)
  done (took 19.130670357 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.130608655 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.127854752 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.128252757 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.128325048 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.127872748 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.128234757 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.129486955 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.128783199 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.128779809 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.128624261 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.129756298 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.12860514 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.127861719 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.129100813 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.128457444 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.130262687 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.12863301 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.129339596 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.133359205 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.128779872 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.1291835 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.128907003 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.129512272 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.129241437 seconds)
  done (took 28.167429073 seconds)
done (took 60.920286139 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.885054634 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.539124754 seconds)
  done (took 8.491821448 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.131626956 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.131762433 seconds)
  done (took 3.332961984 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.131190665 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.131876226 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.131612061 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.131814916 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.13164566 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.131782697 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.132726914 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.132765866 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.132520907 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.13227371 seconds)
  done (took 12.388804649 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.132262722 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.131929892 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.130506227 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.132574647 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.133147443 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.130445453 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.133285753 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.132425913 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.132844302 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.130365779 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.133191771 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.130775678 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.132981716 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.131439466 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.132390521 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.130190727 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.131371063 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.130989386 seconds)
  done (took 21.442321461 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.134301254 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.133204757 seconds)
  done (took 3.337007111 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.130901704 seconds)
    (2/7) benchmarking "second"...
    done (took 1.130433854 seconds)
    (3/7) benchmarking "month"...
    done (took 1.130891089 seconds)
    (4/7) benchmarking "year"...
    done (took 1.130873413 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.131510712 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.130824997 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.130782535 seconds)
  done (took 8.985827338 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.133769781 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.303519769 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.380788067 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.709191894 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.133110072 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.135887836 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.995522131 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.135817609 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.137530093 seconds)
  done (took 13.13574837 seconds)
done (took 72.181589962 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.088958507 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.125698405 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.927750638 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.137436081 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.141680886 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.426424357 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.134145331 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.253044311 seconds)
done (took 36.304138211 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.135214469 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.866213896 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.86901224 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.141088089 seconds)
  done (took 10.946138914 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.117797656 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.96312056 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.113867591 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.078461061 seconds)
  done (took 17.343805447 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.673245463 seconds)
    (2/2) benchmarking "read"...
    done (took 1.45576647 seconds)
  done (took 4.198397251 seconds)
done (took 39.691747917 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.133520219 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.131541974 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.134031757 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.131570038 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.13345661 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.131708674 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.130898448 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.134170308 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.133596319 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.133916127 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.133518191 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.133914397 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.131155748 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.131457621 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.130913382 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.133403138 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.131553262 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.131253336 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.13413141 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.132623425 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.134082604 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.132062822 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.132057443 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.133713762 seconds)
  done (took 28.255573934 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.135303463 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.133127185 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.1351516 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.133723024 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.132087547 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.134956532 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.135424836 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.133159617 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.135287846 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.135103031 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.131451442 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.132918943 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.135015871 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.133335542 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.13449141 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.133084536 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.135492549 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.132721504 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135205873 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.13320051 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.134960427 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.132818864 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.132918154 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.135193387 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.133010124 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.132994111 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.135009175 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.134271784 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.135123025 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.133781558 seconds)
  done (took 35.092080438 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.140429934 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.142676764 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.135140805 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.135481082 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.135854976 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.136228986 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.136922553 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.135727474 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.136351451 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.136457636 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.136025887 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.136166153 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.135954454 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.135341834 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.136854482 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.136890131 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.136591021 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.136164824 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.136390705 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.137362968 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.136321955 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.136234426 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.136440203 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.136101266 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.13591347 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.136602543 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.136812191 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.136548738 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.136576718 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.136725018 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.136335817 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.136680562 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.136956887 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.137875585 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.136393256 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.137152645 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.141865583 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.142658179 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.137951433 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.137036078 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.137620532 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.137571839 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.137265706 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.136798254 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.138303055 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.13709235 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.138214732 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.137679423 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.137472861 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.13759503 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.137834478 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.137728015 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.137482697 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.138144205 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.137724865 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.138062395 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.138106652 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.137751587 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.137716544 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.137859863 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.138804965 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.139210197 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.139241825 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.138460076 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.139591766 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.139649907 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.138741328 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.138648044 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.138242109 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.138499284 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.138541537 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.138604908 seconds)
  done (took 82.975760711 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.138531061 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.136432082 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.135805022 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.13565643 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.13650757 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.138475516 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.136265274 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.13909982 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.136511732 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.13841913 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.138627209 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.13768809 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.136417343 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.139062278 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.138270402 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.13619784 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.138881527 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.137260823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.138968915 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.14019009 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.139476787 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.137751199 seconds)
  done (took 26.106205784 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.139685387 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.138290248 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.134514277 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.136716872 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.133835622 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.136463371 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.136989047 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.135812728 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.136806398 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.137148861 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.125858832 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.128230769 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.126567914 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.126746383 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.126822929 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.12599239 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.129015275 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.12803692 seconds)
  done (took 21.460413196 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.118839703 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.119497725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.121964552 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.119201675 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.118810177 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.121648334 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.118419597 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.121617647 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.121024439 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.114203958 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.116086226 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.115218433 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.116887568 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.113112656 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.115960172 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.113394991 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.116013939 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.115103812 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.114915985 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.112012476 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.112685801 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.115497785 seconds)
  done (took 25.638379771 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.114593287 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.113916917 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.111529947 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.113100467 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.109054796 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.111737992 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.112513145 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.109740147 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.112092113 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.112357428 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.110042747 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.11250585 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.111171145 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.109702014 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.108566686 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.108589884 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.111122469 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.109669846 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.111787849 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.108996935 seconds)
  done (took 23.275367836 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.113173453 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.110612022 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.111598704 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.110396507 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.111775621 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.111626372 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.112305247 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.112715337 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.11210049 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.1120405 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.110948151 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.111059742 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.110828951 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.111256054 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.110852948 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.110859239 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.110875767 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.111141101 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.112574245 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.111070469 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.112017641 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.110733473 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.11208323 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.111895023 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.111816939 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.111503483 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.111692664 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.112732141 seconds)
  done (took 32.173969181 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.110761287 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.111440579 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.10859087 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.108873407 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.110569681 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.108788956 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.108972394 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.110250022 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.109063019 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.106416618 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.108255732 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.108908791 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.110124835 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.11049437 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.109294377 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.108995871 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.110436129 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.105010828 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.105142324 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.104994757 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.10805835 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.108021354 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.109278317 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.106438946 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.106782377 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.109922712 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.104283887 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.106120925 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.107713514 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.104572042 seconds)
  done (took 34.296100167 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.151071007 seconds)
    (2/2) benchmarking "in"...
    done (took 1.151465173 seconds)
  done (took 3.347316221 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.105066603 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.106785105 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.106478382 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.10418563 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.103759301 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.105327779 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.107059121 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.10516272 seconds)
  done (took 9.888375747 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.106395065 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.107800876 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.106401549 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.106117003 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.10779326 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.106336318 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.11203338 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.123348957 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.109177082 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.108958347 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.111877507 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.110355124 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.108139567 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.105465675 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.104061721 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.106645064 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.104794161 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.105623066 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.10476142 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.104902019 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.103792373 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.105457944 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.105995938 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.101324809 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.104039578 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.113079664 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.109549446 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.104519515 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.102941103 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.104977998 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.101288458 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.099234164 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.102037686 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.102063337 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.102370824 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.101907098 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.109905682 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.117043609 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.107595705 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.101253166 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.102118304 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.098668038 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.101749988 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.101425404 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.101730601 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.101101026 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.101353718 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.099036437 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.100342182 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.102598058 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.105338021 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.100939941 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.098731966 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.105583982 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.102897378 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.109673278 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.117250046 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.103694187 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.107952995 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.110882975 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.112893956 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.108412159 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.103910327 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.102269869 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.110715326 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.120773941 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.109245081 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.11419348 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.100588016 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.102461566 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.108721605 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.114310683 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.111049348 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.103291511 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.102936789 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.104018923 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.102910087 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.103265132 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.10921348 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.119016121 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.102963252 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.103202385 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.11133903 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.120488597 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.102673036 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.102080721 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.102222053 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.102935248 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.103397668 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.113076894 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.116978585 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.10433695 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.102461149 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.103112841 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.104789459 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.1030857 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.101737986 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.103597181 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.101226129 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.104551673 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.103200376 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.106471757 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.110092995 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.104372045 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.103143366 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.110119816 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.105022066 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.103537296 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.111890961 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.104349474 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.103691756 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.104370377 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.107836235 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.102924267 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.106427451 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.109871998 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.10487966 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.105907991 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.104725596 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.104861732 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.112319928 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.126097745 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.105315857 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.104585954 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.107973385 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.113674105 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.104383357 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.108088185 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.10526317 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.102869178 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.102604277 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.106196902 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.104614326 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.104663238 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.105806396 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.105392164 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.103423535 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.10581367 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.104863224 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.10652982 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.10580421 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.10652898 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.107227223 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.108233885 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.10563525 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.107300783 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.111511795 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.105662032 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.107462699 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.106982094 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.103526311 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.106782487 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.106521384 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.106481008 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.106248952 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.105846754 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.105103326 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.106500235 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.107478119 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.10734378 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.106911323 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.106713282 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.108582286 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.10745948 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.109913545 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.106099613 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.103953121 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.106425694 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.107234201 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.106409158 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.106091753 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.104329311 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.108868156 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.112216666 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.106876878 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.106930652 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.109409218 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.10709041 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.106788179 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.10711988 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.108914514 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.112980619 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.107592463 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.113405561 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.107575354 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.106977117 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.107166401 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.107719246 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.107395385 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.107110815 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.1098058 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.114075405 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.119295801 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.113419748 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.10877167 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.110401075 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.108123036 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.110102726 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.112224645 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.108444745 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.108437032 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.10741008 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.107096512 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.109055371 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.109012674 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.107831376 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.106309715 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.108353524 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.108472487 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.108395488 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.108813268 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.108012872 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.109434527 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.106025651 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.108095585 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.107909384 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.106624229 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.106350732 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.106644489 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.107357212 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.109688648 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.109471677 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.115370658 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.106864828 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.110457069 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.110292611 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.108563959 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.107445461 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.108880452 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.11114451 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.10921811 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.11557124 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.123924949 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.110540973 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.117032187 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.126281367 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.104176554 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.107204326 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.105787635 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.102582425 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.106621964 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.111935343 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.105398248 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.105321572 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.108100234 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.099613535 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.101892903 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.107375676 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.098422831 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.099675777 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.101103895 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.102978092 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.098904776 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.103202475 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.099070832 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.098635987 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.099692775 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.099669008 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.098961081 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.098838892 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.098492266 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.097948431 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.098753064 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.099810243 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.102809722 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.101963767 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.09702185 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.099708586 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.09772621 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.099354601 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.097195292 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.096543214 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.096714729 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.109233505 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.103945027 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.103237173 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.099196298 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.097929623 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.10187681 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.097585981 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.100618763 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.096861816 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.099104192 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.096444045 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.097445732 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.095519307 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.098913374 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.098087157 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.098256525 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.098508606 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.101296098 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.097920754 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.097305878 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.098224187 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.097755419 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.098171927 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.097855602 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.09913951 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.100418884 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.099899651 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.097487366 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.098790195 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.105517797 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.112548922 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.09986418 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.098112871 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.098246153 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.098606111 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.099881183 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.098992431 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.101714815 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.105109182 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.101475103 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.106378807 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.099871267 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.106495845 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.099048791 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.101160899 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.105397174 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.096356492 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.098122498 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.100054702 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.09908871 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.106702713 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.113701718 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.100395069 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.103622517 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.100043425 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.099427673 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.100556517 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.099839311 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.100502315 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.10101402 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.108175227 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.116184851 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.103186567 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.102040343 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.098106246 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.099963469 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.100197012 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.10029118 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.105560075 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.100983569 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.10153656 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.100399204 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.10103272 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.101277439 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.100990676 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.100403803 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.098905071 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.102429503 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.107726836 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.115566309 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.103997048 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.10214133 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.110337273 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.101264406 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.108224832 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.115968096 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.100629529 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.101541742 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.101495045 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.102523206 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.101461001 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.102824795 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.102086074 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.10251157 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.105850466 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.10273852 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.103058572 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.103162939 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.101864594 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.101230073 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.110858131 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.121121663 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.103041281 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.105525855 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.09922514 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.102027744 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.105960982 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.102761449 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.100647883 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.104414422 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.110811375 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.109117818 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.102990368 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.102454056 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.102253705 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.103463625 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.103297542 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.104319377 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.102798913 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.103459784 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.10364562 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.103035194 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.107510579 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.103734682 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.104529673 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.10450923 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.104045694 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.112662697 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.103427111 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.104471487 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.103853863 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.103805987 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.10351995 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.105022722 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.104203435 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.10399409 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.104356799 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.104715974 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.109180398 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.108808743 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.106665135 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.103836134 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.104484523 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.104581698 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.10449441 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.104930054 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.105353714 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.105209564 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.106297416 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.105463306 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.105578771 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.103474397 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.105527409 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.105406343 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.106440774 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.108030974 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.110641083 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.105440229 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.102865219 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.106200525 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.105876358 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.104448887 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.105495292 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.113742431 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.10774647 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.114138307 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.111228747 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.108662575 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.105495201 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.108483265 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.11147748 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.105232148 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.105578859 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.106265137 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.106487682 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.105941974 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.108625167 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.106093061 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.113103623 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.106492018 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.105829553 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.114045489 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.121583166 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.106385782 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.107433735 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.109607035 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.107269142 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.104794772 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.106770351 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.105416289 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.113184229 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.122996398 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.106781417 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.108506866 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.105737399 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.107897198 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.110447768 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.107610632 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.108041214 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.104358735 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.107089242 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.107113084 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.108035052 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.105448293 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.106828421 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.107331024 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.109488985 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.11286138 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.105527323 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.109393061 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.107653994 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.108496352 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.107911475 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.108801504 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.105186702 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.104705139 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.107959103 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.107388959 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.108030834 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.110611682 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.108322888 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.107891759 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.109031143 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.108872067 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.110436902 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.115726498 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.114869563 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.106810875 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.107655798 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.109587609 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.110958133 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.108240012 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.108749135 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.109356204 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.110764302 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.109017517 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.108603003 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.108770716 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.111596933 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.123376739 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.123914679 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.109168957 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.109099735 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.114404006 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.109971281 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.107444848 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.110497386 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.111572983 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.111921344 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.115678423 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.110513113 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.116357875 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.12452608 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.111271864 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.114008408 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.111576341 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.116694921 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.11183937 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.109517175 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.110775427 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.114371952 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.123526916 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.110897384 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.119464536 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.13574388 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.124936558 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.111538292 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.110600877 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.109994759 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.111131819 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.112362092 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.111064715 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.110965532 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.110749374 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.111684253 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.111246574 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.114870896 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.111857374 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.111371134 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.110796901 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.111353524 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.110918624 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.108591099 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.110811265 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.11082959 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.111751996 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.111161887 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.112218763 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.112126467 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.122797654 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.119348384 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.112635537 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.112135226 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.10865279 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.115012001 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.113818499 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.120645783 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.118088452 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.112321918 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.111924803 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.113084586 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.111887177 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.110195751 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.111918091 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.111882159 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.111655551 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.110204079 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.123431122 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.119686852 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.116196491 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.111576241 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.113154846 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.112484732 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.112545866 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.111772316 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.112207511 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.113591672 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.113374331 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.115603687 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.112645619 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.113278946 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.115437937 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.118954465 seconds)
  done (took 660.752030512 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.111455213 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.111989821 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.110029991 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.111417009 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.111205657 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.111032881 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.11081549 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.110710907 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.112140807 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.110879287 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.110969817 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.111414213 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.111591904 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.11122117 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.112112325 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.11187161 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.111067852 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.112052961 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.111566202 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.111595648 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.11267048 seconds)
  done (took 24.389418947 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.114619749 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.112364311 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.112637176 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.11425175 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.111738415 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.114580592 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.112836061 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.114593669 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.113742368 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.110724567 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.114905151 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.113787279 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.111698163 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.112593542 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.112953952 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.114679885 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.11504161 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.112454431 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.114359114 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.113293062 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.115100412 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.113265646 seconds)
  done (took 25.546872794 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.115517318 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.114991473 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.113741121 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.112576018 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.115607168 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.112827561 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.115512458 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.115619621 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.115812567 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.115748756 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.114840371 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.115945581 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.12050563 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.119072447 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.116313148 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.115987689 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.259600815 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.115163553 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.115420219 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.115095578 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.113368279 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.121307571 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.113679683 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.113897592 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.114801954 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.116222481 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.116552365 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.116950192 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.116389601 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.11778501 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.120037975 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.116624981 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.116190106 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.118644899 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.115740918 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.117550052 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.120598703 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.1171921 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.114708875 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.116775528 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.125996901 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.133750909 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.116368072 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.12340586 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.117669492 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.117374511 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.121124196 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.12354051 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.116032876 seconds)
  done (took 55.938573724 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.1179245 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.118223352 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.115838889 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.118412843 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.118270305 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.117714134 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.117272506 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.117358474 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.115395225 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.115293894 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.118130466 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.116850436 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.116533577 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.119101164 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.118593503 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.116687659 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.117230947 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.116610975 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.115609967 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.116605229 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.116580153 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.119308265 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.119675968 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.11717376 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.119067366 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.116627931 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.116627068 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.1186771 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.116718132 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.116780874 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.119628477 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.119195673 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.12025042 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.118514535 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.116315564 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.119625634 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.120638588 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.117731982 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.119487082 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.117553397 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.119725314 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.119779134 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.120188675 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.120577015 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.117690176 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.118006404 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.117100612 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.118780258 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.118672378 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.12137389 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.12150209 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.118150437 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.120826111 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.117937002 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.120246491 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.121143545 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.118885755 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.118885839 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.120766172 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.119131295 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.118351824 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.121448879 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.119621188 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.121389404 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.121071151 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.118252091 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.119797485 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.120696064 seconds)
  done (took 77.115713285 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.120486852 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.121107326 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.121304034 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.121662579 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.121580052 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.12083851 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.122081675 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.121392926 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.121120306 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.121490086 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.121811422 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.12064071 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.121080277 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.121364938 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.121626409 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.121035548 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.121344141 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.121106994 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.120569537 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.121626685 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.120814104 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.120939592 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.120745866 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.120073219 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.121340508 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.121853597 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.121173869 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.121401219 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.120914849 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.121021795 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.121731497 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.120947975 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.12136569 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.122008684 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.122529426 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.12288533 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.121703165 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.121214567 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.121935726 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.121654271 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.12205991 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.121602506 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.122305752 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.122434939 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.122340591 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.121751729 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.121906195 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.12302253 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.122549099 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.122296375 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.122153514 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.122197246 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.122483164 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.122610194 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.122370142 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.121952276 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.121704626 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.123092543 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.122040155 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.122683216 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.122815475 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.122514736 seconds)
  done (took 70.6031903 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.123039003 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.123719523 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.120147391 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.121090785 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.124005583 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.121013875 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.12343763 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.123531606 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.123874403 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.124356281 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.122986772 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.121014125 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.12159515 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.124707987 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.1210675 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.121703768 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.120795888 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.12166268 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.124170798 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.121442605 seconds)
  done (took 23.507487552 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.121220159 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.124362354 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.122146259 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.121731434 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.124794938 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.12207156 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.124911531 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.12386604 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.122431733 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.124297104 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.124614743 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.12513379 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.120887668 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.121958998 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.124962591 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.122993871 seconds)
  done (took 19.032426366 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.123168873 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.125021659 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.125378399 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.124986445 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.1228919 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.123413213 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.124799827 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.122757365 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.123030058 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.126530612 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.125850788 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.125600708 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.124882586 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.12501661 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.123182582 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.126429485 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.122811599 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.122627752 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.126280955 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.124829223 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.124083347 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.123476981 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.125724938 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.126162726 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.12437186 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.12552009 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.123571634 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.123925672 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.123913792 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.12620588 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.124206749 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.125172715 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.123893753 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.124381348 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.126616074 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.124254742 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.125799113 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.12637699 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.126885803 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.126882536 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.127054358 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.124557765 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.126610348 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.127097158 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.123798656 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.126531499 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.124728491 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.124897948 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.125125135 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.125283191 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.127327598 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.126428383 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.127366337 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.127631367 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.12775834 seconds)
  done (took 62.944901229 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.127374992 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.128347569 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.124553741 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.128228311 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.128061874 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.125388721 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.127727288 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.124276762 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.124666486 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.127586333 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.126927652 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.128101336 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.126030886 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.128573578 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.126235715 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.128577406 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.125165045 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.125520747 seconds)
  done (took 21.344510806 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.126336613 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.126897641 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.128424606 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.124945758 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.125379849 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.128918813 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.126532914 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.128069254 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.128922215 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.126807251 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.126650467 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.128781474 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.129073625 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.128894562 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.126920042 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.127034961 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.129286631 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.129056097 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.126353515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.125670198 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.130045031 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.129669939 seconds)
  done (took 25.873008277 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.128933002 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.12822511 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.143344527 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.165481358 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.155613048 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.127391106 seconds)
  done (took 7.912554364 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127498104 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.129419258 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.127308801 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130195499 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.129484249 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.127013204 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127184794 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127640075 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.130700647 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128268727 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.128104551 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130026648 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130029274 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.127959034 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.130566532 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.130749378 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.128225836 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127586088 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.12885104 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.130285893 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.128075678 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.130903829 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.128432828 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128349442 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.127921109 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.128457435 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130256302 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.129176878 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.128402022 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.131451085 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.13059022 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.128508158 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131324438 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.129309675 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131519248 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131342119 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128931689 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131023737 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.131699643 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.128827057 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.131068194 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.132007431 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.132292958 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128616641 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.131761231 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.128638979 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.128951561 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.129047434 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.129194669 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.132782988 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.132661123 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.129186058 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.132345622 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.132340538 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.132224034 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131805852 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.130804829 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.129103581 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.132088005 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.129319557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.129614697 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.132349759 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.13064422 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.130582896 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.133012707 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.130412553 seconds)
  done (took 75.641577569 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.130311522 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.130023559 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.130646944 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.130689353 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.129422837 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130069271 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130518292 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.129717642 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130426557 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.1314648 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.134106566 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.131177922 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130901538 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130692211 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.130700404 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.130729379 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131609368 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.13149076 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130668408 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.133820914 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130853673 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130686583 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131155993 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131303994 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.13175747 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.135109621 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.131890536 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.130355586 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.132099023 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130930949 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131471583 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.131716863 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.132736485 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.131608064 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131780536 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131927083 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.132621283 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.131988482 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.132058219 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.134608348 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131048811 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.135137417 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.132051896 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.132087762 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.132583151 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.13169629 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.132793861 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.132165561 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.132067744 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.132842655 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.132986473 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.13260015 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.132880333 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.132194171 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.132589006 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.133334667 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.133993657 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.132632964 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.133526504 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.135810258 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.133085801 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.133058351 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.135989425 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.132773468 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.133860173 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.132811064 seconds)
  done (took 75.786537163 seconds)
done (took 1549.966978356 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.223809221 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.141295204 seconds)
  done (took 13.434969211 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.296813289 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.249202501 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.134272617 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.133458575 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.133809322 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.158505726 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.146864909 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.133929504 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.134321712 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.134344411 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.134738649 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.320458424 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.190652072 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.134883092 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.13455822 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.227255385 seconds)
  done (took 39.87106381 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.157390793 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.144309105 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.237621615 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.157844372 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.162344577 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.302925084 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.191271191 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.142903153 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.287385167 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.17601861 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.494131855 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.16221924 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.14236901 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.100870856 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.156247227 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.302818067 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.359603424 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.499346045 seconds)
  done (took 26.250022189 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.524438767 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.163570291 seconds)
  done (took 8.762521255 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.147287487 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.184087458 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.157851322 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.178579208 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.135308844 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.160109625 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.184153357 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.180705988 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.168042511 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.16854475 seconds)
  done (took 62.741388784 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.158230124 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.142214477 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.142275545 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.140042464 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.132625059 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.136100428 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.139864667 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.137142026 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.205730128 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.251242517 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.15461838 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.14852003 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.142619715 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.142352575 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.139203489 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.175114022 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.264939903 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.138909013 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.138782489 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.147253048 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.142708834 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.260430195 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.180042526 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.142228232 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.250230391 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.217025536 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.146463952 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.148737082 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.259927576 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.140416952 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.141157555 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.141287121 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.143789362 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.694334594 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.567769964 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.14930292 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.163237947 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.151417951 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.139771476 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.284331886 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.142318548 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.149736566 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.135856518 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.531735316 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.291156214 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.242455107 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.239713911 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.147005431 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.144003362 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.200464441 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.143729463 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.143861741 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.168945876 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.850834776 seconds)
  done (took 99.251383342 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.166721125 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.623041872 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.30330511 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.150909044 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.959759959 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.884402538 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.13896305 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.382320672 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.179562626 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.135505096 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.405356647 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.600209726 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.144373391 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.201321346 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.70608769 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.190363201 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.137359248 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.996336779 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.137570583 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.136211132 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.546029637 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.161064758 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.137208749 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.305391738 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.172843119 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.558930715 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.40965418 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.64847216 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.137589124 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.136284715 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.56571034 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.142560412 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.171950575 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.136809827 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.390578572 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.452397571 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.432184816 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.139264235 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.144203516 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.140247057 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.169957478 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.559275478 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.440727391 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.145741685 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.139770154 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.559884166 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.138384714 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.143584102 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.142199099 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.341605259 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.052686112 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.139140412 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.374732991 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.13858357 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.489092292 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.147467555 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.218398572 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.58612959 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.138387593 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.26254324 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.155722688 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.13757324 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.145053467 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.144373843 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.142413985 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.443891795 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.509539515 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.141632884 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.445597513 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.55921926 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.140130363 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.62000134 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.026413592 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.159598473 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.176984498 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.139094369 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.80726819 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.594667729 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.154922255 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.139196281 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.435089395 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.145386152 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.400642324 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.150346493 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.140883629 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.565327729 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.158057801 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.175728125 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.139751086 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.139824679 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.906963387 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.139810221 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.387559264 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.199774022 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.139091636 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.140594411 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.173062262 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.140854707 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.153983892 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.143287469 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.622781519 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.143721904 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.435285034 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.156849818 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.141669329 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.151344966 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.143150807 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.142514734 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.360911748 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.70406255 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.146471275 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.142522084 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.140534293 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.143274867 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.282063079 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.142895798 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.408969584 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.14345649 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.1447015 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.141138554 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.937144436 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.1814752 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.141675543 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.143924367 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.953479869 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.348037668 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.16283187 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.142016495 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.142175507 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.156363707 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.332167053 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.141164022 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.210089214 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.142739168 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.806878503 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.16406526 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.143649711 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.717272939 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.151379135 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.960909251 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.162862086 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.143569533 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.433379679 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.399495996 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.410453978 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.143062725 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.156604652 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793761943 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.154636749 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.273989964 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.158699659 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.178548089 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.338891263 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.290868308 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.1436527 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.698982044 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.145070829 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.355200475 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.144286499 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.445924358 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.594673053 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.146248552 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.147947571 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.81151755 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815021967 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.910902666 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.145811574 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.400629054 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.145076495 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.585965771 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.143676706 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.143173152 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.723773318 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.145645259 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.148573312 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.143224213 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.143123156 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.222411046 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.314958261 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.039198614 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.149332725 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.566362692 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.193278095 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.143782589 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.151408537 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.143906854 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.499642157 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.187888147 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.149648391 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.174049209 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.146814452 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.148735081 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.579166704 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.069452318 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.14784407 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.295709918 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.731739549 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.147410352 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.145764048 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.865869309 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.343162439 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.657128069 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.196872807 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.416545688 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.14955214 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.182229464 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.899959894 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.224592833 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.578783701 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.148981221 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.14781387 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.710304277 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.148218856 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.211568146 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.145653829 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.146603178 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.637954454 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.148567657 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.149003283 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.374478571 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.147882576 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.407914567 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.147568583 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.185539128 seconds)
  done (took 1067.589052543 seconds)
done (took 1318.971221727 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.14599525 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.146752453 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.135159994 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.150629521 seconds)
  done (took 25.666315813 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.156517557 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.153811619 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.157713011 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.153620996 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.155454037 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.152639916 seconds)
  done (took 8.018507657 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.224929018 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.148215709 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.150363288 seconds)
  done (took 18.612943018 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.344838027 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.289344044 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.483076612 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.093970728 seconds)
  done (took 9.300291728 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.153869539 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.155016392 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.154348829 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.156348385 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.158157376 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.236951106 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.157796363 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.157405427 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.158556993 seconds)
  done (took 11.577305667 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.682502363 seconds)
done (took 78.945156709 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.898927766 seconds)
    (2/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.257290818 seconds)
    (3/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.130632398 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.173573305 seconds)
    (5/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.208735692 seconds)
    (6/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.23185773 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.214065983 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.460532898 seconds)
    (9/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.213148259 seconds)
    (10/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.386008249 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.408425845 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.148006033 seconds)
    (13/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.484286113 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.160910234 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.193341209 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.094557311 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.190841601 seconds)
    (18/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.273483162 seconds)
    (19/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.479748112 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.159008877 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.755369387 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.177245649 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.725180079 seconds)
    (24/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.58634703 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.200933518 seconds)
    (26/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.405183548 seconds)
    (27/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.283728568 seconds)
    (28/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.152742683 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.208830745 seconds)
    (30/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.123452437 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.822786981 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.151650823 seconds)
    (33/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.329474507 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.484905776 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.853571498 seconds)
    (36/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.153741016 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.380434726 seconds)
    (38/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.146227493 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.296400783 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.175990428 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.47134772 seconds)
    (42/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.72044216 seconds)
    (43/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.145913985 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.167635301 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.975635266 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.148399591 seconds)
    (47/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.155840051 seconds)
    (48/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.165846966 seconds)
    (49/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.153635961 seconds)
    (50/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.464167944 seconds)
    (51/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.252973383 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.262212806 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.259718376 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.53669529 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.429127989 seconds)
    (56/309) benchmarking ("sort", BigInt, false)...
    done (took 6.153153115 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.236484793 seconds)
    (58/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.485918161 seconds)
    (59/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.170286355 seconds)
    (60/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.177095176 seconds)
    (61/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.600420535 seconds)
    (62/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.69340895 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.211237045 seconds)
    (64/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.659728831 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.278886083 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.296389093 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.152928407 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.275289349 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.460016947 seconds)
    (70/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.165052236 seconds)
    (71/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.648669039 seconds)
    (72/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.351734173 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.166402883 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.682151024 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.165985315 seconds)
    (76/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.18011597 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.170697134 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.137460469 seconds)
    (79/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.408175077 seconds)
    (80/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.826332709 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.586328143 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.743120024 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.612800138 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.280163119 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.390093917 seconds)
    (86/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.241274876 seconds)
    (87/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.221565422 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.270161319 seconds)
    (89/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.155753707 seconds)
    (90/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.502050442 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.138776549 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.143123687 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.13960093 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.316693054 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.153361133 seconds)
    (96/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.145016124 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.181495582 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.542410529 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.140548768 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.146782242 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.144513686 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.327153608 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.942283169 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.691459435 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.181848038 seconds)
    (106/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.420306334 seconds)
    (107/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.686060286 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.991774524 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.155621805 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.172557863 seconds)
    (111/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.310161477 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.451757792 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.191545284 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.353464728 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.155144445 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.15645657 seconds)
    (117/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.845560397 seconds)
    (118/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.290580235 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.154830905 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.182524132 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.605351045 seconds)
    (122/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.695571992 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.887526787 seconds)
    (124/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.254493333 seconds)
    (125/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.683117122 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.294241326 seconds)
    (127/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.273718302 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.282022604 seconds)
    (129/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.905037745 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.241803412 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 1.661906768 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.178917771 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.412516475 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.180696837 seconds)
    (135/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.373020817 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.828865932 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.841213034 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.42008776 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.182303996 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.478729284 seconds)
    (141/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.294098879 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.157084086 seconds)
    (143/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.182990514 seconds)
    (144/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.333141082 seconds)
    (145/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.412629465 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.261102141 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.428698943 seconds)
    (148/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.184382282 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.725975099 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.171171497 seconds)
    (151/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.510924707 seconds)
    (152/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.827158804 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.369610156 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.858494987 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.185112474 seconds)
    (156/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.873988376 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.158638128 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.145125737 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.283199656 seconds)
    (160/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.186104114 seconds)
    (161/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.156965961 seconds)
    (162/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.714213077 seconds)
    (163/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.177653695 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.179127339 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.241476872 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.228413655 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.262419222 seconds)
    (168/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.447929218 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.371124259 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.376455334 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.186058306 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.165944871 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.156596229 seconds)
    (174/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.238298398 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.205094189 seconds)
    (176/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.172396579 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.156472533 seconds)
    (178/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.133691765 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.153984971 seconds)
    (180/309) benchmarking ("sort", Float64, false)...
    done (took 5.445016816 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.403681846 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.253674571 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.229680905 seconds)
    (184/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.992094324 seconds)
    (185/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.209141501 seconds)
    (186/309) benchmarking ("sort", Int8, false)...
    done (took 4.196617786 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.185098982 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.225785601 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.20771154 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.167655852 seconds)
    (191/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.666920444 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.156899524 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.676444811 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.484183282 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.232954386 seconds)
    (196/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.33888076 seconds)
    (197/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.14562275 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.775754972 seconds)
    (199/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.167873885 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.24407488 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.214304566 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.705799569 seconds)
    (203/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.207824008 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.510190834 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.540573608 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.56392918 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.013890872 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.387221245 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.795126458 seconds)
    (210/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.488777622 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.159627865 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.361757262 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.615361429 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.963706234 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.928825825 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.371252525 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.164431199 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.558637651 seconds)
    (219/309) benchmarking ("sort", Float32, false)...
    done (took 5.135529885 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.161221329 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.354048703 seconds)
    (222/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.889305486 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.915006489 seconds)
    (224/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.348903213 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.183582432 seconds)
    (226/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.656234247 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.543755002 seconds)
    (228/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.170981355 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.200675619 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.402350479 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.43860921 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.430784011 seconds)
    (233/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.224433903 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.159067015 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.172661396 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.380636093 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.259866441 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.976620386 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.175643811 seconds)
    (240/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.403191273 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.295555729 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.58562251 seconds)
    (243/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.341143888 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.882861478 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.153429683 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.929189754 seconds)
    (247/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.282559967 seconds)
    (248/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.153870034 seconds)
    (249/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.147031766 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.324559482 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.448693855 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.449952193 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.53204985 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.736811017 seconds)
    (255/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.298560106 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.355816135 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.946806463 seconds)
    (258/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.703606888 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.987827464 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.175137038 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.19945497 seconds)
    (262/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.674746081 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.26800842 seconds)
    (264/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.314948349 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.547112531 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.990308009 seconds)
    (267/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.279803093 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.364131613 seconds)
    (269/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.321797005 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.81918652 seconds)
    (271/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.750626361 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.431940147 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.211944088 seconds)
    (274/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.149635146 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.321726484 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.240394228 seconds)
    (277/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.274533144 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.205765077 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.01365834 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.984455471 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.261850142 seconds)
    (282/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.244752381 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.163377003 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.560469063 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.256273391 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.244632869 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.273792633 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.554401807 seconds)
    (289/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.670639284 seconds)
    (290/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.24899093 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.933082069 seconds)
    (292/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.163722521 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.164723891 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.718096849 seconds)
    (295/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.611269251 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.44794115 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.220140505 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.700861032 seconds)
    (299/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.845649465 seconds)
    (300/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.149260168 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.189878805 seconds)
    (302/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.843672406 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.257504786 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.202118848 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.191970779 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.164727141 seconds)
    (307/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.974074205 seconds)
    (308/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.476574861 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.859044928 seconds)
  done (took 852.400316063 seconds)
done (took 853.492182438 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.195544004 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.189211369 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.173899056 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.195210113 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.285292126 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.210368624 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.183980776 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.176144891 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.221701196 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.22361757 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.172578551 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.211133672 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.175748949 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.17407156 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.173435108 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.189550141 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.111551062 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.175117533 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.189634065 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.183620855 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.190924742 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.17410746 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.223985216 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.212415109 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.178021116 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.177999216 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.178830454 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.194021584 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.286212448 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.178070528 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.178348369 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.186682436 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.110738209 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.173546867 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.169336861 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.194774348 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.186634229 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.184910441 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.178306327 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.207002834 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.470109968 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.17451535 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.177450336 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.175064473 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.175977061 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.179542474 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.1770266 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.182238004 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.188669585 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.189619106 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.46095869 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.191076118 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.178895343 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.176639307 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.186681565 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.176376309 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.178408263 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.191669694 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.194917288 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.191304723 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.105967164 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.181282373 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.178952287 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.192976534 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.183640896 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.501098178 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.171876808 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.182029273 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.475982235 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.18042139 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.503550228 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.185303831 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.178775889 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.191538065 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.209381211 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.117623874 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.172340381 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.176496813 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.185650321 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.175091222 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.187569151 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.190632224 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.182330068 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.178007856 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.191940524 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.215356579 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.1868294 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.179601301 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.186955018 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.198381662 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.185171915 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.189354114 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.181856299 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.174217902 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.188271665 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.182517549 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.181629288 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.18252476 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.183410004 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.189888945 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.476022835 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.195190995 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.175192582 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.174515865 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.177805652 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.19214941 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.476515573 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.179293975 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.201164747 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.226341474 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.180688326 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.11169133 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.182553923 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.194611804 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.18774426 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.182151242 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.175370371 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.113566814 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.49156342 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.197483707 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.180563712 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.17806035 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.195192769 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.180755132 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.176499882 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.122663796 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.180698685 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.193330031 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.301120643 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.190268765 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.212215 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.178895211 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.183539903 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.217616021 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.197287401 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.211454399 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.184181774 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.194952652 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.196800317 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.177601825 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.191731769 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.190215673 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.182158025 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.18622448 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.174747459 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.213623426 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.193737038 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.192735551 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.201782977 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.302069829 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.178141078 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.114982407 seconds)
done (took 199.758007904 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.241898074 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.178425075 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.273602547 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.178583761 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.276054024 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.274055048 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.174114401 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.174938628 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.17555235 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.593785271 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.175875787 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.175928781 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.178474219 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.17670665 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.25970395 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.178263187 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.175770848 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.559298673 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.179373947 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.271141689 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.178550654 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.175733984 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.178410468 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.616116201 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.178071064 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.179321623 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.270709497 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.178607211 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.587293117 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.179409619 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.177267958 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.587191574 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.290045702 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.195222152 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.189045633 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.185087485 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.278154 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.192766504 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.260831176 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.26050934 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.27673815 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.21789343 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.17486088 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.173136325 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.181140254 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.181705291 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.177139266 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.207767106 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.176063423 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.178351586 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.560134533 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.190757101 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.178807663 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.178569844 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.177922868 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.208980413 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.178737184 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.180810863 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.291490241 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.182047139 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.24379838 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.617896583 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.597308046 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.180304219 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.182762243 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.178198386 seconds)
  done (took 138.59633887 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.276918737 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.253264103 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.316470292 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.181261887 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.231479993 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.318422161 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.182005885 seconds)
  done (took 9.874352882 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.185929387 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.180835298 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.22988892 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.229774118 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.180836286 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.326911966 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.181954042 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.19262922 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.178734599 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.233495355 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.182609871 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.182458621 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.188284872 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.174710656 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.228894288 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.192526624 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.296834491 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.182573737 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.182540876 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.331739749 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.178837782 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.188662861 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.234094764 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.193185232 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.182799091 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.187894247 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.758893434 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.182411394 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.180543553 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.181826758 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.179497029 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.221638153 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.18272143 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.182068329 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.180919078 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298871321 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.182117739 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.180547547 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.182322342 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.181874267 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.182797512 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.182921957 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.18309059 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.180799986 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.183021328 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.206285567 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.182779606 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.184242984 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.184558037 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.18359606 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.234330626 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.184161582 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.181032202 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.182331301 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.238825286 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.189297469 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.183226624 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.181042701 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.184775156 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.180906048 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.334413327 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.230469505 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.183526081 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.230616723 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.18403254 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.184414269 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.184770773 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.184953947 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.238395118 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.183527145 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.23141007 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.181744299 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.33848706 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.205972292 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.185412415 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.187200321 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.185747174 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.18518903 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.178980246 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.19030401 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.181404739 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.185653881 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.189734652 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.182183066 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.182862799 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.286840203 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.2940774 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.1831628 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.197534436 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.191925967 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.182330218 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.238296807 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.184952332 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.18255263 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.237293821 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.299560438 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.238736932 seconds)
  done (took 138.466255198 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.190781585 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.194321993 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.187420029 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.201514022 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.186387566 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.185908872 seconds)
  done (took 8.265475758 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.188109079 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.186738149 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.186501875 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.185696272 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.186465863 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.187258559 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.185553196 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.187389428 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.190469129 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.185729364 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.1871871 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.187951479 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.187498013 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.187062752 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.18752475 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.186747745 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.188221895 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.183969691 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.186340083 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.187306905 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.284438738 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.188200928 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.189048381 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.188727355 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.190391297 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.187485133 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.195213843 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.188244618 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.187691713 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.195300406 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.190896139 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.189756847 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.188493543 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.193167877 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.191808062 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.189582825 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.190704202 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.189680282 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.185094285 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.189017944 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.189800186 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.188698961 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.187974793 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.18980079 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.189550373 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.192799909 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.19270226 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.195862542 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.189557709 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.190096463 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.19006541 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.188839303 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.19026165 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.189729127 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.190634559 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.193699742 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.19360237 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.189834118 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.189829492 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.190189235 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.190207611 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.189841054 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.190852883 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.193114753 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.198068841 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.190261682 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.189971317 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.193828857 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.190123084 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.189461398 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.190398551 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.187535925 seconds)
  done (took 87.861720098 seconds)
done (took 384.175431131 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.608673331 seconds)
  done (took 7.731486454 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.312739075 seconds)
  done (took 7.437447289 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.166594213 seconds)
  done (took 20.292001895 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.226902993 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.241887709 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.199563921 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.200771299 seconds)
  done (took 25.992745344 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.340929255 seconds)
  done (took 7.464468019 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.182130061 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.182853879 seconds)
  done (took 13.490152231 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.2920256 seconds)
  done (took 7.415971847 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.299478386 seconds)
  done (took 7.422930696 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.207766005 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.210035048 seconds)
  done (took 13.780812114 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.170567711 seconds)
  done (took 7.296826079 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.831399542 seconds)
  done (took 7.958461782 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.186920288 seconds)
  done (took 7.31321829 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.21722811 seconds)
  done (took 7.343562377 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.637737214 seconds)
  done (took 8.763142251 seconds)
done (took 150.826679441 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.184264786 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.186812263 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.188834536 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.187449899 seconds)
  done (took 25.873380456 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.226253717 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.226290073 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.227725553 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.237217685 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.229132166 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.227060154 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.218316447 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.219140269 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.237456009 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.22930936 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.22873497 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.228862225 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.227560811 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.219101041 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.228639199 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.229255798 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.237850985 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.228974716 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.220087507 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.233569303 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.194701865 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.237909119 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.230584077 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.19451155 seconds)
  done (took 30.544562958 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.39253609 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.263413571 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.346157185 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.245516577 seconds)
  done (took 6.3751947 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.245838951 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.246959299 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.258949313 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.29803471 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.32760821 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.256513905 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.221585381 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.215508165 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.202832272 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.247657703 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.32269142 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.26433947 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.336101275 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.195040914 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.401395214 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.193944063 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.194469745 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.247428347 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.302200956 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.314956894 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.195348453 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.246538673 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.251405801 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.263792754 seconds)
  done (took 31.378718362 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.19380399 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.203061869 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.200864648 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.194520015 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.194553797 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.194202867 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.200451671 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.196298154 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.215701386 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.195421266 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.194322536 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.194537882 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.194524602 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.194443305 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.194747714 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.206929421 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.208626625 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.195490546 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.198532601 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.201801694 seconds)
  done (took 25.102099071 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.189757022 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.138574834 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.540622353 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.444100588 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.188197508 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.190775367 seconds)
  done (took 27.821114399 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.257061718 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.38560384 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.19818899 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.513316036 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.599342609 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.19786996 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.196208572 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.418235832 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.687494349 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.681485773 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.247092698 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.259831672 seconds)
  done (took 17.771685292 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.193814532 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.193365428 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.194117725 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.208872108 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.246500149 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.203398955 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.204301688 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.191208635 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.248778822 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.253420782 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.204566576 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.247550779 seconds)
  done (took 35.720522393 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.277876208 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235734989 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.074441291 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.892904545 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.913003603 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.402966353 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.929129779 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604899042 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.196925747 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.466571141 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.009420719 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.29422021 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.447978681 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2036493 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.194673766 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.148550039 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420158833 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643052687 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.196306776 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.939515502 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.219585184 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.205033656 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.023027359 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.220546469 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.404091205 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.169304818 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.452987077 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.967616599 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452592839 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.205978244 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.20373796 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.192789135 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46661079 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832771432 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.289090091 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.203327607 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.870174966 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.824988585 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.188323905 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.014267085 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.740837459 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.198200418 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.203704467 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.193912414 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.127281602 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.197384845 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615771589 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.200050148 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.905686431 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.193518579 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.205454878 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.288167028 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.197526166 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.764578543 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216760886 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.200340847 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.192479858 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.201683362 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.761651114 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.376831563 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.201993882 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.131315911 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.542900084 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.032464145 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765798295 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.296786405 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.197534304 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.198759389 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.129453656 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.008951634 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.212681194 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341539004 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.233718766 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.844688602 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837235101 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.014041605 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.139517423 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713049185 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.198787684 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.133070146 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.42299428 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.970607466 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.131089725 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.151202482 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.129644305 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858404073 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.206192503 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.539717043 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.205784292 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606777169 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.209791919 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.21683761 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.219348696 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.418831712 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.080203782 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.195796221 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.785740535 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336926797 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.217139768 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607985743 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132348427 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.200686045 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453065589 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.4076644 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.206412508 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.152034809 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381833701 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.199741955 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.214606579 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.20334628 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.209570001 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.721624074 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.212158479 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.409829368 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.216884101 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.973171448 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897126062 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.199731954 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.299452806 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.024535631 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.440420615 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.92296286 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.084076136 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.26517793 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.202811832 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.198609505 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.039764181 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.05019786 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.356879588 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.200464418 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.198560375 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.211289696 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.198627247 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.144630963 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.196179078 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.052651648 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.980239804 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.422128625 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.207540644 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475265158 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.131715769 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345771122 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.208290297 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.420879272 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.325355896 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.19779196 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457609835 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.209959286 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.213840926 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.2125717 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.216970535 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.295782768 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.221787921 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.199561796 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.458037418 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.203119461 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.202859798 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.016380403 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.982233277 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.207817667 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.206054632 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.009346265 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728991763 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179190289 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.203600323 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089491535 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.21422703 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.266604636 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.205780783 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.209818302 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.851071636 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.974599882 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.206642081 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.201157595 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425628238 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.211257144 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.930813968 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281125074 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.377488318 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.73437878 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.214585809 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.134266627 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.911483877 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.893370109 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.200949368 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.398562658 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.20073099 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.210920454 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.211987963 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.682491764 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.736144738 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.201785833 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.934299231 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.210116405 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.212121882 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.206309065 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.202169812 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.831245315 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.41074066 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.21150273 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.214899734 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344477211 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.215744319 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.13497345 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.719167765 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.205817504 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.202336736 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.97943843 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.237492182 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.979574561 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659072589 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461965142 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.201091471 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.215572852 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.115943656 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.232174421 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.203213871 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.827772389 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.22725989 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.212436069 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.211596389 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.213020727 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.999554432 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.643338002 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.769767622 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866857706 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.684469887 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072042684 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.212398913 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.103194222 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.61874425 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.139799198 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.859424242 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376986434 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619960347 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.150482494 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383723079 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.329745051 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900298151 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.215362427 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431206103 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071057806 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.830323981 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.229031241 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.415202764 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.239319208 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.203467122 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.135918696 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.490531099 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417520174 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.801597188 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.283949605 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61796901 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.838752895 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.997495713 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.204462454 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.856978461 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.597751838 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.7486977 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.59174212 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.204196225 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.079839626 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674493321 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.208284419 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.729636672 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779252679 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.206788217 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.390123449 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.14407529 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.216395276 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.215595941 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.204827633 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.343008722 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.208385593 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.462082072 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.215469052 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.139767927 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.206862133 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686462309 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.063968173 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.212037438 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.205999814 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911743402 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.215897819 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469116674 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.207714728 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.829982694 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.211599026 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.140857186 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.140272027 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.898558342 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.21549481 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180701919 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.66109316 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.535932281 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.180500669 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.225982396 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058066425 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.462217964 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.220395256 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.739164367 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433031678 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.20561946 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.228486263 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.308076194 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.890789132 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.206451117 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.102269519 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.440957659 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019754066 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.430722637 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.105657842 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.113253075 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.206792218 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.418299213 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.106992914 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.082888953 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443997341 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.919052815 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.207376373 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8550188 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.232423668 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.075635177 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.230429886 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.557596112 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.214926943 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.276772909 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.218319214 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.21732849 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.217345703 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592629316 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.079384033 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.222024973 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.220759687 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.301008409 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.436798475 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.820848505 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.981703187 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741492016 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884036873 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.741870451 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.220854418 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.207223928 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.209796984 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.141519539 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355757444 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.732263302 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.480042435 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337869074 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.664322534 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.231653883 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.861483095 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.229169544 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421045833 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.482119437 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.078281487 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.207042198 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.869213996 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.10170003 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.219530263 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.419308953 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661964168 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726095634 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319551796 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.209434153 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637820245 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484133236 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.29946465 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.20875408 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.797897878 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.227136179 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.857835574 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.216265982 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.081187063 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359828205 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.218461111 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851767657 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.218118524 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.363897621 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.982331654 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.041981096 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.466950788 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609516689 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.220309151 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.742163373 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.86824593 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.472158736 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.279273903 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.221157545 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.319466308 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354897692 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.207817263 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.105513508 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.20973636 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05617712 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.919099914 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.219569414 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741506789 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.47553491 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.207992542 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.206920817 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.232485571 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.2187868 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.433589134 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914127569 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.436972052 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.219113431 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.219418439 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.780121818 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.744977576 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.223919537 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.144855077 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.214269526 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432146538 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.447320731 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.235041976 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.664412836 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.921495975 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729824532 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.184945326 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.233405492 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.220345917 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.856469486 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.745345398 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.84191675 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662451557 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.872180676 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.218424296 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486682294 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.216451115 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.21754928 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.489416582 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.215514395 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.21778725 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.226082451 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.741883747 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90809389 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.229029984 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.995489298 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.148804009 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.437370231 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.833104681 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.149324906 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.21284629 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.613224275 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.229635642 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340610018 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.224815209 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.20926729 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.228222648 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.959273628 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496812195 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.218458055 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.211530391 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.19027286 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.214920957 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.222777757 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427427196 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2190295 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.878119611 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.562610312 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.468239674 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.226503773 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.199026624 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.216856328 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.212703207 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.93056874 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.182639733 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.710215975 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728195818 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.215762974 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.225013064 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.217085769 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.42955228 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425775296 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.10309903 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.238368764 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.219609366 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.229912437 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.275038307 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.981518518 seconds)
  done (took 1516.781949474 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.232896721 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.217669315 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.220677854 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.22130815 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.247808769 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.375090909 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.244396903 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.265805344 seconds)
  done (took 51.179063929 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.216629134 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.25035037 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.223630513 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.216729646 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.223407487 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.225107881 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.638801219 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.218751683 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.223991482 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.224986326 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.216355679 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.217025514 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.824584717 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.227065101 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.214176381 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.214163091 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.222957301 seconds)
  done (took 62.953269317 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.214826095 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.361428682 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.28500783 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.23075862 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.752953192 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.233122592 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.27483632 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.260649603 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.217059158 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.49618801 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.869361553 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.221492486 seconds)
  done (took 81.573668842 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.223308571 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.22278845 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.22270821 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.223322891 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.22200299 seconds)
  done (took 7.26961754 seconds)
done (took 1921.471572663 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.459998689 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.833175619 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.815559117 seconds)
  done (took 4.803365337 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.365541048 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.41510322 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.533263448 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.541728926 seconds)
  done (took 7.012886201 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.544987217 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.609553303 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.406959931 seconds)
  done (took 5.718782822 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.484335713 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.224969537 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.339303987 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.217314723 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.217920296 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.218745593 seconds)
  done (took 19.812622779 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.222268967 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.224865446 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.222257167 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.224667804 seconds)
  done (took 6.051788307 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.204102661 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.922663782 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.209154211 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.221809441 seconds)
  done (took 17.716038919 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.982757309 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.984849928 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.96668655 seconds)
  done (took 7.092096515 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.218531415 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.064946037 seconds)
  done (took 9.442617098 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.500188371 seconds)
  done (took 2.659200969 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.353945813 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.5480179 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.204368802 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.145017849 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.238006204 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.596571126 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.660273148 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.290953934 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.09098935 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.124973755 seconds)
  done (took 25.412400334 seconds)
done (took 118.386009007 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.725749261 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.466153725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.418387804 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.697354016 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.444329399 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.419483214 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.434216674 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.667396023 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.20371281 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.197565715 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.69602535 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.444100116 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.379640502 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.466765706 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.380704182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.464471843 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.444034889 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.761873137 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.381613049 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.580003507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.439497816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.330435528 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.529238625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.349891719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.445049885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.372994648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.927319926 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.467191352 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.554523234 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.940546425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.374158961 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.751935631 seconds)
  done (took 185.316168704 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.220635383 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.22403701 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.220684776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.234250398 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.220803616 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.222567421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.235359185 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.233432916 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.246234235 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.223690438 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.221707094 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.222553452 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.233847215 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.221762885 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.222457825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.235920248 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.230864918 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.221087748 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.223577681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.220789626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.223956065 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.222202936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.222060225 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.222417095 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.247369847 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.223599646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.223726994 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.234520044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.222769779 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.222430163 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.224348679 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.236661866 seconds)
  done (took 200.424378923 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.22245468 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.230914635 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.223018033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.222662828 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.222709893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.223495115 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.225168601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.222757502 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.234825606 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.234144554 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.216662794 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.216634899 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.215372087 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.216281929 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.21648537 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.212572652 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.223778295 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.212275341 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.216991588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.21290288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.215255123 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.212483349 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.212412191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.223525076 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.218306046 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.21284169 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.227037918 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.212984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.218896088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.219304667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.21437886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.21318643 seconds)
  done (took 200.185815537 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.414065925 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.219865507 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.220813648 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.176992406 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.221647438 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.220614336 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.215696723 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.410911772 seconds)
  done (took 13.253846708 seconds)
done (took 600.338326529 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.421466695 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.151735673 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.411967185 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.241891558 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.928213032 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.243726983 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.24246003 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.394012662 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.127751697 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.396485572 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.400920636 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.239584527 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.536083005 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.240763217 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.476546785 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.332184654 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.052972697 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.171318034 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.537488221 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.682846292 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.483379925 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.659196354 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.394419841 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.097552614 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.537684976 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.615981752 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.80337881 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.062878518 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.243062352 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.540675668 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.761470868 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.158215993 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.293128809 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.277334865 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.331843373 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.314565776 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.031571999 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.274879821 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.419692465 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.431539445 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.707144916 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.954524518 seconds)
  done (took 84.779500298 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.212420213 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.212482996 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.21122829 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.212398869 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.213380117 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.212676448 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.211912576 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.211811001 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.212890661 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.21210366 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.212814293 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.212932251 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.212546521 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.213574255 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.211631476 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.212255811 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.212726752 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.214789923 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.212053454 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.212661405 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.21314793 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.212027051 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.213001191 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.212976658 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.213554578 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.213142415 seconds)
  done (took 32.688175919 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.225172045 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.467117996 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.61094897 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.231539828 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.225432093 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.230039605 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.295291145 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.228164957 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.229165398 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.229580528 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.387192701 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.229371214 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.259445575 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.638246725 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.230455762 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.228274872 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.228188846 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.227154247 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.47543609 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.237246663 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.315306217 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.228906191 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.296937344 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.238434067 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.247790632 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.228700415 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.233105904 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.778161981 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.230853278 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.388454321 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.909902091 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.296281655 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.713933944 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.623257232 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.920180825 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.232214902 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.230182711 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.393053345 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.230829802 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.229476842 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.297795055 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.23114286 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.62205374 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.840560005 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.243714034 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.22932232 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.788233501 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.39127373 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.446577877 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.239686752 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.671445322 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.233650527 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.23180602 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.230184052 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.446936333 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.23221528 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.229095179 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.792623209 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.248259623 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.297730976 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.231859242 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.230032738 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.481568356 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.229557556 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.470937055 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.231556135 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.238806781 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.230918947 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.624956571 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.233989569 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.864829076 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.244092575 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.229909687 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.389103907 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.472717101 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.822362694 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.232998875 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.484817686 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.725737229 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.297751295 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.23446509 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.7651122 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.301488385 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.234270027 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.233896771 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.233394025 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.230713686 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.283420945 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.297565531 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.783137641 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.850065479 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.810997759 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.316995347 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.238682986 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.231318023 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.797013398 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.247122353 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.231625354 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.622881522 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.85806991 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.245346538 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.24011129 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.847853707 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.247446205 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.301748375 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.236868785 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.628919581 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.233018288 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.283746274 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.232075094 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.239564936 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.2359034 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.301813438 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.23602988 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.23305335 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.833550484 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.412895662 seconds)
  done (took 162.946949436 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.237613072 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.225574957 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.234246033 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.225807292 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.225173902 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.230913858 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.225902955 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.226326424 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.231320804 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.225068993 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.226128913 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.225572292 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.228001068 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.2346208 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.236758766 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.23374544 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.888534229 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.228362119 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.227724427 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.226743641 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.002564961 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.2285809 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.225443622 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.226879449 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.22774889 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.228126931 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.232706436 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.229361717 seconds)
  done (took 149.0112179 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.233764497 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.735348674 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.234798579 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.350504981 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.252698223 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.23150113 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.34944496 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.284059046 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.234863455 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.231382093 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.231859526 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.503380933 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.235474106 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.695688988 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.399740024 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.351939007 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.693561502 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.23610462 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.231780018 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.233520653 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.35333755 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.240567491 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.504362939 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.739945035 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.235556884 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.741674539 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.223676434 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.234175822 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.233079426 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.743036083 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.23307693 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.506040349 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.302542507 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.286751859 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.743141246 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.696537023 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.695835285 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.363311307 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.234943831 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.232681066 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.233323395 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.22354636 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.742725656 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.236480184 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.234991203 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.737634725 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.249893794 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.23704244 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.243655671 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.233895848 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.287561386 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.287808726 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.509395417 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.74922875 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.302844845 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.255334392 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.351957893 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.61476032 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.239018602 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.69653707 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.224056692 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.747783463 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.23916554 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.225143986 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.23654154 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.241344096 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.369025514 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.35463631 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.698277366 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.237998953 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.702206607 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.37272652 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.23464844 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.234984484 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.238105132 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.748756434 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.704846938 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.371176624 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.359057528 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.823246674 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.228921355 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.235576339 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.225767476 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.305883835 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.236431695 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.748967129 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.704146194 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.239818353 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.238904642 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.238559068 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.238510619 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.392841703 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.750123285 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.307507755 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.698710741 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.524403697 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.510685322 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.240412863 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.290930956 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.237797384 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.511908968 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.240033468 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.288993866 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.679713692 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.51345139 seconds)
  done (took 147.526853236 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.461468678 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.364403868 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.32290744 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.342500426 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.791937053 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.769250608 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.415914037 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.354834843 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.336118521 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.467688658 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.301593154 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.328766295 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.404883067 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.303879046 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.933024895 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.308465991 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.324273342 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.357253411 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.339559888 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.208288568 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.822734359 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.504696042 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.394119811 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.079471128 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.32332031 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.982808448 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.756302063 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.780618542 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.397216782 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.475719695 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.756669598 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.296297995 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.124966961 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.850601172 seconds)
  done (took 60.155216565 seconds)
done (took 638.261396851 seconds)
SAVING RESULT...
DONE!
