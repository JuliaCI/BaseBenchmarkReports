cset: moving following pidspec: 23104
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.838644935 seconds)
loading group "shootout"... done (took 1.086847221 seconds)
loading group "string"... done (took 0.442697722 seconds)
loading group "linalg"... done (took 8.178800333 seconds)
loading group "parallel"... done (took 0.16703167 seconds)
loading group "find"... done (took 1.351944241 seconds)
loading group "tuple"... done (took 1.976175986 seconds)
loading group "union"... done (took 13.493277065 seconds)
loading group "dates"... done (took 1.418764358 seconds)
loading group "micro"... done (took 0.213415047 seconds)
loading group "simd"... done (took 4.61017227 seconds)
loading group "io"... done (took 1.045260839 seconds)
loading group "random"... done (took 9.230177899 seconds)
loading group "problem"... done (took 1.506439717 seconds)
loading group "array"... done (took 20.494168724 seconds)
loading group "misc"... done (took 1.549415605 seconds)
loading group "scalar"... done (took 41.632622492 seconds)
loading group "sort"... done (took 3.274648076 seconds)
loading group "sparse"... done (took 12.324343419 seconds)
loading group "collection"... done (took 17.859578634 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528634939 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124354813 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.129283239 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122074535 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.212160097 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.121712368 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130019088 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086381067 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.85079165 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.136018177 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11622407 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435137975 seconds)
done (took 5.341446003 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.168913663 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093890281 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083376226 seconds)
  done (took 1.286816372 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06473721 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.137261218 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066695763 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066910328 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067011644 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065929847 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066019072 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065873215 seconds)
  done (took 1.642521267 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072580047 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067571078 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065574036 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067479124 seconds)
  done (took 1.38383254 seconds)
done (took 5.675419608 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.243222563 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.102143859 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.291921168 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.445953407 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.612181698 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.09406066 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074847054 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.070566685 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.132489945 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317770047 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101908585 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.180564749 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092299912 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.169719368 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.032927591 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.121737108 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086136424 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.12497057 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095904932 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132423442 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.392837231 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.079020348 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.075764609 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.070633756 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068203742 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.651726133 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655772204 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.119738272 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082927671 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160347103 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115453879 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.636542181 seconds)
  done (took 10.777893718 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094429972 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.091051955 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069382802 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124254266 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094330794 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070290586 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075207447 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067366742 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088418352 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.124364655 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090340375 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.098848441 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066875413 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072968813 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.07440949 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197388491 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081353854 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081366176 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067968494 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080890619 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106275863 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079631705 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07868207 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078326339 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130151113 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.171461362 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102306253 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096707079 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064510235 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081404935 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115017551 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126145707 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067445445 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065235645 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120759239 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095811402 seconds)
  done (took 4.552952659 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.97455505 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.094497259 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.100889817 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.634217499 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064812064 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.152052804 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242002153 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.07326007 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.363087457 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.150790104 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.142089784 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.148488929 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.118795865 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069859545 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.255376022 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.118671807 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.53364204 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068392584 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066809062 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066017516 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068385689 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068418411 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063521738 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069582265 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095731065 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088719081 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.165711773 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.96055941 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.295137617 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.071216755 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164827696 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084870037 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.356067892 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070823617 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083669134 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.452494069 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.124647716 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066356321 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.171006028 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.118484974 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06565779 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.122739776 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079253799 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.070350406 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069420648 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069031869 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071732748 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079382403 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101942895 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068357135 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065528451 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065353779 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085082228 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171581185 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066169866 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067027311 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067618387 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149445088 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065108101 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.143777141 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065074989 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069216637 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.10299577 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069212419 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087314389 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.096275095 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.330177618 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.032602096 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.069058887 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.961360427 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077000416 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066803504 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070779023 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067077505 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.0684911 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064426939 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067465926 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073148724 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070889738 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069626649 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109175926 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067494151 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070645891 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067780999 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07304318 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097275349 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066338211 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.501602302 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096144953 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065246861 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074897493 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105034021 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066181181 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069734602 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066839002 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06793063 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067102047 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067403478 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069734685 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.097165687 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070641171 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113364599 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.142810479 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068478933 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064408012 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067613953 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.0752978 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070394031 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070382933 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068208032 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069252395 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069149274 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065454497 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108414455 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06742871 seconds)
  done (took 21.894950187 seconds)
done (took 39.309842835 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.254474302 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080215713 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079211862 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079451195 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079272728 seconds)
  done (took 1.780293739 seconds)
done (took 2.97755724 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.110272706 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063935826 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100880651 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.100036976 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.06451427 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064123928 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.099328261 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064127786 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098911814 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100424943 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.101822041 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.102012454 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.064755314 seconds)
  done (took 2.338933285 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.071059406 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081762081 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083853369 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062078799 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071877403 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082619388 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061648374 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.08121247 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086904526 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082039053 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082201397 seconds)
  done (took 2.041313881 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.072798344 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081645196 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083555344 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062177101 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073706636 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082714872 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.06200762 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.08138243 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084360811 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082206566 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081787201 seconds)
  done (took 2.033861971 seconds)
done (took 7.600532471 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.066482277 seconds)
  done (took 1.234109626 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.514891605 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.204205944 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066623403 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084593907 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191692049 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.092734582 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.200599756 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071944242 seconds)
  done (took 7.769795597 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102885314 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068890308 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068146337 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068517804 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067793682 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06749976 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068541312 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0677142 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067698554 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069587287 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067955747 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068197329 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069646485 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067847623 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068414118 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.06901104 seconds)
  done (took 2.404369633 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099877024 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09820829 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072477808 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072651653 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071100967 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071306057 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073251185 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072330952 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069267448 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071033211 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072868965 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071813202 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070727331 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062155598 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073207437 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073213079 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069532806 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072546585 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073479259 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073834321 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.0730213 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062227429 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071162267 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072211218 seconds)
  done (took 3.060703072 seconds)
done (took 15.655134602 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.180981717 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0746892 seconds)
  done (took 1.43126771 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.069140909 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069415694 seconds)
  done (took 1.33231164 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074581832 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06140202 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.079253933 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070113111 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061842047 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061220183 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077406688 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061723791 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061520014 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061892941 seconds)
  done (took 1.864131814 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064117671 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069543416 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066787675 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068575827 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066887227 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062552604 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065259954 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062299238 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06897755 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061618825 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065816961 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081646018 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065515314 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083267363 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065127309 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066167782 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067745857 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064949605 seconds)
  done (took 2.414806505 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062297607 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06254891 seconds)
  done (took 1.33075298 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065710566 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062175386 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064692353 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064768113 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061908387 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060950214 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06191508 seconds)
  done (took 1.637586833 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.415937571 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121313676 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338635877 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068801833 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076750988 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252978526 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063673797 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068792986 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069159665 seconds)
  done (took 2.715452361 seconds)
done (took 13.933776376 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083054245 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.178620732 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.089180188 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415036129 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092359348 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067066513 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112670856 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.166607153 seconds)
done (took 2.428079069 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.23043736 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.329883199 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.905765718 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.070165325 seconds)
  done (took 3.512894724 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336390803 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079469474 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078379023 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068037954 seconds)
  done (took 1.777705724 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066041981 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072397259 seconds)
  done (took 1.346323052 seconds)
done (took 8.087454361 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065206258 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06423344 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064293129 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093292943 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06364408 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064093839 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064240761 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063523134 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06341514 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.063364755 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.063443484 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063732925 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06392364 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0641351 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063527124 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063877523 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064229618 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063906243 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063861674 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063891257 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064408365 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063808437 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064311799 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064103516 seconds)
  done (took 2.800520025 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080710796 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066629569 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067042804 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.0666064 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068005842 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066930362 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066655465 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065956169 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066782546 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065188464 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067198957 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067403493 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.0651934 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067357245 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065714467 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067199722 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066938818 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065827126 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065317284 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067118431 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066766543 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065514053 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067262193 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067071684 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067577187 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067052082 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065932887 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066088547 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067518923 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067368384 seconds)
  done (took 3.238252561 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065585794 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060196817 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061559325 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070220776 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060437269 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.06095997 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060788715 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060274319 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060570398 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061265478 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060728932 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.06000345 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060937201 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.060179591 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060229054 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060698757 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064777917 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079010497 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060637194 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059825885 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064301474 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.060481881 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06006141 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060565341 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.061191095 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060274754 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060305946 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060713455 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059782474 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.061113918 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.060235707 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064123913 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065063537 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.068674398 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06989999 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065050893 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060431371 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064553517 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061868502 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06066134 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060519797 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060457905 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.060702332 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060521779 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070342586 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060383492 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06153131 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060904583 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060557478 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.060547962 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060183505 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.062137955 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065671687 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061368479 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.060173969 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061214052 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059993345 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061005147 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.060344214 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060022578 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059670177 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063993917 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061610478 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0607197 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079867928 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061479378 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069769625 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060029425 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06133813 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063881325 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060435626 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077132119 seconds)
  done (took 5.729788217 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0856594 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086059343 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065642025 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064926656 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060670373 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060413166 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067802152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060542489 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06568087 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080649931 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060735314 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065402497 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065645234 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065288989 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060989205 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06500249 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068175658 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060977766 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060745555 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064922475 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060861304 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067673202 seconds)
  done (took 2.70266966 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.142124666 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066454227 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105337301 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074603894 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068837688 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07458231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06654014 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066341171 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066517175 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066837433 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066605462 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065949127 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068246136 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066409475 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066801541 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066384483 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066413586 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066466315 seconds)
  done (took 2.560217553 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077419006 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066841518 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087645333 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06628658 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065819761 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065644772 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069554756 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069677925 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065729835 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065726919 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070025535 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065682314 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06521072 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06595675 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065206042 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065867293 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064881047 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065602396 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069754169 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068895338 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069133913 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070105488 seconds)
  done (took 2.736020562 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078029765 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064991369 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080469587 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066507842 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060952987 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060374334 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065670193 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065063856 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065745028 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064437041 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065065639 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060422298 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066617916 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065158918 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066638598 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065128189 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064689893 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065520948 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06534879 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060643362 seconds)
  done (took 2.547551471 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086846799 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062753269 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062687429 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083391788 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062816198 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062786569 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082124971 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.062788116 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063739737 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084735853 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063074381 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06295052 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082268496 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082705455 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063073587 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082690237 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082352768 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082821622 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063461069 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063078567 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084341997 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063064624 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082882439 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063282076 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063170701 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063212774 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063106084 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082686993 seconds)
  done (took 3.242837271 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064511714 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062822501 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063602968 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063863509 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064122149 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064422966 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0638767 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063681033 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063259791 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064329755 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064120582 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063901495 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063097718 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063281513 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063360371 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063488791 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063755019 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063914334 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063917956 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064055838 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063759316 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06378091 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063531059 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064113223 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064303282 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063534697 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063760746 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064313576 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063776613 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064293394 seconds)
  done (took 3.152294237 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073950344 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072440553 seconds)
  done (took 1.384530326 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062778338 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077075 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059076132 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071836685 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06796778 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062929597 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06799844 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066969271 seconds)
  done (took 1.769190871 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.067514976 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08916993 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.061803605 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06263454 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.065736484 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121916749 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074620911 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073518336 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075614074 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064804956 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062637154 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.073794771 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.064149001 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074790107 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063974461 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070737666 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069035598 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074433143 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07522373 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060541596 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074543424 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06310399 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060913259 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06266031 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06196654 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069186402 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077596179 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074078119 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070690357 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060138998 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080710977 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060811173 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061962003 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070191027 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.065305736 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.061113588 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097735232 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061643828 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065898947 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060688449 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073417676 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081833627 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075388911 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.079352395 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06256617 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062920985 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060198696 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062733017 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064755506 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070110599 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060780341 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068167485 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060246441 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062653254 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071795116 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061166795 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.066794519 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070156324 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074492385 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071380555 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069592613 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075812452 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070361127 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068874851 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062250314 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080354733 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062661061 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073776466 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075428278 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.062213901 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073828828 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060311389 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05962909 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060350273 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09439355 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062581194 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061562315 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.061079056 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060761529 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062174273 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07020612 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066295599 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068088964 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064096387 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076509755 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069490537 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.06075574 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067209488 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.0784047 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064457879 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061060548 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.076994734 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06407986 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06052234 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078490539 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07026658 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062099087 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061550024 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064497836 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074055791 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062165879 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059397272 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06911895 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062629205 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.063392521 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065018511 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068112071 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060105454 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070101266 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.065147558 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061776269 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059381239 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064323308 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061146374 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059170529 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069146863 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059875394 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074331779 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066784023 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.074641665 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074806335 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070273401 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075611643 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059571857 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058715463 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.077230825 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069543037 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061389158 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077364558 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059504498 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070482216 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.192931762 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062766027 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070201737 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061819113 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064045347 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062034475 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.067189208 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.063043304 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063604633 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066313728 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069638459 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073354495 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.063575233 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070351524 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061184746 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077311238 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071458667 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066224625 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064974411 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.062340928 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073009432 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067935629 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070687948 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060745286 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061423301 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061452613 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072084427 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070965481 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063171448 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069024436 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066693586 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.062127188 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062386318 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.06241005 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064624376 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064725651 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062066735 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068335726 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070147801 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075509431 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069001502 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071189211 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060237081 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060906577 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.065271363 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060466431 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065906804 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071192994 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076038159 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072573713 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081294392 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060765104 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070674746 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062578434 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077388632 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073904676 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061926716 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065577228 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059683603 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062384592 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070271881 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072690959 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074611341 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076084848 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06548339 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065744574 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060510509 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075392497 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061156411 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069675091 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070257685 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065660489 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060767657 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062857397 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070234336 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065400198 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060778031 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076864805 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066988468 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060603638 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075010673 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061230794 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.071501651 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060946735 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064737706 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066807269 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062921615 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070217196 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076214687 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060228421 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062174214 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076604048 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063708458 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062480147 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069199552 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.076314175 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065663565 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069180045 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071719471 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070654505 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065753515 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070787839 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061531498 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069692221 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063704991 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072527321 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060765087 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078269677 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060003797 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.075504521 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06097239 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.071143693 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060807008 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069780314 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061589819 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.077477821 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062510539 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061492154 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07187614 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058868472 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068855347 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059487872 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064808487 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066260336 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068948277 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061629687 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069343965 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061760584 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068078503 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064476842 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068187316 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069225548 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064256363 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059891363 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068007962 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070668683 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067995341 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.199731047 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062705672 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063143035 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07290452 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064272524 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063275978 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069971972 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066429867 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066990203 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063426683 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.063144666 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062607557 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069408508 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071032549 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079047692 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069898236 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068893488 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070936166 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061238706 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076377936 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061736294 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068768375 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061620595 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067335265 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070411758 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061230232 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080632925 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06261224 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068889995 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073672161 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069803308 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065234461 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078947074 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064704047 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069695448 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069677884 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065604341 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068137634 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062769753 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06950483 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070810152 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071876708 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062283722 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068754289 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070205342 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06267855 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069400919 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062748298 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070017897 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06269873 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060264323 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065983493 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072364407 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065826262 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066458796 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061410126 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060138651 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06119728 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068244759 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065590752 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069260251 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075823061 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060033676 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061655815 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060933143 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064566334 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078753626 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070374645 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06886716 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06552161 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06238584 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062250535 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062652636 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061344819 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064636978 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060355162 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060712222 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072060174 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062783588 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065694152 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061256315 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062000289 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070286321 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065404356 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061410734 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067907194 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060778446 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066189982 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060130022 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062013045 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064262867 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059595548 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063767451 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070202976 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.076314272 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067354818 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069940405 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062680492 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06882643 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07537552 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067006447 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061795376 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069916679 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060197691 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07925314 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.0703553 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069617793 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070777005 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061624997 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076840484 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065119505 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070649005 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075777309 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061480908 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.067038996 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059933043 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.076035163 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065151921 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060346413 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068147048 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067631161 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066001431 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071830267 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060534115 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067834515 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065281431 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064175933 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061414197 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061467454 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068845543 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075177375 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060915168 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06472747 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06841927 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068413922 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064357974 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.214314703 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069481251 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062395902 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063221037 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065280975 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062319105 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073599124 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061928142 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066157389 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06630975 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061606437 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068191271 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077874098 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071199417 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070890848 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061433873 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060487007 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.079121067 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064627108 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064961371 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069696934 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070625956 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074156069 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070716299 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078034844 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062300949 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067229696 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073843054 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061860303 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060792711 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064940567 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062736118 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07010657 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073302186 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068859917 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063659083 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067850519 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074269094 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.06232222 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067031999 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.066588476 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061861171 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071656202 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070108397 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07000496 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062640908 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061318316 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065440988 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.0698902 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068564161 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07010527 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061939036 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067740674 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074957317 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068728012 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064432049 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06089991 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06434351 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070161494 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065531229 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060795414 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065389992 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064869899 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067707803 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070351192 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065824287 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060472167 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077727403 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06901336 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069843029 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.063129373 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.063402641 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061578394 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060550995 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071933871 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060909201 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.063148264 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06568479 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063294695 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078470714 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069305926 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076562931 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062017548 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065645963 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060700459 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070258757 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065744482 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061636675 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071658887 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06088976 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076154421 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072886403 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066492561 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060978054 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065965768 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069045362 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077848688 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070290507 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070167214 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064776813 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07065666 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.063174835 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.072234848 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06099385 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060029165 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071074997 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069526148 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073963036 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061006041 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070699799 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.06322932 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069534382 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068863571 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062441453 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062569117 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062637089 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069881899 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065439635 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070257223 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065560768 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076999256 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.062007769 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071136813 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069287386 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070879291 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073566243 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072503272 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068032743 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060878647 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067631239 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067816653 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.06127591 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065158915 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063111398 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080942516 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06163747 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.200939204 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075631563 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067961409 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.064388429 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068946007 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066830547 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.072024611 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062484361 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.0716326 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066322296 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062133434 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066360546 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066566401 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060552276 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060656276 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061124522 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070585359 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065474014 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061567039 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080177481 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062640524 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.0700258 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072264198 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067722607 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062710135 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059924323 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062514276 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07374048 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077069606 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065284 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070469694 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062888349 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070524416 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060597646 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06993585 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068899631 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070046639 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077909239 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062066161 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075606438 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.077055216 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065843512 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07083742 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070822012 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.0656978 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082412695 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070186491 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0628933 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.072273547 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063311995 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060398158 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060048058 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062550054 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072536188 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060609423 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063244352 seconds)
  done (took 41.930387058 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099362867 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062501829 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06082983 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061286128 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071999207 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061624396 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061276043 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061532299 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061620681 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063700999 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060983498 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060685912 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071593484 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073838818 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071101438 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064584599 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061232034 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061479065 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060877842 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061618576 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070846379 seconds)
  done (took 2.731332407 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.067898874 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076438903 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072333953 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077247777 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068839114 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064687833 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071841422 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064983232 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072423739 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070294856 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072491542 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064596035 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069889035 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070622849 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070249632 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065567743 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072339767 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069000435 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065239519 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072075547 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065270831 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071981469 seconds)
  done (took 2.860998568 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063208535 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06218424 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070300039 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060360206 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.061040667 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064216408 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060288431 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064731543 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.06467565 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064726005 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069158667 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060973969 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060190822 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.06606203 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.06018482 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061375134 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102849685 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061434915 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061850604 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060377549 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063304666 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069567941 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060458259 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0609143 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06727102 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06394353 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060271361 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063318881 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060515203 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063449709 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062075753 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060757249 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069186226 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067991802 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064452874 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068981454 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061132632 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.05993053 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059269773 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06057669 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06902828 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061678751 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060951999 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062155041 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069239604 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060631457 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060026777 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06977044 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060361952 seconds)
  done (took 4.470222622 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.071936968 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113104088 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067403817 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092873262 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073395338 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066777438 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066446475 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093538739 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061359166 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062218815 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074563375 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074257518 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063796226 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064974536 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066228522 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063187031 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063933201 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062609484 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065510669 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062900117 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066139723 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067260079 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073044836 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073325525 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063985502 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062932231 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063331902 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064757367 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073557943 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066547048 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064741638 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065505749 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074002007 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06649261 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062947243 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.063018938 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074381842 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063980741 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063251058 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06178632 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063249611 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064899052 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068115133 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074974014 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063790902 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068596687 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063501725 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061536311 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074077847 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063709023 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067469464 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074792682 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064612755 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063929784 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065091903 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07365179 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063802548 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062411024 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063876406 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073482868 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061702788 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064269801 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074691214 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062873196 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066884796 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075003829 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068476643 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064436593 seconds)
  done (took 6.092923344 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071116144 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096114098 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072612267 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071919258 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071625836 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071802559 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07151645 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07218769 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071168336 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071823295 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072344333 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109963594 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067855164 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075331292 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071080888 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071054335 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071047668 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071224527 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071583435 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071364846 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071098031 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072143078 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07317581 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071379362 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074122091 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067642716 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071330029 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070792317 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071739386 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071830225 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073940274 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071485636 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071078099 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07202892 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073971264 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071274615 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061503017 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07108348 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071551564 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071344677 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06775889 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072127165 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070995773 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067781195 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071178657 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071225313 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071813755 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074431077 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078465558 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072279798 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071833354 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072156976 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071471738 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071609795 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072145646 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078401484 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072028352 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072531256 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071553296 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072225933 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072306429 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078092522 seconds)
  done (took 5.882271545 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074941056 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067145138 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08006847 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060711154 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060636681 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070386522 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061202439 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060845967 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069697933 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.06738497 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069372015 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070134605 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07213565 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069215334 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069754508 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071761559 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070179208 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070173275 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068036116 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07069619 seconds)
  done (took 2.736698187 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076655888 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080331305 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066927667 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070569203 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066473715 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070290012 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06566098 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066436896 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066758652 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066512683 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071021598 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07103586 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067269528 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070045323 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070807908 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069949462 seconds)
  done (took 2.465774558 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.068822929 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068183002 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067893691 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062290827 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066090224 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061790317 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062710348 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060521103 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060850339 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078358089 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061475354 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073701691 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061682686 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060937163 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061178529 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067051049 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.0614467 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06175896 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061814496 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.066251404 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067999279 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06269701 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065707526 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061723671 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06718832 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068499244 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063059099 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06571891 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061803678 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061834893 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067254826 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068169003 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061618379 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062560807 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060592867 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061785612 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061419819 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06200736 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067217755 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06190371 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060784334 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066748439 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061632146 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062419915 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060995118 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062056833 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061057281 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06724372 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062021038 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067074445 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.0617681 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06319441 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062254475 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069081088 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06422786 seconds)
  done (took 4.878951133 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078617417 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06598379 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060564239 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060839302 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065627196 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066597098 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065913808 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065934234 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066401002 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060813349 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066145554 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065589449 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068606501 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065764203 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066232839 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066091821 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06073897 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066120503 seconds)
  done (took 2.547748524 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073126888 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06575993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071239021 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06608961 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066152546 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065096426 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061330039 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06074669 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061006115 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065642558 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065589016 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065067731 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060646916 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065124022 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066022557 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06572885 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065190164 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061199596 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065571097 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060846793 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065019546 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060969692 seconds)
  done (took 2.778294404 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.088919774 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084075207 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.127189713 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080014123 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089339185 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071556078 seconds)
  done (took 1.896857486 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094967457 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103925212 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065992063 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065697102 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074425261 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06845605 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069024607 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068770667 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074047814 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072695885 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069905173 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074048536 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074578806 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070960284 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074120359 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076581876 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068643559 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068620446 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066506166 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076507647 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069326417 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074378597 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069130002 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068943364 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069218977 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070777588 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077078703 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073277647 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06850747 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074225255 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076987125 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068766179 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074939721 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075107837 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065975181 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074750687 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069389239 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076921358 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074331354 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070704901 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066015265 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074683521 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07451274 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070632877 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077303211 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069526256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071597424 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069129178 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069449362 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079384959 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074766166 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071199754 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074961329 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076805929 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077166064 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079120159 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073158909 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071255444 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074689098 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073583889 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071448816 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074869058 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071361747 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073384951 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077532815 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070989817 seconds)
  done (took 6.192473542 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100621115 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066510201 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069794406 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072718975 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071203675 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069480888 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069389727 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06888043 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068654672 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066520913 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103910393 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069313153 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071517345 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071087181 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069747796 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069816109 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069458066 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071153761 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066823172 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0788781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069098402 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071181433 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071404569 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071003144 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072834416 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076834652 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069526374 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068812541 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069069343 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068931799 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071167645 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071161533 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071061869 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066384933 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070776439 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06881466 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069398686 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070736069 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069328047 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074844652 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07046987 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077150548 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068606417 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069113852 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07315571 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069035561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068657678 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066658336 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068925808 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066169637 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073399405 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073506178 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072907161 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070514478 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069323072 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0693664 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069077678 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06893425 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069714367 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076963411 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071285941 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069557782 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079240975 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069477281 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069224583 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070886747 seconds)
  done (took 6.105083202 seconds)
done (took 126.646880071 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212701627 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184480193 seconds)
  done (took 1.74225695 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075129386 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097612003 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075836682 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135788489 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070555924 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104928458 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103771105 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074195315 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070197214 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070893051 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072394752 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074229282 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137058057 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070682754 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070866897 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073926033 seconds)
  done (took 2.743422551 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.1081087 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.184620238 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.115316599 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069942273 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107660753 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076850734 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069931237 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08117584 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073628786 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.0718624 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076576714 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075086415 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07199768 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075000766 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074436609 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07673424 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071805201 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076205773 seconds)
  done (took 2.929838526 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099068678 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08667133 seconds)
  done (took 1.559059042 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156975576 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103787945 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.141585256 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.320316991 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.131624913 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127339194 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130500754 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124740661 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.108424078 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.119634479 seconds)
  done (took 2.830473376 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106250826 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17732993 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314200567 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121546003 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076573987 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099646616 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123441704 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082109925 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080147305 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.0802827 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080116371 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076933464 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1015086 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076552583 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074972742 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079344559 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105457817 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074468823 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.0755881 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076222941 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106230295 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070319774 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076502995 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07446098 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077822268 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077744258 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07199226 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.07044582 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076305641 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075476055 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078300048 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096827046 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077809915 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.099755537 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074933217 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.100585593 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075945393 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074321595 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075630443 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074334007 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077105563 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075821677 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078954155 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076853342 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071981706 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07478374 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072095785 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070130753 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078697503 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071212885 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.0786493 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077672588 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.099343471 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071603037 seconds)
  done (took 6.147296527 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108074973 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104795125 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069496233 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113009981 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106167432 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070704735 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104788379 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101261375 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109794116 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070553942 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069364449 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069859936 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076350972 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080954423 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113811027 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10523739 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06986314 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069847601 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107293709 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106717599 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06704779 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099698325 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10058688 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107233143 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067546004 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069381105 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06843835 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068730847 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074222766 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075252957 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069491962 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076122791 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083006246 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073446134 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066713539 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067009304 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067086041 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074763861 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074795306 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076790428 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075351855 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068228442 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068507062 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069365261 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069621272 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068059181 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07493104 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.075524954 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074455185 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067458603 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067678252 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067396235 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06777452 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073664037 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073629831 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.074394681 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074013375 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066995998 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067239007 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068531163 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074803738 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07526193 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073953905 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068098576 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074757885 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067073855 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075172132 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078830965 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067053345 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06760244 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067448427 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068958635 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068447966 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073178394 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07424843 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069521946 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069113872 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06844196 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077028203 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075261948 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068481238 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074545114 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06805778 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068428402 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069310834 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069432915 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074249601 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076204652 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070118548 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068393447 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068822751 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06926861 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067926901 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074645086 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075277735 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07566267 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075079328 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069053074 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075289973 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074257727 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068140569 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073802838 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06875987 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068835482 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068535754 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074349333 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073301807 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075837529 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068528134 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068180435 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07404081 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076897934 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068552842 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.073866457 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075980078 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.209696311 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068320236 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077495552 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068200165 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076237986 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069279847 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077833698 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071920933 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076859918 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070423112 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069162723 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069500454 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075575942 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070242379 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069501074 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069699632 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06946172 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076688113 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079380921 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070631105 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075937897 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076355771 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069899119 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075947851 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069564759 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076797881 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069772597 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070105292 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06851517 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078601039 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069209821 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069452282 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069119425 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078730313 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068600206 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077886045 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07527034 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068162813 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082390962 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078317524 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074023525 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07639528 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068293506 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069323661 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06933748 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069137243 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075283138 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076129182 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069872557 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06908002 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07499101 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077760765 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06889672 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073755965 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073116444 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075076258 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068601861 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068658397 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078429224 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076367292 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.072938931 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073319034 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07379474 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067589737 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073080824 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073218971 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067308978 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081039806 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069186305 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079269462 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076008987 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075106464 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075562106 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075863261 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075105436 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075949287 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077558512 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066886795 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067346147 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073566649 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067372305 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067704697 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073147539 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067953682 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067618662 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078068324 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067512519 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075522837 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066900841 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074344924 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066977668 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067459752 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077753075 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067737838 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06784573 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073319845 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067281907 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073024896 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075550973 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073001303 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067285391 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067595024 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073474497 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073866223 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066924697 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066714355 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06711121 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071994695 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071934565 seconds)
  done (took 18.14200274 seconds)
done (took 37.482468019 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.222636446 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168077966 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.205397867 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116829431 seconds)
  done (took 2.190415225 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.09158186 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098646546 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076558683 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065693351 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.081560461 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066196034 seconds)
  done (took 1.898621187 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.252926388 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.187011052 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173270643 seconds)
  done (took 2.025704101 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.218448106 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193980129 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.498769885 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.305317615 seconds)
  done (took 2.732030809 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.13059398 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078717798 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063359917 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.073630273 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.104392915 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.132914424 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.085253569 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.104658729 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073707354 seconds)
  done (took 2.31926183 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.130170446 seconds)
done (took 12.739064029 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.231686258 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.122879942 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.20133716 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.105729912 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121369685 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.076583262 seconds)
    (7/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079564881 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073447305 seconds)
    (9/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.177088924 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.168149954 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.120561573 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076213188 seconds)
    (13/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.075219369 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.194237952 seconds)
    (15/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.257555245 seconds)
    (16/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.0952096 seconds)
    (17/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080359054 seconds)
    (18/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.074782324 seconds)
    (19/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.420513895 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075027595 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.180015998 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09225205 seconds)
    (23/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.237458718 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07395762 seconds)
    (25/309) benchmarking ("sort", Float64, false)...
    done (took 0.138348779 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.239461723 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12516953 seconds)
    (28/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.221781723 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074360768 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073477803 seconds)
    (31/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073854562 seconds)
    (32/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.182984674 seconds)
    (33/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066484483 seconds)
    (34/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.107220725 seconds)
    (35/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.140880376 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.096670496 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.121649905 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.189501239 seconds)
    (39/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.14540731 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074149988 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.166719338 seconds)
    (42/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066409757 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064760537 seconds)
    (44/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.139384922 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.199150819 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.155171958 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073913414 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074524849 seconds)
    (49/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.085638242 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.149621026 seconds)
    (51/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.166621011 seconds)
    (52/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.14336958 seconds)
    (53/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078562243 seconds)
    (54/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.138517215 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 0.067478218 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082712373 seconds)
    (57/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184394315 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.084869676 seconds)
    (59/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.171511887 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065594531 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075665055 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159865693 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066643722 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065497404 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075610523 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088710325 seconds)
    (67/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.140440163 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064384364 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089551486 seconds)
    (70/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.065604718 seconds)
    (71/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074985013 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072546276 seconds)
    (73/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.142249933 seconds)
    (74/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064357171 seconds)
    (75/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077128344 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072165827 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077097687 seconds)
    (78/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06372196 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064891084 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072786356 seconds)
    (81/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072087701 seconds)
    (82/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065924603 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.08992601 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071727766 seconds)
    (85/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.134179735 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.163408695 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116229533 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.356117271 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174128847 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06769927 seconds)
    (91/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.169453826 seconds)
    (92/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076753811 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.222248008 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065637492 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089532331 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065368501 seconds)
    (97/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.079320239 seconds)
    (98/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.139984729 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069428303 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.217185478 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097146378 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065936603 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068993664 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.153719109 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07404758 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087773187 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08967484 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067030904 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175800356 seconds)
    (110/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.070960965 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087317955 seconds)
    (112/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.160942687 seconds)
    (113/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.085318467 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.151904253 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066562709 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195464825 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086756269 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12531192 seconds)
    (119/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067157141 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076755646 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074378671 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125291855 seconds)
    (123/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.088042769 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072984489 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092814629 seconds)
    (126/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073924645 seconds)
    (127/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066626244 seconds)
    (128/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067193853 seconds)
    (129/309) benchmarking ("sort", BigInt, false)...
    done (took 0.263194666 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06746118 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067297594 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.13351629 seconds)
    (133/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073761301 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065657128 seconds)
    (135/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068865666 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.151172811 seconds)
    (137/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.177388219 seconds)
    (138/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065338719 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194083702 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.0757805 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066421377 seconds)
    (142/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.228197006 seconds)
    (143/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.077031049 seconds)
    (144/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06815422 seconds)
    (145/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067864998 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180339516 seconds)
    (147/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078575598 seconds)
    (148/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075980993 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151644055 seconds)
    (150/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068954186 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06618293 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075886208 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066758599 seconds)
    (154/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066213428 seconds)
    (155/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.06547607 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072841434 seconds)
    (157/309) benchmarking ("sort", Int8, false)...
    done (took 0.16778119 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089016335 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094682885 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.230477283 seconds)
    (161/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077415674 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090730517 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065808648 seconds)
    (164/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.224246329 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065370842 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064389507 seconds)
    (167/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076003729 seconds)
    (168/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.073902026 seconds)
    (169/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.183590255 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065260496 seconds)
    (171/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065190908 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065737075 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181294717 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06537112 seconds)
    (175/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.066148601 seconds)
    (176/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066167556 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090749205 seconds)
    (178/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07751966 seconds)
    (179/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.1383878 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150139456 seconds)
    (181/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.197571992 seconds)
    (182/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.080687286 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.192156321 seconds)
    (184/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074130051 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.09225755 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129644821 seconds)
    (187/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073827852 seconds)
    (188/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069987435 seconds)
    (189/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065637502 seconds)
    (190/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158095945 seconds)
    (191/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.066225434 seconds)
    (192/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076201417 seconds)
    (193/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.0671061 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064197842 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.29123185 seconds)
    (196/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068900084 seconds)
    (197/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066916984 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066551545 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.125280103 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074773217 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066890313 seconds)
    (202/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.06620543 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073903896 seconds)
    (204/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067697451 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067389684 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066182595 seconds)
    (207/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067369076 seconds)
    (208/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06900873 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088208611 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066459964 seconds)
    (211/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068976486 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.23294498 seconds)
    (213/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.130911352 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068463785 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065587612 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078563391 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092813933 seconds)
    (218/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071524533 seconds)
    (219/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067257519 seconds)
    (220/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.095238214 seconds)
    (221/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.197926484 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065778506 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074652384 seconds)
    (224/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.065404362 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075155027 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065679121 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078288426 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077190108 seconds)
    (229/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.218065082 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065682051 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066278983 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149270796 seconds)
    (233/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067007395 seconds)
    (234/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066750512 seconds)
    (235/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.139611322 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075099832 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065316247 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067126461 seconds)
    (239/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06685484 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075006258 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074118716 seconds)
    (242/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.065534571 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065482679 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.14492302 seconds)
    (245/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067576058 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114235143 seconds)
    (247/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.064145005 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083848848 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066661367 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067857064 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067174342 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092544885 seconds)
    (253/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.147492728 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066275527 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073927305 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148369942 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06513107 seconds)
    (258/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.065866958 seconds)
    (259/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079854742 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073429832 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.153918205 seconds)
    (262/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065105753 seconds)
    (263/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092209212 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065371035 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081555529 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064997831 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065960437 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065344634 seconds)
    (269/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066383436 seconds)
    (270/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074697397 seconds)
    (271/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.064979707 seconds)
    (272/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06576388 seconds)
    (273/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.186199815 seconds)
    (274/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067007333 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080667757 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065758292 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066233097 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063278099 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064657196 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086919491 seconds)
    (281/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071213205 seconds)
    (282/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064958546 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154962152 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065367631 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07352871 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064988356 seconds)
    (287/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.065410309 seconds)
    (288/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078342505 seconds)
    (289/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072784592 seconds)
    (290/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068342679 seconds)
    (291/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065097689 seconds)
    (292/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.063539702 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.065420429 seconds)
    (294/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068893046 seconds)
    (295/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.063162714 seconds)
    (296/309) benchmarking ("sort", Float32, false)...
    done (took 0.136060408 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077358875 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065077118 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067600325 seconds)
    (300/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.073826732 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131579192 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073469008 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06622528 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.144892505 seconds)
    (305/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.064276841 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064849512 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064630427 seconds)
    (308/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.069318522 seconds)
    (309/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.063681583 seconds)
  done (took 33.350199966 seconds)
done (took 34.782974027 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084778084 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08846365 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072018221 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083406345 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079935717 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097803072 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072543655 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076935221 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078945911 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077791983 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07714874 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071429476 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073928431 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073527278 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07139596 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08691473 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079452726 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072686691 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07316731 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063515035 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072776529 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064625426 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063679627 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071653622 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076222561 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070832355 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073364966 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075000218 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065041038 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065084057 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069510745 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074270206 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064150591 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07653444 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075296076 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074838027 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078447086 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079718783 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065680536 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066816488 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076991533 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066642353 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074366749 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072003141 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07138555 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073964007 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074626457 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077972388 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088787053 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069304307 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075651151 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075848852 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075655441 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070218503 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069933887 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072856172 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070922982 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086335468 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073541906 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069050993 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074821068 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075794452 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07338753 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074620913 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074685707 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078212646 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077603012 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073643078 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077921403 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074905649 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065655718 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.0747392 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071137963 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066460556 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078411216 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080181789 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065392203 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070611323 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074014694 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074946256 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065972354 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070691215 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064319615 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071035006 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070582113 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072703665 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071765955 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073881996 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065470384 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075394562 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073947562 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074147371 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065214578 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076739514 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065376666 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07307922 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066466072 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066590066 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065418125 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071981045 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066003028 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071220218 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074528169 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064630778 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070888026 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079256184 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065898164 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074086901 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066062973 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06574845 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076539062 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077573386 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067082061 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071193212 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065173868 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072167369 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065959109 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066127788 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065993377 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06638909 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0707694 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066304356 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071031204 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07201011 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078172191 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065558804 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071268886 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071299096 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066754737 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073414739 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066507807 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06597564 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06526633 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078484341 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068428813 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064119758 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069634413 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067921842 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072363051 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062624571 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072214763 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069742027 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067918771 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070304003 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062247494 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075008427 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067837647 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067751034 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.203428552 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065933838 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065754091 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065124716 seconds)
done (took 12.649112282 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068053281 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.104463606 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.073771612 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.083187164 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077596659 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067838975 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.069533344 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.08173848 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068372551 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083867922 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090279786 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087606211 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.09311042 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065419652 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067067622 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067836386 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.064424467 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072269796 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078437844 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087942332 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.092847892 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064895938 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073777208 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080543637 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074963371 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080262277 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067333182 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067433512 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069515475 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08338439 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09205053 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066572731 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06767265 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.080698308 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.080979274 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.07370215 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067269008 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.070726772 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067739859 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066842917 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068298648 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.080780317 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.070809251 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07087755 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066945999 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066366483 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06527875 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.069753317 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077604818 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067895262 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072279861 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076291465 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066451331 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065306826 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063256921 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068775035 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065186852 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067474675 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066927192 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06693918 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067469456 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069064092 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.067656292 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.067623034 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07013869 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.069032489 seconds)
  done (took 6.318661955 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084577033 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094449983 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081979225 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082537727 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064843524 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065880495 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065654156 seconds)
  done (took 2.075298548 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06831031 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.079049422 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083038848 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08334468 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.07337491 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.082895593 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066057895 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095945139 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064767426 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077122575 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.110071941 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08369517 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070235086 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078873802 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067071304 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.0732517 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065651451 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073633187 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072485492 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081074943 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069150509 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094189779 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079549324 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065776254 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084567215 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.070039196 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.065979044 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066735025 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067068164 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066621932 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066914952 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103786452 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.070427998 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079006308 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068500764 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.066690201 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.073181121 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070248337 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.070062017 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076159084 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.072605331 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068322291 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065852163 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068445217 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069620648 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.070852841 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066121331 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067746458 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068122999 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078329283 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066080757 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.071737707 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070249193 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071897265 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073658067 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072094522 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076313994 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06863977 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.078236081 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.074682736 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068502822 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075705102 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.07505829 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10392056 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074678426 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069981042 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068676186 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069876881 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066155686 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067075754 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066728918 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072682668 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064612259 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06698739 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068717907 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066863164 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068663703 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081365656 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081326316 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077443301 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067496298 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066810487 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068753455 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.081404846 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069833195 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067688679 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070682434 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066144024 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072067348 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068441221 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073429995 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068051897 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.075208787 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.070000033 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0715114 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074720894 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067165217 seconds)
  done (took 8.615093067 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070379355 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0681548 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069700799 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068192496 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068841335 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068823476 seconds)
  done (took 1.97622851 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089228662 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067062605 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082368567 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.06766671 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103607958 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.074104275 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.074367861 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0753589 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080749091 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080013144 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.074297606 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.077016149 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.074233319 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.06930713 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.073455281 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068379892 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.073683611 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069977194 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078470689 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06850976 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078661317 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067940606 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067598786 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076944455 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068429258 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066123894 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066739629 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079426062 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079331077 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075343098 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06883702 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.06974895 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075453784 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077222449 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072682854 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074969854 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065744906 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070821514 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067435609 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068046575 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.073885504 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067257377 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067613922 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070582777 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073147253 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073491754 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07151531 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068887546 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071281446 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07082452 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072034989 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066189807 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070208316 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07287033 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075886957 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075655117 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072806773 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.073734358 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.06925243 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075960124 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067289895 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070398029 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075148668 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07023201 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.072401525 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072594775 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07587733 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069218577 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069590376 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067107696 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072615109 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067367342 seconds)
  done (took 6.771887214 seconds)
done (took 27.27243154 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.552570285 seconds)
  done (took 2.057859188 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.574057605 seconds)
  done (took 2.117415237 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.670212687 seconds)
  done (took 8.211499158 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.300226275 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.322355831 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.737909741 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129905632 seconds)
  done (took 3.06628956 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.755523168 seconds)
  done (took 2.31002723 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238756899 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230225395 seconds)
  done (took 2.035385639 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346197781 seconds)
  done (took 1.893828878 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.143061118 seconds)
  done (took 2.68285328 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.225812718 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160811951 seconds)
  done (took 1.936190957 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.496308036 seconds)
  done (took 2.044542188 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.190945084 seconds)
  done (took 5.742648584 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233261135 seconds)
  done (took 1.821266719 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234667711 seconds)
  done (took 1.784087003 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.776140369 seconds)
  done (took 3.320427027 seconds)
done (took 42.580220987 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084158595 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085367691 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084840355 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080113318 seconds)
  done (took 1.859887324 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.074102166 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.069907864 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072246011 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071602998 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070595487 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071788064 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071853875 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070167351 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072106824 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.070369854 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069353773 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.070712215 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.073040657 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.07016944 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.073169409 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.074290231 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.070448555 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.070547507 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073056641 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.070785603 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.073123596 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.070647202 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.069182847 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071421453 seconds)
  done (took 3.262981205 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079879573 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073081387 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076496751 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071890857 seconds)
  done (took 1.860744072 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.077658093 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.085132373 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086901001 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.092728307 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078115166 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.077414971 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.083360564 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.085115294 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066405146 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086660317 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.069236793 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.067912532 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.067742706 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.086025527 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.083436605 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063272348 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064926323 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.076994419 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.07657652 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.079420027 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06961434 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.066279579 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077964562 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.076210002 seconds)
  done (took 3.404920526 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080624363 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06670014 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078944235 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092345166 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09445608 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066467875 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080262454 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094180859 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124668869 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066357291 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072389474 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066649239 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105093684 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066505445 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081033794 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107185054 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110452144 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07039663 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098672725 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066362838 seconds)
  done (took 3.257985869 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076611805 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069099501 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07105271 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066211147 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076976666 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072401721 seconds)
  done (took 2.000203554 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069073138 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068841737 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068355603 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068167761 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073147724 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06827617 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066559387 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068967108 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068637841 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068069587 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067231345 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066831154 seconds)
  done (took 2.381461084 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.166979635 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070902602 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070554185 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064689635 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070345267 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066024287 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079620737 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069286438 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082734944 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065959565 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065990256 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068311114 seconds)
  done (took 2.503519928 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099457659 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101183474 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.147000728 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117678949 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095389208 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.094967692 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.160881228 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.135867222 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117442194 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.070175844 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087632692 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101500258 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100123706 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133382219 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11358062 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073401549 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.112778942 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081936539 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115569546 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123618992 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11718436 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123706377 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095083843 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098888193 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106706479 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119235186 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.072492248 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071976524 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149233068 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.101628956 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.091966975 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100153414 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10862695 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.068751923 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084588914 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.104794067 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084206173 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117066931 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08856551 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09890677 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082056166 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.132985647 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106989679 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103464452 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129630531 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091269437 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110106555 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.107602597 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083280337 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.119745013 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099614938 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092200546 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080638694 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.159077939 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089719917 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.111756844 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112975618 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.081969415 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087282695 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098890372 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.126339493 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.103169848 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110397963 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.254885503 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.090400808 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090712098 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.128650744 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083884627 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099452619 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12924848 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.091685948 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075033341 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.09468551 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068760734 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.095217556 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105355801 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091233774 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110214161 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076216412 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125799916 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107478664 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071863797 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.116399935 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097223497 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153953711 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096277126 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099785093 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089736311 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.148500854 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083515109 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078716196 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096875236 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128431769 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092886373 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093938588 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126287623 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094915216 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086336172 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074267135 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.08803729 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099832623 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105800824 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099805882 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087760292 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085324393 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094415803 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074453308 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079391968 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.099046492 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084017201 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.122098185 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107440995 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121700706 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.07761674 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103329227 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.095223341 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126744591 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115898554 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.08262684 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106534709 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138368784 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.111761369 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08388113 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099138958 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10864999 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105057115 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094254366 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13449497 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114220885 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087345657 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091335404 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.243486043 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.111989357 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15499865 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089079507 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.10420763 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138738006 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.115380137 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09304477 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08422032 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095463417 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106659224 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.142265209 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.097332768 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.071945766 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094385208 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13239624 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077377606 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098908578 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.094215941 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084923686 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082159998 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.06828985 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101839241 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137948093 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.11544697 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101247053 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.106834227 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069167438 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097295712 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102648678 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14074031 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11542726 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09626526 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.0970416 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102692556 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078429217 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131551908 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.132552006 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090578961 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089143234 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12153026 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.094977861 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.103060128 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112715867 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102400156 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.099671809 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.141205443 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120094514 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.12254089 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103505862 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122720205 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081842387 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116068875 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.074603572 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102621186 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075780562 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103990087 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077796382 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.1104957 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079678742 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099130335 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067934879 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072021879 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.107517681 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.243061991 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086074502 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.1359419 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.133073292 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.083154649 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.10373846 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.10169553 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103582364 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.111553555 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.091965853 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093652782 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.080719182 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082532967 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100618929 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095730346 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108820709 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080280859 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076379569 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140984504 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10417635 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091977659 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095357375 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.121559589 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09014116 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088698946 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104905779 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141057001 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.119065846 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081394803 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.092815962 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.070581787 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.086201696 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.07732242 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110850114 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076232392 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11182026 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.06924192 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.129608633 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086762175 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10012274 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096278449 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127274174 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.090019386 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127734665 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0877829 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108681276 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095128694 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.094422582 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.107941797 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.094798909 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104038026 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108900172 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09191011 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088322797 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119044144 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104143763 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114724046 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104657676 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.134537918 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110707378 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073773731 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102425727 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098327565 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142835947 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097265105 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087505968 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093257009 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101219795 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079775136 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.296087114 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087021126 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.085791056 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111946581 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.089984693 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097048863 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077112675 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103109837 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096058734 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115052103 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.100633025 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.095197537 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111807052 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112885089 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088364431 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088274232 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125335139 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.130666187 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102437923 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095002002 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089201373 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09875916 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092653264 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107790421 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081871797 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076738115 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.069587004 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.073666921 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.118799973 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108959208 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099357742 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099662304 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.104108342 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072461021 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088369299 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089411009 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081626757 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088803574 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113696984 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102572656 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127347699 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.099721751 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084575299 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139703277 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126316638 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084115763 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09081609 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099823682 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073780837 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145773805 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11976518 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077222875 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084737941 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.077898288 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083830462 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070738816 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102047188 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102305396 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075186962 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101381843 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096081837 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.122434891 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095480248 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075113742 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078481809 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073619683 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074024436 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.100800056 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.075787842 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075280451 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126855566 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100425657 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103986212 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081525075 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.227145447 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132327276 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069928108 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133234981 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084527288 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111628009 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.083028703 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080806729 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091873548 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107664365 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107007451 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11463702 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072365334 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104482422 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.157809027 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077435482 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077589882 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076358543 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112789603 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089045162 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144212739 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089597809 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094082752 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07837168 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129540949 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104493322 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084609007 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128947861 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080870338 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.072622956 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087631036 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.112853747 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.0735576 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076403925 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113841499 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.508694469 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089677148 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.0750967 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087594173 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126859071 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082300281 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106882439 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.116426215 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105003893 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.182270916 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072696081 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089918389 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.102350438 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096417364 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091235154 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078483022 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086900306 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086470565 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.083606421 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104711599 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079322451 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089707669 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078701393 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.101974418 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.127876179 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084904823 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099848073 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08655381 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089071591 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096729803 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109847681 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104082964 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086476255 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086483191 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106715399 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081349326 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.231305013 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099886982 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.077103344 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077882172 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117121545 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.083606307 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.093451463 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105530121 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.091175445 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115988008 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11968521 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112972422 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099048936 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080774553 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088066941 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.089964712 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075731933 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079683999 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075908377 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.072102491 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108890439 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08775441 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083586411 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100566558 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.110855007 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101690616 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108875725 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09174048 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098686274 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.102119978 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.128685496 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14591811 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099541386 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.124728877 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.134501717 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078438418 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077376644 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.081995717 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131581776 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.080752809 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093190479 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.239577905 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.079230253 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.08294341 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092299382 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108913881 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084784801 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08164279 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10052183 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111553935 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085888331 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082837252 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09491504 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.110199187 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.128205006 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091036932 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076443561 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109096047 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103098872 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123824081 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.072080767 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080145926 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.127550737 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086160266 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102790121 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08017267 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124748219 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.132229525 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074088363 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088029616 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07159351 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085859715 seconds)
  done (took 51.031814756 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.149857417 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.143943379 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081636216 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.097148339 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.186234307 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.196539665 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.117899322 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094003909 seconds)
  done (took 2.785777404 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069086841 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.08171382 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100018502 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082933812 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066706687 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06759989 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.201172197 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082666559 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068597948 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.107870431 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076368527 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06835276 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.361750206 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067321901 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06820344 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076113235 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066271521 seconds)
  done (took 3.382182268 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.375946734 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62361052 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.320168109 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073742784 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.951775673 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088394907 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.192346479 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13741696 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.0810394 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54092974 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367194861 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130606832 seconds)
  done (took 18.557939151 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07800342 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07630617 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.07965544 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.079508253 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075947182 seconds)
  done (took 2.063786085 seconds)
done (took 99.929000671 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083751215 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.172956102 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069459872 seconds)
  done (took 1.950792045 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.084344283 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082124967 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082508365 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.078839702 seconds)
  done (took 2.006055378 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075556181 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07669277 seconds)
  done (took 1.824172404 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234521275 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17021277 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090989534 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084591766 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080761361 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081795782 seconds)
  done (took 1.932577051 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073432797 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071550425 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071070321 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071005227 seconds)
  done (took 1.96268654 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06861881 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066353879 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067923073 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069897804 seconds)
  done (took 1.94559367 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083628383 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078440205 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078615949 seconds)
  done (took 1.912330188 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110165653 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095862059 seconds)
  done (took 1.877642416 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080551838 seconds)
  done (took 1.755753402 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090672358 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.095732617 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.139778958 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.105326772 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138658407 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.124586861 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075340604 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076155806 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072282608 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070962819 seconds)
  done (took 2.66277852 seconds)
done (took 22.085982079 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079521997 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366543795 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358235082 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086185345 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671115099 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355896494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.95513624 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089498156 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.09793055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068081246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083017399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.6488182 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958201673 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327038488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943626717 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323710447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647700633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067277769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066335455 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067246968 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.948860206 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066948007 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066774728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067422841 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647961574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372115602 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067311038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323106681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066594825 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070454286 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355891296 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067861322 seconds)
  done (took 16.033255166 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071118889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121017181 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071765986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082951311 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069334007 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068683161 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069787969 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068071781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108502005 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067465276 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084940956 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068634063 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073620222 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069671242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087162924 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06819233 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069621335 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06893211 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068338431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068578299 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085831236 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067812955 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068860191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071259269 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06802593 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080555953 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069177736 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06799276 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068036728 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070115505 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071853958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069451864 seconds)
  done (took 4.07663317 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122304652 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124336724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072055256 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10774017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116203004 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070281353 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149400955 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092424831 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115153447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070778575 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086879793 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069007549 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103198602 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069062699 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.0880163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069149182 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069837008 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068672436 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067772498 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068854517 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086357785 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067869364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068524747 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069037264 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068810554 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082482248 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069311876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068084039 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067894723 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07024274 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07224211 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069219905 seconds)
  done (took 4.355811016 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071222694 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071279269 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079786318 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080016363 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06696476 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068748411 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069319437 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065965851 seconds)
  done (took 2.272636839 seconds)
done (took 28.431280386 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079686261 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069581894 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07263472 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088778246 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075491105 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.071403821 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066186808 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075907728 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072379798 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072770475 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074043967 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068258336 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070841174 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06567461 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073201668 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067336977 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.072915217 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070097089 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.071009094 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07115129 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06860106 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07141427 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074628656 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07027939 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070856065 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070283276 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076293163 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074117125 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068411647 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07136894 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070235788 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.081356695 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073277133 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.073460792 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067664848 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067989924 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072493959 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070171323 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.074575317 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076986519 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069949589 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076813672 seconds)
  done (took 4.702240655 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088656184 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092923839 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085217002 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081705206 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.104858201 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083241793 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090166547 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079708236 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078818608 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090419263 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075183559 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080460402 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080464593 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072350448 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077422647 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073931892 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079361648 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072466905 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.082484976 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078148849 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089680293 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070630154 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078048179 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079270858 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073081217 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079533569 seconds)
  done (took 3.825223014 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072786845 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086988339 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090644015 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142955038 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111414096 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083443572 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08166115 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.102019591 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100413048 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067823199 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071181485 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092832671 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095752459 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074297567 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10563407 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084882177 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.0789084 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068970867 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073871408 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101514614 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090263485 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085995274 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100426586 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086879059 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067850911 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077492836 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073935838 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082264555 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074496151 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07877838 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071287164 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070457107 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068042199 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078686912 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071071646 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064833424 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088429619 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078790476 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081252002 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10601674 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076481328 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06829328 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096282382 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134670307 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068432717 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072097195 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072579406 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081875465 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070040408 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098560491 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087405336 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068355543 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.087752838 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069927419 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070503721 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085268978 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070927271 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070632733 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078771728 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072937854 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087305072 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071331723 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086427208 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066843132 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07790945 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068471624 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068647713 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065655502 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101648152 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073706452 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117448196 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068482653 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064652765 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078593385 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077460711 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073823487 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066275805 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084848811 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078399019 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070602825 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078442302 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069192506 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070049113 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101997577 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066098422 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065068479 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064910544 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069411217 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069971213 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067204547 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079472125 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065933726 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070675098 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082431057 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066718876 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067569134 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073052457 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068687757 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066109996 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077199827 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070762492 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068523147 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07895188 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067667498 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071736987 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083490784 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078360914 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068428623 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070669254 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071167961 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070342882 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07339202 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072365722 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07070586 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075859565 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076305345 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073987275 seconds)
  done (took 10.92757913 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163850944 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153127234 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070782462 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150415052 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078079349 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.073797308 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150859869 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.088970782 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06949917 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07147124 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069195435 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.097431763 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.092313632 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106405143 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.074075094 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07041656 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095613377 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.102507746 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153356659 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148111165 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093896855 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077479871 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072040878 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070998083 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07130304 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078619612 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089030943 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076433663 seconds)
  done (took 4.458429355 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077441507 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.11210529 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073681503 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094068501 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088871333 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069949818 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071734922 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07068015 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086996489 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076296065 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069468732 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073942635 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07287112 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071510863 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070266414 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075819048 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076761354 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068690802 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073709508 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074083264 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080387004 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093892268 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073572215 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069278507 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07164085 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069446915 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076497538 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078721153 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069159682 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100938345 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06667498 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073931388 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08383208 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070520516 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069174783 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069983402 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06972727 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069825643 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06959413 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067561146 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06761258 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073974114 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068422426 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075965457 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083358569 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076772241 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070562394 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072118404 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071672446 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066255593 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072410959 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072681773 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071846159 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077590461 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073483202 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072208787 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070880407 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098703036 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074720015 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067316754 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066816318 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068904632 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069998023 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076635465 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085125257 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069545206 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066072542 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067477726 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072090249 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081898695 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066524235 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072059589 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064422196 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067167081 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069364219 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070318789 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068509879 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065598578 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067160482 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067514586 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067228193 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066914251 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066500236 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070097674 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065420224 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06595945 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067977647 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068338739 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073376451 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066171544 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069653995 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068664296 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066341725 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070378384 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072441273 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069887181 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086086303 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075700763 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067333535 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065293227 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083235773 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070741613 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068524644 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074750861 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07130596 seconds)
  done (took 9.419734115 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091945972 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070976531 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089141101 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095377038 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.0800395 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075102589 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08344952 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070419527 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085675131 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068785453 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078779766 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067293358 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082472332 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077952969 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071057496 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07968804 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071640747 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089739239 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084239585 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067885948 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077937223 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081702978 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082374161 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086139968 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084713224 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085613631 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079636463 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071022684 seconds)
  done (took 3.981489167 seconds)
done (took 39.004775184 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.786423289 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.946455216 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.768271925 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.97505335 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.871882281 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.895844495 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.89137748 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.769721121 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.950248451 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.800238668 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.074357177 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.171437004 seconds)
done (took 66.660753895 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.79034743 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.920798905 seconds)
    (2/2) benchmarking "String"...
    done (took 1.991541989 seconds)
  done (took 5.617719485 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.030025737 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.416786561 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.04733948 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.771659261 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.773556982 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.282869557 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.576978671 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.256760748 seconds)
  done (took 30.828321643 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.919253706 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.995961947 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.467613988 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.508698631 seconds)
  done (took 15.642539946 seconds)
done (took 63.703882177 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.810646517 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.767992035 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.773893581 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.804904743 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.769561163 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.772189116 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.769592626 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.771794972 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.819860633 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.86949072 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.770253752 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.781508536 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.769190652 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.801515281 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.479816309 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.829347257 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.78598495 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.77796816 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.780724433 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.790160238 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.772574564 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.771535959 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.232071261 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.954156667 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.373773143 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.031186773 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.301975727 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.160167889 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.784127974 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.769817822 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.856159446 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.027224564 seconds)
  done (took 204.232824104 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.773341068 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.604464763 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.685891281 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.81220174 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.041034542 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.950833777 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.866133373 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.143955261 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.776590935 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.791087774 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.948353633 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.7711985 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.921185119 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.719873803 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.808607797 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.797100701 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.927252122 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.977442269 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.809457895 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.922741027 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.794297643 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.844860153 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.840600884 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.928058718 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.786307679 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.842968969 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.772466439 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.791772222 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.966819608 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.890353469 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.812580328 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.775308216 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.928209306 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.638344147 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.786201532 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.802064334 seconds)
  done (took 168.956911843 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.960955963 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.779507808 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.773197026 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.827516057 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.892027069 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.773786989 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.43370509 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.780590689 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.908780681 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.77654608 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.773346361 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.775230834 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.774181382 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.786300399 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.847937119 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.776425163 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.789949518 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.776112022 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.800304265 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.773478177 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.772991697 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.776238164 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.774710173 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.775029639 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.775893843 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.773326753 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.358201292 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.015161691 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.773724462 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.77637318 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.542641946 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.785714847 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.9785276 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.775788852 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.868385987 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.826798701 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.888338076 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.773204561 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.990661752 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.845155131 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.7738981 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.775757526 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.840264673 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.785642612 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.772824113 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.777628111 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.781735833 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.839336847 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.010394455 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.774580755 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.89591417 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.776385176 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.777946981 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.258191931 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.775973387 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.777642979 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.776771306 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.363425427 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.776219638 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.776906532 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.780623036 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.779640489 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.774610429 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.777842683 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.163247 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.843668475 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.272756467 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.563146578 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.776260889 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 23.147588012 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.841797611 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.777492317 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.778355545 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.778986845 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.777576419 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.777293631 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.776313884 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.780782111 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.899005689 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.784746966 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.901609228 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.8554897 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.895002466 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.779372359 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.787569579 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.617489696 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.844682535 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.811134861 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.603685258 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.777292501 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.149557042 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.5341858 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.774618799 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.777419007 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.793143584 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.775734048 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.779232857 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.779138439 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.858349222 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.776256945 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.897967933 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.50943863 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.47794644 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.779838319 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.779518094 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.779114189 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.787932344 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.863226463 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.897986653 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.777824156 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.842702524 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.780929823 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.77837427 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.854998635 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.776602947 seconds)
  done (took 402.794022646 seconds)
done (took 779.710300419 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.380419032 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.351978789 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.443257493 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.372442267 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.344210196 seconds)
  done (took 13.601708783 seconds)
done (took 15.309988623 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.792388005 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.785065601 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.835103901 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.861466413 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.794706454 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.795339581 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.858735078 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.797424764 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.829545903 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.832613633 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.864030379 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.860355446 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.800552175 seconds)
  done (took 25.417605006 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.789350631 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.928588797 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.998844151 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.820715085 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.789827256 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.001998389 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.8450589 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.919753088 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.938691423 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.010099255 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.019674383 seconds)
  done (took 22.775867154 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.79003313 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.927760787 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.00408845 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.821904684 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.790720826 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.011374702 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.8501436 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.923174136 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.929600618 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.016378668 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.01761181 seconds)
  done (took 22.804286242 seconds)
done (took 72.70757925 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.783774255 seconds)
  done (took 3.496131682 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.807201265 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.982446497 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.783388564 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.785466305 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.783321948 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.785681184 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.783576305 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.78629515 seconds)
  done (took 16.210651616 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.784324911 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.784001177 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.784117262 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.785005355 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.786176434 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.783660014 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.785811704 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.784070001 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.78415885 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.784808234 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.786051515 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.785789379 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.785580039 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.785573374 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.785586526 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.785273318 seconds)
  done (took 30.275233613 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.786669936 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.781787543 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.783860356 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.783747793 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.78510986 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.785898254 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.785939365 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.78327942 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.784165885 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.787304781 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.786163555 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.786788312 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.785360824 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.786463058 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.786171951 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.787624679 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.787153594 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.787235128 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.790044478 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.786759159 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.788384597 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.787389632 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.785513747 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.787328562 seconds)
  done (took 44.582736495 seconds)
done (took 96.284039323 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.54921912 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.837193057 seconds)
  done (took 10.101771389 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.788429606 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.787501334 seconds)
  done (took 5.29814321 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.788707394 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.787857215 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.786581929 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.788452683 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.786160688 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.787425615 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.787120496 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.787122252 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.786328935 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.788001705 seconds)
  done (took 19.593772171 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.78853323 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.789275645 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.789427383 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.790114725 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.787834809 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.7878232 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.78866383 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.790905551 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.791364988 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.788741663 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.788096569 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.789169003 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.78858308 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.789341377 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.790199274 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.78822064 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.788303136 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.791389564 seconds)
  done (took 33.923254338 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.791564638 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.789727096 seconds)
  done (took 5.298530993 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.791686931 seconds)
    (2/7) benchmarking "second"...
    done (took 1.788221444 seconds)
    (3/7) benchmarking "month"...
    done (took 1.790380846 seconds)
    (4/7) benchmarking "year"...
    done (took 1.790173182 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.790255204 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.789046936 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.789265748 seconds)
  done (took 14.246633402 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.793089475 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.946233208 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.999022693 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.40116819 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.792520242 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.794441034 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.643908417 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.792077687 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.792355573 seconds)
  done (took 19.671493577 seconds)
done (took 109.84634997 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.601629644 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.788707729 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.033944139 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.862818229 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.812040039 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.12950191 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.81887748 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.379755138 seconds)
done (took 42.144035517 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.867646209 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.787002015 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.834029741 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.835984804 seconds)
  done (took 22.176223506 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.789825577 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.090761011 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.811544693 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.719682805 seconds)
  done (took 22.152268406 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.17113171 seconds)
    (2/2) benchmarking "read"...
    done (took 2.140819878 seconds)
  done (took 6.036264531 seconds)
done (took 58.951715232 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793637383 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.78900181 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.791470245 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.790987936 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.790353089 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.790989652 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.790486612 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.791375182 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.792075532 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.790659675 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.793039495 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797245575 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792002863 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794115645 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791313819 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.793343469 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.794385808 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.79359905 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793894575 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.792934319 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.792510704 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794054798 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.79436827 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.791736268 seconds)
  done (took 44.741474063 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.792062571 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.792458615 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.795787718 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.790055055 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.791610294 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.792458256 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.792646827 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.793295458 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.794421788 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.795052097 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795288162 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.793165779 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.794742178 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.791581611 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792918613 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.7938325 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.798065165 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794934536 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793056736 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.798929396 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.796763577 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794426704 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.79400399 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795968535 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.795757847 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796822072 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.796022147 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.794011345 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794562076 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.793008195 seconds)
  done (took 55.548514783 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.79409194 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.795172832 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.793489463 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.793924987 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.796924361 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.798676658 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.793147078 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.795003571 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.796904126 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.797002569 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.796446953 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.79534652 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.797255039 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.794501672 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.795685523 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.793351091 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.796953792 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.793738124 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.794936974 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.79747476 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.79679088 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.795545049 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.798701335 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.797725812 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.793999485 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.796739879 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.79772503 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.79824966 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.795560431 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.797941377 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.79652708 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.796370724 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.796324459 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.794515061 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.794368467 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.795062743 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.798248613 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.796730286 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.801334184 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.79783508 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.798770456 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.794750325 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.798053828 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.794770362 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.798504675 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.794648446 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.795313392 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.795919116 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.798387744 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.796040724 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.796478446 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.793965411 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.794841025 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.79426095 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.794059458 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.796750331 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.796052793 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.797252153 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.796275526 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.797237263 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.798742481 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.799711247 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.793703549 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.796805959 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.798163642 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.79651326 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.798642479 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.795716484 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.798099526 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.795920892 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.798424178 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.798386581 seconds)
  done (took 131.069298146 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.796417061 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.797391742 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.797302229 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.797659466 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799313668 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.796788685 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.797514051 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79760787 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797857155 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.798242308 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798108817 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.79949615 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799137673 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.800600928 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801256757 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.800515753 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.797907031 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.799163964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.802586451 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.798518707 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.800695505 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.802718457 seconds)
  done (took 41.303378468 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799726298 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.800952631 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.798844686 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.800976953 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.803400672 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799492711 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.800309194 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.799967812 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803802544 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801868649 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800998669 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800376487 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.801148795 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801757767 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801533055 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.800872624 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801458048 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.803116704 seconds)
  done (took 34.153392869 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.799561093 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.803950493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.803025451 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.802301747 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.798941794 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.802608535 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799833447 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.803258466 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.802433245 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.801534044 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.802025749 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801348536 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.804673473 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799864678 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802559185 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.800771481 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.803819221 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801513751 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80395221 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801784841 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.80254384 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799756592 seconds)
  done (took 41.373229393 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802333134 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.80241821 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.800751115 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.802259274 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.803105335 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.804351342 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.805087512 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.804267478 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.804135718 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.80315693 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802548415 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.80348091 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.80403787 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.803041448 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.802661952 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800684611 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.803175462 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.806931094 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805394615 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.80390416 seconds)
  done (took 37.802445688 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.806301117 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801818982 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80794469 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804407915 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804531472 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.805325283 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807852653 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.805144177 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.807058468 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.804560648 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.802875655 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.804463211 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801372855 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.803321923 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.803337853 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804350729 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.802560461 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.802734791 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.80192374 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802192935 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.804337836 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.803397045 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.806884115 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.80320232 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.804867165 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.802606447 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802524617 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.802423244 seconds)
  done (took 52.249438437 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804424735 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.803061137 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.802529338 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.805660255 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.805488246 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.801977247 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.803924676 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.805614104 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.803900534 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.802732486 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.802365626 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.806823232 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.804812732 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.802488388 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.803874606 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.803227555 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802150781 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.806006361 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80243295 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805032935 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.80274847 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805722127 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.80262143 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.807464525 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804605852 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.803418338 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803025975 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.806176365 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80555601 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.804569153 seconds)
  done (took 55.86020245 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.825945998 seconds)
    (2/2) benchmarking "in"...
    done (took 1.824538269 seconds)
  done (took 5.381275582 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.80688072 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804537697 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.803102882 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.803558409 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.803592176 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.804513341 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.806452402 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804098069 seconds)
  done (took 16.171130468 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.806611497 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.806197046 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.803509748 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.802292419 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.803166509 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810649312 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.803911258 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.80375563 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.806100131 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.803159529 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.807635383 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.80794046 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.811595535 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.807511436 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.805254336 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.803442671 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805774406 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.807797626 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.806650115 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.80514655 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807541221 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.80519044 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.804711241 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.806009451 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.805220982 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.808885201 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.815832535 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.807005489 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.807783043 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.806307517 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.812526868 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.803955862 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.805689532 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.80674122 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.807007394 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.807170215 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.813340169 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.806891395 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.805808689 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.805709793 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.810684729 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.809949964 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.810239425 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.814665626 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.805057782 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.807316041 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.806664879 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.805393456 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.807352057 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.809165601 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.815444486 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.806818024 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.808271494 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.804738003 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.807579668 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.806494542 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.808396882 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.807572581 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814462444 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.814905244 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.811504977 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.827899735 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.815333651 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.808194392 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.80886941 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816490043 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.830434718 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.80965666 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.809193071 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.806008943 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816119183 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.806606349 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.807467213 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.80602794 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821707324 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.816093165 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.807287575 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.80789961 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.809022152 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.808199324 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810575715 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.808712625 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808223517 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.809590437 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819539089 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.834362964 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.811356684 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.807342187 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.812287539 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.809482564 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.814978157 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.811414229 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.806889163 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.809332659 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.810915632 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.811710218 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.812807658 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.808931 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.807802689 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.81910929 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.808174104 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.810716925 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.811787789 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.816756037 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.808549455 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.80872165 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.809380845 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.812146593 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.818087561 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.809726424 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.810691968 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.80926749 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.810621251 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.816554191 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.809808407 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.814147285 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.819818584 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.820170979 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.812397545 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.81496056 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.81490834 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.815562655 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820097917 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.836466524 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.809319614 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.812874702 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.815293002 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.824337801 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.814248825 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.812587566 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.814115118 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.809336492 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.811252257 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.813179557 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.81229172 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.810598339 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.811785307 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.810923401 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.81100209 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.81316156 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.817729353 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.814255506 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.81326027 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.812562293 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.817231369 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.81223005 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.815122786 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.818668398 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.811803714 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.81203543 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.810806467 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.814835013 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.813697115 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.812400085 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.811095254 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.811064279 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.811934367 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.812133632 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.814353932 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.813564101 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.812655942 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.812155893 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.818568303 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.81291102 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.810830937 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.810466923 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811624161 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.811234416 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.815061117 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.814276732 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.814101545 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812959511 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.818995685 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.814177398 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.813200093 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.812827472 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.814475791 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.813824075 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.81868056 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.826154061 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.818372293 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.822652607 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.813704013 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.82221155 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.815352626 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.816168818 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.813370506 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.815097847 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.813298996 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.814261317 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.815732287 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.819232532 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.834976189 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.824499893 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.815840599 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.817334914 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.822084912 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.820162993 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.820405261 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.816421772 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816184621 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.819970333 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.815484859 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.814369625 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.815255223 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.81955418 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.815447271 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.816363697 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.818523579 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.814962851 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.812888341 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.815253778 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.816849156 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.819073382 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.815029676 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.815040169 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.814720033 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.815171914 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.825079314 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.819626792 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.816342719 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.815310264 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.817322338 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.818218161 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.817098809 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.816595665 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.819448051 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.814548978 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.818560297 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824785643 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.81576655 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.818516472 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.814622907 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.814119628 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.821846464 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.817377289 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.821267988 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.825414595 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.81858835 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.81745666 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.822159713 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.816002688 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.819912659 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.816047553 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.819441523 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.819250602 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.820080414 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.815458178 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.816365615 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.823350937 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.816275808 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.81793255 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.81825243 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.820899714 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.818043886 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.81936355 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.818520811 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.82124274 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.82538327 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.824136477 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.817150933 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.823607476 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.822177763 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.819937431 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.822062866 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.819120111 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.832008397 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.826493037 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.818025816 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.817323487 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.81736057 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.820033519 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.818881122 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.817048303 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825975796 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.818691607 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.819473338 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.823895499 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.819740762 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.818586101 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.826695403 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.818022679 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.823743842 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.822477519 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.821509263 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.821507552 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.820051972 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.822321985 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.818566585 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.821159536 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.822721392 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.818373914 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.82185987 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.818662448 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.828032503 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.818542256 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.819935198 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.827540817 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820546059 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.819835353 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.820655764 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.819536076 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.820877939 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.822931961 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.818984925 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.819339336 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.820782526 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.823186407 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.830814321 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.824870719 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.831820175 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.824373423 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.833229545 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.820379253 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.822482588 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.82312967 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.826980267 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.829413231 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.820586396 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.817328364 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.831287628 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.82055178 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.822049503 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.823179019 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.820418873 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.818434756 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.820611466 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.820275525 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.825721428 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.823593854 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.821004184 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.819458795 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.820613948 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.822034533 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.824265096 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.82250133 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.822351509 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.822053738 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.821890691 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.820056287 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.822358192 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.822328011 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.82109686 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.822597358 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.824560014 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831611107 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.821345441 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.823939683 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827640749 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.822829177 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.832624442 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.822652294 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.823952404 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.825813415 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.825129156 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.82967492 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.82535871 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.823936129 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.824742733 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.82449141 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.824736112 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.836876708 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.832869117 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.829434918 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.826463234 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.82590656 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.826413598 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.834662214 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.851857386 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.8233474 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.829075382 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.829004146 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.830168608 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.826007269 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.829456316 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.827790935 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.833943014 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.827212474 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.823624453 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.827511722 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.837213773 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825645485 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.827824988 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.824010343 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.827033118 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.825609175 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.823983798 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.826223777 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829043637 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.82558472 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.837290122 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.823889388 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.827973662 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825706039 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.826891044 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.824919532 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.825509507 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.826497457 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.827787972 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.82658613 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.827234385 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.826763797 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.833094442 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.824835173 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.831266868 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.836154111 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.825944514 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.82799501 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.82992182 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.826026314 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.828001349 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829173301 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.82617006 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.829517665 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.828520134 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.829154382 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.832318499 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.837092511 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.82771979 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.828530911 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.827555205 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.830078401 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.825975723 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.827475828 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.829529597 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.835887606 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.830557815 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.839865799 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.838374428 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.829441239 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.829897677 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.838130495 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.838051532 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.827778776 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.827071832 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.828571831 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.831724666 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.830733882 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.829310611 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827048268 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.828933271 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.835180435 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.828492986 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.829137681 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.829193312 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.831588666 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.83395755 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.831585224 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.83636857 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.830027543 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.829947535 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.828257526 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.831020751 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.831713935 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.832062895 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.830015111 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.831297669 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.832729055 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.833206012 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.836015359 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.829979939 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.829692344 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.833725904 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.831158339 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.831188126 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.830264312 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.831821745 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.831533623 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.834365142 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.839234772 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.829304948 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.833897585 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.831274066 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.834021172 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.832857042 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.831719879 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.831103692 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.831707019 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.839939361 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.828263506 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.832546134 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.833460601 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.831520396 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.838630526 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.833923942 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.836403491 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.830808363 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.83180906 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.830763861 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.836553005 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.842516494 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.837127797 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.836439689 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.839462657 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.836553619 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.83488097 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.832536751 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.83180353 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.832646939 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.832877344 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.836247606 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.835396167 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.835706556 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.830681905 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.834839052 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.832332272 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.834966177 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.832837598 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.833399826 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.837622758 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.841722791 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.842979338 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.831984904 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.834984438 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.830997716 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.835588345 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.844663369 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.832049215 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.831265851 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.832257453 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.835145762 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.834982829 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.842291776 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.842652576 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.838387565 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.835138711 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.840386137 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.852552165 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.836816577 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.842884614 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.86716438 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.835643105 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.833700064 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.835003364 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.834969108 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.834089612 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.83656392 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.835432544 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.841914862 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.833990715 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.83593968 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.8418408 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.831966823 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.833594166 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.834489917 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.836354663 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.841591644 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.836476991 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.843183774 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.835453983 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.836061276 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.834726789 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.837314352 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.834889094 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.835226513 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.835697773 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.838217716 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.836176193 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.835413968 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.845226666 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.836189425 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.836328635 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.850082642 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.847014685 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.836377863 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.835074757 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.835539959 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.841257658 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.837944796 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.834299213 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.83855551 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.843722601 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.842467145 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.845510254 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.83935858 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.838026427 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.838405168 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.837468364 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836679361 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.851471137 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.847760147 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.836591435 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.836975623 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.843561402 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.83683919 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.844054328 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.842757723 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.83675389 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.837719411 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.834839251 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.836236545 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.836380518 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.835896427 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.840350883 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.844669685 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.838109322 seconds)
  done (took 1088.322433051 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.836652095 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836633639 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836140707 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.836575993 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83578591 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837029899 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837878674 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.838246618 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.83823234 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.836618334 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.836130003 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83684633 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.83668864 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.83805755 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.838430272 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.83776469 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837393476 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.836032989 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.838560478 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837713735 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.837657589 seconds)
  done (took 40.346028155 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.837630729 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.836474759 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.837524881 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.83708484 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.837904552 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.839536161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.838862522 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837520164 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.839189368 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838714662 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.838546426 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839470522 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.838562805 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.840121996 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836744209 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.838552093 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.840519058 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.83857503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.838233049 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.839653766 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838125728 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.836757116 seconds)
  done (took 42.209597255 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.838754296 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.837197847 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.8391814 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.837355766 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.837387079 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.838661671 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.838526436 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.84120015 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.837558783 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.838898451 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.848402229 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.848431496 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.838647049 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.842874004 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.84007002 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.84051858 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.984547752 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.839648455 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.837675109 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.838933401 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.838858914 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.847074532 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.83775275 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.839218417 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.838218689 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.840134921 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.840670468 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.840192857 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.840112076 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.841586207 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.843721256 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.843638843 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.842732067 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.844380476 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.840812771 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.841925406 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.844321238 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.840696788 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.841849124 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.841496798 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.851826525 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.866472061 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.840971055 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.841978739 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.849727657 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.840710984 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.84345443 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.847070123 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.851052325 seconds)
  done (took 92.175850933 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.841344275 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.842352305 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.84216712 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.842037412 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.841776655 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.843034871 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.841557888 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.843907242 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.842540717 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.841907105 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.843436727 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.842399353 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.843339267 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.844910265 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.843177205 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.841971348 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.842456256 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.843945949 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.843125467 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.84072545 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.844217624 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.842058014 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.84368257 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.842939178 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843031167 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.844199886 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.842617779 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.842889443 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.842315383 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.841750927 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.844552574 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843445761 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.843645033 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.843928269 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.843643657 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.84376359 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.844204106 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.843815974 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.844748325 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.843942125 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.844645259 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.842590505 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.843968867 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.845004496 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.842337381 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.843716803 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.842590953 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.845582889 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.842741406 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.843909384 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.846291425 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.843067657 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.845612568 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.845313682 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.844131756 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.846107195 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.845288654 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.844065861 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.843829283 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.843536965 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.845502926 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.845194921 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.84613139 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.845713226 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.842997986 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.844117451 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.843835759 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.843502565 seconds)
  done (took 127.135112232 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844909894 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.843840395 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845935078 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843852603 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845294577 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.844072537 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.844456952 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.843540687 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.843255994 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.844024498 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844997563 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.84408251 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.844361658 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.845734833 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.844911702 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.848545801 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.847567033 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.846306481 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.846034838 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846553228 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.84602566 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.847267082 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.84567432 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.849205298 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.847855026 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.848072445 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.848326948 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.845667577 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84682039 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.847048622 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.847671609 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.848326411 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.847431103 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.847367938 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.848504385 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.847307846 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.848562558 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846889516 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.848533637 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.84618988 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.849556362 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.847071663 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.847307268 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.847742108 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.847912338 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.847595669 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.848602488 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.847755033 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.848123854 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.848957526 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.849610965 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.847892871 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.847569143 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.849366218 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.848797877 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.847305465 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847494436 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.84906525 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.8478767 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.846940684 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.849380807 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.847880971 seconds)
  done (took 116.284823766 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848534596 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.84741887 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.84695204 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.846573908 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849341129 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.846456888 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.850197395 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.848176532 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.848023123 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.848104035 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848431718 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848344756 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849553842 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848738276 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.847022121 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849162993 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.848420313 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850232924 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847032089 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.849679874 seconds)
  done (took 38.74202056 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.849010058 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.848652058 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.850503014 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.849444838 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.84939702 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.85120121 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.850667291 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849857818 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850430575 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849409634 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.848202472 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.85130245 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850172755 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.84870608 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.848874507 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.850073433 seconds)
  done (took 31.372338764 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.850145266 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.849934426 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.850716268 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.851702708 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.852520566 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.851112437 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.851865747 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.850679075 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.8497993 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.850733565 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.851774401 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.852178327 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.84957125 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.851089959 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.850694788 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.850872757 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.852324415 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.853279526 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.853030361 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.851280811 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.853689861 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.851453354 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.852045301 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.852505029 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.852031849 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.850948433 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.852154073 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.850801101 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.851469676 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.852708674 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.852512752 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.852323606 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.852075283 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.851987199 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.851177045 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.852227076 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.852718224 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.853250018 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.851049595 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.851482408 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.852215429 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.852046086 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.85222459 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.85265702 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.855843342 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.853986031 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.851380999 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.850970742 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.852317659 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.852535627 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.852096219 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.852802123 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.85381922 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.854132147 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.852252287 seconds)
  done (took 103.639054038 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852067996 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.851045998 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.852738822 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.852340953 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.853626131 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.852218725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.85461824 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.849826068 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.852663844 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.854126573 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.853577283 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.854193107 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853849085 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.854683731 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853698787 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.855465197 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.85487268 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.853219701 seconds)
  done (took 35.136624995 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.855155265 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.856224108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.854138402 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.854710906 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.855426135 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.856045964 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.853350008 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.854975928 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855985104 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.855773119 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855940563 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.857011183 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856361376 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.855819958 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.855655901 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856323783 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.856266582 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.855918869 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.853573056 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.858094058 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.854923934 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.858172546 seconds)
  done (took 42.607980383 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.85727615 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.856586782 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.873123381 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.881852175 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.879097876 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.8966027 seconds)
  done (took 13.027331472 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85787843 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858761318 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.856848403 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858016144 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857195446 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858598342 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857049396 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856975578 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856908352 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856018968 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85860281 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857272238 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856223756 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858940329 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858265549 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858458504 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85668066 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855857477 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856396611 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856539606 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855124976 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856323349 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856857681 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854636291 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856804765 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855177041 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858266208 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857054464 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856596536 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857123251 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857196718 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85936872 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8581234 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859910315 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856549266 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858348373 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857678181 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860406079 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860195173 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858613902 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.860011316 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858717996 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857353852 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859901576 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85793998 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856781452 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858097095 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861572428 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858620907 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861342662 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859446151 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859751017 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859222805 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8593016 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859622913 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860005483 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859383162 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859160859 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858777966 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858185008 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858583782 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860512875 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859064162 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860926783 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858200463 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8592415 seconds)
  done (took 124.425811008 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860391978 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.859879092 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858191702 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860867015 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858904237 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859794786 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859466337 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860759915 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859968829 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858825808 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861271797 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860631808 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860838529 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862640149 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863233455 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86002465 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862132683 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860151669 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861242681 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862092235 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861966534 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861393595 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861620307 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86106741 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861589897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863662373 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863568198 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861928589 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860973093 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866049367 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862227989 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861639711 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861575468 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.862370777 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862369208 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863245266 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863916942 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86272929 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863640984 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86231608 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861932656 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861990408 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864479428 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863229453 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863778246 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865379542 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863224235 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863650766 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864313637 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86238479 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862504659 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866034163 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864693399 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86232212 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863058484 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861587955 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861318026 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866015178 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8620879 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863332579 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865197975 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863969525 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864927759 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863722808 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863756768 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864500115 seconds)
  done (took 124.702421303 seconds)
done (took 2537.506674377 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.973000851 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.967385125 seconds)
  done (took 15.729174365 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.02869895 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.980626128 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.867907405 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.898687904 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.864926246 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.891287121 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.862516402 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.863836907 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.866523423 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.868744474 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.86763148 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.052825332 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.925085406 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.865449255 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.867699239 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.959770114 seconds)
  done (took 52.344230526 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.874455309 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.871479737 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.881167249 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.871458214 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.873757776 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.884599555 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.900176193 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.876681878 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.910612855 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.885615163 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.940859968 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.88056353 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.872888874 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.924012928 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.880438299 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.885381433 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.963712779 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.947964594 seconds)
  done (took 35.919558894 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.951523553 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.881792347 seconds)
  done (took 10.632843824 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.875647891 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.891416648 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.875180122 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.897928288 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.871990527 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.901848783 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.868604102 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.877974241 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.90166595 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.901350621 seconds)
  done (took 70.689381736 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.877071633 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.872944108 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.875344715 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.869343215 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.868567498 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.871727239 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.870693146 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.874810701 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.563751148 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.907942074 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.880656958 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.880323651 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.872147482 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.872447468 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.869789164 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.89840317 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.039920095 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.868002397 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.868325483 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.878364737 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.872110549 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.927960451 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.887034821 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.873759073 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.905977998 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.558273459 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.879781728 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.879021423 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.036944799 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.868913577 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.874947912 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.083926727 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.877444461 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.316434615 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.186165466 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.874780851 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.879687708 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.880474266 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.869129298 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.043127226 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.872556101 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.877339745 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.736804095 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.160440831 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.968614444 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.919279503 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.217879693 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.873636422 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.873507849 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.907269981 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.875292956 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.872545922 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.888378739 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.383242017 seconds)
  done (took 133.180847575 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.87415254 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.116980235 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022224362 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.87276553 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123845022 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07739166 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.857087677 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.920704113 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.869818635 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.066346387 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.127996104 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.968824545 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868937933 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.870105228 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.870599227 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866898395 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.013173031 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.935569536 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.872791202 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.865534015 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896371054 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.07315587 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.994099101 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.871437149 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.894505517 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.081021941 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.989148079 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.970339058 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.653006486 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.872086237 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.93364536 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.873063146 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.871205712 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.867458694 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.025698964 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.962688739 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952360792 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.872337185 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871379338 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.868162779 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.631005201 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074978677 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.964273418 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.992877619 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.126365531 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.085383758 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.478537598 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.872374085 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.498769025 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.040761604 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.076485706 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.074321061 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.988555224 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.877276227 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.419725989 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.871173895 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.873298512 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.094713261 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.09411245 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.971891542 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.870956568 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.873508047 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.869336889 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.165861617 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.871957574 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.967767844 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.876184841 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.8709441 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.964164091 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.97096939 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.101045034 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094241841 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.905169142 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.198230469 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.371367915 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.07616471 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.937396235 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096001535 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.872976276 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868837568 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950985175 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.717595755 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.127670062 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.159713512 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.074284031 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899999809 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.501348561 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.872968633 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.060990099 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.057472141 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.111799057 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.125865796 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.11138328 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.194488266 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.879869991 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.874929447 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.161395185 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.986427986 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.815882539 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.220143823 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.107025528 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.356079244 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.901326315 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.161422481 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.001150051 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.877413738 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.517506311 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.875736447 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.082052331 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.914610681 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.876575461 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.876620582 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.060537112 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.786372479 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.876318352 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.830452693 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.935370038 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.876958296 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.07798222 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.874824837 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119475162 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.877095652 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111795126 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.444750115 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.907331002 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.106945212 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.123102059 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.511922088 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124365773 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.116126827 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.987414542 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.153721539 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.867215929 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.878808215 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.139262571 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876472285 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.875730867 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.049555576 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.879236165 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018907171 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.882107316 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.146916948 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894680577 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110909327 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.881669759 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.109763459 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.907360242 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927233211 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.877852662 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.003003446 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.881239907 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.821493516 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.038662257 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.88133041 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.874097813 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.695554925 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.87806742 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.031824482 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.107373272 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.895629195 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.947149582 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.42111911 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.858699975 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.960373134 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900786725 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 4.419643044 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.877984057 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.131998752 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.817609709 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.343045761 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.878921261 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.168432229 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.114231059 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.879603161 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.874759392 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.718510839 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.865423975 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.879556176 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.033808734 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.226517192 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.632731053 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081901385 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882636288 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004748392 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.884579252 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.955747473 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.211909399 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.876933133 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.876972692 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.879856711 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.877422383 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.876824267 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.144183575 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.902794972 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.311816063 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.013434242 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.132473345 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.180635936 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.080134865 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.917715207 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.883880506 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.185083977 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.885857311 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.940759656 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.882429933 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.897669974 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112005416 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882595295 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.139520027 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.115869603 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.896573723 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928734081 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.880288055 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.88102895 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.806707162 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.027629309 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966100068 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.882697878 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.880952521 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.994465693 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.002544529 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.063373409 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.575402282 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.003285091 seconds)
  done (took 903.744841733 seconds)
done (took 1224.027856996 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.883512622 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.884873008 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.885890631 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.881685812 seconds)
  done (took 29.343508382 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.883527242 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.881902146 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.883028029 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.880707124 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.882822777 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.884622896 seconds)
  done (took 13.104913759 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.88299389 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.884717901 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.88561798 seconds)
  done (took 22.460366658 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.957523615 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.289638482 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.022769772 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.31126839 seconds)
  done (took 10.388989523 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.883822078 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.882093706 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.886138516 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.885525174 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.886011156 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.887518149 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.887055575 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.885743967 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.887473669 seconds)
  done (took 18.78204559 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.88400418 seconds)
done (took 99.771193837 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.983527762 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.860635301 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.883549554 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.115206584 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.209087076 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.899657452 seconds)
    (7/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.884978365 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.958836979 seconds)
    (9/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.254393901 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.973263698 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.89657922 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.899674263 seconds)
    (13/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.891900235 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058290927 seconds)
    (15/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.655137728 seconds)
    (16/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.9651054 seconds)
    (17/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.971680087 seconds)
    (18/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.010457854 seconds)
    (19/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.135722088 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.036256537 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.01272483 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.187547254 seconds)
    (23/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.179925044 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.901632299 seconds)
    (25/309) benchmarking ("sort", Float64, false)...
    done (took 5.582267129 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.098752155 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.584971705 seconds)
    (28/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.836393801 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.957828469 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.967082847 seconds)
    (31/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.900924452 seconds)
    (32/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.971621658 seconds)
    (33/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.064543968 seconds)
    (34/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.542297722 seconds)
    (35/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.993156049 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.885255343 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.008436792 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.884050673 seconds)
    (39/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.112345373 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.138032675 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.023192639 seconds)
    (42/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.45869696 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.980467229 seconds)
    (44/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.969534768 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.138503697 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.891038225 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.975794736 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.971093388 seconds)
    (49/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.30672332 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 2.108756673 seconds)
    (51/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.078475762 seconds)
    (52/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.26338709 seconds)
    (53/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.890355456 seconds)
    (54/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.044396688 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 5.5027912 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.141348387 seconds)
    (57/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.030726458 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.216008539 seconds)
    (59/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.09552496 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.007990452 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.914590622 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.988397765 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.287006522 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.19603007 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.910876214 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.24809865 seconds)
    (67/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.99453236 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.972158014 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.753683052 seconds)
    (70/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.656017076 seconds)
    (71/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.444113236 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.020888027 seconds)
    (73/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.892617281 seconds)
    (74/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.119768039 seconds)
    (75/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.901222127 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.899535318 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.910039648 seconds)
    (78/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.02610001 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.098513866 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.153050994 seconds)
    (81/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.895344897 seconds)
    (82/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.296100099 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.54133351 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.918570363 seconds)
    (85/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.022159387 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.152592311 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.023074824 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.115838643 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.799700355 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.243372934 seconds)
    (91/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.341404447 seconds)
    (92/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.903916763 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.895146443 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 3.692595751 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.232652724 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.991846785 seconds)
    (97/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.054313166 seconds)
    (98/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.38139701 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.955898174 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.189629666 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.490333506 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.296449411 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.713983981 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.012888275 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.913069656 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.790331905 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.915389421 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.217753086 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.89921147 seconds)
    (110/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.973630323 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.792589338 seconds)
    (112/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.980177096 seconds)
    (113/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.7780791 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.897228643 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.183292429 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.176175457 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.991923071 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.990568908 seconds)
    (119/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.2566082 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.187998144 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.907768607 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.894913618 seconds)
    (123/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.654499813 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.188816806 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.788840817 seconds)
    (126/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.915337882 seconds)
    (127/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.166253577 seconds)
    (128/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.154991398 seconds)
    (129/309) benchmarking ("sort", BigInt, false)...
    done (took 6.895547013 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.897042053 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.283961694 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.026196901 seconds)
    (133/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.908059945 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.134653957 seconds)
    (135/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.959620814 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.918224724 seconds)
    (137/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.043993679 seconds)
    (138/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.153558745 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.284208895 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.911755461 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.286971012 seconds)
    (142/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.828068672 seconds)
    (143/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.118258825 seconds)
    (144/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.070701338 seconds)
    (145/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.057389586 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.899567908 seconds)
    (147/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.896421068 seconds)
    (148/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.247025175 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.922718653 seconds)
    (150/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.958288728 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.201753611 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.208759576 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.89921534 seconds)
    (154/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.16083459 seconds)
    (155/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.531962563 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.908368177 seconds)
    (157/309) benchmarking ("sort", Int8, false)...
    done (took 4.865346966 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.775510656 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.902763354 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.34871478 seconds)
    (161/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.543847013 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.662298681 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.200251323 seconds)
    (164/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.206163808 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.100256214 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.921725675 seconds)
    (167/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.943892619 seconds)
    (168/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.384144888 seconds)
    (169/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.89876094 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.197811021 seconds)
    (171/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.105681797 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.286992266 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.888279028 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.282612377 seconds)
    (175/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.592079812 seconds)
    (176/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.138818683 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.893859372 seconds)
    (178/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.269978843 seconds)
    (179/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.082067055 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.894949154 seconds)
    (181/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.294305797 seconds)
    (182/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.371992785 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.068611497 seconds)
    (184/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.000840752 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.884621569 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.994145122 seconds)
    (187/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.648181248 seconds)
    (188/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.132281677 seconds)
    (189/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.022008323 seconds)
    (190/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.027472913 seconds)
    (191/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.214368912 seconds)
    (192/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.363715769 seconds)
    (193/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.899440156 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.927194679 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.02653382 seconds)
    (196/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.314131412 seconds)
    (197/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.202970849 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.132310137 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.896615523 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.094105749 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.079437313 seconds)
    (202/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.41292195 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.910656253 seconds)
    (204/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.045245734 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.901943314 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.276522662 seconds)
    (207/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.316863268 seconds)
    (208/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.892630374 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.465370788 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.894876085 seconds)
    (211/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.040943787 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.892957368 seconds)
    (213/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.911768939 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.89572451 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.63663775 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.908192759 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.489137297 seconds)
    (218/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.999809748 seconds)
    (219/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.894614875 seconds)
    (220/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.989650598 seconds)
    (221/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.644860397 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.216354943 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.135202639 seconds)
    (224/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.270972676 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.907121666 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.297357207 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.646090447 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.187006198 seconds)
    (229/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.895952518 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.249221647 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.29188949 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.894781027 seconds)
    (233/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.134478828 seconds)
    (234/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.988491337 seconds)
    (235/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.997739744 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.674807126 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.330915559 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.898005284 seconds)
    (239/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.693144057 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.017945338 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.907617775 seconds)
    (242/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.029174825 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.146514718 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.023817086 seconds)
    (245/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.970359159 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.112278325 seconds)
    (247/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.28817423 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.77427332 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.901092714 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.914388381 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.189762363 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.67825146 seconds)
    (253/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.107732403 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.212981664 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.915574312 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.898200725 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.915108328 seconds)
    (258/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.028381666 seconds)
    (259/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.372897407 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.028576028 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.899210294 seconds)
    (262/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.18342344 seconds)
    (263/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.912738264 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.206780365 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.715969745 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.986481553 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.897005135 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.333897481 seconds)
    (269/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.975328436 seconds)
    (270/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.982521757 seconds)
    (271/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.165924107 seconds)
    (272/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.982225969 seconds)
    (273/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.899257757 seconds)
    (274/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.999954998 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.702499499 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.900357969 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.900224788 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 3.493015277 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.706629887 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.343522197 seconds)
    (281/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.916477003 seconds)
    (282/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.992140593 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.135309907 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.100553765 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.915852622 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.001407527 seconds)
    (287/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.355376927 seconds)
    (288/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.448361151 seconds)
    (289/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.927952666 seconds)
    (290/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.976207941 seconds)
    (291/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.100289806 seconds)
    (292/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.653539136 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.144342072 seconds)
    (294/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.918104563 seconds)
    (295/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.103307488 seconds)
    (296/309) benchmarking ("sort", Float32, false)...
    done (took 5.54842119 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.783208255 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.998821493 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.902842706 seconds)
    (300/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.000890104 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.029231519 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.914586944 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.137081874 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.923982279 seconds)
    (305/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.977120974 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.110461787 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.900212904 seconds)
    (308/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.110791221 seconds)
    (309/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.391071315 seconds)
  done (took 1019.344513007 seconds)
done (took 1021.219115791 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.928874591 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.922414283 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.906134698 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.927404299 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.019143208 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.950212094 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.918657142 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.908646937 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.956631393 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.957535974 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.906698436 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.946037514 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.908255383 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.906525841 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.904146496 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.922857247 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.215742359 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.937110296 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.925221738 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.917280699 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.925755461 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.90603515 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.956132333 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.946673574 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.911394086 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.913912539 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.912167583 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.926508008 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.021254436 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.911881407 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.91177393 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.921605385 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.215196825 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.933216566 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.905126882 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.926684653 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.920668311 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.920174489 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.910984061 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.941543934 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.360908271 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.912032305 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.909964202 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.909054352 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.910933507 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.917167765 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.911156708 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.91726505 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.924192855 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.925074187 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.360250613 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.925960704 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.91350617 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.909996778 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.923326345 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.912197547 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.914285352 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.928781435 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.929726763 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.926483051 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.20708863 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.944824049 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.912061336 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.927651418 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.918829665 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.393696902 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.909072433 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.917383303 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.363434248 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.920093492 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.395432562 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.927304989 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.914587005 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.926567772 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.942770461 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.217080445 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.935663877 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.908850564 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.918859436 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.909192299 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.923362492 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.927529428 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.915495777 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.909785766 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.928860535 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.953738489 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.92428515 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.911387837 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.924817875 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.929274044 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.919778127 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.923195748 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.916772269 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.908776107 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.922890521 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.915647563 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.915061471 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.915063725 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.915814318 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.926250699 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.360941335 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.931024787 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.908702351 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.908678782 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.910456982 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.928048143 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.360879243 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.917582432 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.935629425 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.962139218 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.915392929 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.211195876 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.942694089 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.930570208 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.922893662 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.916357179 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.908987958 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.2088168 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.389770958 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.929998675 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.912719755 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.912307711 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.929176502 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.91429079 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.911511348 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.22154575 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.942581698 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.929217193 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.036291902 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.92564318 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.947243496 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.911790296 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.918516168 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.956617774 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.929163208 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.945348176 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.914240807 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.930539286 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.931433834 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.911909843 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.925655957 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.927563442 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.911317412 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.923101359 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.910190372 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.958433617 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.927610498 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.927874807 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.935644697 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.035529341 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.910784622 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.20922297 seconds)
done (took 300.474568311 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.995766919 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.909569525 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.00484903 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.91064686 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.003690442 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.988012864 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.911509513 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.911564917 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.911015152 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.425795628 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.910149169 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.91553843 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.911227479 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.91172173 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.986629502 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.910520429 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.910020323 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.201041263 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.913339064 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.997970061 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.911395384 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.912525741 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.911130643 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.43208123 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.910722362 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.91241413 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.998826725 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.912965468 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.214054947 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.911238945 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.912760818 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.212213991 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.998320892 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.925365024 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.919383963 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.918932968 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.004269777 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.921469298 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.984896827 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.984707283 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.003605561 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.948631929 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.914366815 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.91279805 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.916950779 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.914491525 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.913256106 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.946016342 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.913171839 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.920546987 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.199568677 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.917710599 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.917625445 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.912572177 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.915788354 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.930031277 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.913433983 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.914165589 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.997760887 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.914972234 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.986190704 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.432795446 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.432584611 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.914872399 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.912680084 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.914113846 seconds)
  done (took 187.618270009 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.98040221 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.986161711 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.980250589 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.921186218 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.963153572 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.983270623 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.921561812 seconds)
  done (took 15.574237144 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.921829729 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.915097121 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.974848562 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.975253852 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.916200053 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.092582222 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.927672841 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.920753398 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.942446105 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.917794962 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.579238003 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.976344114 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.925153778 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.916503847 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.928547616 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.980203702 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.918912541 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.916689054 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.025037369 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.065429389 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.919046662 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.922490346 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.9415615 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.927493388 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.916627427 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.919115738 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.917011934 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.923137683 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.915723361 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.918268545 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.917459524 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.981627199 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.920169052 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.916947489 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.916242029 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.917535014 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.916561501 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.916624066 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.919348084 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.91901385 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.916228317 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.916121024 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.917612968 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.919001754 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.916183699 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.942588774 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.916603258 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.917996291 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.918584693 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.917345039 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.944481761 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.919994126 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.917276313 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.922297191 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.962221549 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.927706687 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.918467279 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.917953936 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.918525499 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.918674479 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.918151058 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.067994369 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.977298689 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.918876364 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.977836973 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.073307302 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.91867462 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.917980375 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.917801864 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.010443797 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.919439942 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.977856698 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.918150515 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.037489433 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.918183272 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.099217213 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.94288366 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.922770783 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.923021849 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.917785728 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.92800491 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.91776581 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.922593944 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.927511033 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.925301748 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.918369859 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.920065549 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.921577084 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.927607018 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.91745079 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.96737083 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.919469157 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.921707235 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.060967987 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.920821312 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.036510532 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.949406076 seconds)
  done (took 210.783754277 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.927143903 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.92645613 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.921433418 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.934623324 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.921805631 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.921178734 seconds)
  done (took 13.394224982 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.921375617 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.923999811 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.920477523 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.918989309 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.922022375 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.921709475 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.917877913 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.920856883 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.923267641 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.920621598 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.92002498 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.920426593 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.920482076 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.921809134 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.920511353 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.919806057 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.920563209 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.91980785 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.92247445 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.922964677 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.07466382 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.923860501 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.920769926 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.926249148 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.92592381 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.920805641 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.935382656 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.921423936 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.920835875 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.931594964 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.928220747 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.921481367 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.926088094 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.929960759 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.924349866 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.927544576 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.925487702 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.921743687 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.920472729 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.92167199 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.924036993 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.921821966 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.922809869 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.92394813 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.927705854 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.933387853 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.927559342 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.935650442 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.921257984 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.923949937 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.924067152 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.923886124 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.920214691 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.923322704 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.928618631 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.928397697 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.928309886 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.923261963 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.923131339 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.928008406 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.92640413 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.922260432 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.926090516 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.928171168 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.92875912 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.92451143 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.928934414 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.928314897 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.923977748 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.922509385 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.924997358 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.922495042 seconds)
  done (took 141.536264411 seconds)
done (took 570.758155927 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.981038135 seconds)
  done (took 8.827253418 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.10264486 seconds)
  done (took 9.032454068 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.722413079 seconds)
  done (took 10.57222034 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.93483261 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.924150764 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.935162582 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.922098607 seconds)
  done (took 29.573784435 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.136297142 seconds)
  done (took 8.98358569 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.937542157 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.917591353 seconds)
  done (took 15.773734067 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.064747557 seconds)
  done (took 8.913568534 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.971224582 seconds)
  done (took 8.841582221 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.932009805 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.937692951 seconds)
  done (took 15.738280812 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.928380028 seconds)
  done (took 8.775711554 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.709700472 seconds)
  done (took 9.640663213 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.928118559 seconds)
  done (took 8.797622835 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.972525664 seconds)
  done (took 8.820285201 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.979568008 seconds)
  done (took 8.827760509 seconds)
done (took 162.963329928 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.931624756 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.926906296 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.924079614 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.922072777 seconds)
  done (took 29.551375025 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.961308729 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.95933322 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.968818648 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.967127898 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.950389419 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.95012014 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.958246155 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.959007458 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.950723202 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.959367846 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.96095806 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.958396982 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.959161048 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.97002497 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.968382237 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.958873873 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.958407727 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.963156621 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.95152295 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.96863787 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.958591597 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.959477907 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.925715247 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.926263816 seconds)
  done (took 48.82083276 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.112295984 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.991590102 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.081048939 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.972794132 seconds)
  done (took 10.007779718 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.926419072 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.98798973 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.977877398 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.972037235 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.024480711 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.031800129 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.979810974 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.137022926 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.044329541 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.053370509 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.932105875 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.946831241 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.949986095 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.974676796 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.029187886 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.927384159 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.928596163 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.043430131 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.989109434 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.162875874 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.927626103 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.981009756 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.013219581 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.982475681 seconds)
  done (took 49.772482918 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.928812449 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.935096992 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.93585485 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.929190865 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.927989581 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.930838603 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.935837047 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.931700806 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.951129741 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.932119702 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.928846961 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.931786996 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.938580498 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.928018935 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.928608325 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.943463779 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.942401869 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.928273974 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.932162555 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.937929151 seconds)
  done (took 40.52994406 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.927251186 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.776663451 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.274698681 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.180817499 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.928599609 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.927907698 seconds)
  done (took 31.867159146 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.942807912 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.936563111 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.92963213 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.986966839 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.063749623 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.93176234 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.930443791 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.939554362 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.972715127 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.994431375 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.945333603 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.954159075 seconds)
  done (took 25.382730084 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.929400841 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.92912913 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.928489133 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.938734438 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.938304979 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.938947292 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.937524578 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.927981778 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.940165496 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.951481269 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.93680256 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.940214801 seconds)
  done (took 45.09327819 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.142023246 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.153049324 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.140559753 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.438140324 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.920037994 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.828481296 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.528739415 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.566982933 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.210974289 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.903194741 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.896019895 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.812222744 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.171417783 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.932353061 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.178419882 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.855643527 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.929930146 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202032978 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.93124397 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.931867464 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.213236981 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.979359593 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.142736322 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.975858245 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.142752382 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.336475822 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.174096141 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.186146058 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.261033253 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.977702553 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.050787005 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.974452036 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.939797248 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.944149179 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.932752533 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.940721776 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200023178 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.930041695 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.939040032 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.926543262 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.856934181 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.135415289 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.037361577 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.348648769 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.050801682 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.174379758 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.938780172 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.034811679 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.989637781 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.074968911 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.025665711 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.142076921 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.858840635 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.20759405 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.048169486 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.933510996 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.939921558 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.631307375 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.174572935 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.01214205 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.144098514 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.034709796 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.935178635 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.032224725 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.928858699 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.048090736 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.302730821 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.937487458 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.932568795 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.93775522 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.029786709 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.147024859 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.932428054 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.935114619 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.951271964 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.936085564 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.284014192 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.404079363 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.919181876 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.500560731 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.347171648 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.898980923 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.337857182 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.976510453 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.2082219 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.149191224 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.117009129 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.178548838 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.837708654 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.938874069 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.741637629 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.012495762 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.013600085 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.934414752 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.035148951 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.125138207 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.044248718 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.933178134 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.859093264 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.947575825 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.134218725 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.34166508 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.992253787 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.934254274 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.934305304 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.940597275 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.933410688 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.950586738 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.946314394 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.452422808 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.208766467 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.031365402 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.183716704 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.920993761 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.614814222 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.19499251 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.057250739 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.493185001 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.06140734 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.914993952 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0798748 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.942669131 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.93712583 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.3098663 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.3440117 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.039934029 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.174748747 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.940006648 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.958682582 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.942173035 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.017114111 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.161427391 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.934865766 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.177513277 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.178423519 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.596748578 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.940511583 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.006362032 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.945820642 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.151167112 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.017606421 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.462670237 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.155769922 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.433581195 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.919826792 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.43811656 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.088029466 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308155262 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.954494043 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.039711957 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.96760902 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.641970827 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.863201646 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.944773537 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.282636056 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.057960078 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.967182095 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.938205482 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.938679394 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.946389376 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.019627365 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.009439757 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.011953593 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.864350673 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.937011937 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.941704628 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.940858069 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.456929657 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.552458747 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.22413494 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.937584397 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.998212803 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.940615035 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.55424527 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.939801179 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.061543511 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.94111151 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.616971024 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.961643566 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.089522593 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.326376996 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.050302321 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.938600477 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.93996122 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.638447529 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.946508332 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.639781282 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.215064743 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.937695965 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.379389139 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.99161281 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.125655211 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.953833093 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.940624538 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.941590674 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.943328544 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.145044576 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.445266233 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.165171129 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.27763334 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.025995248 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.202087013 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.127463125 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.393177022 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.612291536 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.441576307 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.166739968 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.941852315 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.941897916 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.593834726 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.946953344 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.16003439 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.143958278 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.212377596 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.227277746 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.351657645 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.946494701 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.959411442 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.184046308 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.940810797 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.375292044 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.956509015 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.193854885 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.74975033 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.199851943 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.003375936 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.955407029 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.578805912 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057097239 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.898186582 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.064582354 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.871590025 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.568489865 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235382605 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.208923552 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.918381867 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.272381348 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.236167858 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.100020454 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.564146111 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.941786046 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.995336397 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.028776899 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.952234516 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.410187581 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.983285806 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.989128518 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.949838558 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.943995869 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.949282695 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.622007689 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.021331826 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.065354612 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.651644118 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.383093617 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.856001616 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.210698999 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.998228449 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.386047226 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.988812382 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.160350227 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.951701674 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.438706338 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.993231649 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.214336649 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.899196625 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.158171436 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.143667943 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.975882275 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.949363525 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.874864113 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.8145113 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.950032493 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.059036037 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.827648323 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.948525093 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.238349937 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.480968937 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.983881579 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.949145017 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.170241908 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.254169537 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.217308571 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.955959474 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.161913745 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.070279007 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.867488816 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.421681115 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.526394936 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.647866368 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.961347628 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.152914604 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.167210641 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.158696023 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.983684057 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.024889877 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.214861134 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.924633227 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.947441442 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.468669053 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.04450598 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.1894571 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.255148795 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.389064533 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.27266504 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.375550231 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.004954908 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.1643356 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.313535027 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.193142787 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.950428622 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.050209248 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.162168128 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.224679083 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.837746118 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.65826892 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.191241929 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.954145363 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.897764864 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.155330703 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.449146555 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.311718613 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.489945505 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.06405451 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.974847855 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.42864928 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.963371925 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.887694154 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.948729415 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.895595031 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.167295806 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.07422757 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.989723785 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.507286288 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.108781351 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.335207469 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.110438549 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.985899391 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.876507127 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.575712136 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.896420951 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.961099345 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.985951653 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.02037004 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.954317908 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.153956579 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.387316984 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.000796757 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.484239779 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.149716101 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250360787 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.214750463 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.249414597 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.90628667 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224003766 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.906705479 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.517332074 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.037300491 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.042140397 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.95324418 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.955678262 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224519421 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.172147332 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.468573434 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.985903189 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.174500735 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.042026969 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.954328191 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.958105786 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.372137464 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.186220828 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.165206004 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.029987515 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.084769072 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.029527966 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.467358965 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.960393941 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.957618962 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.089754511 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.948494945 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.599512848 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.241354101 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.688054707 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.15429793 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.473241954 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.819796687 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.067486399 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.996613117 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.955849008 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.969818793 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.965520238 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.193981789 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.219552616 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.710979998 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.960318822 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.955406359 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.825006117 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.577978797 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.191059645 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.965068495 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.014263497 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.956592981 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.06972803 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.956776949 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.213008957 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.004166338 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.953944105 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.961849583 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.169034263 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.469276637 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.971039379 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.657855741 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.15931684 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.958701792 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.433041373 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.398074359 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.131189478 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.996274215 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.070661057 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.197842262 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.477098875 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.078224675 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.95559815 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.180381913 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.961459661 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22821739 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23175897 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.959450606 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.173275272 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.427413761 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244375656 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.961485263 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.824627864 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.962764114 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.214761669 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.008584365 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.95681552 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.967854234 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.502690555 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.582719019 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.416041578 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.108044095 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.18871125 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.67326398 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.710099526 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.960106486 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.963057793 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.567472374 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.675158831 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.171532477 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.242544495 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.909408421 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.162197857 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.663095943 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.954819531 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.227461665 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.883182632 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.961534464 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.522550116 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.227744177 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.893493205 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.960788425 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.54084375 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.960283515 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.043720758 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.959990702 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.07519019 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.219580854 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.226078505 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.065669098 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.599205753 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.587426752 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.896015375 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.999878985 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.765874706 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.528032437 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.590117708 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977632321 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.973817862 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.886836224 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.961951808 seconds)
  done (took 1677.772485336 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.030621108 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.992773045 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.012061802 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.981342936 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.0692365 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.08601151 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.026312593 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.007162778 seconds)
  done (took 58.087514833 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.959496287 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.974062729 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.963976209 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.96201292 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.982348476 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.961488857 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.113724608 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.967659914 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.961931224 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.967010801 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.962537133 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.957748903 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.226885495 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.978541165 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.962563649 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.960584136 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.962356931 seconds)
  done (took 75.713449998 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.961004364 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.255797802 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.006475366 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.963962836 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.832773235 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.965834755 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.089373478 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.982004382 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.966220996 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.104839011 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.259155109 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.009323125 seconds)
  done (took 91.281240536 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.967871804 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.961628253 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.961897073 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.962617111 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.960775688 seconds)
  done (took 11.703389802 seconds)
done (took 2197.499779059 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.254962355 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.022763434 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.059355798 seconds)
  done (took 5.963078114 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.109291643 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.15401023 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.267531073 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.031774259 seconds)
  done (took 10.454119436 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.222335656 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.343137455 seconds)
  done (took 6.450429365 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.323379113 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.969660315 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.351914372 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.963394888 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.962980711 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.965627026 seconds)
  done (took 22.781055888 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.96306694 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.963728596 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.967900018 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.965574321 seconds)
  done (took 9.74460998 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.962431119 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.62238802 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.959196212 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.973440104 seconds)
  done (took 21.401570289 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.102768075 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.9735129 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.10110161 seconds)
  done (took 8.062799644 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.186389617 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.975506475 seconds)
  done (took 7.04519995 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.1079514 seconds)
  done (took 3.992153405 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.990296318 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.23843224 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.438005022 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.931263669 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.613042156 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.042879799 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.331422417 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.244327164 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.369555648 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.43214348 seconds)
  done (took 26.519025484 seconds)
done (took 138.19730439 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.519073031 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.986506367 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.171153405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.382216316 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.197501077 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.172779248 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.183743093 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.353019794 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.042606474 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.051122267 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.390005939 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.195627827 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.128800415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.993794476 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.13706344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.988737659 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.195251178 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.377873181 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.01333757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.269516565 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.186346043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.991451655 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.194775077 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.005378093 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.194490471 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.124436373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.533683164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.986677216 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.159670863 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.553216324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.122785273 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.42931525 seconds)
  done (took 172.120159662 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.969634187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.968327682 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.966631434 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.967335477 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.303455794 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.968023348 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.968897103 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.967972796 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.259978753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.246020057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.968151104 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.288475376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.969125127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.968851988 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.970309392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.967738902 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.414892339 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.967977445 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.966313805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.968206701 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.968702723 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.142581977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.969221035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.154675381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.398446207 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.969115911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.967055576 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.968037518 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.969437539 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.967933146 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.967633267 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.969918345 seconds)
  done (took 211.343602536 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.988846592 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.967624803 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.967647029 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.969080748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.970171174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.971577118 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.971861979 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.968031987 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.649573662 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.617256192 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.968944974 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.970276473 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.973426105 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.969167168 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.969697778 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.970406514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.967790245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.976141643 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.968233484 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.967087238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.97323118 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.607493467 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.970205274 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.635096832 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.96999391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.974093428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.969568761 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.97029302 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.969727443 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.96957857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.974047673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.971430984 seconds)
  done (took 223.592349043 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.213434158 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.973032595 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.973846528 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.986406503 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.976646342 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.972243029 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.97976252 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.218920795 seconds)
  done (took 20.191653398 seconds)
done (took 629.150985786 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.352282576 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.711666284 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.114241147 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.995574529 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.230826896 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.039231802 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.9893201 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.055685334 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.828356093 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.07303241 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.379981965 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.000215312 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.750735641 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.019873147 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.113943309 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.048933465 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.332795828 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.656023045 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.134343247 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.651805047 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.153692106 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.947957929 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.074816047 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.872242679 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.406473192 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.973708601 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.013738184 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.342421341 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.994822328 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.15227484 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.635944723 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.268478684 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.012490234 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.997769355 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.045321059 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.024429288 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.203181104 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.00820945 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.107222705 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.740608199 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.654155616 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.710096656 seconds)
  done (took 104.712645688 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.98347568 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.982389694 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.981532363 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.978866424 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.990249665 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.979257557 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.980341633 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.981573786 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.980307048 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.982382087 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.980620761 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.992110604 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.981376887 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.99210846 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.983704849 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.981805757 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.983545717 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.992896957 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.981474911 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.981225536 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.983094221 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.981380649 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.979379488 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.983217685 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.981285322 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.982575146 seconds)
  done (took 53.477989042 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.97653822 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.167002763 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.220061327 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.998242717 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.978723668 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.981837268 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.007161976 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.984197351 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.979880036 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.979468552 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.076696462 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.983487563 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.990710493 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.220491589 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.993201653 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.976964531 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.978389758 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.980481919 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.175079095 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.995416159 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.008798394 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.986537468 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.00841432 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.994922903 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.98173328 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.979246048 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.981893717 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.41623249 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.988981917 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.078558895 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.053473608 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.01007893 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.336456583 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.233409933 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.037478582 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.985989745 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.978588201 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.084452686 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.985555722 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.980816963 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.006867684 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.987459456 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.22379755 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.501077666 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.992776594 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.979253366 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.415052168 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.094010582 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.025517259 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.99058724 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.2289476 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.995334793 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.981019592 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.982346378 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.017351327 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.993306697 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.98099606 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.237513581 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.995302406 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.008479691 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.987765324 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.980912681 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.181096342 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.992390389 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.169518762 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.990359458 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.984989307 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.981164547 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.223041943 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.998583604 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.510285154 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.993181846 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.980573491 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.081337138 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.173792449 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.445423343 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.994451896 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.187782915 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.354547203 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.017303812 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.994477371 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.403553472 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.022850836 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.993765422 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.980710397 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.98082931 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.981203113 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.029224895 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.008666196 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.434883586 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.510737668 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.259058697 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.019458715 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.995668168 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.98327227 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.239728528 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.99166741 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.980404647 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.215016799 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.523417854 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.998676718 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.989684133 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.494346575 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.99771499 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.013033405 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.996527014 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.236077787 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.99927553 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.033132937 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.982243338 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.990615786 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.986340967 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.012328667 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.992576914 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.983446224 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.487358537 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.101257352 seconds)
  done (took 245.36880502 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.985086575 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.979737936 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.982746911 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.980263828 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.981404369 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.985929668 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.98292329 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.983293335 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.985169172 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.981758806 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.982135269 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.983031294 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.990368558 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.987315241 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.018774325 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.986860802 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.483204509 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.984680481 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.981682817 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.98250939 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.549748085 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.989842405 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.986018429 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.983388864 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.98404133 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.984962405 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.990712314 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.015660158 seconds)
  done (took 170.601882655 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.984601143 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.041278621 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.998583952 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.032080762 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.999597227 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.986113789 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.079958231 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.002847613 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.99119247 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.984024136 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.984556904 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.017464385 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.995708656 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.081079047 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.016247103 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.088948851 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.089182187 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.992655288 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.986616928 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.9884662 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.03426677 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.001842446 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.02059624 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.048412649 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.999091259 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.04203126 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.999916834 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.988946055 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.987198277 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.100853296 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.005840958 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.018224815 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.021186523 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.006801651 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.105590174 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.099091096 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.090493848 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.091882689 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.994940151 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.987982949 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.988204097 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.991288056 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.044715677 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.001639365 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.991245261 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.103757877 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.005500377 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.987339283 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.98984978 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.987574064 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.000415357 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.005959737 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.027305674 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.114536213 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.034052949 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.014682864 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.084755352 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.109876763 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.990170795 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.084665606 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.996749583 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.105215701 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.005844989 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.990791357 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.98993977 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.992281391 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.039522994 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.098890564 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.093645474 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.99775268 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.08416487 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.043356503 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.002402212 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.990419155 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.99060048 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.046048141 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.098738755 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.0442751 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.05008181 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.026613222 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.000433663 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.992751317 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.993120548 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.020401679 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.998647469 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.103527507 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.104361948 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.998167343 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.990823891 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.992495888 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.991647731 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.015035918 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.057512045 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.031705812 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.098260417 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.029045271 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.033516259 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.000000541 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.005285304 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.994941771 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.026432368 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.998086451 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.002974026 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.271056058 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.023982604 seconds)
  done (took 214.917006454 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.372030367 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.0383847 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.067198398 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.26081774 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.347205806 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.882728065 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.028499946 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.041315563 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.047852979 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.185481188 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.098746924 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.085234587 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.028664387 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.015484795 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.03703326 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.055008233 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.066525144 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.334562451 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.229901406 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.505401191 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.029500564 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.333769129 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.389967229 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.390458986 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.084255017 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.428284273 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.619043629 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.134009344 seconds)
  done (took 66.056519276 seconds)
done (took 857.02696673 seconds)
SAVING RESULT...
DONE!
