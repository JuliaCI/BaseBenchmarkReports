cset: moving following pidspec: 17003
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.270927125 seconds)
loading group "string"... done (took 0.566667415 seconds)
loading group "linalg"... done (took 7.122349553 seconds)
loading group "parallel"... done (took 0.156665047 seconds)
loading group "find"... done (took 1.129278083 seconds)
loading group "tuple"... done (took 1.858752769 seconds)
loading group "dates"... done (took 1.280679472 seconds)
loading group "micro"... done (took 0.222774986 seconds)
loading group "io"... done (took 1.029526172 seconds)
loading group "scalar"... done (took 37.722315837 seconds)
loading group "sparse"... done (took 11.845532594 seconds)
loading group "broadcast"... done (took 0.931355284 seconds)
loading group "union"... done (took 12.329934741 seconds)
loading group "simd"... done (took 4.433242619 seconds)
loading group "random"... done (took 9.098134293 seconds)
loading group "problem"... done (took 1.844067723 seconds)
loading group "array"... done (took 20.884216762 seconds)
loading group "misc"... done (took 1.685909261 seconds)
loading group "sort"... done (took 3.351344697 seconds)
loading group "collection"... done (took 16.966063969 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529562216 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127654269 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121162551 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120976637 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148334225 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114930945 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125380317 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086082437 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.849899087 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151576666 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117203777 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432836817 seconds)
done (took 5.345183366 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177207967 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08415446 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082089398 seconds)
  done (took 1.40611681 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06553072 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125109251 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066806399 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067109507 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067329015 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065993614 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066397857 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066155533 seconds)
  done (took 1.76576674 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073454368 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068270306 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06916785 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067693875 seconds)
  done (took 1.519421499 seconds)
done (took 6.183155346 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.789533004 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201658751 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187630069 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410665234 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13055328 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158623483 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63912248 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.298230216 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188356739 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079607283 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107524054 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.327716088 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108042544 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636985191 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076952767 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089510168 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136523212 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.411543301 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066568959 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081464476 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088880205 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127370746 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086685544 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073393636 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.1465395 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066833622 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134958706 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078648567 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065257528 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.211048807 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171518833 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657263342 seconds)
  done (took 10.315332336 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095651111 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095958415 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067595097 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124383782 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094724802 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069141318 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070432863 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067335756 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085953241 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126581257 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087418286 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100086809 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064490994 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068663591 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084170069 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203210406 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08238256 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08121438 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06966889 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075156417 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104452505 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076898316 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076287907 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075980986 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128302768 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179311084 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096084905 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09655308 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066257407 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07801071 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114124501 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12385621 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064433739 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065172343 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122877355 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093721261 seconds)
  done (took 4.655209665 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.000177242 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.142476044 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089626614 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13388801 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063673919 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108570781 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064658129 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08041335 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.207947029 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.399345058 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.585830401 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110779768 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102709785 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066945775 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067795552 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065804148 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.482032451 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095166053 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106980317 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08188965 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069753156 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068725336 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.353637647 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067547291 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063656746 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068259127 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056539958 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124573605 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083745486 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06741373 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.946968176 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126541054 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065818037 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099622383 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161090069 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088112273 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274661817 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067419277 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064189969 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.152552451 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069605551 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065236559 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082928064 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103695783 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112333599 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065446287 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065963524 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161059301 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06384779 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078787322 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.643077208 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154320299 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078518146 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06538753 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.252283135 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087914993 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071125558 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063952257 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.186678578 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131524757 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067203113 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066171757 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067283844 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09107087 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068597576 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36199529 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065005945 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.8827815 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069509386 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075921721 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068921706 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068918851 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072125645 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072660062 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086828055 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063446096 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065493306 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07434494 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065466301 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065303972 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065901058 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082439008 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.37289523 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065651289 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067404556 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063925942 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088279576 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09641333 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066105674 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064597251 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099115019 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06718141 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06553485 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105906294 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06560609 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082267351 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068348221 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112225025 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067592234 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06372958 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.200586247 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067525886 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095370609 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06887008 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0984547 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079056775 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067241092 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.420207359 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064544583 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064548282 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067110914 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065520206 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066161843 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065344997 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07841645 seconds)
  done (took 21.070826425 seconds)
done (took 38.278467055 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234702623 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075324936 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.072878598 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07753724 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.072964183 seconds)
  done (took 1.868305071 seconds)
done (took 3.180319232 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121901642 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09885852 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063770001 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096545907 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063657796 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101854451 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100393342 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081182554 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099193833 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06336559 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098843084 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063629488 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063716822 seconds)
  done (took 2.450641945 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083401543 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083307581 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069127929 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083029311 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063059638 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082187486 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080766673 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089139696 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080735216 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072025303 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063017959 seconds)
  done (took 2.158288609 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083944645 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083841424 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068870793 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082555435 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06344192 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081601451 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080928498 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085866932 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081318206 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073647112 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062809791 seconds)
  done (took 2.150478447 seconds)
done (took 8.059613629 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076996088 seconds)
  done (took 1.369805229 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.586045204 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.047506362 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080563827 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109545725 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.187669228 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116466378 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.268716713 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085893104 seconds)
  done (took 8.959235442 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102431479 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070213975 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068007381 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070583913 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07114036 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070124946 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067499865 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068992253 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070333079 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068145111 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068372232 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071108427 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067766432 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069896835 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067862911 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067794113 seconds)
  done (took 2.507656656 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09114366 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09032799 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073684035 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073888339 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071078762 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07056333 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073003674 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072329763 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069790134 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071219488 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072807716 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072481376 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.06986363 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06369352 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072397616 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074141476 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069908289 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072644785 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073004469 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073428875 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073571417 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063483277 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070252778 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072459835 seconds)
  done (took 3.157884233 seconds)
done (took 17.293915403 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114311963 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071469405 seconds)
  done (took 1.488684169 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081204957 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08192602 seconds)
  done (took 1.47371632 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082045853 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064949613 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089144275 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076705772 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065195646 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06473597 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086543903 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065087928 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064729427 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064611674 seconds)
  done (took 2.034237768 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068489046 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076164796 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069204921 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079917113 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071888447 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062571178 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070412241 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066325143 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076023026 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061897891 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069818679 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080832772 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070198752 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082791126 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070423424 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066988433 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069391522 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065908879 seconds)
  done (took 2.5941955 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065280095 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065502747 seconds)
  done (took 1.44861693 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066718428 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062669246 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065539302 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065856243 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062128654 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061241592 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062160711 seconds)
  done (took 1.758761136 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381804436 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112289592 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.308240858 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07016006 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08125934 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256209092 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064625793 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069895039 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070221869 seconds)
  done (took 2.771486103 seconds)
done (took 14.888362568 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080358003 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085365684 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095344946 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.371226762 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090328746 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064837403 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113379037 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185301882 seconds)
done (took 2.411977803 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21128964 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.627255629 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400245721 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203821561 seconds)
  done (took 2.550491105 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342416859 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086835878 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05788515 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065658002 seconds)
  done (took 1.882239355 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066263338 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068240727 seconds)
  done (took 1.458789397 seconds)
done (took 7.427821639 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06736504 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064712061 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063932679 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065211181 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063453409 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063127706 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082875346 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065492016 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065067384 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063020956 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068283973 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065392686 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06548158 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063074032 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062548056 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064820945 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062867198 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062353412 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065488412 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062782968 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065414896 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062462005 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062963894 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065779972 seconds)
  done (took 2.921239227 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084281902 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065162794 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070695384 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070328723 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068735744 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069992611 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069889816 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06458606 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07028599 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067737404 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068760546 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068149378 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067484729 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06838147 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06757846 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068971603 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070292174 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065013641 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0674341 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069289546 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069927521 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064778306 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068575986 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0703054 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068484318 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069673148 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067479072 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065232245 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070362585 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067820498 seconds)
  done (took 3.399274991 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069454788 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062690703 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063092536 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069656842 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062777047 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063589417 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.0624207 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062991718 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063462947 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062383955 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063629303 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062437192 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062878417 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063973639 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063843011 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066446238 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078408654 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062921722 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063453994 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063459927 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066224182 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062554024 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062809469 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062573066 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062484317 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06255653 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063223492 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062910418 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062800753 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062383641 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065797979 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066436602 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062484782 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069742557 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066387034 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061958663 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066639729 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061899583 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063133656 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062284459 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061873748 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062204202 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062182476 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070040183 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062519808 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063548067 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062415606 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063142665 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062722858 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065269837 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061834185 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061894194 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.178762576 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063176001 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066146121 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061488117 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063003029 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06174099 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063233396 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061737233 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061710587 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061699693 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064723924 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06275609 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077087248 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069178394 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061936738 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064053039 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062760433 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064755328 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063880836 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07611494 seconds)
  done (took 6.074983333 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09068385 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085221253 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064351483 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064063089 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060874962 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063538405 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068697643 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063080506 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06424391 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080388844 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063363843 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064137573 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064215453 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066311758 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063247237 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064799211 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070764549 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06007759 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062889562 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066670359 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062952384 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068138205 seconds)
  done (took 2.828526296 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153243465 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068845493 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10353303 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07385856 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068726326 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073861312 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068518451 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06872206 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068777162 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066112683 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066903384 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068376996 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068817519 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066372862 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066010626 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06645433 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06865052 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066232781 seconds)
  done (took 2.692445815 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076962085 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065076242 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085138893 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065353015 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065274239 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067432763 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068928733 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073446903 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067843554 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064798885 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073069749 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067449102 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067015214 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065526713 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067635402 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064687984 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067251503 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065038478 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072232278 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068663493 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068889242 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072770263 seconds)
  done (took 2.863384609 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079559645 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067104242 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081057978 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06758445 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06046278 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062983625 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068628512 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06446868 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069007712 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066317363 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065123904 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063185824 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067777432 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064729115 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067356144 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064195163 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066462314 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063840291 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066442674 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060209675 seconds)
  done (took 2.679985485 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085983564 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066898157 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066651851 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07442231 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066098563 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066442694 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073666777 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065905366 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066434025 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086688122 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06644203 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065855123 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073889719 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071100272 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06615712 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073482974 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073377137 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073018352 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065932509 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065953199 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086926943 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066299947 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07288018 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066187636 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066246201 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065978447 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065890433 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070599634 seconds)
  done (took 3.320791485 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066191579 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064829783 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063013942 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062534716 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062412144 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06210983 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062181839 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062622904 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065011752 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062259029 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065193749 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065401089 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064874411 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065100796 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064761694 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064757587 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065118367 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062414029 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061974047 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062280111 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065473232 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065416785 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06493827 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062080861 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062584895 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064927483 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062655233 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062754512 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064546928 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062491359 seconds)
  done (took 3.261468035 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074930003 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072046944 seconds)
  done (took 1.497108727 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063237484 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078556108 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062238032 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069049565 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068273316 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065768587 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071675755 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06817127 seconds)
  done (took 1.891480224 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082135111 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076813447 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065842724 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078448742 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075079495 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082078584 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132787073 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065291633 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071477687 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062961197 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078695282 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064099338 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072015564 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065624145 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070843809 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071879951 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062826842 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070226984 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067017093 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063921919 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066160783 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073215172 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067540176 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060310013 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066189081 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087300976 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076221151 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064898101 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068186204 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072688651 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071487028 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059383656 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064923001 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06535035 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063065926 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074799822 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079940878 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067948278 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073440758 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065787185 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074397431 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059898107 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070026685 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.0715333 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075050463 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065388782 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065660347 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059888529 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062823879 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067098516 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060236775 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067485962 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060035384 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071918938 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068504172 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075512465 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063929684 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066847716 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067676725 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067850736 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071857694 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066965751 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068750123 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064869505 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075039254 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070128758 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073753613 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060414438 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059520845 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062951269 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074708671 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087899934 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071010528 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065775327 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065692752 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062892824 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068174461 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065682053 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071023342 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071470344 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064900098 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070237309 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072641289 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065753412 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067750066 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072922936 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063427792 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06717102 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063122726 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081327231 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063992199 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063221217 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063033914 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075566431 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068452029 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065159774 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063444893 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072397466 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059175799 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066111719 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065701669 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066047025 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075011234 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069878046 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069773785 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073781929 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072713272 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066158829 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068584036 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061943757 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065999773 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064407256 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07248837 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.0595586 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068492906 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066470676 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065629295 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073956221 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0632682 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065231445 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072744594 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.197480606 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065979767 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062123874 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06797971 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06561058 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069184983 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073752878 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065402258 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061557726 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060888679 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069227377 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066051311 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068913011 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069560612 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068046111 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060841249 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064407255 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070309437 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07501602 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066207552 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066713583 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072106086 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067605661 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064811817 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072223319 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068661922 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065914267 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071603439 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067091676 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060812069 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06873389 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068703914 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064476769 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069748341 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069296801 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067323705 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066596686 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064360077 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07212782 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066224186 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064828379 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06577238 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064270539 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076361404 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067316614 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060916722 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062134699 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073998792 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063438871 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065861284 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065084097 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067981673 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066574876 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06375373 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065656386 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067411759 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074580813 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068995586 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066302847 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070345027 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077193938 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064701674 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068327409 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064994488 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06632976 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.0657748 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074625257 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.0717974 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069745541 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068796643 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062294482 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071407151 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072864676 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064848036 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063716496 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064876951 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068844918 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071425023 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068969788 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066107762 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063864771 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066492351 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06824437 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068257171 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065054815 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064846991 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070933613 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063881934 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071619124 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066873841 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075844928 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068701188 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060721362 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068285529 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064006144 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071829033 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060890626 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063211648 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064684486 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06663504 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064707833 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068117091 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059866431 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072590599 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07296172 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066426212 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065682063 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065188381 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072690668 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066732394 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069056188 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069068363 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071360914 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07652036 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065134256 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069205914 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076075522 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06573365 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059835458 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070833087 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064235483 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064256772 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064738167 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063648212 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068202953 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073560881 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.201494853 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059966748 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068697365 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065322157 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064761231 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061496105 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070936822 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069442237 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066993111 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072573747 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066664427 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067045249 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069907373 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.0659258 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067125438 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067171641 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069984489 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066179589 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068060443 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065734078 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069589431 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065494625 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064142404 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067796947 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066673516 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066770921 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071903472 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065198784 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066084848 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068553602 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066539825 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066421405 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066549858 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065266251 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069470798 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067062924 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065952416 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068417053 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061629766 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07328428 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064722813 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073830019 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066449816 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063233716 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072754364 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068112201 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07163052 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066456655 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066477096 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067524103 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065313034 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069105705 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07308078 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06409097 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076193635 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072986569 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066278318 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069111305 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065968897 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067010674 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064701719 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0656169 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066125431 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066190016 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065155811 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070505848 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069008451 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065999176 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06716984 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066033104 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065287476 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066800076 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059704912 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065452437 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064227608 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065082025 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074142547 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065786277 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064913334 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063959982 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065697649 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064362407 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061713957 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07219514 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073867759 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065521119 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072264267 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064433744 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067181658 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075369215 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059743384 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063504728 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063751753 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06349938 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072757181 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066162117 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07473152 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065795291 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065304684 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062824651 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065919618 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064292102 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059994504 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063716789 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069329591 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064670791 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064769816 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065566571 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068189219 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066673348 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074546089 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065008297 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066634626 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065629784 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06272201 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064751739 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064868473 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06843569 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066350752 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06373072 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06274189 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065298833 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066716451 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067507463 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067834187 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067860182 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072855351 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065273637 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068882185 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069281388 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.193175864 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06978104 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065821809 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06579968 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06524478 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069832098 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069247539 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066776766 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075854981 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066618742 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06695232 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066667158 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064228171 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065498781 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066057131 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065794057 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065876618 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066808777 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074556059 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063840924 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069557745 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066552974 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066982459 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072648703 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06657209 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06960971 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072266633 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067190192 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068245717 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074034172 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069859781 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069553763 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066711682 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067648897 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072339885 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065257904 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072842419 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066659214 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066981324 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067837004 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064229194 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065453285 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065009269 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065172267 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072314305 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066496433 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065287965 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064942396 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064666244 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067394277 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069862277 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07368432 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068007529 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0692487 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060958943 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063365418 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06671363 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063676034 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067476488 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068613365 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070798491 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067676889 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066204865 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064410459 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073553615 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07070309 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070283411 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063430986 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069331884 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065935535 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067135792 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065872451 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066157887 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066039807 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069477436 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066388965 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064986226 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071798171 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068729495 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066049602 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067593743 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06656963 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06573215 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060406908 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065760429 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067053391 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069745281 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06697863 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065386049 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075624371 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063199997 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065405638 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068606504 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064571818 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069613622 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060503038 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067391331 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066004622 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066047392 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060604095 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064709783 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063204063 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067694457 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064144188 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060579294 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075832747 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073957193 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068922859 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064195559 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063798774 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060381604 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060271454 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064344155 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066074672 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066918535 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075487938 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064806767 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064571601 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060309177 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064985019 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067976555 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068529795 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06279004 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060681372 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064435818 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068648361 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070886206 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063524372 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065565494 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068279984 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.200317678 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063673619 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068899862 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062920771 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069029962 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078114491 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067278903 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067026812 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072343774 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073753586 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066925389 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060732715 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066214637 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069088728 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067654833 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066912519 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067135579 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081199987 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069121876 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065502151 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064546653 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067842676 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065854597 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074462854 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066868568 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066535618 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070640322 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067986006 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074464614 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070274356 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073125238 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068997732 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068809383 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064657841 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065989679 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063987137 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065979323 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066101617 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066690649 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07015916 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073879601 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065999488 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076391632 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075587999 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067843291 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062487689 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065386475 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06549639 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061082853 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066811407 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063733723 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063064747 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063751337 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065106273 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066922485 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070852704 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067121022 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066243195 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065600926 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059752502 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067738885 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068000965 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066361922 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062214189 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066447162 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066308149 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069928689 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068579384 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064084734 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067400417 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067479744 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066657847 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060730446 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072234531 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06479238 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06737417 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064669251 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06571906 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066038852 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06903179 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069994691 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066621801 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06840916 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069215146 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0673752 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062922598 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063023153 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070624202 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063416442 seconds)
  done (took 42.186801819 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100907939 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062255731 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061733695 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060795844 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071774267 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062445389 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061065595 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062064069 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062035603 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063933526 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061357964 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060864811 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069442846 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076148322 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072292134 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06523234 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060651103 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061768597 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060955354 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061740049 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069149596 seconds)
  done (took 2.816099178 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073216565 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076337783 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073963812 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080725931 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069652127 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069375134 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074068889 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069020156 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077383201 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071317968 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077158357 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069636388 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071377325 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071110272 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071026656 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069264108 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076708381 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069582742 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069335827 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073714955 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069384673 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073608532 seconds)
  done (took 3.006381663 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067083514 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065084073 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066864701 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061446645 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064822661 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060913956 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067931053 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062777587 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068323071 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063937303 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06419063 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064314995 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066964153 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060729291 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065312791 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062890612 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106445958 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067528374 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064632402 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06545115 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060536767 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066503856 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06014902 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061093901 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064746459 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068104057 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065123406 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062681808 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06397611 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063412678 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064654794 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062321529 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06596921 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064824995 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063692232 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063676045 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063932052 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064327256 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060380541 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062393433 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065695285 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060608611 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065020748 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065775387 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062933036 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062680523 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066434759 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064269979 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059442591 seconds)
  done (took 4.595543363 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07875008 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107279965 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065751586 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089947547 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078220566 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.0713934 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068565312 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088873479 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062177746 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062837424 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079882651 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077694438 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064512957 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068931156 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06874738 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063978492 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065391625 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064377813 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067810177 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06389323 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06769377 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071291251 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078466479 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0765384 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067990217 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063351946 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063521455 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068499494 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076118316 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068253814 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068545471 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069807642 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07853821 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069285959 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063655986 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066280555 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079341497 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064566516 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066365465 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062119773 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066349286 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068117538 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070479725 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080216845 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064737582 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06939315 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064093767 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061437233 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076235231 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066477492 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071466089 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077406203 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067848872 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.0642066 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068037806 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078467187 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063756228 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062279941 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067074535 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075814152 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061655287 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067689032 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076614979 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065825205 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070902233 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07671182 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069377432 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067624096 seconds)
  done (took 6.346396557 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076920238 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093375866 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081365459 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081775092 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074068608 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074395833 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073705762 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.0736661 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073609205 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078200317 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074921806 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113700082 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070033415 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076405223 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074153105 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074238334 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074427215 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074222415 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073851047 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074078626 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074070369 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081557599 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074020733 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08151193 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078161014 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069628823 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073886124 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074578287 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081475583 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074089562 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078139891 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074864727 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082454789 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081096609 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078157695 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0737825 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063634121 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073525225 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073756727 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073520894 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06914531 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080785887 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073402174 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069327807 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073455325 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073587952 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080929721 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077539925 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075762717 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077848896 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073340529 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080982044 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074220535 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07323633 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080956622 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083923141 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080626215 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080569126 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073631718 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080510351 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080662497 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084333874 seconds)
  done (took 6.213510905 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083571782 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073006292 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080545032 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060013593 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063248223 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070510222 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062695806 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062783843 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072450242 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072033849 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074448636 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070433053 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073077797 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07433802 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070577075 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072784159 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070399652 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070347399 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072150892 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07000821 seconds)
  done (took 2.857096794 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075076873 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081981095 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066541087 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071034357 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067550384 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070435328 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06685961 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067706589 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065579301 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068123396 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07415817 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074489216 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065541682 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070116112 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074179971 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070163782 seconds)
  done (took 2.559777796 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08326957 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071703095 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.0784355 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064993641 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065639131 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061279246 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064988174 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059891753 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060847305 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076554948 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064344095 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074561232 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064592598 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06323559 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061254077 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069704909 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060820754 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062469518 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06415115 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077118141 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068500204 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062627268 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067785431 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064004504 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066836279 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068316863 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063819389 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06455492 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061904275 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065110559 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067845476 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067700084 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061687417 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062400304 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063159982 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06199516 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06400074 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065120661 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069847425 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064311043 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062431118 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066773571 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064411319 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065349649 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060857169 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064973515 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060509687 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066403626 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062376053 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066709521 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064020518 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067072812 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065098341 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071201994 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067395046 seconds)
  done (took 5.056843425 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079660556 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068642367 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06052865 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063345441 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067804491 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066429963 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068716105 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066680934 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066062585 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063012647 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066053195 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06780511 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065789363 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068472379 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066087504 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06830205 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06070795 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066107355 seconds)
  done (took 2.644084657 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07147713 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064887932 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07223952 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065278798 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064881403 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067250799 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06100011 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063949437 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06409299 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064837479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064627918 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066749595 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06325119 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067336019 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064679563 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064830207 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06772151 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06343776 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064767338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060724604 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067473538 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063350763 seconds)
  done (took 2.874870382 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09482461 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081851847 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139193989 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078638479 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.0834108 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071395423 seconds)
  done (took 1.987019667 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090687773 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099281286 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065504296 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068543549 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074339653 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068994369 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068535813 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068896024 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076963507 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074532549 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068621979 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07675896 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0764482 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075698775 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073873058 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074061323 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068494188 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068155464 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06522526 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081896029 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068504437 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07676844 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068412923 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068071564 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068717247 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075705061 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076829024 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074654027 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068307357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076591294 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074649398 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068842061 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077225494 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074601816 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068653565 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076917194 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068844182 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082258415 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074691221 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076613514 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067858389 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074539579 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07698871 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073270444 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076921389 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068737749 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073285313 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068515513 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068893734 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084152152 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074055672 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075932284 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076729597 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077018179 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076821212 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083971185 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074420457 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076119007 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074148276 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074541529 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075852254 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074120474 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075557833 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074764453 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074206509 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076209779 seconds)
  done (took 6.337983058 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103376097 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066752655 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068972828 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074914368 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076223419 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068905307 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069148263 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068670344 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069053925 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065828329 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106354255 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068929099 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076409843 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076114356 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068844156 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068766416 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068756764 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076519159 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065970123 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084485944 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069145776 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076242502 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076130305 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076240077 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074858373 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07518727 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069152077 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068723587 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068865594 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069132026 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073662609 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068679319 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076728528 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06604196 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07593645 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068897273 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068479558 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073047596 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068963034 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074182072 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075633152 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081885364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068712316 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069024826 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074236793 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068790085 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068273798 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065478396 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068264895 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065673278 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074477698 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074721396 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074474617 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075828092 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068833706 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068997096 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068446884 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06862456 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068671032 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074295888 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075963161 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068500698 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083564514 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068288923 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068865363 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076095039 seconds)
  done (took 6.254344221 seconds)
done (took 130.486174193 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18930468 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164589499 seconds)
  done (took 1.785937143 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068620807 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097018518 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075918471 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12788109 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065526699 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.09925211 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098139428 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076698355 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.064919613 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065030649 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065274567 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067336129 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130053274 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065124067 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.064755844 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06740796 seconds)
  done (took 2.743163885 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099394726 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161230535 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10101209 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064238252 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097920358 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071916364 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063875647 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074149056 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069886877 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064526421 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07157888 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069348721 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064601192 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069463279 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069576275 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072148834 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063554122 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071790486 seconds)
  done (took 2.868738756 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099583083 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089830462 seconds)
  done (took 1.638892183 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15592598 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104581867 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143641957 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346977789 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162732032 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146704664 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.1416708 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141271431 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116218226 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137258723 seconds)
  done (took 3.039966579 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099715493 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152640747 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.263159021 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115927489 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071619865 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092362307 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116764214 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077142214 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078971551 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078374585 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078684126 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074871483 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098764239 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072279405 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073430575 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075041377 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102040774 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071966575 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073936099 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074928873 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099190006 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064816383 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072862502 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071685069 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076156115 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076068052 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064731088 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064191565 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075145697 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073570711 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07574284 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091459238 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075558334 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104222614 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069596728 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10468688 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075366093 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072662981 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073481807 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073129726 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077069993 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076669458 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071351494 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074530006 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064811156 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075062959 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064722894 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064374626 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076736402 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065682872 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076318468 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075373942 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103967807 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067531621 seconds)
  done (took 6.004057737 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103256215 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106169645 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070689212 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111725444 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101601869 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071153426 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101347386 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09523128 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102580823 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069221471 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067530636 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069433654 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080683398 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081136297 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113996572 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105932485 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072823896 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070093197 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104557899 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104184444 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067565388 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095925526 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089940576 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102430607 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06603608 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06925526 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066754099 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068909021 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074893017 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077180943 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068531575 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079334677 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08322416 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076938674 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065807149 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066848327 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067147768 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07776031 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078401278 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077199807 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075797913 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066403876 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06758549 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068297142 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068908566 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067194389 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077633609 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079300508 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076932817 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068697412 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069026332 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067271608 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068658554 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078640934 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076445118 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079692787 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078818562 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067558768 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067307471 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071462534 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07893819 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07800179 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078104261 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068709519 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077782405 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067024003 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078568362 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082339943 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067083889 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069310726 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067848082 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068555972 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068702283 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076705608 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076467661 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06847198 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068788279 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067309205 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078515312 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076750173 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066665775 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075455599 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066730736 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067450323 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068688776 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068392701 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076008578 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078412081 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06866768 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067501775 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068182761 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06786503 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066165712 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075604967 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078581765 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078139439 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077175627 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068285213 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078021147 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077502357 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069011171 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078427365 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067427402 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069191149 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068472463 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077682588 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07651275 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.207954592 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06965966 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068939788 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078645683 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080406879 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067416489 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076956481 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079618451 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078562821 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0675686 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080395115 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068258875 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078542574 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069215224 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07869524 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068520684 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078300311 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068979024 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068352744 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068465206 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078172134 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071553102 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067508386 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068531026 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069217801 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07804431 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.0812423 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069505469 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077804127 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076819521 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069561835 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077960785 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068456716 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079309575 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069142914 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069214939 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067955522 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081005014 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068189717 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067818151 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068613201 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079030942 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066898362 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079390445 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077545383 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067606693 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079743413 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079028892 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075857536 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079552544 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070012133 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068305057 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067728635 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068488999 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077660432 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079245837 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069503522 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06764967 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076448396 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078269178 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066037154 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077545239 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077411957 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077031192 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067417277 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068976377 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079153588 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078977348 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077258705 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077001574 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076905995 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067963612 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076231417 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077128804 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06769383 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082166451 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067700113 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081113271 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077043177 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075126902 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077264301 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079140364 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078902004 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078808013 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081453794 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06767972 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067320552 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077989136 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067035244 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068356301 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076674516 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068357197 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068917035 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081854144 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06765115 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07871422 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066951714 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07807165 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066144096 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069184278 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081942398 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067864538 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069073287 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077955801 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06868174 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076458109 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079996604 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077260042 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068024327 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069346655 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210795334 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079370046 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068470375 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068516101 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070502022 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077195914 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077280864 seconds)
  done (took 18.540151656 seconds)
done (took 38.077755137 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20689953 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151482307 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183414209 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117637315 seconds)
  done (took 2.204962562 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116240985 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100244266 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09088236 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064288558 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098547982 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064455864 seconds)
  done (took 2.01519516 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308274396 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208911711 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186116886 seconds)
  done (took 2.179728932 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20055271 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187003985 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.418717738 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.261368631 seconds)
  done (took 2.661012676 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143956486 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087064623 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066466763 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082601095 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131465125 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157503922 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09874088 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123702383 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077275043 seconds)
  done (took 2.506366872 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14771566 seconds)
done (took 13.19021951 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100515581 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.164945616 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.24951162 seconds)
    (4/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.163398678 seconds)
    (5/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.075954449 seconds)
    (6/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.206728662 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.229643153 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070760468 seconds)
    (9/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.17630651 seconds)
    (10/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072927863 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.137332157 seconds)
    (12/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081410234 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098808323 seconds)
    (14/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086334725 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077695672 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.191525578 seconds)
    (17/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.153819202 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072559312 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101939123 seconds)
    (20/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.189775657 seconds)
    (21/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087543938 seconds)
    (22/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148208534 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092535065 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064388414 seconds)
    (25/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.18514678 seconds)
    (26/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.21185293 seconds)
    (27/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.19817303 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075370922 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.082380912 seconds)
    (30/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05011862 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.099727923 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.193657394 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108253497 seconds)
    (34/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08145485 seconds)
    (35/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072970172 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065711394 seconds)
    (37/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063160106 seconds)
    (38/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065453147 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.162906623 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089324412 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070928435 seconds)
    (42/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.061660955 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089229746 seconds)
    (44/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.121118271 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093850635 seconds)
    (46/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.10630934 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.050962612 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203724016 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14602993 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.207933426 seconds)
    (51/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.152028385 seconds)
    (52/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06826124 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.182171608 seconds)
    (54/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.061110337 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075798023 seconds)
    (56/309) benchmarking ("sort", Int8, false)...
    done (took 0.150368344 seconds)
    (57/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072960505 seconds)
    (58/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.108994764 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090718918 seconds)
    (60/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064460893 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071877658 seconds)
    (62/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.202748618 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084311529 seconds)
    (64/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071305832 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074118996 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089308828 seconds)
    (67/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108613684 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.202279611 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066162687 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.063962265 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075566574 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088080975 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.178139678 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106226631 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.074634023 seconds)
    (76/309) benchmarking ("sort", Float64, false)...
    done (took 0.129327966 seconds)
    (77/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07432043 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.163004395 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.173644985 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092561233 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064123508 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065472957 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08660717 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065008544 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.065420718 seconds)
    (86/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07219854 seconds)
    (87/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101411183 seconds)
    (88/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080264602 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089713014 seconds)
    (90/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188610911 seconds)
    (91/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.050982094 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08877429 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075636567 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066334558 seconds)
    (95/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109230234 seconds)
    (96/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073367032 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.117561026 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094983471 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076894848 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063995278 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.049957897 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153254283 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065078192 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140468926 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108872545 seconds)
    (106/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.16037095 seconds)
    (107/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086666645 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08874652 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.190264225 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073191201 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109386243 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073006522 seconds)
    (113/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049955533 seconds)
    (114/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08366344 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.081133037 seconds)
    (116/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051694944 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140259323 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088641285 seconds)
    (119/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.160498451 seconds)
    (120/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068224615 seconds)
    (121/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064858511 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065163778 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14084358 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061453222 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.049478451 seconds)
    (126/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079049954 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066473318 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.136984468 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072686893 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07399757 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152224895 seconds)
    (132/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068934968 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071722247 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092300933 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070339932 seconds)
    (136/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079052266 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.07410757 seconds)
    (138/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051430568 seconds)
    (139/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074831947 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063844209 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064050797 seconds)
    (142/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111289247 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071014108 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.049829621 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071558112 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070711962 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.154191048 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063674142 seconds)
    (149/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068243406 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071234124 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.152772243 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.0644083 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063611549 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071589866 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108284376 seconds)
    (156/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050131161 seconds)
    (157/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065980701 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.153281641 seconds)
    (159/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072503047 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.050822506 seconds)
    (161/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.049846344 seconds)
    (162/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072127259 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.203592828 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.1889307 seconds)
    (165/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05119775 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072434381 seconds)
    (167/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.292419314 seconds)
    (168/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063446271 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070112199 seconds)
    (170/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066485584 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05074569 seconds)
    (172/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099161343 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071920682 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071528661 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093634448 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052107477 seconds)
    (177/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119594024 seconds)
    (178/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051204568 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071008555 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.106802341 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11176916 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100163792 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181225509 seconds)
    (184/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075407223 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05341731 seconds)
    (186/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059769317 seconds)
    (187/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07813411 seconds)
    (188/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069060884 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178868487 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064964666 seconds)
    (191/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076047872 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07125921 seconds)
    (193/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067396569 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050057096 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064494199 seconds)
    (196/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077352132 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064128313 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07268096 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.049515585 seconds)
    (200/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06364926 seconds)
    (201/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072171112 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113018153 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.352352032 seconds)
    (204/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051155255 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067150468 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092793062 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052670816 seconds)
    (208/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071843605 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064060577 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066481981 seconds)
    (211/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07268409 seconds)
    (212/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105537336 seconds)
    (213/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050243146 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052903254 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065104526 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092190414 seconds)
    (217/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155128422 seconds)
    (218/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061231608 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183697951 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074809313 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050761396 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072918525 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071173948 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051670657 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091451386 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064910402 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086851217 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068834895 seconds)
    (229/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11033775 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17830739 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070914263 seconds)
    (232/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051698555 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112730449 seconds)
    (234/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075114918 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072028555 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065064652 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063640391 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136220703 seconds)
    (239/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15480058 seconds)
    (240/309) benchmarking ("sort", Float32, false)...
    done (took 0.132270197 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108694231 seconds)
    (242/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050157678 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135659433 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176047303 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087606006 seconds)
    (246/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062731778 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050061506 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070732729 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.050998026 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126180547 seconds)
    (251/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061592338 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050269048 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.049598563 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087921117 seconds)
    (255/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111227911 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07761615 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077324698 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050123519 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065405992 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065639119 seconds)
    (261/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052103439 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086688089 seconds)
    (263/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051059109 seconds)
    (264/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050657702 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064148243 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.049700341 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06391649 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139784106 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.050838616 seconds)
    (270/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066325852 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070615792 seconds)
    (272/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07099004 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072561918 seconds)
    (274/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06423413 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168764791 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089279801 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071641492 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170113359 seconds)
    (279/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050174813 seconds)
    (280/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.050848011 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08785834 seconds)
    (282/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051538156 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050028482 seconds)
    (284/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050602554 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072753165 seconds)
    (286/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066060612 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06343598 seconds)
    (288/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060042913 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063372157 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067182109 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072113087 seconds)
    (292/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.050696423 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051107968 seconds)
    (294/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087625435 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070522396 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075210938 seconds)
    (297/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087909035 seconds)
    (298/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05032456 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052307832 seconds)
    (300/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050018464 seconds)
    (301/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066184436 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138519609 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.049872106 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072707252 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050129618 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070091014 seconds)
    (307/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051493286 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064845968 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.049782562 seconds)
  done (took 30.670117599 seconds)
done (took 32.160813251 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085033006 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090830028 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073999147 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092086942 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079727856 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.074662895 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071186644 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076956507 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078708441 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080412036 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077087497 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053094803 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072811063 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07333306 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073487589 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089870121 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07717516 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071744814 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07186999 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063566772 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072232306 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064443577 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06620387 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.052786156 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077812471 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070695518 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07131662 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072585399 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064848324 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06489588 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068167881 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072878718 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064397047 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078322493 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071142381 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071571044 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073302057 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075485679 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066697989 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064534201 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073100933 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064466368 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071398531 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073512583 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070907265 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070852114 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071961529 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077010691 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089966557 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066425456 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073780002 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075086791 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074895526 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071846503 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068498392 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071822442 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070067398 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089835656 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072325872 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066224796 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072910061 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072700742 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070444536 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071863004 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071542939 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073766121 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074214246 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070156443 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073442262 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070148511 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063960126 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071865945 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067949708 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064751035 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074548394 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075854382 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062618258 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069789006 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071374373 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069403228 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063289026 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066065766 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066076043 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070454602 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065823117 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05349159 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068533808 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071460307 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063308699 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072432285 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071034371 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071412308 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066096563 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074624117 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063869252 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070091106 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06462864 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064622363 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066007692 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068442114 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064223619 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066149239 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073860114 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065731811 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070841764 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077777686 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063589159 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070925172 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063052828 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0632015 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07836675 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073934734 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063724103 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066557805 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063170421 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071460456 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063212464 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063903734 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063687416 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064444124 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070550897 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063703692 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065603399 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071748388 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077100774 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064074565 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067517243 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065745709 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064206253 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070471014 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064382165 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064139689 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066508758 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061065197 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066148315 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064380836 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071797589 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065834136 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.20624549 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066474993 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073300568 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070180125 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070829369 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07053276 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063876226 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058222648 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067013956 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066740353 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066697961 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064970369 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066745025 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064482497 seconds)
done (took 12.364261418 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066807235 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138916296 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097489896 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094406299 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084806074 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065446786 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075234426 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099408217 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06697544 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100022375 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086635048 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085253232 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112547729 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063544433 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064563476 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06914465 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066096616 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08027219 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100009837 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086229003 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.113633145 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064141667 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091635451 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088037149 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086958486 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10203053 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068038644 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068779464 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068395007 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091927773 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086684998 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068720555 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065301022 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097796386 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09269446 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082901153 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065136404 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081878275 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065810775 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064844946 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066192812 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097213454 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079011669 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080068378 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068968334 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067916537 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066481908 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082279072 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088443306 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077891997 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084351909 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099859247 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067540759 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064428621 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063407935 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08461204 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06390643 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067834127 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064766595 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066605196 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065198106 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067602713 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079522884 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079606045 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068949271 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078694996 seconds)
  done (took 6.800055297 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083720854 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090625385 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083388603 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08317149 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.0650129 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065491536 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065292117 seconds)
  done (took 2.110995657 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067514639 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087665983 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088479802 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088091896 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083497539 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087014254 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075017928 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065145995 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.086541856 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06654858 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086083447 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098932656 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06879207 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073125734 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088914765 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064954686 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089168899 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065399348 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068224514 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089079847 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067614386 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094323658 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068942503 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065186028 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079349963 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065036968 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112084538 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069783357 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067563476 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068643815 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063587413 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106283117 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079316338 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073414058 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065627972 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079883672 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079907178 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06437427 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082314743 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074358384 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079500312 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066287155 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066321434 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063851402 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069956819 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07612918 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066081008 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065927502 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067821657 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085527902 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066684494 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078975084 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068591058 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070835827 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067136065 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071997167 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075577417 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066462662 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08518169 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067025716 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081927154 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081782018 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079308265 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082145599 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067763702 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079274277 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07917131 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068945535 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06702636 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068652466 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081494501 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063813878 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06700625 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076266671 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067610647 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088468439 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088362987 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067495238 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07873627 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065659964 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065745441 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065320796 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088457487 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070689083 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065147024 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06941831 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068447922 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064403837 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064686229 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069144756 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063396237 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066924337 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068087664 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06866385 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067874948 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081911158 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068009717 seconds)
  done (took 8.780962115 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068702562 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067615822 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06863691 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067463059 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066725387 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067470208 seconds)
  done (took 2.004310194 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092316767 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068433589 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079304829 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070723199 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103573614 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086296691 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085708949 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077189685 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082345849 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07770404 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08537382 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087449056 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091634341 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071690559 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08538973 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070550062 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085789251 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07392968 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076957321 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071579475 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085618144 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07150859 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071614807 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080404769 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074528008 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070744583 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066079225 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077964306 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076820161 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077215477 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071195874 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074499773 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069387172 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077020168 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085822563 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069340545 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070584504 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076124712 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070882964 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074667274 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086983537 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071229325 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073113049 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075850271 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07634286 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069038733 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075948459 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073934434 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084947889 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075907986 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075760072 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070204063 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074134267 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075890122 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069089202 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076488531 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076007708 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085157405 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071159637 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069310574 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067351417 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074734057 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076041098 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074054326 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077331777 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07594518 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069588346 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071103307 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071151596 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07014472 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075942279 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067634 seconds)
  done (took 7.066391548 seconds)
done (took 28.320292545 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533904924 seconds)
  done (took 2.095127358 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.601887961 seconds)
  done (took 2.188700144 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.638181409 seconds)
  done (took 8.219095018 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.395960753 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.489187139 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.715284607 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130112306 seconds)
  done (took 3.350454903 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.688288988 seconds)
  done (took 2.281531982 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213119865 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.199708425 seconds)
  done (took 2.012877506 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.373831327 seconds)
  done (took 1.964308181 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.13680809 seconds)
  done (took 2.728847666 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.255267542 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173170231 seconds)
  done (took 2.020937716 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.478518819 seconds)
  done (took 2.070416971 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.844836992 seconds)
  done (took 6.437570711 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212535029 seconds)
  done (took 1.848039406 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240568536 seconds)
  done (took 1.831918817 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.707439874 seconds)
  done (took 3.301391037 seconds)
done (took 43.940216039 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081328536 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081000783 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08080148 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077920902 seconds)
  done (took 1.898253809 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078718762 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072234729 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077126863 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072365772 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076661395 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072057543 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074286122 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076141558 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071668868 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072582359 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071949318 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072425291 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074620194 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07357552 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070586552 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074485198 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075777695 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072150036 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074859252 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072106921 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069782849 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074642389 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074480908 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071163596 seconds)
  done (took 3.362678019 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078386428 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072756636 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075740958 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071280519 seconds)
  done (took 1.900195335 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079894011 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095045587 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089589065 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078255358 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091790914 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086324447 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06852012 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068312425 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070379205 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07696036 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06745355 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095344867 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087856227 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076717692 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079219354 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065276493 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067649053 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086604082 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077494964 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077574034 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069460089 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077323051 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067636157 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087877759 seconds)
  done (took 3.48604123 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08759572 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105245609 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080862283 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088239207 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090239316 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065046717 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087715882 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09011966 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126009971 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064632679 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069749239 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064834832 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071973759 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064644126 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080508423 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106607777 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110498781 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067646778 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095664244 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064912673 seconds)
  done (took 3.291628693 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073544306 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069122109 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065506883 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068730551 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076280234 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072306545 seconds)
  done (took 2.034875787 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068773963 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067336246 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066574693 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066501215 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072073179 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067157697 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064990453 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066890316 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067403336 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065987395 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066103592 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064721806 seconds)
  done (took 2.405706287 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.201965746 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06747073 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069446505 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06523206 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070093546 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065429527 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07985261 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067453852 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090580389 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06534658 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065800113 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067411885 seconds)
  done (took 2.578981612 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205748728 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075511562 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236238041 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148255933 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109537202 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114491169 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111373286 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112448017 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139648557 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099060646 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16619842 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165487135 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106752905 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136001944 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088330822 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099863245 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152384224 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1608127 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104172467 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164778615 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143876371 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124545099 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15146595 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100887928 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10469032 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120239808 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070128623 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078824645 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167807435 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131633224 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142438048 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109858133 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091513137 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174927904 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170135737 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140169325 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145795692 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084294053 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104398921 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134794613 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202183376 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091768136 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164616953 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107928888 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219723203 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133917039 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119829591 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11894178 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104727768 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088985063 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144833219 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182520333 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135970971 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087961125 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123073501 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112330708 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112299522 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113101602 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179921441 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160260215 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127157157 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071409136 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107186677 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152473575 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1324542 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108070487 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123903124 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091750548 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134297324 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154013104 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118885875 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144365307 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116320804 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088000456 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118845404 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139079947 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126358521 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159527208 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122857218 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072468718 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122579638 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100148687 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079814179 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145189454 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074620038 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174698644 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099059521 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108320347 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123966694 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108902516 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108973705 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157156507 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142616319 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10187939 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064460058 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246487209 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121217774 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145179074 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087010695 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10878274 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117299931 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077680245 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135877905 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074692602 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122927622 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076751719 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127534814 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129073193 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076514101 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122500274 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102913738 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100217955 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130871521 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159418582 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087490797 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082200012 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167137424 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120886718 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102633319 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142892154 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155309185 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101799983 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099511669 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149008204 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177905498 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088843887 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162377207 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105709861 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082614456 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086851371 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122695254 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110667346 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122552283 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081169419 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117093976 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166951796 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074019589 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094647584 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132437505 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077941992 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079867428 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104504964 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104175019 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095403334 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099281864 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102770891 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135116234 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12236639 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104168835 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121992273 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097065252 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314358478 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087438197 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10191297 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103868635 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070592295 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134411436 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156180746 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078971406 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161753914 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122180261 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115636938 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118929223 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083747911 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13984214 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079122762 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070048532 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142734786 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110276286 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109330849 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150384293 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115649223 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124162576 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118813903 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133293411 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13037121 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129645038 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10545224 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087821516 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11203704 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125742833 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07268007 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090482963 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079442623 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10341497 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094970923 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082244203 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139670877 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12286974 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108500566 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111084324 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095485227 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146865234 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075735588 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126393885 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118083015 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094941617 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151363083 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152110748 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131041403 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098809931 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135611543 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069351518 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072873707 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086901471 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121000257 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081739899 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082150084 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257912826 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148076085 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129416308 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13614111 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123135029 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119290291 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155427045 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069607214 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118303021 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14623877 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121388929 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104201321 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089449945 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098567719 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142495557 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105809975 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180169517 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116660361 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122930883 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151433264 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100738712 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079378301 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103034909 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134411466 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102896458 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143196363 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099117795 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087512186 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109226665 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073739732 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098503124 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126146097 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11705741 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133692036 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114556061 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131164908 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077020433 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114193028 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119875339 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120365253 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063635597 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119321829 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160433541 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093928622 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11808915 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152860704 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078482637 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133590633 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173034337 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142779524 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084028289 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251612137 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119431532 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128370082 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120020236 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139849844 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107037901 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137337747 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109681379 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086090255 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088036879 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097042168 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104516515 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093381566 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105796336 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11329912 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095260612 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13143102 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102590601 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109712974 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118120474 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099076223 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090799318 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095897835 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177029655 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118631873 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169450634 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100019804 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144732108 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162598672 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073830835 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078813121 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077454538 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13871316 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08359231 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128824721 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106429861 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11620812 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122418283 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141403598 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095063517 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068287329 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108159504 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131402405 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123127905 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097252011 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102237431 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162129393 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100954282 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078597847 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112977031 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115386058 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102380816 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170710847 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060822327 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104513908 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075464653 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07940615 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126187553 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148766958 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.0785706 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102335373 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118448673 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113030861 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126238622 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098313608 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106276664 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12283226 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144443235 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124403269 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087047614 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107645083 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123614991 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150469333 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101285394 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093581267 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16494609 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146899242 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153679392 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083832103 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110740204 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110568318 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105227183 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132628084 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080474073 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156738847 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07904926 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130305431 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099270972 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084624688 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122955094 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.104432415 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084985466 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141204889 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109526062 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07934473 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073889469 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109500437 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111968142 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099022035 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072286583 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127277628 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070178296 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122761553 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148407053 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07661461 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102904038 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090992671 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075087923 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0997019 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095753642 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082449026 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.337898526 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18778861 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089578675 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152966061 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136148264 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114714344 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137940078 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104791283 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641410671 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07925321 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154722819 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117402624 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175381585 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101698915 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119330113 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111689258 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123560011 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144978841 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104157919 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183159508 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133544494 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116377328 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079478098 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102492305 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104751881 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088707661 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108547805 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115212872 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116310517 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093560503 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115860079 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12454498 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08157549 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095009473 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155813856 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116723914 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143110659 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140416228 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085490217 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118003068 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13749862 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080047744 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119398382 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151200956 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106323607 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099179073 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080734663 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099975369 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158858022 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072648738 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156439058 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118488531 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.257948291 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114244976 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11192106 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130158794 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106527377 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120424565 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092138457 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110838565 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11385131 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082341389 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077148245 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104769867 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111034516 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.0987799 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097654015 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096843954 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153165951 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072190992 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098047486 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114994923 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143472139 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172709662 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088796652 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082429055 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117475183 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112800803 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112395973 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120564702 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078546063 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081152795 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080254545 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077216362 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10798846 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112149953 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11315212 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1105601 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162173579 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082375877 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230758582 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094960194 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104434731 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069524449 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077728715 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095305465 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097387576 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106474829 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109585592 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157556318 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095090826 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089313848 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090409455 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073933343 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082550676 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128149655 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108947142 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117818734 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098346836 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062171241 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107395734 seconds)
  done (took 58.464862869 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109816535 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081843633 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096314028 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143625673 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121643668 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201678025 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153029958 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187820554 seconds)
  done (took 2.836933433 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069497873 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095306513 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102120259 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08296524 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066521933 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069560866 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232193615 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082659418 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066163313 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098107203 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079818351 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070045251 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.425331819 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065689189 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068417854 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062614296 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066814715 seconds)
  done (took 3.520006179 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388683616 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61364239 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.381994062 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07265511 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.490443387 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088393813 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.167551033 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127733107 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072790656 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538016303 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702298073 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123492785 seconds)
  done (took 18.504751155 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076315877 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069264422 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08455641 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083383815 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071946523 seconds)
  done (took 2.112501691 seconds)
done (took 108.04199243 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082184934 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.604383468 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052627739 seconds)
  done (took 2.413537817 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084280201 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084920664 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085920372 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.0838638 seconds)
  done (took 2.075786929 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075313452 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076446195 seconds)
  done (took 1.880829882 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232829429 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169760207 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095337784 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084552106 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07918792 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07891435 seconds)
  done (took 1.97806816 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072992831 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075580206 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072356632 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076716103 seconds)
  done (took 2.025397296 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078403517 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05207516 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054234107 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057534494 seconds)
  done (took 1.970469313 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087324619 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080048053 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078976071 seconds)
  done (took 1.980434474 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10310686 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085745154 seconds)
  done (took 1.920869327 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082962257 seconds)
  done (took 1.818002506 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102535485 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101929918 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131307633 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110717952 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139760922 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10905643 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084485954 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085143933 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076036155 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085898672 seconds)
  done (took 2.761381157 seconds)
done (took 23.125144087 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080164536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368148894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360409603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090252558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.69006013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35569136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.002765309 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114683101 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067447032 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084823136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649382962 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.994269623 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318268732 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.978293693 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323403899 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649061001 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067760898 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067081591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067769228 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985502462 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067418358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067135755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067804674 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647198636 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371396618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067630867 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323235484 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067031981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068976162 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354563281 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067594884 seconds)
  done (took 16.295755871 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071616441 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119881699 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073331021 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083618247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070389294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068780543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071132892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068282797 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121509344 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067191136 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084785391 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067079736 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071152108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067703296 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087160038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.084706062 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06780738 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068066598 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06756742 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06791579 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086440909 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066790631 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067464679 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067908242 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06746276 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080167756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067876456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067764509 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067816866 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069902087 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070317527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067991061 seconds)
  done (took 4.148850773 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120154573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127602437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073358765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105192713 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114314526 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069676045 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147408586 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093149078 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129495248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06775101 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084748097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067123648 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101475081 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068179039 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087625377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067847906 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068750165 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068062576 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067824189 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068082438 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087183977 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067524824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068326356 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068649106 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068046995 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081935756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067806535 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068460572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06839535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06961125 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07138963 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068314357 seconds)
  done (took 4.40708952 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073990022 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075013653 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083809148 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084417581 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069484654 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072927991 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07262834 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069527118 seconds)
  done (took 2.357104799 seconds)
done (took 28.9420719 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079551899 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068468395 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071633532 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082255456 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072678646 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078006513 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067449731 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075435544 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07264444 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072591572 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075109068 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066577778 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071211804 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066742267 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073863609 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067650454 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078972555 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071175901 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078534243 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079132024 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070069183 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073405418 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075131543 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079313015 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079164567 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078610447 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077393931 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073277326 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069359672 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070625159 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076978429 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083983409 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067867789 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079952883 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067873956 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067881567 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071965356 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067468448 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079602953 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076882019 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069887258 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076103397 seconds)
  done (took 4.834492394 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089572287 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092296435 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085008734 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061715031 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067212793 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06566901 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089256784 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059852521 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058935581 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087804609 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055171796 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059381134 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062897632 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053004511 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062792224 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056699663 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06116891 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054875754 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059427745 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059316226 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088759268 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052873304 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077293917 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063102219 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05548735 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060925656 seconds)
  done (took 3.497708659 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075731696 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086437831 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08953565 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130614034 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105150043 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079116542 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080195679 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095173647 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088485019 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066647553 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071496209 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093347796 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091729123 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073639293 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066898023 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08676263 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08436882 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068842055 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073069602 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096412883 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087301908 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086601583 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099397097 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084210273 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066852043 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070143768 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071153836 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.092699811 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071918447 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076917128 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071144471 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07086119 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069565954 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078982177 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070966774 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068946283 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092756314 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077247407 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078636741 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067794362 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070641131 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068036471 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093034698 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132330018 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066434981 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073804374 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075361569 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076490653 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067148963 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087648625 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078228646 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066415345 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070755203 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06575183 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066684564 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080184181 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068742521 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069321339 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076513629 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069569534 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092011973 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071425697 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083338034 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066220722 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074745395 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066280798 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068151401 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065294809 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094641164 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068360587 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111508464 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067710462 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067723616 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075809726 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074494875 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073540696 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066727875 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082099872 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077037502 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070087148 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075756207 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069551429 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069588948 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090779752 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069646462 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06821535 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06750476 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072590312 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069107417 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068027371 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079714723 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068064773 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069631459 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083709149 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066051607 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067698588 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072668741 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071246127 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066151718 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077414083 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071408465 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067215815 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076375456 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066898458 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069112002 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080168246 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073102132 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065710295 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071483355 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072298106 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068129324 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068497699 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06960883 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068672586 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075492613 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073474904 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07099908 seconds)
  done (took 10.708851931 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165803457 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156097808 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069899864 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150133089 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076287211 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078589056 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150540347 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094721369 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067391529 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067886925 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06850444 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109923658 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105564735 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115405358 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078191734 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067055936 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08423109 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114112962 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152938159 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146678824 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084487255 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077064039 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069508388 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068732534 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070029595 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077990448 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085421334 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076624694 seconds)
  done (took 4.514339927 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081226891 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100981902 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074242164 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091409263 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090742656 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067425673 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069939785 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06937359 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080973721 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078220284 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067298152 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07298437 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074164917 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070613194 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068760793 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07452528 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074778341 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068984171 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071463527 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072686238 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078176929 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091566499 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071722112 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066655004 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072646721 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066595041 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.062794809 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083986958 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067531511 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094846836 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065417811 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.0756292 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081988271 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06804972 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067190041 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067024683 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067336111 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067230766 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.0687869 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066067694 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065524336 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056670328 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066248392 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078407561 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073711906 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05529209 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071850318 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072128597 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072169525 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064288325 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069538968 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070004845 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069786214 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074920562 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072235515 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072183353 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068060078 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073537266 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075788643 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066773258 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064316059 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0655316 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071804802 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06423935 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075636575 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071678215 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065649274 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066568396 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06874048 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073592663 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066683036 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070184529 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064362904 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068853945 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071559028 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068752169 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068211072 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065650484 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067193531 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067390583 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054348772 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066862598 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052657636 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070279797 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065483085 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065239031 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066935518 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071828619 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078670967 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068407274 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072800473 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067743551 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06594003 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069696462 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059795881 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069940047 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082431913 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08164731 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066998571 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064839221 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08176793 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071971499 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066041223 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055227967 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074659832 seconds)
  done (took 9.217503492 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092068091 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070436985 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.0859967 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092450011 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08685939 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074863401 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077769855 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069231554 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083305757 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074345029 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077009757 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068286659 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077915157 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07748979 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069493272 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077240416 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072265952 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084711997 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082397556 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068036901 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076183388 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080554246 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090885622 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082260643 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080582305 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081573373 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090424594 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072123988 seconds)
  done (took 4.010398242 seconds)
done (took 38.525680758 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.812147044 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.988536898 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.814330915 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.190319198 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.139222374 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.836571163 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.886840045 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.818061758 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.884464022 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.84419557 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.023065612 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.98907038 seconds)
done (took 65.97965958 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.878333415 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.954115686 seconds)
    (2/2) benchmarking "String"...
    done (took 2.084189364 seconds)
  done (took 5.78922437 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.133584562 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.489772648 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.065423059 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.813052329 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.818222662 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.155546721 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.618418444 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.342850605 seconds)
  done (took 31.055375999 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.00001318 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.044775427 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.524816216 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.558852938 seconds)
  done (took 15.929184713 seconds)
done (took 64.734117763 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.815363707 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.836398809 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.812911236 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.796939181 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.872303218 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.822111952 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.160976624 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.913297662 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.812370598 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.803579389 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.814436697 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.258796212 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.820468813 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.271683968 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.813152925 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.822232721 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.833884677 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.291828618 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.974661301 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.823466464 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.819176942 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.874686256 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.820099172 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.825042797 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.849214209 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.814508198 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.274169221 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.821347268 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.445936942 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.817697581 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.847205515 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.379711764 seconds)
  done (took 205.709146834 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.817001085 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.805826995 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.871226949 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.842645939 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.238009652 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.002108077 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.935868631 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.264682371 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.821083973 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.823928056 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.086376438 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.81643221 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.092947619 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.806660683 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.845110983 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.926510141 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.952004187 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.09207151 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.849144875 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.948578869 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.818491425 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.933730891 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.886772387 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.038559478 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.816949308 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.904650471 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.818002063 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.825766529 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.004556493 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.934951449 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.842446972 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.866216306 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.949546954 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.691835306 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.837528376 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.834326111 seconds)
  done (took 171.599426755 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.202221619 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.817930917 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.821567302 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.818985767 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.825733238 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.819105026 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.940961407 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.940953242 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.415172625 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.487836298 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.872922964 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.641045791 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.81595513 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.886794883 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.830307301 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.822122924 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.833474722 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.843854496 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.81979964 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.817405951 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.942173603 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.83183386 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.938845991 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.8269913 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.818921801 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823402558 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.19137372 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.816501639 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.818673528 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.824199784 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.061291173 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.817901415 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.818561213 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.709269935 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.467289145 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.07467108 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.819737679 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.825243353 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.818638604 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.049030472 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.818430001 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.819416883 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.824122291 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.084077879 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.817350407 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.944313808 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.818212245 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.341951073 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.818052276 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.820598122 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.864461085 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.545056924 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.82269783 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.820290593 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.821899603 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.818661703 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.820782534 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.8290243 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.573643452 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.897641257 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.820478024 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.824498823 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827689213 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.818108965 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.82136669 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.058900654 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.822792606 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.916534013 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.882233581 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.955666608 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.9463036 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.824498486 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.890812555 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.915226928 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.819883251 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.822019143 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.821895347 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.824736143 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.822964773 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.903859696 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.821122874 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.973791649 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.829766904 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.822335064 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.875999714 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.890475613 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.821477599 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.727691424 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.824218566 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.821562259 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.139666145 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.890800744 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.821596885 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.822458089 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.822694665 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.955026544 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.943878618 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.629231987 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.823751051 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.822277153 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.510755569 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.824491487 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.968737244 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.820808161 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.025221388 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.821895919 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.905118228 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.826630562 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.825825232 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.82416628 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.857096625 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.822328136 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.881152351 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.823924133 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.194879139 seconds)
  done (took 407.411416286 seconds)
done (took 788.732342234 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.483953022 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.442205157 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.562082144 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.468875725 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.442868793 seconds)
  done (took 14.158390154 seconds)
done (took 15.919559599 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.915024643 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.916917994 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.847380374 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.915146084 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.842527518 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.912535144 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.896762479 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.850543548 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.881822637 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.848334593 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.882167371 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.850378206 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.837175151 seconds)
  done (took 26.154626609 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.059515228 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.071067909 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.892779384 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.05577411 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.870257454 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.056924841 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.988930489 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.973376191 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.981043676 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.83946015 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.839212717 seconds)
  done (took 23.38988134 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.066328942 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.067718315 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.903096436 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.062531086 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.875370608 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.058366729 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.987691915 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.979789134 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.981211875 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.840777403 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.839867612 seconds)
  done (took 23.424432218 seconds)
done (took 74.728708222 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.834073075 seconds)
  done (took 3.595661161 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.856692275 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.015349567 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.840948727 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.838804588 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.833915729 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.833385283 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.839840722 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.836135896 seconds)
  done (took 16.659362231 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.832788748 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.832880559 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.832325706 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.834048215 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.833914588 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.83282419 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.830732018 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.832781779 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.83259661 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.831344467 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.830387239 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.835681113 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.830646854 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.834176411 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.831579106 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.832405266 seconds)
  done (took 31.086142641 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.834341961 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.832005733 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.830309887 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.830124098 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.832168131 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.83215666 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.83245387 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.831867651 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.831881397 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.831238429 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.831874351 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.829408363 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.833291529 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.8313843 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.833347789 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.834196253 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.831863756 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.833197246 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.838604573 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.831196366 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.83218871 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.832889626 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.832510833 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.834089575 seconds)
  done (took 45.745397618 seconds)
done (took 98.851393246 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.710399537 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.206195308 seconds)
  done (took 8.678372487 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.83682445 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.835252633 seconds)
  done (took 5.471570085 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.838952068 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.835057496 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.839769925 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.83503495 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.835247437 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.836944845 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.837064865 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.835334728 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.836790537 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.836599905 seconds)
  done (took 20.130255782 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.835391516 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.834481442 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.832460361 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.837537306 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.837458431 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.833427995 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.835969499 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.836725094 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.835913013 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.832713787 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.835881532 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.834435788 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.836859702 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.833916822 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.835390564 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.833632291 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.833775678 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.832889361 seconds)
  done (took 34.794205736 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.836842141 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.835287014 seconds)
  done (took 5.437636852 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.833658095 seconds)
    (2/7) benchmarking "second"...
    done (took 1.833882169 seconds)
    (3/7) benchmarking "month"...
    done (took 1.834574553 seconds)
    (4/7) benchmarking "year"...
    done (took 1.834960479 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.835398075 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.834218961 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.83409316 seconds)
  done (took 14.60587841 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.839881547 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.000692011 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.068834386 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.47425631 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.838669476 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.841735208 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.797621433 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.841379897 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.843195425 seconds)
  done (took 20.312302615 seconds)
done (took 111.197496163 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.685309852 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.832524179 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.175314192 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.882018852 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.881068964 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.176896766 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.853458781 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.138287015 seconds)
done (took 43.392304178 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.830883261 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.412127267 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.443530421 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.302123444 seconds)
  done (took 12.924953039 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.817756485 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.365010151 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.874571723 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.415530199 seconds)
  done (took 20.255388363 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.20534747 seconds)
    (2/2) benchmarking "read"...
    done (took 2.18656011 seconds)
  done (took 6.164718203 seconds)
done (took 47.9467575 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838864612 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.840146454 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.8388991 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.839602144 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.836489885 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.835616891 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.83579718 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.8398363 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.839101164 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.838953325 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.840738514 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.842287479 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839282933 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837711346 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837105325 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839997135 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.836704438 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835893554 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.838856196 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.837373423 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.839937755 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.837162861 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.838053848 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.839943273 seconds)
  done (took 45.891270176 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.84198824 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.841365998 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.84070535 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.840071162 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.838511549 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.842866053 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.841281725 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.837022672 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.840833024 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.840615108 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.837222767 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.838125003 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.839862029 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.836626091 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841534691 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.838088034 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.841709294 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83932652 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842013212 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.83738194 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.841428073 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83783565 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.837499454 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.840731493 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.839034051 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.840637856 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.841037866 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.840488911 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.841339503 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.840636252 seconds)
  done (took 56.969550695 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.847822152 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.851298636 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.843097207 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.843009979 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.84127688 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.8438657 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.842490852 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.841319943 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.843208202 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.842228903 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.842586682 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.843262167 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.842982594 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.841527601 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.843016957 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.844568777 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.842048043 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.841343484 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.842908012 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.842233291 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.843470875 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.842933338 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.843365848 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.844733018 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.844734906 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.841980834 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.843473698 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.843534753 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.843425374 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.842817282 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.843454936 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.842310443 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.843004279 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.843289477 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.844389163 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.844618529 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.849346347 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.855438203 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.843950214 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.845659565 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.844802739 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.846572111 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.845528265 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.844603639 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.843981282 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.844346612 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.846572567 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.844602049 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.844421339 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.846946616 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.845243837 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.84577218 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.844796495 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.844396499 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.845299903 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.844829679 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.846144841 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.846714217 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.845059428 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.845161139 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.844689671 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.84638306 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.844042337 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.846280418 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.845912037 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.845421366 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.846231788 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.846126019 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.845084458 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.846391637 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.844638253 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.845965187 seconds)
  done (took 134.583394472 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.84594868 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.84650054 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.842370117 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.841651212 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843339468 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.844903578 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.845213635 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844926039 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843254749 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.846021363 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847748668 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.847152827 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844241042 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.847404644 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848082889 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.843182611 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.84765681 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.845097832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.848020451 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.849055977 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.847120724 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.844973864 seconds)
  done (took 42.380473658 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846429575 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.846319977 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.845347081 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.847350425 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.84646013 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849504937 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.846427474 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.847180562 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846406762 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845112678 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848483448 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846790446 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.844862788 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844863242 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.846756782 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.845239476 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847310336 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.846076403 seconds)
  done (took 35.013951956 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.844236627 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.846622332 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.847970818 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.847606807 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.845239574 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.848446187 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846428882 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.847695692 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.847789216 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.847287751 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.849212671 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848708756 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.847795655 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846847559 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849496129 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.846849404 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.849597108 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847041722 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848086279 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.845793088 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.84698026 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849260771 seconds)
  done (took 42.423725881 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850042982 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.850872385 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.845557253 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.848231138 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.847104898 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.849279298 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.850362731 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.848277295 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.852409615 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.84916882 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84676205 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.850719339 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.849045294 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.850230004 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.850070486 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.846547629 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.85035507 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.851521249 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.853187626 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.846952401 seconds)
  done (took 38.766075612 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85405404 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.85008002 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.849382205 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852112616 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853289551 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.852678222 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853792862 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.85506405 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852199165 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855627851 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.852606887 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.851110585 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849281677 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.852620363 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.851550832 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.850534401 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.852036519 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852243951 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.850592309 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.85250298 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.85351886 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.855039313 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853689509 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.855335353 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.85322016 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852872956 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856498642 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.85119537 seconds)
  done (took 53.654402553 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852464095 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.855327259 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.846939099 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.850888552 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.852177199 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.847937944 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.850693103 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.850418154 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.854774963 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.850524197 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.855485065 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.854255504 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.85307637 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.853816222 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.854988524 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.855183679 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851208061 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.850345621 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851786209 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851796006 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.854911865 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852147433 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.856500802 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.856698931 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850217564 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.853055875 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850863564 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.851043471 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.854041697 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.851748084 seconds)
  done (took 57.358146615 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.875612135 seconds)
    (2/2) benchmarking "in"...
    done (took 1.872467542 seconds)
  done (took 5.533543337 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.849332799 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.855272416 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.856485848 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.85068572 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.850590227 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.855082866 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.856036728 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.854396998 seconds)
  done (took 16.609380098 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.854708528 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.853156625 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.856889192 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.856107278 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.856812521 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.854499194 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.858813016 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.852780453 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.857770078 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.856012456 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.862796741 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.864008216 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.856857222 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.858544401 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.856640106 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.859789694 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.856020128 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.857393671 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.857093777 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.854210775 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.856786127 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.858604193 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.858568983 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.853993794 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.85664015 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.866382039 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.860695504 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.855933583 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853923354 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.860348094 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.85787219 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.855168852 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.862853636 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.862302541 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.8595798 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.857911296 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.864911411 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.861960212 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.862503132 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.857592181 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.858171133 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.857200452 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.857365741 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.85972477 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.860074518 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.859288767 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.856108847 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.855954148 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.858956102 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.860767743 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.866918845 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.861012106 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.85462742 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.862200421 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.86268834 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.862591346 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.858116572 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.863654527 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.872197406 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.869948754 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.871745056 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.867879498 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.858513283 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.857239586 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.866077841 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.885448122 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.865742942 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.858859551 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.856282607 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.856748738 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.866345704 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.875354793 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.867550978 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.857917594 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.860247583 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.856643978 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.862744616 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.862330624 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.865613687 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.863788193 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.859467509 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.861146598 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.871393785 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.885604882 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.863047351 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.860714863 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.859026281 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.863819516 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.861023281 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.872632937 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.859317107 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.862055434 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.858395431 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.858477706 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.864971083 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.863792429 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.857443645 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.859660139 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.855712349 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.862127789 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.860778418 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.866912365 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.874842108 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.871409307 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.860637295 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.868724474 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.864845479 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.859376918 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.87242594 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.858231763 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.863419064 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.863672369 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.870237987 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.861567315 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867402675 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.877629507 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.867555364 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.869469123 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.866672792 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.865405092 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.875026184 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.895175553 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.86358581 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.870701545 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.870030659 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.876895574 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.867674792 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.872072484 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.868856714 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.863756868 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.862339441 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.866272093 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.865822154 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.869053497 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.866567564 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.86819332 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.864448636 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.868318365 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.867690547 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.870758348 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.869074701 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.870247721 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.866840801 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.872643257 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.862875592 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.866612221 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.874876278 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.867003729 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.874695576 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.871951059 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.864904981 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.867091925 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.871129496 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.863752331 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.867054696 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.868775157 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.864270566 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.871772339 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.867945572 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.868613384 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.867429871 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.868863632 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.871054365 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.870708117 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.87376989 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.868014023 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.866415488 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.872045228 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.867796744 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.871734059 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.866011785 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.872869475 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.875695154 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.88027022 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.870406913 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.870571196 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.876784775 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.872000539 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.871897923 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.867591287 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.876533397 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.883390847 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.870776937 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.877478009 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.871650725 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.87133575 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.872229258 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.873415223 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.873658579 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.871708901 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.876275817 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.880772726 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.884530278 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.884438418 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.873894195 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.881951502 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.872275173 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.879723142 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.878462066 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.875841343 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.875693427 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.876913032 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.875766315 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.870099272 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.876560928 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.86958426 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.877262687 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.875806103 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.872289255 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.874667611 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.877281533 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.876807401 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.873335434 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.874331361 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.873845792 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.872334909 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.87647316 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.875583747 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.87441144 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.874537586 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.873570683 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.875347105 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.882361468 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.873409873 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.877580292 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.876732086 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.873105512 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.876773233 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.874970199 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.880584956 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.876614142 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.878346947 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.876157843 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.874934319 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.881858901 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.878693991 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.873338702 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.878012885 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.875131523 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.874409771 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.878221597 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.884112954 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.871274304 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.875022622 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.877817076 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.87970818 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.877104023 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.885221422 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.87640687 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.874474632 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.878875356 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.877670248 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.877262792 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.874881409 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.879015547 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.87985075 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.879616522 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.875806926 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.8796766 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.880564233 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.877231523 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.879815724 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.879821215 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.881099217 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.886657248 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.883554276 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.880025908 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.881221778 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.87950707 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.883333624 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.876212234 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.880953182 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.878010572 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.898698516 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.887988729 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.883371613 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.881912451 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.877763734 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.885819965 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.87978895 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.882972935 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.874327103 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.878722533 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.882262945 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.882265892 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.87678558 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.875922074 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.878698609 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.879679312 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.883193008 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.884895664 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.879485705 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.881407796 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.884209095 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.882691768 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.879512799 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.879437107 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.880763829 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.883395756 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.883118721 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.880671761 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.882708888 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.885238912 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.879794393 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.882789785 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.877589728 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.879440245 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.880554506 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.883008375 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.883429344 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.883743208 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.8922263 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.88353044 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.893228681 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.881016274 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.889151029 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.877817575 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.889769344 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.88801558 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.880397521 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.8822146 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.881691746 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.877524148 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.8858364 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.882283788 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.880352945 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.884435319 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.880845426 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.882372141 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.880612478 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.884326968 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.877394926 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.882868241 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.889442391 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.878094898 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.884712804 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.881325292 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.879184447 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.878208069 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.881913011 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.879299693 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.889117549 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.883456386 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.883044382 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.875637913 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.885000772 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.882232577 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.883917198 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.882079694 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.87437268 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.881412933 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.887134046 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.880914748 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.883216104 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.881964521 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.889653056 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.881283311 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.883687147 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.88173454 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.8835669 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.882968123 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.883391214 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.883967388 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.882484875 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.881491383 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.878940754 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.883129573 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.88374406 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.884279865 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.888137041 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.884562213 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.88552139 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.880906739 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.889870222 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.908216359 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.885899593 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.887502829 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.881881263 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.886478411 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.88215736 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.885244398 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.881662483 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.886019556 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.895150994 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.892349669 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.881721937 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.881288959 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.882450165 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87746109 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.881220325 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.876537346 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.885792417 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.883360024 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.885504624 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.88009358 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.890121223 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.886349619 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.883430229 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.880986214 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.886715238 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.892345977 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.885982082 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.880899437 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.886664841 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.883297859 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.887144909 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.881763893 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.885812311 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.887270448 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.881840538 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.884115906 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.890431536 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.891863935 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.8908463 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.885744557 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.884897324 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.886153596 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.883253823 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.888880699 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.882265893 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.884588361 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.883721046 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.882309024 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.887333455 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.88339755 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.884274972 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.884220706 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.885501067 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.886384084 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.893674681 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.883131215 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.885043025 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.885491149 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.88918834 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.881532748 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.887899548 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.893282268 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.8908348 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.897364553 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.897158998 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.892550874 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.886194507 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.887503951 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.898050179 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.886062559 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.890280529 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.887066478 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.889271009 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.889083009 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.891065723 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.885388995 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.894712091 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.887269726 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.885653708 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.891797025 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.892039637 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.887972069 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.890633942 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.892540045 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.883941591 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.886051504 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.885922251 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.885534286 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.88957637 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.88863485 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.885605715 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.885073391 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.888669719 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.889594231 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.894503803 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.889452235 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.889354915 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.881223931 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.887283484 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.88599917 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.8833207 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.88122524 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.88461808 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.881957629 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.890082449 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.8955262 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.887038262 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.885897983 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.889780029 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.88548069 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.888537909 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.892284838 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.8814872 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.888097302 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.887266196 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.886435158 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.886845491 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.888801392 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.889692918 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.885485889 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.888291729 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.886181288 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.891809563 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.89819268 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.897948312 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.885559469 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.885663208 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.891818213 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.889674733 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.88406983 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.885943035 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.888517974 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.891591043 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.887735319 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.889240256 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.88959682 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.892614708 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.906579144 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.891644689 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.88797246 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.886605874 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.888777821 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.887789696 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.886355335 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.88374155 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.887854458 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.893920664 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.893494229 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.885425701 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.894561957 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.888994803 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.887649114 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.894681873 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.89193165 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.892490798 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.887548865 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.887791229 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.885372171 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.889739792 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.905376716 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.88887679 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.894339871 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.920529271 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.885981307 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.888736847 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.888519858 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.889776342 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.890807644 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.892727951 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.887473545 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.894621152 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.883971166 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.887127683 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.889152306 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.897888373 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.888105468 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.886593414 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.884636297 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.891926957 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.892715691 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.884001841 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.891301038 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.886679982 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.890237554 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.889634898 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.886944342 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.889411332 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.907039991 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.897290273 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.887398708 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.889063133 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.8882603 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.891861406 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.894150993 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.901168897 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.896324428 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.894229581 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.886995781 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.890003895 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.891154843 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.887131103 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.891010565 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.88803858 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.891750423 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.888908218 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.903831057 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.902162871 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.894868133 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.888088834 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.892696444 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.891357704 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.888390969 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.890109332 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.888632433 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.890553342 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.893835484 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.893037251 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.888033681 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.892611824 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.896619036 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.8934816 seconds)
  done (took 1121.44710495 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.886636288 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.88914249 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.886186344 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.891596753 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.885932404 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.88837629 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.885510122 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.88856684 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.888672273 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.888544658 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.885389557 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.890388983 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.88398595 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.88526995 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.888499358 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.89071168 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.884702582 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.882455444 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.885919962 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.890135056 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.887593915 seconds)
  done (took 41.451094704 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.890332345 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.882140197 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.890640355 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.890644539 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.887888174 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.894694035 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.886863158 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.891695998 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.89767686 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886768523 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.891945995 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.889248298 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.88790847 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.888321945 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.88441743 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.890200111 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.889703759 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.888559242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.890171592 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.888503871 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.889962321 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.888429306 seconds)
  done (took 43.386735575 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.889038072 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.887507255 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.888892077 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.888863695 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.890234933 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.886009991 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.890436523 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.888214793 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.892237761 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.89184574 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.885394352 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.891349568 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.896759019 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.895768194 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.891475159 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.887207359 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.030619085 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.889616222 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.887327544 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.889492017 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.885376216 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.894580366 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.885899341 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.885896089 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.888834781 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.888348767 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.887012874 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.88851446 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.889814658 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.88921211 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.893884454 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.888621279 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.88788438 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.887858859 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.886880841 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.888338511 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.89371707 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.889029459 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.886366497 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.890445882 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.896827219 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.913811355 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.890342276 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.8954671 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.888497152 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.888404102 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.89224347 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.900708943 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.887020806 seconds)
  done (took 94.587814085 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.889441515 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.891418988 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.886507121 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.887894309 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.893189188 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.888723456 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.890042679 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.891738764 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.889128462 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.891513687 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.891824947 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.88859943 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.887367456 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.888645707 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.894045925 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.883450059 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.886405253 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.884863591 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.887654606 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.886234939 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.88477561 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.886135791 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.887849755 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.886320228 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.890269841 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.888357699 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.888508554 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.889427169 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.89049325 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.889399022 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.895541065 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.891553575 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.890974829 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.89123556 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.891029632 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.893585895 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.889509724 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.883794702 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.894056692 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.890871643 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.890226801 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.897631628 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.890270371 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.892207419 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.887496183 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.892165826 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.891183176 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.88721636 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.891157306 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.888531593 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.890176935 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.887756928 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.891440847 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.887667648 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.890117905 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.891869963 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.889304515 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.875572104 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.871186109 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.877588227 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.872330493 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.879572899 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.875499399 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.875075981 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.878129021 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.875079632 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.877676805 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.883085059 seconds)
  done (took 130.171418752 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.879424074 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.879231878 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.879782072 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8830583 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.877891307 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.879788159 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.876912043 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.874986975 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.881186491 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.878133383 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.8785319 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.878911701 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.877626153 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.880438447 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.879129317 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.877039726 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.876255113 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.878811462 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.880277722 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.88145682 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.8753195 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.87804611 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.879322993 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.878417891 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.876547427 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.879089934 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.874298807 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.876479984 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.875799623 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.877692383 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.879934562 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.878061779 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.877094621 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.877702516 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.878074276 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.877413895 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.876558353 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.876590016 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.879119529 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.878682488 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.878608392 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.879794432 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.877869601 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.878603495 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.877679895 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.87605425 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.880295929 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.878404845 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.87503814 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.875405453 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.877616463 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.877948187 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.877374163 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.877594322 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.87857644 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.877494941 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.878817155 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.879429832 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.881263611 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.878869945 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.878065641 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.87883435 seconds)
  done (took 118.258868679 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.878628386 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.879326021 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.874794839 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.874443601 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.880262636 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.872847706 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.876946841 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.878182427 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.877255455 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.879387675 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.878753917 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.87524677 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.872568736 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.87507066 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.872416411 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875338774 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.872069976 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.874424196 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.87532976 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.873421363 seconds)
  done (took 39.322714758 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.874201131 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.876843363 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.873463627 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.876712075 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.87773586 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.874794126 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.878435226 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.877712425 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.875026317 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.87897068 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.877391833 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.878647952 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875871137 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.875588744 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.87988721 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.876618158 seconds)
  done (took 31.830049181 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.875807343 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.877036567 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.877573985 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.878367413 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.876092066 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.875228216 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.877188194 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.876554646 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.874076615 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.877499715 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.877602081 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.878742848 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.876243167 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.879699243 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.874600896 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.880160037 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.876828771 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.876241752 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.876811892 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.879270594 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.876977522 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.874902659 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.879474874 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.877523864 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.877802878 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.875103168 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.874986127 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.876114238 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.878273149 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.876654087 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.873410616 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.875889663 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.876780987 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.877399611 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.8810231 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.874724604 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.875801938 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.879347965 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.879054546 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.878935231 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.876422602 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.875676174 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.876261945 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.881139131 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.877395 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.879226089 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.874949812 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.878155355 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.875819961 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.877321537 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.876483178 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.877488922 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.879589843 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.880717087 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.879350568 seconds)
  done (took 105.054438447 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.878845815 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.881648931 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.875849406 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.879492367 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.881284937 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.878690007 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.879689918 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.878008752 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.87795522 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.880704663 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.875594696 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.881163994 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.874655325 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.88177314 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.877683425 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.880042762 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.879423585 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.875340059 seconds)
  done (took 35.623815838 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.879018421 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.879226579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.880839639 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.875615795 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.875500297 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.882970527 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.877413866 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.881990867 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.881869886 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.877830719 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.877350516 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.883843616 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.883984778 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.881874911 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.88240278 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.877114076 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.882808448 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.883045016 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.880051032 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.878466147 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.882781263 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.88045797 seconds)
  done (took 43.173786644 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.881315035 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.878597174 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.897893174 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.902838931 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.902946763 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.918366827 seconds)
  done (took 13.187276981 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878785696 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877046858 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.877574949 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883042751 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878241182 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876412558 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880557593 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878692117 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.884130594 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880508282 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876668048 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881823118 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880980272 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878684711 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881379604 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884112295 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880826484 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877931646 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877550619 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88163292 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878210698 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882026771 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881531655 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879784805 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881765421 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879977531 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.884571471 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881029775 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879430923 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884944276 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882444108 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88047641 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881683387 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882119244 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880508314 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883323923 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881324116 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882486672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883630129 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879419021 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.881352364 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886341733 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87932374 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880843344 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88449901 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878497396 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879232036 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876700261 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876535085 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883231395 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882442975 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880735832 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88411938 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881546534 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881536361 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882096748 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881851077 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880852502 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883744513 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879922621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882242735 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883072453 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877561596 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882519844 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881207367 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879757269 seconds)
  done (took 125.947393297 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880302122 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.87966459 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881053512 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881312912 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879345237 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881103396 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880212205 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878470887 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882234452 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881544683 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887128533 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879025703 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881395057 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882381258 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883549915 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8772646 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881958035 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876654803 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880980514 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883689297 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880501701 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881260529 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.884675606 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883157019 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882967874 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887152058 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881747903 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879965525 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88037676 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880543765 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880956173 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878294667 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.885203518 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.880908034 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883037303 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883273354 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882905324 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880872497 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886215467 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888192919 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881059929 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888542344 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88373955 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884988267 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883318669 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883965986 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88087868 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883844758 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8827707 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880522003 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.884044479 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884275894 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88530484 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.885067747 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.883435278 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.884623122 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881472604 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884478666 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882493735 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884848032 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886209905 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882001959 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.888257462 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879466919 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.884182301 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884724746 seconds)
  done (took 126.061824979 seconds)
done (took 2600.458855608 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.937018242 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.903410298 seconds)
  done (took 15.652356568 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.043906015 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.994925852 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.880587364 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.876622746 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.878341701 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.90062176 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.895956137 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.879655901 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.883350504 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.879146364 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.878699915 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.063972827 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.932571516 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.875238572 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.877713986 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.970869057 seconds)
  done (took 52.527823344 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.876630913 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.878853726 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.889659438 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.879890188 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.879691548 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.888492141 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.908191266 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.879142236 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.910626081 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.888778929 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.946956802 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.885284754 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.87517066 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.92517651 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.889212614 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.89182705 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.967982672 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.949904627 seconds)
  done (took 36.019203115 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.954873262 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.881969175 seconds)
  done (took 10.645366453 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.881412466 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.865454167 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.89931238 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.894150504 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.881672514 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.891828013 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.883399262 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.876841106 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.877208097 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.879037124 seconds)
  done (took 70.632737049 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.878227228 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.872492758 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.870505182 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.870498439 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.860935563 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.866931816 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.871206405 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.86368846 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.556811526 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.904351745 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.874883393 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.874773911 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.868929602 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.873143388 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.867581619 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.892533608 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.064193258 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.866713117 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.867274243 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.879470218 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.870555291 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.936013452 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.8830086 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.870994753 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.90171287 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.56040599 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.876286607 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.876532751 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.002895096 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.867204706 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.869759721 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.870526295 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.872156766 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.251577816 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.17649411 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.867564649 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.878874085 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.876290095 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.865522279 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.978790586 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.86898366 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.875234155 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.750604636 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.169582429 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.98563709 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.910068144 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.239778304 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.870346967 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.871474961 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.9007208 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.871932846 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.87027249 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.881448744 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.375938066 seconds)
  done (took 132.742858997 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.864386562 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.126744968 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.018823561 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.863730146 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.155583792 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069201438 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.862276404 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.913249464 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.862154255 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.09639947 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.082003574 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.970636073 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.861731463 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.862446388 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.861550992 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.857480639 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.023044215 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.934920798 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.862958025 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.857751023 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892260906 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.105036915 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.99459599 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.861072884 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.882285927 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.072997368 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.998147688 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.968699445 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.309550586 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.858771766 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.925686289 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.860201694 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.862355237 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.859460517 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.017194533 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.955038246 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949801013 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.859268119 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.861278621 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.858343133 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.533658973 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063413225 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.956837798 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.004230314 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.104716995 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.064927478 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.648571869 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.858314397 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.595865879 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.023067537 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.097612855 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.09038755 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.984328964 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.859044887 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.372050416 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.860875945 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.855818378 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.093334065 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.087599584 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.961908751 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.859490394 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.858738717 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.855819369 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.109851945 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.857638051 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.954367329 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.862574676 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.859121932 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.95648278 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.962654923 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.090477123 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07570622 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.892843361 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.190975792 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.337205354 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.109287548 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.927215103 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093035146 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.860046148 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.856840376 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946712411 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.806067791 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.059992244 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.110171308 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.114743515 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898550091 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.582973089 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.861010374 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.088618647 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.084525001 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.165383422 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.100372329 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.011543664 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.167409069 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.859646273 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.86076112 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.09379849 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.99963764 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.861211691 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.223386047 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094999447 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.428537511 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.893564113 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.204497078 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994459492 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.861584834 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.505829975 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.860499292 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.093790384 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.90336497 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.861536316 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.865827651 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.080486066 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.939263986 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860206658 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.486756813 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.927132988 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.861924411 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.094030535 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.860241881 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.126380899 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.863085078 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101089412 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.858453244 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.897643812 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.091012955 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.102437535 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.863179312 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.112559788 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.107738967 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.979671278 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.084425356 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.483517077 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.861223032 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.153126487 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.86239529 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.862491207 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.037508351 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.861658704 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.011344208 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.863624743 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.197525105 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890009783 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.017952695 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.862389485 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.125808271 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.898130118 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.914094774 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.86321541 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.997321968 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.864098379 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.744944282 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018657558 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864026646 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.861743809 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.586419596 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.861794921 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.02195651 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.096348221 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887916651 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.937653362 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.535577829 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.862658946 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957988548 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.888940654 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.206699148 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.865455517 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.080238276 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.86378172 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.393694833 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.867684124 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.108447123 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.046743569 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.870580962 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.862895455 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.769679667 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.864657932 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.865441165 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.035303912 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.746820566 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.862498267 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069636216 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.86506447 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004250321 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.864788177 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.941098771 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.221106576 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.871143401 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.865713574 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.866318352 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.869581299 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.864798285 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.130132146 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893724384 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.39677845 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.006694822 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.133963764 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.182622633 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.119332055 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.909402291 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.865067379 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.113656648 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.864424491 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.929569671 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.866181944 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.890574373 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10093882 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.867776007 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.078775321 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.146212764 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.781884445 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917429272 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.865012369 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.868288236 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.821492135 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.024566846 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955922357 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.865397027 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.8665674 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.99282534 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.996620829 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.080794681 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.866450707 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.203059111 seconds)
  done (took 902.190167286 seconds)
done (took 1222.226101089 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.866707963 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.864792539 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.850793138 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.863289884 seconds)
  done (took 29.245458304 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.870589058 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.868105863 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.870127663 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.868360874 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.869970339 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.868736147 seconds)
  done (took 13.010944176 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.893621082 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.85840127 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.861311597 seconds)
  done (took 21.410096326 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.937518681 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.273652752 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.976637539 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.303885211 seconds)
  done (took 10.288349317 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.872090909 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.870414286 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.868667376 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.870178041 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.870050729 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.871423807 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.869701816 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.871962484 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.872324758 seconds)
  done (took 18.634146555 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.312945865 seconds)
done (took 98.699830475 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.873160395 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.019069617 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.37157712 seconds)
    (4/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.033083793 seconds)
    (5/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.866869857 seconds)
    (6/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.219462327 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.850009812 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.045430592 seconds)
    (9/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.049689924 seconds)
    (10/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.95585373 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.895418786 seconds)
    (12/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.022435783 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.92964689 seconds)
    (14/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.804833802 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.909181172 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.348627483 seconds)
    (17/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.030798201 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.893218068 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.941124712 seconds)
    (20/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.044126452 seconds)
    (21/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.944353177 seconds)
    (22/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.902454889 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.163256964 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.113657634 seconds)
    (25/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.08713409 seconds)
    (26/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.429290846 seconds)
    (27/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.231863929 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.921403144 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.202336337 seconds)
    (30/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.947116394 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.198711517 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.223908322 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.795922292 seconds)
    (34/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.282288338 seconds)
    (35/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.949769164 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.972583209 seconds)
    (37/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.971320482 seconds)
    (38/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.98631201 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.044628956 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.92382618 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.969835102 seconds)
    (42/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.472629705 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.24085748 seconds)
    (44/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.000643702 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.869086782 seconds)
    (46/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.039489762 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.329146011 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.473449194 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.980105267 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.242815288 seconds)
    (51/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.851227615 seconds)
    (52/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.280746493 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.060251185 seconds)
    (54/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.504210101 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.954745201 seconds)
    (56/309) benchmarking ("sort", Int8, false)...
    done (took 4.914965969 seconds)
    (57/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.899074702 seconds)
    (58/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.95218543 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.507427406 seconds)
    (60/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.275767193 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.981197818 seconds)
    (62/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.854243363 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.129900863 seconds)
    (64/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.896643384 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.956290822 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.776452109 seconds)
    (67/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.019363718 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.854867036 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.936059602 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.56603178 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.887450275 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.849361848 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.187184486 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.862466737 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.217052641 seconds)
    (76/309) benchmarking ("sort", Float64, false)...
    done (took 5.677609498 seconds)
    (77/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.871494009 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.949248782 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.241890221 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.870292024 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.534885027 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.880017164 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.767270978 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.880287047 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 7.338685357 seconds)
    (86/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.959403525 seconds)
    (87/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.440583075 seconds)
    (88/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.799744912 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.672249718 seconds)
    (90/309) benchmarking ("sort", BigInt, false)...
    done (took 6.878614727 seconds)
    (91/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.00365654 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.258192861 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.973919142 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.998822266 seconds)
    (95/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.15531639 seconds)
    (96/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.88890852 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.856568354 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.999622915 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.750717308 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.056914213 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.801437744 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.967573807 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.260458431 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.875664305 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.9334866 seconds)
    (106/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.526622177 seconds)
    (107/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.888886379 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.088407694 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.17258246 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.902489148 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.377350533 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.081939896 seconds)
    (113/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.176835253 seconds)
    (114/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.692224271 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.375634967 seconds)
    (116/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.449205946 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.875224796 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.898832709 seconds)
    (119/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.518452345 seconds)
    (120/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.687783896 seconds)
    (121/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.959469017 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.210052362 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.873822254 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.046229939 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.071099138 seconds)
    (126/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.068549123 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.874869192 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 3.718197502 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.894020977 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.874320871 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.118639262 seconds)
    (132/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.999821801 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.142051997 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.510649251 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.098168864 seconds)
    (136/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.689878386 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.865940017 seconds)
    (138/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.197905581 seconds)
    (139/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.517778256 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.09757231 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.150594619 seconds)
    (142/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.199968599 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.090533335 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.244694655 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.124717536 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.891288766 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.155213577 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.175583395 seconds)
    (149/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.940535563 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.977524243 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.182662021 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.212624521 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.097769664 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.90446785 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.457298717 seconds)
    (156/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.924339141 seconds)
    (157/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.96172198 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.132033009 seconds)
    (159/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.90172745 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.860997975 seconds)
    (161/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.070045501 seconds)
    (162/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.906098802 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.860570969 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.780586503 seconds)
    (165/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.438463672 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.894608524 seconds)
    (167/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.940073521 seconds)
    (168/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.179501318 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.018055303 seconds)
    (170/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.016419999 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.862154075 seconds)
    (172/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.076195639 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.399818347 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.505020764 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.00318825 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.860882753 seconds)
    (177/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.184845403 seconds)
    (178/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.260786898 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.137271892 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.055099991 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.86527376 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.058986852 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.878711172 seconds)
    (184/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.88782548 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.861567772 seconds)
    (186/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.696368564 seconds)
    (187/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.397349452 seconds)
    (188/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.903455194 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.879521023 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.876097687 seconds)
    (191/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.030117528 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.902523344 seconds)
    (193/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.941458158 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.177188504 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.262982875 seconds)
    (196/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.563946944 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.05473383 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.914245741 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.122675077 seconds)
    (200/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.880922206 seconds)
    (201/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.936764522 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.978440237 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.232316987 seconds)
    (204/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.130036311 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.879365299 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.644154028 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.8853467 seconds)
    (208/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.902008112 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.936379221 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.84647198 seconds)
    (211/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.996300943 seconds)
    (212/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.095909804 seconds)
    (213/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.981136651 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.863937237 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.119888593 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.288986565 seconds)
    (217/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.946426083 seconds)
    (218/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.086578355 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.881773411 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.679240006 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.975991443 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.104572758 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.009754496 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.805516119 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.61589759 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.213240604 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.859926214 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.014801965 seconds)
    (229/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.380214613 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.877212636 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.898359138 seconds)
    (232/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.367003889 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.958720945 seconds)
    (234/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.962721777 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.985202763 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.568530614 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.919983109 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.879481342 seconds)
    (239/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.106564646 seconds)
    (240/309) benchmarking ("sort", Float32, false)...
    done (took 5.656377207 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.95956065 seconds)
    (242/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.067155429 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.827261607 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.882172467 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.897262678 seconds)
    (246/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.428514052 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.970223121 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.913459905 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.009321667 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.977397127 seconds)
    (251/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.159316893 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.257586862 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.985595351 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.095526843 seconds)
    (255/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.109364889 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.398983639 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.589508736 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.965917392 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.215519541 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.567390055 seconds)
    (261/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.975231958 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.454922658 seconds)
    (263/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.225479238 seconds)
    (264/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.864682388 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.99510165 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.191582219 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.118603522 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.90419911 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.866897478 seconds)
    (270/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.067363138 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.90808569 seconds)
    (272/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.908975834 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.246691225 seconds)
    (274/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.884007142 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.913447524 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.684122746 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.918093716 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.98244038 seconds)
    (279/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.991590775 seconds)
    (280/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.229040512 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.005419514 seconds)
    (282/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.868975182 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.709515213 seconds)
    (284/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.028782376 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.966029228 seconds)
    (286/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.971811547 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.060799259 seconds)
    (288/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.080387462 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.029801669 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.39543159 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.773018627 seconds)
    (292/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.215277785 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.254429456 seconds)
    (294/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.884949468 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.961803572 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.893439171 seconds)
    (297/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.911189776 seconds)
    (298/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.017446798 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.869025662 seconds)
    (300/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.250736894 seconds)
    (301/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.978372839 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.889151847 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.112808037 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.908223002 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.258583109 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.906065044 seconds)
    (307/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.353087385 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.214958463 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.054051034 seconds)
  done (took 1019.195854586 seconds)
done (took 1021.269078226 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.926897419 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914480226 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.898745601 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.921827533 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.010630611 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.929536533 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.909344992 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.901770945 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.946581092 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.950148711 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.897382134 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.927655538 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.899197848 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.899764403 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.899587312 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.913405788 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.209918736 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.924438473 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.916308142 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.909381261 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.916210285 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.898771331 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.949144499 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.927095677 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.904004608 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.902158307 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.902898701 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.920101222 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.011898407 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.904426295 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.901927636 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.911190344 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.209380362 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.921337533 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.897788448 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.920865914 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.91239763 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.909806211 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.904756013 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.936273821 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.352519356 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.90259559 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.902750314 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.902189437 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.902955685 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.904124963 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.90164204 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.90856986 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.914653858 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.915232119 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.351103009 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.918628631 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.905864209 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.903034759 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.911286102 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.903842993 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.907545924 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917436489 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.921642608 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.917287654 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.20192378 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.929306325 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.903624726 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.918997212 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.908092299 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.386772064 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.899370021 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.906945544 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.350022654 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.908922504 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.386212574 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.913044429 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.903642783 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.916732541 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.933661871 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.210608916 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.919848595 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.902263424 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.90915666 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.90120586 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.913639889 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.91542556 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.909424508 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.904138783 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916760251 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.933412732 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.914282623 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.903750896 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.91135084 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.923078935 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.911447104 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.913557343 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.907200908 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.898818435 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.914874411 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.911032159 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.906615763 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.906773982 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.910289246 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.914223162 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.351993027 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.921857713 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.901408401 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.899618733 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.902793128 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.917525916 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.352303804 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.905719273 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.926022422 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.9525796 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.905981844 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.205684441 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.931604479 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.921469043 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.913481557 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.907360098 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.901604355 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.204924392 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.377058535 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.923529083 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.906491426 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.903561008 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.920099714 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.907621672 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.90189574 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.21308578 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.931737002 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.919341532 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.026864607 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.915887391 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.935435417 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.904333072 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.908426923 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.935750168 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.920834788 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.938304154 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.909221816 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.921855436 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.922251623 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.902447372 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.915653877 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.918472533 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.907696939 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.912242061 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.900879043 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.936704331 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.917599541 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.919310829 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.926744836 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.026673514 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.902995035 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.208791453 seconds)
done (took 299.079303693 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.993685614 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.901071172 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.004336575 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.90433392 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.998300127 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.995264924 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.900690902 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.90227509 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.902317076 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.278181051 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.902322029 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.902861251 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.900415033 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.901976029 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.001630889 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.904399661 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.901639304 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.241662675 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.905245309 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.993349034 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.900845134 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.902096304 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.905807534 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.28018771 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.89946781 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.901571372 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.97946474 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.904893026 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.272127463 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.905077539 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.901161623 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.244515081 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.99782277 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.924156539 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.915170319 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.91195059 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.994323326 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.907981473 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.990039261 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.000563961 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.009572869 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.946519423 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.905659931 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.898585849 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.908356772 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.907788619 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.903189888 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.942244171 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.905611278 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.904356546 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.242175667 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.915269415 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.904592207 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.9043349 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.904227601 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.937866515 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.90376691 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.907920517 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.01549385 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.908929878 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.971396079 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.313499694 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.282641671 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.907465363 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.903952361 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.904621312 seconds)
  done (took 186.863758784 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.975759618 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.980485043 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.974242709 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.907209259 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.955297941 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.975632496 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.906663117 seconds)
  done (took 15.50627094 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.915933025 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.90786531 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.958653855 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.95724359 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.906240152 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.057122412 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.906806862 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.920992865 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.905148783 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.960222442 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.910021144 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.907879564 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.915146396 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.908140656 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.956013752 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.921944669 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.025015396 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.910467137 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.908356289 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.060095349 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.905105189 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.914863074 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.964477196 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.922835606 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.909275027 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.914901506 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.492982224 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.907553706 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.904161247 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.909148756 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.906330705 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.952359352 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.909644222 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.909059506 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.904354484 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.025763552 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.909666103 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.906447988 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.908830998 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.901138782 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.910212855 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.908868808 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.908255909 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.907517659 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.909320805 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.935668309 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.907188889 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.907554754 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.909326557 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.909128481 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.957949544 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.909141915 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.905744238 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.906373487 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.963673038 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.913601324 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.908958979 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.905709567 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.909428388 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.908013606 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.062837682 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.958130276 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.909938744 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.959094634 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.911478985 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.909824203 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.908880372 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.910245656 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.005666371 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.909796595 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.959579901 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.906746264 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.06777948 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.9352387 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.912860575 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.914059482 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.915598008 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.910229426 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.906947332 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.917423132 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.907926141 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.915105298 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.918625477 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.908694841 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.907880776 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.023295538 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.020465426 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.908529971 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.923480609 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.918018852 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.907100946 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.963046941 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.911868734 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.908878838 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.963810979 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.027033956 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.967608078 seconds)
  done (took 209.727116096 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.91740559 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.91994752 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.911044882 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.927528844 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.910860941 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.909278371 seconds)
  done (took 13.330609548 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.912407168 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.910910434 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.913010023 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.91230079 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.912257397 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.911465031 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.91064246 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.912426865 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.915239206 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.912908568 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.914390964 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.91146773 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.913779287 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.910228191 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.912450387 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.909662944 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.911111908 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.907110208 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.912397089 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.914545929 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.070889682 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.913358554 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910773031 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.91231234 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.915675569 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.911858273 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.921863537 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.910154998 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.910862248 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.919740049 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.914174416 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.913390531 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.91203689 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.917915635 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.917260643 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.91370025 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.915315826 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.912074665 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.910782192 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.914591807 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.912057723 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.913847525 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.91182674 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.914357331 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.914794702 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.916242591 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.916742861 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.92167814 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.914714551 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.913625042 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.916278051 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.911812457 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.915377752 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.913167979 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.915566698 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.919043218 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.917041185 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.915377095 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.913158988 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.913321376 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.912667237 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.914387311 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.916413381 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.91701302 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.909865807 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.916167169 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.916663177 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.91698106 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913249851 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.914251374 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.917202345 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.913389843 seconds)
  done (took 140.795689201 seconds)
done (took 568.067490168 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.017749738 seconds)
  done (took 8.855449524 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.064432619 seconds)
  done (took 8.998112391 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.524490227 seconds)
  done (took 10.366043918 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.928945711 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.978398888 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.909705538 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.916555908 seconds)
  done (took 29.58365644 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.247224471 seconds)
  done (took 9.086107016 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.921854026 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.904753951 seconds)
  done (took 15.72427829 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.962159876 seconds)
  done (took 8.801911441 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.039229143 seconds)
  done (took 8.881417205 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.920652584 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.952646456 seconds)
  done (took 15.72432376 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.894251226 seconds)
  done (took 8.734614317 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.544459887 seconds)
  done (took 11.391151589 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.907238227 seconds)
  done (took 8.758719608 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.916057932 seconds)
  done (took 8.75521874 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.068117818 seconds)
  done (took 9.907299213 seconds)
done (took 165.406069348 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.913602159 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.910788122 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.907666779 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.908376513 seconds)
  done (took 29.47849681 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.950863424 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.950489281 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.951864216 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.96115902 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.95406751 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.951819986 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.941773829 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.943276196 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.961437975 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.953700655 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.953599915 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.95315799 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.951082502 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.942512707 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.952843128 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.952547793 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.9614822 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.952900721 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.94272152 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.953952497 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.917917262 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.962470568 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.953937513 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.918261729 seconds)
  done (took 48.630488988 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.115743333 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.990137405 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.071979329 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.969772521 seconds)
  done (took 9.987499879 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.9696485 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.971727595 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.983078849 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.021941961 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.04578827 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.979930449 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.944762417 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.938608945 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.927325877 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.971489545 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.046270758 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.963830182 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.057328995 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.917399474 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.104445579 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.916529307 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.918904802 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.971706109 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.020437306 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.033487948 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.919090584 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.967985934 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.973294612 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.966024233 seconds)
  done (took 49.372890417 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.916227199 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.924134879 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.925021118 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.91873859 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.917179603 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.919038276 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.925524657 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.917962816 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.938442023 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.91973361 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.915694877 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.917383934 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.918289638 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.917899205 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.917681464 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.931135895 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.932011509 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.917295849 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.92036298 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.923500208 seconds)
  done (took 40.27587432 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.912052689 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.766281044 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.265053903 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.168414933 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.912402221 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.908316878 seconds)
  done (took 31.775372108 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.931841214 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.923418095 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.918364241 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.975355474 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.056858771 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.926529135 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.918666612 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.929940258 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.96457632 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.981803137 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.935499933 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.946917503 seconds)
  done (took 25.253492846 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.914336617 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.910706174 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.91049662 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.930045539 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.928688039 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.924621914 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.927907308 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.913257158 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.931534104 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.934084498 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.925019114 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.931458499 seconds)
  done (took 44.929684923 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005501915 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.804078026 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.924930254 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.646866644 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384933335 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124963746 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.42853514 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.249255946 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.916836471 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188932132 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.892259625 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016032909 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.171066882 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914132895 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.933241719 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.382672461 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.200066445 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139322674 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935342062 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.648173587 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959064506 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.475833986 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.711839146 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.964694646 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130141462 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.051049292 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.176888548 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.880617224 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048404802 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947516546 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928737271 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916324384 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190342616 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.285471125 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013216817 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927097741 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.573953033 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.62972563 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.910503818 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.679402503 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.637734293 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.022606702 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927422624 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917401531 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.854158874 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433322433 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289132446 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.919713003 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.628024805 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918635437 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929576516 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007547863 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.923596456 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.734899653 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872940015 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.193839727 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.915925214 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925813568 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.489059542 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.991834793 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453647727 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.890365917 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.112464713 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.670545552 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292136606 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.058511651 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.92160461 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.92418205 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854904747 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.648706548 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962333837 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.067656008 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.936151744 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.570835498 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218039943 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.964400262 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85830905 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.623261793 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.724185643 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.891823022 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149311914 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.878615337 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855176696 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.781154395 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.85543588 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171214814 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94730526 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.535720909 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948614085 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.254408283 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.927906682 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937811873 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928132736 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.146305361 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.802253303 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919895124 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.669883377 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068579436 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93970624 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261268048 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852093508 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.920545487 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177456547 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.133001875 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.180802967 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.421065715 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067075287 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917293453 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.995807901 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.867741983 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968663639 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.185388315 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969735834 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.000474361 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973044737 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.880183176 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202719789 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93734127 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.08135446 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.954353615 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044753168 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.231689744 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203702638 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987198522 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921411414 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.921490206 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.738720317 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.466849936 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.187897343 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.923479533 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440046694 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969481118 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.921002071 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857944984 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.522908543 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.91251368 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.888158502 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.146119737 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.903283085 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233697896 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857935384 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068516946 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.034105558 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.142630334 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.561089529 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.982139625 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182274993 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429946257 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.205971313 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970470486 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941637917 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041468493 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946177281 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.381344873 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.214745357 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.928596672 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.929370739 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.703423801 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.913609493 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929711744 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.930241231 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.723937457 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192733285 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938709714 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.925645753 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.81552768 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.939368328 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992519845 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9304746 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935331916 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.469470323 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.671557471 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.930886691 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.556848076 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14784404 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936027521 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.659765334 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028626549 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.007930305 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192498514 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97498005 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.85902505 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.637323552 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.617681962 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926973331 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.861941656 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.924183295 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936167461 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937133567 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.309014531 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.19429912 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960725343 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.745091118 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.960916796 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937058432 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.931228078 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926762334 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.47075157 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.00996232 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468707883 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.968791649 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065473094 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.941383722 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.862262973 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.930487459 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930329053 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.925364009 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.895819302 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980765703 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.658239132 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307550211 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181313681 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.617399877 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940804041 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.689811581 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.975454226 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.953130554 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.696741743 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892569596 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.965515172 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952225082 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.938559514 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.667223285 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.627055754 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493236105 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239103081 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216451457 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359036386 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.434882602 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.229284304 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266835106 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161361618 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.458155006 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988263426 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267200007 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870891133 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010138966 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.562415633 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264586387 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938997858 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157489721 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318658465 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.606005126 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052974638 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.141274552 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963352304 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.87531187 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.887638004 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.132648817 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071108027 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.624361956 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112799255 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261961921 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.571572838 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.0020862 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.929341961 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.586981471 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005506908 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.639575858 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.292679355 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.489688427 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.815181666 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383947363 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.929943833 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.375293781 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271301483 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.276146383 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.049745937 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862957137 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.942004891 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94127809 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.930030134 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.924369398 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.800197205 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.179982749 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940415624 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16607947 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.221142008 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214909912 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.827616562 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.935452124 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932139096 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210632651 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.729996535 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09118758 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.392684337 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.452273429 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931714565 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.867284019 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866567342 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.625052986 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.939343233 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906368058 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1422635 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.112403489 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.884752464 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462503239 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171674104 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187365083 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.946746249 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.197155023 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198203619 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.667012961 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956803921 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.033116537 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.573914238 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.021048189 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.202516881 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.169645838 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732835474 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.16061231 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.960258579 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.734106271 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.932366507 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143892524 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.202063129 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.836724166 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140023474 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.650376632 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.937989362 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247656659 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978891257 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.819343057 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.068383951 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.126700717 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943441511 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016387832 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944718025 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.945471093 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.945464107 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979783071 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.82716216 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.038423572 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.947327454 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022885309 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011403972 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.455560606 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.936537287 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202181991 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277003224 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245594994 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983374866 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.933653466 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934562233 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870110389 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066244294 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.380904753 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20824675 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.063991038 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.232575552 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959252904 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.589489395 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319744954 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173749088 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210519412 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.83115573 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935852874 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.956143238 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.200823948 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946498656 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.14650479 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152392662 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23240724 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398560681 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.200775961 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.298191913 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206662636 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.305084566 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936583636 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.524844453 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.946089604 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.600245361 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.965809143 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.802760179 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185350028 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94595819 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308788824 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.950130232 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.13383153 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.452827902 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.761218568 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.217211507 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.940236954 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.981080424 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204550401 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311563745 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238392885 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008299135 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947331705 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.666048792 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074817945 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.810878449 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.202798545 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937212006 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148598623 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.645815234 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.947317701 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206752759 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236757752 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.933501468 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.823601849 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943039936 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.947103608 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160657175 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193955984 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179517391 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946685103 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.944682507 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.756094046 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205154535 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98808448 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871871555 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.939623842 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031626448 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.180224688 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957995711 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.45545101 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.647762384 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224549696 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.848329503 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959831961 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461174589 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.2939013 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246330821 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.470133587 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157673951 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.489488965 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.930387839 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238489326 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.943144888 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.453588665 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242891695 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.94131481 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.563667236 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977045657 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.203580884 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250418775 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.952277539 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686997475 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.901849421 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163013811 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.534911026 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878536991 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936477898 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.001377358 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.93731823 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.070382963 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948734224 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.836817836 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89908394 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.686488492 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433117207 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.942435171 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.931354364 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.63401922 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.567239643 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973171548 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084926632 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945940145 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.664355666 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.232842097 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.194588988 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.578475403 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.946254702 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.944743577 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940258581 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.87038527 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.135600684 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.32129203 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22699405 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.416565533 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.976507955 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.944508252 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.156745809 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152221455 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.831540841 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063022834 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446598607 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978023556 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.683922328 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.62177178 seconds)
  done (took 1711.893485504 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.965043599 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.981094601 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.040948857 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.998230806 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.97942309 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.999665624 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.033076987 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.025506426 seconds)
  done (took 57.895054149 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.941232879 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.141833032 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.951628438 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.941654664 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.948081053 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.94147449 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.128978123 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.962832055 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.972304147 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.95210191 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.942981172 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.939030268 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.267062159 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.963856441 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.943299618 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.941602434 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.957581272 seconds)
  done (took 75.739464976 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.944409873 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.16278673 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.973340972 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.952571667 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.900655902 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.948953897 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.950038196 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.951067302 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.943969318 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.163071132 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.5737073 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.955395857 seconds)
  done (took 91.292910474 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.953730409 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.950624565 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.949061736 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.949955076 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.949114104 seconds)
  done (took 11.629103619 seconds)
done (took 2230.018766894 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.301947073 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.166902453 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.17214676 seconds)
  done (took 6.211690886 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.092403525 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.140177785 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.258230213 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.280885324 seconds)
  done (took 10.648633111 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.237678266 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.31414096 seconds)
  done (took 6.423736341 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.346431252 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.957732977 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.334154897 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.943940232 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.941661142 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.941146078 seconds)
  done (took 22.704154528 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.946659277 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.949128009 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.947468825 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.949885764 seconds)
  done (took 9.665963614 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.928435215 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.617184393 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.927807834 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.943042984 seconds)
  done (took 21.289335335 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.694147417 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.344306812 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.689526126 seconds)
  done (took 9.601260026 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.538016959 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.827254709 seconds)
  done (took 9.238713212 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.21175009 seconds)
  done (took 4.084614403 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.974366618 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.218056111 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.467857636 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.451196419 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.545286275 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.801927594 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.262819485 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.194069094 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.342546974 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.375486641 seconds)
  done (took 25.507942042 seconds)
done (took 141.189172647 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.33078738 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.181189648 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.146631878 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.297512663 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.171373494 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.149608954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.148345575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.285734033 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.793896818 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.790222192 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.292985415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.177980498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.104645455 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.189062952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.112418176 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.190048819 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.173585012 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.351439266 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.990224717 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.190148389 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.156051163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.925126654 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.138464048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.938897499 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.17290161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.099004466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.516064627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.944147602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.146989025 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.52520751 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.097886378 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.345609707 seconds)
  done (took 173.949018179 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.853857659 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.944688773 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.94547563 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.944067013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.182209225 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.945607934 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.945813384 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.944336438 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.058909744 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.045663048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.944695708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.168956069 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.944689601 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.94490537 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.945824118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.944690715 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.171949059 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.884827504 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.946192532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.944918085 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.949489677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.04698047 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.948802429 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.0645043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.162504474 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.953502674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.94574909 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.953423106 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.94998928 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.951499358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.953125699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.944091816 seconds)
  done (took 209.353617635 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.947945211 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.946009666 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.947500098 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.945708008 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.947351471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.94724049 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.948309795 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.944912789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.623300247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.619585216 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.951652071 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.952724576 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.954217692 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.945747487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.956987678 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.947048107 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.955622919 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.955594523 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.951856655 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.954521318 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.957639725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.687401489 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.957936029 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.693464459 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.953437675 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.952887809 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.94663992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.956689163 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.96173643 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.962351551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.963562808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.948193871 seconds)
  done (took 223.17186476 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.147266893 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.958868825 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.959468877 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.903068297 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.958963936 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.95747715 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.911582173 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.147661617 seconds)
  done (took 19.847728431 seconds)
done (took 628.208255956 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.403957112 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.245629083 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.13984727 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.979263001 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.23644517 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.012500127 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.979108092 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.039993968 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.698493889 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.041064772 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.616095316 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.991876789 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.711134307 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.996063571 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.100016714 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.030290782 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.515411934 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.60859431 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.147626376 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.062373156 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.158601005 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.932684458 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.052533072 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.733149265 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.727717752 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.974308866 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.139148874 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.520988669 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.983539313 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.137754075 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.712150829 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.355566122 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.984513719 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.971810183 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.029879499 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.007870649 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.306604853 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.983535917 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.103408807 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.745633901 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.051776188 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.591595783 seconds)
  done (took 106.640354641 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.948127104 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.945328254 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.945028437 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.94581902 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.947389151 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.947116644 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.946005201 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.945157653 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.946339743 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.945177166 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.944882429 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.947383996 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.945778145 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.947499948 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.94571127 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.944770321 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.946925529 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.947757635 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.94566072 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.94610251 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.946716704 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.945860598 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.961470124 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.945718622 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.947058394 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.946038578 seconds)
  done (took 52.508495244 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.961848804 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.109983994 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.210267689 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.975290021 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.958963255 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.96440616 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.97736008 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.964226681 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.964398875 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.962834066 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.054095205 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.964841948 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.979955093 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.212427834 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.97303694 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.961784636 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.961714803 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.960588337 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.115052849 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.972681676 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.980530638 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.963482495 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.981180978 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.97132677 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.963222716 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.961371942 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.966271651 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.449001228 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.966126129 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.055102484 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.000457073 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.982571163 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.408607905 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.220108342 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.010635466 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.963994006 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.961782189 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.056374744 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.964358465 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.96259862 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.98033771 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.965111675 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.211725856 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.4432509 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.97129133 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.961110641 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.44791549 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.062060248 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.99988744 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.973939934 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.216083063 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.97574072 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.9642293 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.962755215 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.999337061 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.970711227 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.963983462 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.314932129 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.97062357 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.981411045 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.966351816 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.963500086 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.124995411 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.968479027 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.110999479 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.968327719 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.970900622 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.963802778 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.21518304 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.974584585 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.45796595 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.972871403 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.964485696 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.055828923 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.113299005 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.470808359 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.972077064 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.124237809 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.424637563 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.983271118 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.968296609 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.431556337 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.989724404 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.967640483 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.964465788 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.965400513 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.964586639 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.007996437 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.980205761 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.385888833 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.456984796 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.322491224 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.986747071 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.978592466 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.963343902 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.312871529 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.970374156 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.964226825 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.209807306 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.462495546 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.974806986 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.972304812 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.443810917 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.975139598 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.983603084 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.969419024 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.221102829 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.976206152 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.010602597 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.966979539 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.97293152 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.968045267 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.983469578 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.968865092 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.965860969 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.431993619 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.072583894 seconds)
  done (took 243.096813959 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.960565633 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.957862893 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.959183217 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.957203496 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.959923393 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.965959556 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.959678117 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.960299857 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.966034152 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.958959249 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.958784072 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.960405437 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.960684995 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.968702946 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.997467052 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.968702991 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.616081563 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.963638954 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.961283321 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.95802574 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.608875198 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.964028819 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.960802582 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.964344612 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.961160206 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.963600285 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.963744905 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.986876183 seconds)
  done (took 170.185537859 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.968923205 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.082534743 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.98012427 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.996240776 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.974178076 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.966342791 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.991503349 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.980947345 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.969923887 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.966540812 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.96779602 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.027845168 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.97650345 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.067755503 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.993503405 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.993508047 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.07078645 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.971452785 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.966486476 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.967732309 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.996251155 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.958232947 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.027237652 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.087828776 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.979535383 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.083069816 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.965609122 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.969809597 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.968515977 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.083550759 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.977257191 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.026567717 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.99322726 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.983617365 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.086404244 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.080060246 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.070786159 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.993210633 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.96996698 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.966672553 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.96733199 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.956521988 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.083696162 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.981439966 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.97164815 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.075161378 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.982300355 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.972331379 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.979392279 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.969165686 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.982679767 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.98417628 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.03121332 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.097343986 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.996378789 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.994775869 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.994484653 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.256290814 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.982457179 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.071120787 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.958721112 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.087726245 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.984386918 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.95779121 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.970148522 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.975351294 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.998916643 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.99663832 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.071002074 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.972747117 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.070796994 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.001103524 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.971133722 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.970573381 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.972406599 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.084353689 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.083644785 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.000645593 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.002607848 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.996465634 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.96067935 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.970004845 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.959281237 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.987854292 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.972137016 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.083024593 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.083610695 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.975000838 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.973194215 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.971612876 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.973221663 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.995311029 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.088597638 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.000967217 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.064881334 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.035165248 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.040689912 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.980356178 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.982654935 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.973541189 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.034348748 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.983603754 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.983450453 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.308310254 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.043756158 seconds)
  done (took 212.924205637 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.432318417 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.018733924 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.028422385 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.278852162 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.396960105 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.845745024 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.016353901 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.017763845 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.042039652 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.20480176 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.090563714 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.038536269 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.004211523 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.992911453 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.020167582 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.039346344 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.030054122 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.356386548 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.132309603 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.112458542 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.994771923 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.311712231 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.332330958 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.435108766 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.054137745 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.365452174 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.6866063 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.264898013 seconds)
  done (took 64.445185371 seconds)
done (took 851.678238929 seconds)
SAVING RESULT...
DONE!
