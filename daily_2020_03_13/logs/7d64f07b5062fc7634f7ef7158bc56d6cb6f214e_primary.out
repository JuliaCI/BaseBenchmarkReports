cset: moving following pidspec: 30329
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.285293215 seconds)
loading group "string"... done (took 0.626059502 seconds)
loading group "linalg"... done (took 7.638088702 seconds)
loading group "parallel"... done (took 0.172315669 seconds)
loading group "find"... done (took 1.127988052 seconds)
loading group "tuple"... done (took 1.766012106 seconds)
loading group "dates"... done (took 1.252083 seconds)
loading group "micro"... done (took 0.224128234 seconds)
loading group "io"... done (took 0.895038891 seconds)
loading group "scalar"... done (took 37.184163725 seconds)
loading group "sparse"... done (took 11.712471718 seconds)
loading group "broadcast"... done (took 0.942120392 seconds)
loading group "union"... done (took 12.21775176 seconds)
loading group "simd"... done (took 4.46156525 seconds)
loading group "random"... done (took 8.947328087 seconds)
loading group "problem"... done (took 1.688669414 seconds)
loading group "array"... done (took 20.669766902 seconds)
loading group "misc"... done (took 1.707224622 seconds)
loading group "sort"... done (took 3.286097705 seconds)
loading group "collection"... done (took 17.146589394 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.51661868 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123919497 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.1327464 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119204934 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14790307 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118020054 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125618566 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087277556 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.866762173 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146756602 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116803259 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.398218741 seconds)
done (took 5.398970426 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177762978 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085006161 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085356023 seconds)
  done (took 1.345936072 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069222299 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127445456 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.07065357 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070167764 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070418065 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069870325 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069550262 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069699893 seconds)
  done (took 1.723843257 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076385785 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072196259 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069619442 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073584492 seconds)
  done (took 1.467691043 seconds)
done (took 5.973896397 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.748677183 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209439932 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186007845 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.383039879 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127743472 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.172271813 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640384988 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315692875 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187693913 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077937811 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108177868 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.339325832 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.121608321 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650080545 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076893078 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091920636 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139835491 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.47405577 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070334253 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085322882 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091786026 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131832135 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087578051 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078966414 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147962109 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070463502 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13297688 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083446308 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069084547 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214516749 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175633965 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.717575138 seconds)
  done (took 10.418712222 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101506763 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100937624 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071481583 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128541012 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101553328 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073245408 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08025503 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072919678 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094868223 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134777095 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095250063 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108302529 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069054265 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.0733296 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08795566 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213545134 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085408069 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087070407 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075574356 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.082692744 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.114430509 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083447917 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085375845 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085496662 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.134436484 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186879841 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099297727 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100305375 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071505738 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087120052 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119888807 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132919558 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069988116 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068748394 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128571334 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097303752 seconds)
  done (took 4.826421928 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.962363915 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141677111 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090376823 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132516931 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067775794 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107744881 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068720193 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083663461 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.205254017 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.346728659 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.575916452 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.130587874 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112300282 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105136861 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070788367 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071292838 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069749868 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.440335987 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099736093 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107960107 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083257646 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072803337 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073709518 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068097664 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069883226 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06698129 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071283278 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.115667222 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076545453 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091510357 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.304068948 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120583572 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070659699 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.004102247 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.074053077 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.301353058 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070537711 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103930909 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069219808 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09441777 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138567771 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07195879 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068549594 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.156829797 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06820557 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072772775 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.0689602 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086296587 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105749851 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121641078 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069959425 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06954809 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166081298 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068016494 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081342633 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.107869545 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15777124 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068812712 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.261241384 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091989924 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073228245 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068926606 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.164949733 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126789625 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075863573 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072252109 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073821581 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.070214473 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073578926 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383907075 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068927432 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.893060304 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073801133 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080662492 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072599687 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072427537 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074880919 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075073362 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091066449 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069413465 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076438541 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068924527 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069234798 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069570842 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084990012 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.480432996 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070093281 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07090134 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068800611 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093443882 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098854417 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070319081 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069119233 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102350879 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070610622 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069736013 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069683809 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067373797 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087142892 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072353868 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116026822 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070184579 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.1082803 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101902854 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075145078 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103818783 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081828127 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071156178 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.407175606 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073380327 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070463589 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068814098 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070834069 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069270878 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080602291 seconds)
  done (took 21.730947409 seconds)
done (took 39.115602367 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247255831 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076159077 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076283353 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076569222 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076779333 seconds)
  done (took 1.818821576 seconds)
done (took 3.074868552 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121192515 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099671074 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06797198 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100173841 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067825768 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100796511 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100242081 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078899056 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099619159 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067774401 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09751003 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067681371 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067676029 seconds)
  done (took 2.403656786 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088933374 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086869457 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073300592 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085830278 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0666272 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085839139 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084807472 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091445956 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084463097 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075444067 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06686676 seconds)
  done (took 2.140817106 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085579478 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086682752 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07272124 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08549201 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066901921 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085333794 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085269801 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088203333 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084481688 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076921929 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067548366 seconds)
  done (took 2.132518391 seconds)
done (took 7.919123234 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079227963 seconds)
  done (took 1.316419605 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.529645606 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.637623823 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083046751 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.106962495 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.185716477 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113469246 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.248517177 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087308444 seconds)
  done (took 8.400797683 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090590257 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08594674 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074688196 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071064269 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074970688 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073944223 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072629315 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073367578 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072773234 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071199159 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074111109 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073212071 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072840365 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071087347 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074076062 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072077085 seconds)
  done (took 2.513932466 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093990563 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092722331 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076144892 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077775841 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074900792 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073983499 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076471757 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075804714 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073151395 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07454291 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077411607 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075499807 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073660996 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066906867 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076178209 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079119597 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073385576 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076437969 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076675576 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07822829 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077818547 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067439426 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073657131 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076718711 seconds)
  done (took 3.178498794 seconds)
done (took 16.657238612 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105849488 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07070264 seconds)
  done (took 1.417874564 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082616739 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083820608 seconds)
  done (took 1.418618974 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083435205 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067955301 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089884313 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079985045 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069326126 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068293968 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088512134 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068814387 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068348298 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068420608 seconds)
  done (took 2.004992942 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070626679 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078243468 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072654209 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083228783 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075998608 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067114233 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073306865 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070159519 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078506856 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065640406 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073639886 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085160779 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073291433 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086734461 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073856447 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070919545 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073100524 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070243848 seconds)
  done (took 2.59850474 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068251676 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069172065 seconds)
  done (took 1.397160032 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069565391 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066780909 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069878456 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069337558 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067224896 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065636402 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066138057 seconds)
  done (took 1.72933549 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.36004907 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118355575 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.301289399 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074340043 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083840854 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253935317 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068788881 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074194797 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07424057 seconds)
  done (took 2.705263832 seconds)
done (took 14.531944234 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082231701 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088515594 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096707821 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.370827007 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094117543 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069493682 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115771045 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.180508712 seconds)
done (took 2.369690389 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207764732 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.64690907 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.409807297 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20415077 seconds)
  done (took 2.522553078 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330360215 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090485279 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063098097 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069713073 seconds)
  done (took 1.826899755 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069579075 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072041479 seconds)
  done (took 1.410909916 seconds)
done (took 7.23837962 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070133382 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088215872 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068789486 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067251954 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069301054 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067325532 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0671942 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068606273 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068927825 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.069094053 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068717449 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068983916 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066728918 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06644622 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06872624 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066643591 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066732431 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.181428797 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06925109 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066610999 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068750751 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066521664 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066375745 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066428196 seconds)
  done (took 3.057597745 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08654877 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068504897 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074356149 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07418325 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071812187 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074027984 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073916673 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068803636 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073845912 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071054915 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071437117 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071711044 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071052552 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071419703 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071256003 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071882047 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074083851 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069180572 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071475245 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07187685 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074051723 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068731028 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071837572 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073988125 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071479633 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071395361 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071143515 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068504696 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07414773 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071345269 seconds)
  done (took 3.44591366 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072575322 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066044735 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067340322 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073593664 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066646053 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066743042 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065782893 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066817311 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067527767 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066534198 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068073569 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066278325 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066318495 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066954818 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067050711 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070221379 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081362185 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066730785 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066440187 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066731337 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070624135 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068573771 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066669472 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066230163 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06597541 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065819788 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066945792 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066692988 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066903184 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066128051 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069980869 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070376336 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066535411 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073542291 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070029431 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066690831 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071306288 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066229644 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066889527 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066134424 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066533969 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066105469 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066715042 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073381507 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066958337 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068221129 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066284657 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067661544 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067302297 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068307785 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066478041 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066060751 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068454927 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06758948 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070671367 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066176836 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066929693 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066077871 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067616982 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066818413 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066246385 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066175229 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070036699 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066866078 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080801617 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073230205 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066103982 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067837886 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067154934 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06890904 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068108138 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079776212 seconds)
  done (took 6.195836014 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090760844 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089337246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068713789 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069151559 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065160679 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066885925 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071826811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067036597 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068621961 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084515498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067208237 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068239107 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068493408 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070368139 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067156747 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06825387 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074977648 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064965692 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066777736 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070479365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067671976 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072281513 seconds)
  done (took 2.861658765 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148739561 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072982916 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106000162 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077708268 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072761006 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077811609 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072297885 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072599026 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072444779 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070718221 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070482121 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072270361 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072500727 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070319558 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070217192 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07105979 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073245104 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070469483 seconds)
  done (took 2.696643055 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078589495 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068795391 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090100211 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069051454 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068932733 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071579437 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073069265 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076235096 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071289734 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068961255 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076628783 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070945105 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070783869 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068872409 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071161174 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068619683 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071136201 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068580951 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075997311 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072886268 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073198897 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076396904 seconds)
  done (took 2.885489772 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082460468 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071022021 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083171026 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070975276 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064948514 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06727438 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072383995 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068668203 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072267473 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070426305 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068281992 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067356372 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07073326 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068373134 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071195928 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06871265 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070628876 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068725162 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071142222 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065085122 seconds)
  done (took 2.700095578 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087293025 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071507768 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070486549 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07753719 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070658297 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07046773 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07774639 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070358855 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070164034 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09112616 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070833578 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070633139 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076912587 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074377604 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072583951 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076675583 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077072354 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077430798 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070731974 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070603217 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09079166 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070465536 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07687889 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071144487 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070636486 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070183256 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070461524 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074411713 seconds)
  done (took 3.376367224 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069545708 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0692206 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066979309 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066268497 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066880153 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066685772 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066649018 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066632386 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069441661 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066640609 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068928958 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068943674 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068881227 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068995926 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068835146 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068980254 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069066133 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066318051 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066570757 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067107144 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069107305 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069001203 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069002725 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066554605 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066384864 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068910847 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066931448 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066736798 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069135676 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066559321 seconds)
  done (took 3.327524452 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077991342 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076064301 seconds)
  done (took 1.445413703 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065640669 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082050243 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066186023 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073288091 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07260581 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069935969 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076255845 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072081234 seconds)
  done (took 1.864701785 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083561353 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078842506 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.07017345 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079906137 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078331428 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084996431 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134855915 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069297867 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075349568 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06713939 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081846643 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068177265 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075104649 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06949315 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074540693 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075637597 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067425064 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073595704 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070147273 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067251717 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069579073 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077551085 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072122716 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064615394 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071040682 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090150843 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079332241 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068858475 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071855884 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076089797 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075066473 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063334424 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069027042 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069342574 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067212237 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07811752 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082738285 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071772941 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077205577 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069337752 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076817125 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064914553 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073544336 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075952829 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079171145 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06968315 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069140168 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064156282 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067472722 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071480325 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065099549 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069371843 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063948979 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076093846 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072493705 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07923848 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067844464 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07066052 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072932447 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072394676 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075420941 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071086516 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071805538 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068048225 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079220283 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074068581 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077086254 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064513708 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063572029 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066999449 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078235718 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091493807 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074694804 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06890611 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069564752 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066853992 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072181453 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069503848 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074138508 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075341923 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068763905 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073301428 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076220508 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070002436 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072063972 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075034727 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067724346 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071355845 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067882022 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08398604 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067750188 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066678385 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06783593 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08188168 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072330699 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068157637 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067255639 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076143655 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063053688 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068359114 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068573424 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069677204 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07779654 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071584347 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071377932 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076361796 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074217111 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068361621 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070088556 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.194131488 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07012411 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069380568 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076829395 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063972842 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072940442 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071532382 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069061585 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078239953 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067256326 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069131274 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077047019 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074994255 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068486033 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066770125 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072491612 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06889387 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071728761 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076922478 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067393845 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064244099 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064757397 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072588963 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06833273 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07278805 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073433587 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071906988 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063959576 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066954181 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073579569 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077516527 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069766451 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069910003 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07459518 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071064275 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068491538 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076127449 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071578547 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068524693 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074516691 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070096898 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064975375 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07155026 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071938228 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068155643 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073245446 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071571482 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071260441 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06944902 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067403197 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075098999 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069478151 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068853503 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069178454 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067508633 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07880333 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070758978 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064012031 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066202514 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075786696 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06762774 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068395463 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068537952 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071128146 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069372464 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067156904 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068241972 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071350865 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076655697 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071737394 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06974077 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074555386 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08030691 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068657058 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071409501 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.0685537 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069789604 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069479531 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078176298 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074826765 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073038267 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07195773 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066347172 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074250467 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077308801 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068975146 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067146906 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068918581 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072638343 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075430133 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072558767 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069409104 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067469709 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069904339 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07093416 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070890862 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067700907 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068115342 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073604697 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067133714 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074422401 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068907625 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078400136 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071921074 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063640648 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070637444 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066068971 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074106441 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063046337 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066324306 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067381176 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067859454 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067379644 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.20131936 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065521731 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076395686 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077272611 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070579653 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069614053 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069154182 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076691863 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071287183 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072944094 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073043254 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075473116 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080257698 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069616383 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073921407 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081156939 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070309865 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065218302 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079697863 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069645848 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070377643 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070607415 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069454644 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073974116 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079454937 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078514157 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065203207 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074271263 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069918785 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070415609 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066966691 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076223834 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073747046 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072714968 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078562344 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071902219 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071335859 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074487568 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070539788 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071362036 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070745311 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073248409 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.0694516 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070513318 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069178574 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071829684 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068460507 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067083855 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070869724 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068727242 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069471969 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07398316 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068389814 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069125986 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071301683 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069161741 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070146438 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069898854 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068573716 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072003472 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069833542 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069326943 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071211192 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064080889 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076119317 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068374962 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075859924 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069914978 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06655494 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074785631 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071744135 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07404512 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069309312 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069202438 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070231418 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068259876 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071866587 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075905546 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067636454 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079148523 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076160702 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070124465 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071825487 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069338071 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07046671 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068794601 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071124675 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069147044 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069584402 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06867219 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073302563 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071724026 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069434758 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070497713 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070032425 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069696036 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069093966 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064002578 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068563674 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068894686 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068653708 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077603322 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068320625 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069073672 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06727375 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068974443 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067742961 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065859389 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075090841 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075018381 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067916811 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074148705 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067403473 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069289486 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078141524 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.197379949 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068159332 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068773108 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068428578 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076659891 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069695272 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078736586 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070327119 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069493439 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066830735 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06959453 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068029056 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064892776 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067570039 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072418923 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068652606 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068803552 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069113262 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071493332 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070513775 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078105909 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068639533 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070445768 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070109581 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066754567 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069222479 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068737186 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072148151 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069716106 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067790663 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066896547 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069166837 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070466745 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07120218 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06906263 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071058733 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076475401 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068850321 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072489095 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071310381 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063981415 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072103917 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069440837 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068167035 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069003928 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073154906 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072780841 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06936961 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077979721 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068025914 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072885093 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069268706 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066789677 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068214876 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068774647 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068606716 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068762143 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069941709 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076456534 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067447876 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071971826 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06929018 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070361818 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075462885 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069256075 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071949934 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073669556 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070161816 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071282402 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076969027 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072550514 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073007819 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06954721 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07121512 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074959361 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068353926 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075478589 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069581732 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070084957 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07083152 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067479265 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068678144 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068623547 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068360738 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075126738 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06887979 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068816878 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068336302 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06734302 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070649248 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07089274 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077592244 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071723357 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07235599 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064852992 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066851273 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069519014 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067518071 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070187186 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071240678 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075021533 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070745628 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070040029 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067976474 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077770377 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074102212 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07206677 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066736788 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072234014 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068753557 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070925532 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.0703835 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068601598 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068670682 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071459134 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069488223 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067725412 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.209863845 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073543971 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070153495 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071687438 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071840336 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07026084 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06514878 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069948071 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071216275 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07473803 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072137876 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06889421 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079808157 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068029823 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070259717 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072285985 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068106391 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074425721 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064396872 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070950364 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069810934 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069944435 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06495658 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069012468 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068464852 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071927406 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069206032 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065246913 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07960822 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078152409 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072803561 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068260092 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068406283 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064594981 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064577154 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069908991 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069168491 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071660814 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079464279 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06885072 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068434193 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064220385 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068698347 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07204926 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072730367 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066259316 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064425237 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068839423 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072252888 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07495837 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067913279 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068246381 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072172406 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071209378 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066992591 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07136521 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066195707 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073074792 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080980109 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069302069 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070244562 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074839017 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076365426 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069127765 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064547273 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069080086 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072795298 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069702475 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069686392 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070149665 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083496846 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072457311 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068719292 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068301817 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072045481 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069010755 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076849168 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069480213 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070102505 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076353185 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071852288 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076248739 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072174411 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076359206 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072768169 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072180523 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068338138 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069586309 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067553742 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068603196 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069859204 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069381303 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073509485 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075696986 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068954677 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079811144 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077622296 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070418332 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065872238 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068638334 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068885304 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063970504 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069325369 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067057237 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066856573 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067258265 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06746964 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070268907 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073277165 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069972359 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068700459 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06772509 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06288584 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070853957 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070265917 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068990838 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.201602222 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.07017867 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070598747 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073880169 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072218001 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068499858 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072208682 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071249884 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071232338 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06524189 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076115938 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069057057 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071641132 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070480377 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069344177 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069826981 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072859904 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072823212 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070959573 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071541268 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073414243 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07109088 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06727566 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066934691 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074741246 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067377201 seconds)
  done (took 44.368444663 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101576685 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066037428 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064591327 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065256177 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076035602 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066185649 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064911533 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065734177 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065776911 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067815116 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064590898 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064706109 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072535176 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079602335 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075286268 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069345845 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064612839 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065734395 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064693921 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065868922 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072723278 seconds)
  done (took 2.837312687 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075493268 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079661819 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077397351 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084266158 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073236993 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072658169 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077104694 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072966982 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080532384 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074565761 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080010405 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072990489 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074600296 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074850507 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074988098 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072492149 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080301991 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073182698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072521694 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07679938 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072979802 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077567573 seconds)
  done (took 3.035715548 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069102566 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068800964 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070481079 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064443533 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069396976 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064068846 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071432208 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067422517 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071264305 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067973143 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068157442 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067997376 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070434958 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064404457 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069549068 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067355901 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107946236 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071269993 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068523647 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069245782 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064465761 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070844143 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064476827 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064406681 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068090898 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071416026 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068819281 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066902922 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068468478 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06844834 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068413115 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066664222 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070697104 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069417303 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068538427 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068158332 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068314283 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068634349 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064494201 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066909789 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069302686 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067184321 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069078684 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069764042 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066841424 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066781417 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07115135 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068428702 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064863469 seconds)
  done (took 4.748554418 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079911134 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111022598 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070220213 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090828671 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082149569 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074550682 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072563278 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091259094 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065784424 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066847568 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08283635 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080914746 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068168537 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.0725314 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075080158 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068064637 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068996965 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067118162 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071507955 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067808575 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071621607 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075095525 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081872724 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079786084 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072580839 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067539363 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067936186 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07234349 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07981364 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072711046 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072392399 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073385183 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082394238 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073565269 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067383298 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070530941 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083756794 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068857164 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070719457 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066579409 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07066343 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072714019 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075498805 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083209652 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068462146 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073312079 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068257586 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065802857 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079430965 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.0709474 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075596316 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080693649 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071537482 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068641798 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07261356 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082312819 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068503519 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066636247 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07109234 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078964861 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065921988 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07138868 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08021631 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069769449 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074491043 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080724191 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072951255 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071709268 seconds)
  done (took 6.551223221 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077806122 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09748711 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100417363 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084626747 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077961291 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077657706 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077085697 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077196185 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077555414 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081352278 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077702023 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115489822 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073246372 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080085644 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085951765 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077166694 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077311587 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077635677 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078105764 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077082206 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077483371 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084042287 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077701054 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083728712 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080937567 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072964407 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077241209 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077484974 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08443703 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077274963 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080940752 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077320901 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077405802 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083928514 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080708335 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077288106 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067621179 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077001522 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076984442 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077130037 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073260032 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083878152 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077165974 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073308298 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077443529 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077237831 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083905538 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08129537 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079794472 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080762431 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077379755 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083842966 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077286801 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077486152 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08395145 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086561801 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083733195 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084214705 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077983674 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084642189 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084043045 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086807338 seconds)
  done (took 6.392344492 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083376846 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076071986 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083938882 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064721342 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067567228 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074044892 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066994109 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067247294 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075583825 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077965899 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077521802 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073737525 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076360322 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077577826 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074185157 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076593841 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074311505 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073924788 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075551177 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074314758 seconds)
  done (took 2.906781944 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076996557 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085401445 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069352722 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073818052 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071641715 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074192447 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071351288 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071508599 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069160534 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071964 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07780216 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077581644 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06923922 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073455896 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078078287 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073983924 seconds)
  done (took 2.585309251 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084735136 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075542932 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081471482 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068919023 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069219397 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06520697 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068388219 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06414548 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064727656 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079969356 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068630905 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078314306 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068140473 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06717803 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065138042 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073338111 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065097201 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065672097 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068251158 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08003834 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071812977 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066806307 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071702604 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068682 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070458071 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071960124 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067574344 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069024325 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065635391 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069335843 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071017916 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071950766 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065452062 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066093299 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067599631 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065906161 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068817059 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069054332 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073675203 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068324984 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067213461 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07036658 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068382259 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069173598 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064951505 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069223824 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065195412 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070725168 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066388857 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070806204 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068280504 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070685394 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069227156 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075409617 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071203642 seconds)
  done (took 5.240757195 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082052392 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071914733 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064276648 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066402464 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072259946 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069506259 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072102273 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06930824 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069660786 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066481585 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069871744 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071377931 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069536892 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072189116 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069822557 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071911958 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063998359 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069481491 seconds)
  done (took 2.675965158 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074399284 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068679315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075241715 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069062167 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068634132 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071180999 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064648907 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067291169 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066880519 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068606452 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068818005 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070982225 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067347188 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071140365 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068988494 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068754714 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07097888 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068070892 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068781956 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064842908 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070849793 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06745533 seconds)
  done (took 2.925695815 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09478702 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084366143 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139155517 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080910549 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08774121 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074277659 seconds)
  done (took 1.968014478 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092225529 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101887702 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069152134 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071812628 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077765 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07272004 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072524494 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072765151 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079899271 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077749526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073118616 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080016803 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079962777 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079228238 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077393067 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077683767 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072457414 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075122306 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069298829 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084691099 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073069337 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079967973 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072390484 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072471823 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072526526 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079410027 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080103788 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077628402 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072297567 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080245692 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077600873 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072802695 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080509275 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077537808 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071830228 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079715493 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072985088 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084922632 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077337422 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079038934 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07136201 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077712346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079742066 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076116742 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079775783 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072364582 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076617022 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072302081 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072535353 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086922469 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077691427 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079082369 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078259908 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08021938 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079741787 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086224491 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077519369 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079470794 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077764355 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077516054 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079163652 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077930174 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079156573 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077561416 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077619951 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078977074 seconds)
  done (took 6.529748591 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105372693 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069410951 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072864633 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078323311 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079983526 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072672469 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072667034 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072363811 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073342349 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069586665 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108521134 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072966691 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079477705 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079634072 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07330844 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072379389 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07262278 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079693424 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070021999 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086768167 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072660969 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079404862 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079325405 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079020908 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077694666 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07810486 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072332778 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072769715 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072496796 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072241323 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076755591 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072785361 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079178034 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069052425 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079041763 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072285754 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072088127 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076644879 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072741436 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077275555 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079515091 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084291888 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072658179 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072440773 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077748089 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072740986 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072545574 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069145767 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072238503 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069645998 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077369521 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077420716 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077360231 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079357123 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072792227 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072800226 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07279337 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07261065 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072640753 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077688979 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079148138 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072895759 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0862727 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072487701 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072437384 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079130701 seconds)
  done (took 6.453605909 seconds)
done (took 134.343727443 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.195700449 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172199888 seconds)
  done (took 1.763595853 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071467386 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099108142 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07919877 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13079618 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069396393 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103139718 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102296933 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079318911 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069159904 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068650405 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068837647 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.0709564 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133996332 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068738113 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068968569 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071387353 seconds)
  done (took 2.769966149 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098928497 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157468323 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10391058 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067832978 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099429786 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075036796 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068336687 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077027697 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073203042 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068404123 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074681717 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07296866 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068201329 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073210141 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075795016 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074499006 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067636668 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074982161 seconds)
  done (took 2.889938798 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099682058 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092641135 seconds)
  done (took 1.618399583 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153003277 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.1355907 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202153412 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.333389308 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155721909 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148405722 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142694282 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140707515 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114431076 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136867959 seconds)
  done (took 3.083519645 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100580602 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149199324 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266986836 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116570059 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075060307 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093772352 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117616896 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.0812348 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081622491 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081658463 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081598908 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078246934 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10030472 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075523641 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076483678 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078030552 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103207053 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075232459 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076893686 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077973866 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101059565 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068994555 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075398253 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075465892 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079159902 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078919496 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069395734 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068798272 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077452192 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077601044 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078124629 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093019649 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078880668 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104432512 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073796405 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105770408 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078603036 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075295916 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077222288 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075401152 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080100861 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079516784 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075581184 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079092964 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068575838 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078725347 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068874148 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068747379 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07944269 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070238462 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079708779 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077920506 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104222343 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069679782 seconds)
  done (took 6.125972757 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109315782 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108750217 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072707844 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113452207 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104704657 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072333382 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106245378 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099203685 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109221081 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072450522 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071029143 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072577028 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081750868 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082748847 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117693475 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108764718 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074671486 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071568985 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108704249 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108996332 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071614195 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101980424 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098721937 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108564084 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07025715 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072058727 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070707382 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072679921 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078655254 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079975876 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070926726 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080622242 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085228594 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079880532 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0694503 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070087003 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07121566 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080341896 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080171365 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08027831 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079146632 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070021753 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070627059 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07183131 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071609797 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070473025 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079161642 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08106199 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079674251 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070762641 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07233018 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071181213 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072324874 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080885442 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078908826 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081246837 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081535734 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071202919 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070896536 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074310789 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081379186 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081492327 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080244633 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071718448 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081259502 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070973607 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081659652 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084985806 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070884843 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072036199 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07066558 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071171063 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07423889 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078715974 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079029631 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072198375 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070993756 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071074001 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08082211 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079101936 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071130447 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078446102 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069837489 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070284416 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07172571 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072036732 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077897754 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080059574 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072456205 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070759272 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070333783 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070019202 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06885343 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076938623 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07922349 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078356051 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077587287 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070400267 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077598206 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077355646 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070680139 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07803936 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069282147 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070668021 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071027061 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077286737 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076949533 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078790486 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069783306 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069515787 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077538016 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079597816 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069700524 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076741143 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079052957 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077370118 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068559139 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080373185 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069960156 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078969507 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069679844 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078798929 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069675613 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078086786 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069405796 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068648623 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069477179 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077922367 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070956955 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069546332 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070713172 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069837034 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077283301 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080624466 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070914718 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077093552 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077547287 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070911526 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077262179 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069818755 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078221828 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069614201 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070194529 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068725323 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079806092 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069629544 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069657015 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068990715 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0791056 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069610638 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07921701 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076860218 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068552369 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080855426 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078917663 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076201209 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079411302 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070621856 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069375789 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069889415 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069665069 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077017422 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077682877 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070657785 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069181786 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075843227 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078793214 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068439268 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07553794 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076318572 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076024315 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068215289 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068978427 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078366242 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07792036 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075219718 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075980352 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076827232 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069183063 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075123993 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076478386 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069290697 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081016441 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068736063 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080120678 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076225074 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074354865 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076007431 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07741765 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078236107 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078282681 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081259312 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067768609 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069210672 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076242819 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067831841 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068848616 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076490071 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069669664 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070745272 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.324916801 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073965544 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083893427 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073433266 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082766577 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07291113 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075863158 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087805051 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074437946 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075390634 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083546218 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073327878 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082631269 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084696349 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081285434 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073330045 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074329018 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08355928 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082321551 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076023415 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072845425 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07421884 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080891189 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.08012863 seconds)
  done (took 18.935795844 seconds)
done (took 38.619782667 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.196944217 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.147847072 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.160215627 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114175677 seconds)
  done (took 2.158312658 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.113022023 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100597332 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094480434 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.07007507 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09923355 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069645242 seconds)
  done (took 2.024566863 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273520388 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.189135933 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172674788 seconds)
  done (took 2.116176739 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.194679864 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18182364 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.431679527 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.260177169 seconds)
  done (took 2.652908956 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139500692 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088387833 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070413022 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086304705 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128352712 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.154849967 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098228581 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122254451 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081255246 seconds)
  done (took 2.501452161 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142894194 seconds)
done (took 13.086901574 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float32, false)...
    done (took 0.150893818 seconds)
    (2/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079744522 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127469087 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075256368 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122604709 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200397853 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071360771 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.132269952 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11637941 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078623656 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101583926 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.101189115 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077399913 seconds)
    (14/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.23008434 seconds)
    (15/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.180100851 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.193205467 seconds)
    (17/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.212040489 seconds)
    (18/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.155716323 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07729081 seconds)
    (20/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.187947626 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075607044 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.167289613 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077006808 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.148497723 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091898048 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09236834 seconds)
    (27/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.121700546 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094110627 seconds)
    (29/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.0940049 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.174266454 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085583441 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075742994 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185944692 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077624183 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.108051331 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055334836 seconds)
    (37/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.424305763 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.174365885 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092276088 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.165478976 seconds)
    (41/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07715566 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080062877 seconds)
    (43/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077917481 seconds)
    (44/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.202344023 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077174892 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067807581 seconds)
    (47/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083363871 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055473711 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.155140522 seconds)
    (50/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080554097 seconds)
    (51/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.134527602 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.143468729 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069329268 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076851638 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.099392789 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.070848215 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.133527142 seconds)
    (58/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077966896 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115572867 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076548766 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067105576 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068869173 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077925429 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093661645 seconds)
    (65/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.156245946 seconds)
    (66/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078748835 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.187404472 seconds)
    (68/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.158015508 seconds)
    (69/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07789447 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067285677 seconds)
    (71/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078440305 seconds)
    (72/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078179852 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069303443 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.141845898 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074776105 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068179661 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118385255 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.07028294 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078231211 seconds)
    (80/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082179606 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088859325 seconds)
    (82/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081737241 seconds)
    (83/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07139298 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157288527 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070907559 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071285986 seconds)
    (87/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08345735 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080935508 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11946981 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086661036 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.1787398 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07871438 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074170446 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074435636 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079768016 seconds)
    (96/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111987032 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166339969 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077375011 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.151663417 seconds)
    (100/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.168236137 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083642044 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175114075 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086908541 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054397629 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07314077 seconds)
    (106/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.187351635 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.198130956 seconds)
    (108/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.220686776 seconds)
    (109/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093454957 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.054753203 seconds)
    (111/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053889685 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.102650054 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05512878 seconds)
    (114/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078909956 seconds)
    (115/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110561448 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090433291 seconds)
    (117/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05515092 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.118037134 seconds)
    (119/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065551263 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.083032357 seconds)
    (121/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.14591372 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07465442 seconds)
    (123/309) benchmarking ("sort", Int8, false)...
    done (took 0.141185035 seconds)
    (124/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107132831 seconds)
    (125/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076988188 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.174211873 seconds)
    (127/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.096865373 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074836767 seconds)
    (129/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107997837 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067892872 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075370761 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053462372 seconds)
    (133/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092653228 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067053337 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.082718314 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090190753 seconds)
    (137/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.09814171 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089134514 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088213842 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074115408 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08223322 seconds)
    (142/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053284218 seconds)
    (143/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072815322 seconds)
    (144/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054465391 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074118089 seconds)
    (146/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05360921 seconds)
    (147/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077636639 seconds)
    (148/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184871571 seconds)
    (149/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.158429159 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151380767 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053615569 seconds)
    (152/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053435014 seconds)
    (153/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071084569 seconds)
    (154/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074833179 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066974971 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065972091 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148303664 seconds)
    (158/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063938693 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.108951071 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073790746 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.072731029 seconds)
    (162/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054532441 seconds)
    (163/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066091727 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135848935 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066926468 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070126528 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107344829 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05469959 seconds)
    (169/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.138418559 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07767886 seconds)
    (171/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078525728 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066930278 seconds)
    (173/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067854715 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070422398 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163256017 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086616974 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073965406 seconds)
    (178/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068986895 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.0751653 seconds)
    (180/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064866727 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141517159 seconds)
    (182/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053879968 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054008464 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.15797826 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067361747 seconds)
    (186/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.154226336 seconds)
    (187/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.318895063 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.057002067 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147370081 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.082954253 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07775289 seconds)
    (192/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.057509729 seconds)
    (193/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079917855 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093874346 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.075320007 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.156723045 seconds)
    (197/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.056960659 seconds)
    (198/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.058321784 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097958525 seconds)
    (200/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.056559049 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079511034 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090032008 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077069362 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.194843579 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070707659 seconds)
    (206/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072958247 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.056351392 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070373909 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070150712 seconds)
    (210/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076332917 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070816646 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075896062 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.155362438 seconds)
    (214/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.156154849 seconds)
    (215/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077878912 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.056193555 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.076205801 seconds)
    (218/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193075484 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.055612129 seconds)
    (220/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06885191 seconds)
    (221/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05644044 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077888089 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076105633 seconds)
    (224/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067694301 seconds)
    (225/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07663566 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139216974 seconds)
    (227/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057926774 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058970688 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054848302 seconds)
    (230/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.055014983 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172423829 seconds)
    (232/309) benchmarking ("sort", Float64, false)...
    done (took 0.13021881 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07639227 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068828779 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092968842 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055126611 seconds)
    (237/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055807026 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138863572 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069011477 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056397113 seconds)
    (241/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.068145174 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095897033 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068576381 seconds)
    (244/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122258537 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077565864 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056780558 seconds)
    (247/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093468045 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073738561 seconds)
    (249/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076968057 seconds)
    (250/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070791092 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093694962 seconds)
    (252/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.055169597 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069413705 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140561634 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088534018 seconds)
    (256/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067483909 seconds)
    (257/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067785689 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089400393 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068451587 seconds)
    (260/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07064603 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176973427 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146597636 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.080422673 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070178932 seconds)
    (265/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090446447 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070590551 seconds)
    (267/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073910442 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084197759 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.0785576 seconds)
    (270/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067596865 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05561234 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076795011 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05567324 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055314958 seconds)
    (275/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068088902 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18005536 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075062652 seconds)
    (278/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071218643 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069452775 seconds)
    (280/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.056040187 seconds)
    (281/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05570775 seconds)
    (282/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075087718 seconds)
    (283/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072284224 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069383181 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056431122 seconds)
    (286/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069398904 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.121950241 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069402074 seconds)
    (289/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070774577 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069209367 seconds)
    (291/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054934537 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.100205259 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076232801 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137245048 seconds)
    (295/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077502268 seconds)
    (296/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055234386 seconds)
    (297/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055486496 seconds)
    (298/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056436446 seconds)
    (299/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057840409 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091933897 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074608694 seconds)
    (302/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070043122 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070214972 seconds)
    (304/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055886486 seconds)
    (305/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068282131 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076130938 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068164422 seconds)
    (308/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055698649 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109478752 seconds)
  done (took 31.407223703 seconds)
done (took 32.901665714 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.093621188 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09723207 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080586425 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098246558 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085607081 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080970126 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078572697 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083499565 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085067385 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086934778 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083371753 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060284647 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079577155 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080014048 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079977439 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095248969 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08327997 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078835999 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078721556 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069932797 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078427109 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070864702 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072158359 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.059502534 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082977896 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076094354 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078749015 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078880261 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070191645 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069782089 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073517303 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077699299 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069314225 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082899204 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077350608 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07725543 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07866692 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080685834 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070955328 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069648042 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078511431 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069235268 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077564699 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078514058 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076447463 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074930027 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076979723 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080736766 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093525093 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071449788 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078417338 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079425837 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080658391 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076846424 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072975443 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076658229 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074781659 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093009042 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07666031 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07098433 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077538001 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077024321 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074356794 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076235032 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076396103 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078705606 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079560326 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074974646 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078367312 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075297392 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06845239 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076990963 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07294506 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068401365 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078984874 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080403696 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067432516 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075595503 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076534551 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076627478 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068000295 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070448613 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070424647 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07520257 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070782294 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060998993 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073138961 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075700598 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068031869 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07743368 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075332026 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076484088 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070643702 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.08016295 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067897628 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073969486 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068754744 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068972084 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070430745 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073343055 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068243854 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070836332 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078940141 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.0703735 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075279606 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081976697 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069381886 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076089512 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068167972 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068251622 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081869924 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078132933 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069094874 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0710605 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067950477 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075811756 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067549261 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068587716 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068536977 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068160435 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07458082 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068726791 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070340186 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.216711746 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083905353 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069791168 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073013257 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071314669 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069231587 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074922477 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069020353 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06921013 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070962395 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065230574 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071545568 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069564657 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07667043 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071329749 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076544526 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070133232 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077497167 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074132155 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075096599 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07483417 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067908385 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062781082 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070970979 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070886909 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070839066 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069607418 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070179071 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069132542 seconds)
done (took 13.240387087 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06982184 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.132999153 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096337938 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095568822 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085826727 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069600042 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077331015 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096659777 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071406694 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.09938859 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088734295 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086947119 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11156703 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067903206 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069190765 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072901947 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070374413 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082884381 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098061365 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088519724 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.112620203 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068591274 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092997372 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089418331 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088243924 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102912912 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069947479 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073047003 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072937696 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092948993 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089531834 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073713244 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070550762 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096941038 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093001808 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084230367 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069283343 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084357753 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070029435 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069085135 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070697822 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097245376 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081728877 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081677653 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073332949 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078883455 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070479016 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083867689 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090442973 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08043672 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086242048 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099873867 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071555438 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085047662 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068246789 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086011193 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078600643 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071398498 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069642248 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07666172 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069580504 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072738631 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081961501 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081860458 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073140181 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085522489 seconds)
  done (took 7.062947369 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086826119 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094379057 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085235617 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086128174 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069085535 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070316346 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069380455 seconds)
  done (took 2.206213062 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070421998 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089648464 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08998544 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090145439 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083567777 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090119874 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081546124 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069755948 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089847225 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070844129 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089621546 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099562454 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073433051 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076666575 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091647137 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070153606 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091489883 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069733985 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073007787 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091576179 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071611991 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098289193 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073188304 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070251883 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082899277 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070116487 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113774338 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073567572 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072654938 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072811938 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067613558 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107143978 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082409757 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077107242 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070191818 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083922211 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083334941 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068277224 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085521858 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077736868 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.0826176 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070153781 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070744214 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068009346 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074089802 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079942623 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070799386 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070328642 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072782068 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087812233 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071083478 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082304507 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072254204 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074919581 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071749623 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075951174 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079596636 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070704021 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088128486 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071423417 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084776199 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084185798 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082489043 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084015941 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07172163 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082273684 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082825688 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072333385 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071864772 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073508201 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084405342 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068352163 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071513005 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080155312 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071616585 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091302966 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091182079 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07153441 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082476494 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070236909 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070215152 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070088308 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091206785 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074521193 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069778559 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073440708 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073084491 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068108653 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068736359 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074589717 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067902997 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072072412 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07313896 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072953691 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072523823 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084566479 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072317161 seconds)
  done (took 9.211703896 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072786603 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071116069 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072756314 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070978647 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071334177 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071996706 seconds)
  done (took 2.098578186 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091881333 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071680072 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081532404 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074253352 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102529848 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088264145 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088764168 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079924173 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085451762 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081029093 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.088116985 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089659944 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093077066 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074987469 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088126204 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073726983 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088410333 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076550771 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080043178 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074930914 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087266695 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074769569 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075142423 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083305288 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078057836 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074286338 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081067376 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080112599 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080435135 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07975017 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074557187 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077893391 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073453597 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080057278 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088400478 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073278403 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073632455 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079176589 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074350863 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077439004 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088764406 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074811468 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076219907 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078898873 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07935489 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073120468 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078836533 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081091272 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087799293 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078858425 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081604386 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073555814 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.078174363 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07919013 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073073767 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079519955 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078889252 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088782236 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075309056 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073344768 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071332088 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.078096783 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079418943 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078679523 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080338917 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079096952 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073485992 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07467141 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074839783 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074282302 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079549071 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071456745 seconds)
  done (took 7.372073905 seconds)
done (took 29.583237873 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533152681 seconds)
  done (took 2.155052037 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.598407228 seconds)
  done (took 2.249435064 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.639895316 seconds)
  done (took 8.290639763 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.36641346 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.468733293 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.705056102 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136708031 seconds)
  done (took 3.363231532 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.710091437 seconds)
  done (took 2.373633007 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231710559 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222521619 seconds)
  done (took 2.123107593 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379384799 seconds)
  done (took 2.038216929 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.098873267 seconds)
  done (took 2.756914062 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.231678978 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17664088 seconds)
  done (took 2.071691924 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.453862283 seconds)
  done (took 2.11581289 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.849466089 seconds)
  done (took 6.513715813 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.216677417 seconds)
  done (took 1.923552281 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236369832 seconds)
  done (took 1.899287472 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.756906891 seconds)
  done (took 3.419632425 seconds)
done (took 44.958781976 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085777083 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.092941797 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087124307 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084024324 seconds)
  done (took 1.993562817 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079166037 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075598488 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079014373 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074951688 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078119739 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075342863 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076966094 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078048243 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074679594 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075241904 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074988747 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074676372 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077368599 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076570738 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073581167 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07720644 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077798603 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074970071 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077703605 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07507185 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073457076 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07739286 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077295257 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074176533 seconds)
  done (took 3.494559517 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081185301 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075943873 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077512678 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074506197 seconds)
  done (took 1.979736555 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079945991 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091706651 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089903027 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080953549 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092351643 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087530254 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071991109 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.0714087 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07268221 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079795204 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070596511 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095710007 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090301708 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080567008 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082524735 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068959463 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070781676 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089206665 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081263154 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081443219 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073125775 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081064267 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071055211 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090036117 seconds)
  done (took 3.611666812 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087893793 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10149557 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082195791 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091806746 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093862798 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06814845 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088293323 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094598327 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125082106 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068633164 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073934014 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068471375 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076399358 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06864865 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083195417 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108423758 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112021088 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071578146 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099462999 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068941187 seconds)
  done (took 3.411080253 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075040097 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071704949 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073250611 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068655154 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079835537 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07544886 seconds)
  done (took 2.123800025 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071264667 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073394689 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070481849 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069779712 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074947522 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070150467 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069305001 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070657798 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070498884 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070215079 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072133344 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069051354 seconds)
  done (took 2.526369272 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185170191 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071644364 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.0731208 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069630366 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073749185 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070459961 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08367664 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070959873 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093220873 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069858386 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070264075 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07149666 seconds)
  done (took 2.686754732 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196834153 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078738954 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225103697 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149343526 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108499031 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112282246 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111209177 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110567434 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13593501 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099736157 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15960818 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161091023 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106256082 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13416509 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08981889 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101085662 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149248875 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159727052 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106077932 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159591102 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140146768 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124146611 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142601278 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101180464 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1055292 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118726653 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073926554 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081315806 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163798014 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129288189 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140229512 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115883601 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092110083 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169280062 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163396195 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137846566 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145287283 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085409775 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102875117 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130854047 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19000819 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089881613 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303847235 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111240292 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082783143 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131832829 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117250335 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119216122 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105268399 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089941288 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142822579 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176222498 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131618634 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087978514 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122437964 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112163995 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.111010856 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112918787 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172523201 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154828779 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125849608 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074291684 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110651078 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147020449 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129253093 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106626389 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121398122 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092679858 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129780995 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149238451 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119792059 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138344904 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114444338 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089797909 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118537641 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137659041 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125462722 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155926 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122502242 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075734999 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120212383 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100312958 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082459182 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144352379 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077633352 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169414256 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100134007 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105927426 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122137672 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106007207 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107179401 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152226357 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28885223 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105037904 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069447643 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10585743 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117466589 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143063685 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089226063 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107011173 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116386394 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079995573 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132219289 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077950781 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122441102 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078718189 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12190558 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127738896 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079293367 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121163806 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104112221 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101313657 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129456822 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153594222 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089248187 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083053242 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160673258 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121015435 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102059575 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138286198 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15039001 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100797005 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099430136 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143373108 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165393365 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089704525 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157403515 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10493177 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084420447 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.0882634 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121509683 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109417798 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121809039 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083164877 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116379999 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160439156 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077082107 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096559784 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132174911 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080388406 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081871144 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104961195 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103507851 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096247993 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097958204 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101425519 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133165968 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120705163 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1036078 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121082168 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098300632 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160077476 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088368805 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101607443 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102804073 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071988708 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.129682208 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148389 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080300026 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153227449 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117719518 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112478239 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114919977 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083998715 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131047736 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078889975 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071051272 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134829561 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106934097 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10473597 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14043759 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111296131 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.116952015 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112284329 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123750231 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122113836 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123206473 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103254841 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086497571 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107182044 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121469247 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073771783 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.087566984 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079174424 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100926989 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09231923 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082403674 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132070753 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11619004 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107952357 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107109617 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094410823 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137031993 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075902985 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11943292 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.114334825 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093214187 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.141855641 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14119157 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125796012 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097308944 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.400884724 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075549657 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078584544 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091754735 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122670889 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087748089 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087203638 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11601383 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14496724 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127364951 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135710599 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122947733 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119537664 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151085669 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074379038 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120850212 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142285181 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120879705 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105424636 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09310925 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100256384 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138695664 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106158177 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173222862 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113665571 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122677354 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150057564 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102778824 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081637216 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102469252 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129962634 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103496431 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138535695 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098698828 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089772684 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107931294 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077515886 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098741114 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124876892 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116518792 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131756026 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11327344 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131505686 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079915264 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11402613 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122493547 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119188315 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066758306 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116245328 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153393569 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09584205 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115379025 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305286437 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08134435 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134813951 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167088841 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140695607 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086146096 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107212577 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118474445 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124096105 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118203195 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135009484 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106438553 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133208031 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109087196 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086452169 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088783638 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096060894 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104046993 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095800235 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103562322 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111995097 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096454141 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130013076 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103640929 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109367044 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11622051 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099513354 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092749164 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097783679 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168426918 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117048879 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163530004 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100166479 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.138019367 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155969264 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076985937 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081074695 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079597722 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134501264 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086080651 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12850514 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109933794 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115623596 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121730744 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135924345 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096631289 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071148157 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10795438 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130910742 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121183628 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098568832 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101206102 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154465072 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097864806 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233436413 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111676297 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114595085 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103145116 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164494972 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065360076 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106188653 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078988205 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08238065 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124448054 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146573647 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082681395 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100961595 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118187151 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111210742 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124159751 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099690269 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110970302 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123238534 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143692225 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12591214 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090653731 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109459856 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124519609 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150011182 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102490415 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097594043 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165267046 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146170948 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153359586 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087284949 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112515667 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112348606 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110075195 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135211949 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085379205 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156655965 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083928401 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132928279 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102429822 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089519961 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126876003 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111334929 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08998639 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142565321 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115929783 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084426262 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079469015 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114300587 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117002748 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103302422 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077192207 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287191752 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076814927 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131788427 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156798169 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082473467 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104608189 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096629724 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081877499 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105553182 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102661956 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08816236 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100512524 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165099975 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087838367 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143809156 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131461504 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111252634 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131483853 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102820132 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640334563 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080021546 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14618478 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114231086 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16475177 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099753572 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116012426 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108470685 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119180142 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139841302 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102599907 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177987764 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128919831 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114541977 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080659204 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102530885 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103747245 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088294722 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106709052 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112273802 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114562969 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093697043 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11428259 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122778187 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08398831 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097402066 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151449325 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11476388 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139334078 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133616113 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085617237 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115280661 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287803399 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082795443 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117097948 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147890241 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105432219 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099763806 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08273487 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100108621 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154999719 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075527543 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153257617 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119290153 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109013702 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113079357 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109969942 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131554161 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105548682 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120106811 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0928727 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107094153 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112443886 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083026333 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078771518 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104303986 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109319184 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09867726 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097502944 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099454785 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146256002 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075264802 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099058332 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113815934 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13981022 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166175484 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088175845 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084438496 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118250495 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11413621 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111171844 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119984685 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08114578 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083370879 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081392099 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082420008 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106143968 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112654316 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11314666 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109260601 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156785001 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084572096 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227992766 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096883321 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103713761 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071659259 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079639171 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096478538 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249332553 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105656789 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112476996 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155037408 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095667849 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091245479 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092195767 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077820753 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085262198 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124584757 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10888999 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116925568 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101124491 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066006473 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107088522 seconds)
  done (took 58.345681636 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109672346 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085429611 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098252793 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144445053 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122959427 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201091831 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157076009 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189458399 seconds)
  done (took 2.924131918 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070334484 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096719353 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104753609 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085427818 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069387966 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071934096 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.220342231 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08412955 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069157103 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094843382 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080818361 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071746342 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.412262795 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06899975 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.07066412 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065449098 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070055569 seconds)
  done (took 3.613033381 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.380073668 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621188985 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.333105284 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079046564 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.932322264 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095374622 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.164298466 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139629576 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080073769 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545591698 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.406802182 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131120602 seconds)
  done (took 18.726394543 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083956258 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077381768 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090435944 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090639833 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080335213 seconds)
  done (took 2.239588386 seconds)
done (took 109.370232333 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08423127 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.591701459 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057898411 seconds)
  done (took 2.491911486 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088942868 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087417648 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087476604 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085095571 seconds)
  done (took 2.169930929 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076433998 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079408078 seconds)
  done (took 1.970812693 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224241982 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167537613 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096337636 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084512692 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081726726 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081503177 seconds)
  done (took 2.066142145 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074731401 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077325045 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075801296 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077964052 seconds)
  done (took 2.117354748 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079440595 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055642354 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057852585 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061284263 seconds)
  done (took 2.06754557 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089024972 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084164176 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081455528 seconds)
  done (took 2.068737251 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10069005 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089463864 seconds)
  done (took 2.0034195 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084018467 seconds)
  done (took 1.903638829 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094189541 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099725414 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129202533 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110596467 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135571869 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107175573 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086033167 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086847177 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07872356 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087652534 seconds)
  done (took 2.834075805 seconds)
done (took 24.083496304 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080012855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364756632 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362778677 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091729957 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671172256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35868555 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.97118659 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095278905 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14014364 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070305548 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087687097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650598685 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961330426 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327794316 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.948458896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325865371 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652156474 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071256587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070434394 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070891977 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.956934949 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070434321 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070370199 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071067761 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650792737 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37325694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071823076 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327796984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071038607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07265457 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358668885 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071217189 seconds)
  done (took 16.334506276 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.089823009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120995919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074878575 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087389726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072884627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072753845 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074200743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071233185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121018094 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070483841 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087780506 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070219175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074906984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071761035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089594962 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070786956 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071284592 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071534215 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071102854 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071566531 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089415926 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071166324 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070933234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072502581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070939057 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083237212 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071523161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071178437 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071540883 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073082186 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073927342 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071797839 seconds)
  done (took 4.327634524 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118895732 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125666437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076259145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106423521 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11420092 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073795226 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143410894 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09594433 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128938742 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070675423 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088018169 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070986088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103757846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071505324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090618267 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07103115 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07263284 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07222402 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070967811 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0718217 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090364992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071262362 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070988162 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072537322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071157117 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084234763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071766524 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071278989 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071804781 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072951925 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07447707 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072220364 seconds)
  done (took 4.56324398 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074861396 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077691606 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085497512 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086121692 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072419174 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074765889 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075634077 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072660959 seconds)
  done (took 2.45340342 seconds)
done (took 29.508479695 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080633896 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071754663 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074834321 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089975945 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076163488 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079835141 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069250492 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077671444 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075738254 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075400497 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076965171 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070769204 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074548491 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069849573 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07651124 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07071664 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08147355 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074524692 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081398927 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081407606 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073277121 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075822043 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077575306 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081543538 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081032106 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081130881 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079759656 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075794563 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071293138 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073526959 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079756356 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086070728 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07115734 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081528202 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071188698 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070648837 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07463466 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07096045 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081177986 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07928403 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072322756 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079536158 seconds)
  done (took 5.02010046 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089422892 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092543981 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086469484 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063729619 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068077279 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067698979 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089844003 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062267436 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062713124 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089706489 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059452431 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062204672 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065740234 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057559517 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062398794 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060683016 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064243105 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059087777 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062435008 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062467383 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.09014424 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057477849 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079854086 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065759093 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05963612 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064762197 seconds)
  done (took 3.650293157 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076336234 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085088815 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09161864 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141978637 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112593247 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080517702 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081119495 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095371249 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095570488 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069681698 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074424649 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094797188 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089294051 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076009396 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070914184 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086673316 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087211671 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072315774 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076090184 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093570961 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088524833 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08722314 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093440396 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083467761 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069557334 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072981084 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074388237 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083842358 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072668178 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078712225 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073884588 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073580574 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072275548 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081401893 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073162172 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072437963 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095355525 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0824812 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080530409 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070881897 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077898762 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071726667 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093548931 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124443175 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069905556 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076002326 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073878255 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079489734 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070527426 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095450169 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081236352 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070036557 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073662892 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069504156 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070340896 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072568551 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071825295 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072433726 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078735846 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075361732 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093644367 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075177301 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085961192 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070364679 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078039552 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069685815 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071800629 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069760313 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09512626 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072138246 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109570347 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072372328 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071274867 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07882223 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078093488 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076567748 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070181099 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086162742 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080406542 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073388542 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07780395 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074012131 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072972608 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098250724 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072857213 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072297504 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070947658 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075685263 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072547233 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071159495 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082642823 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069935064 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073029401 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086365595 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070248485 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071633945 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075494997 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074485329 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069979575 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08053192 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07404829 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07121483 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079931335 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070973018 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073626693 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082030498 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076393867 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069580684 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074484893 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075475015 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070773121 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071256277 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072306374 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071768092 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078618477 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076387754 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074850005 seconds)
  done (took 11.101830914 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158469234 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150635139 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07351242 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143926749 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078881195 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08125619 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144834495 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094335838 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070736535 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071453799 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07099287 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109542473 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105310923 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116217384 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080351535 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070758186 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092361179 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113814747 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146909348 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142041525 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092821155 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078837394 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073387306 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071925232 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072626432 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080196693 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087011544 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079356428 seconds)
  done (took 4.633392866 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082394132 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103635614 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077327677 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092198102 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091839007 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070492828 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073260695 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073195181 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08673592 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080454477 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070534257 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075602241 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077015677 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073639616 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071351386 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077438935 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077521039 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072208097 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073889788 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075508116 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080496525 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093733826 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073968842 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070266994 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075676167 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070088038 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066666326 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086150198 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070844881 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09446606 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068991045 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076247446 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083903901 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07185156 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070878558 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07071955 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070546029 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071014022 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072450525 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072586488 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06913374 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061106707 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070454994 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081485714 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083365183 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059636939 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075462167 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075959685 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075410823 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068271989 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073658709 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073134469 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073402071 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077635231 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074375029 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075935178 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072012935 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076627927 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078744366 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070670514 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068170699 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069248157 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075166475 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067958014 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085148366 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075060918 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069061187 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070673389 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071995391 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083426565 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070751073 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075280516 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068376765 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072406735 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074975709 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07212688 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072269297 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069557314 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071156055 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070872945 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058533644 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070837615 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056836687 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073996466 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069175409 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069471465 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070808319 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075150407 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081883592 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071658837 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076512779 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071576486 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069792156 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073160658 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063170287 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073417604 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080999047 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08522592 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07083567 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068792183 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082416312 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07556066 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070100908 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060006639 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074793239 seconds)
  done (took 9.672598279 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09165288 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071901242 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08375447 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090294698 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087773777 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076899974 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080883 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072011846 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085865592 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076317956 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079036323 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070608997 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080455322 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080015984 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072429131 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080480142 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074738547 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085171661 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084534206 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071478212 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078812184 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082790086 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091346499 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084013949 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081967034 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082458087 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091935226 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080030571 seconds)
  done (took 4.156700987 seconds)
done (took 40.063672012 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.946909696 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.084292426 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.914868514 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.228148886 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.120537667 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.927284754 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.111984147 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.913299673 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.143444537 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.948185323 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.260400656 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.994709275 seconds)
done (took 67.568221753 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.934652628 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.048263764 seconds)
    (2/2) benchmarking "String"...
    done (took 2.140387744 seconds)
  done (took 6.029967999 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.174471671 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.486559318 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.154198405 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.909300049 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.917769639 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.227363048 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.698868498 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.418925769 seconds)
  done (took 31.654492837 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.107917396 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.134929482 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.624619054 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.654603045 seconds)
  done (took 16.413336487 seconds)
done (took 66.140928825 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.911042311 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.917165761 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.955197642 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.895836829 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.971271858 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.926957779 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.376860357 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.965614332 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.91132531 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.897474826 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.913589566 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.350141425 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.913132428 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.273933321 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.912928993 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.914955691 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.975389679 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.557360192 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.067749246 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.930028436 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.922028442 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.965989879 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.912759832 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 7.071197459 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.931310791 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.912162114 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.326711774 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.921329906 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.535682295 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.917509393 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.945952196 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.482847489 seconds)
  done (took 209.224346676 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.91162722 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.91489848 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.952795018 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.957144285 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.38631405 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.092073084 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.021101302 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.423904256 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.91739453 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.918923708 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.012380926 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.913945031 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.030033671 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.857639809 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.942588086 seconds)
    (16/36) benchmarking "herk!"...
    done (took 7.001682235 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.118820649 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.04718188 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.945257188 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.063274706 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.939776253 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.838833629 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.80451976 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.003719107 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.935600299 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.987239809 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.941242508 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.927850817 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.105555855 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.100323768 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.959760704 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.933509003 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.11931238 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.785637377 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.914392212 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.927140913 seconds)
  done (took 174.497164448 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.101598707 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.915365189 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.91295993 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.913603437 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.918923049 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.913313563 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.036070589 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.04810264 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.531267361 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.211879453 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.966577726 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.914213431 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.698284672 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.914591061 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.981488468 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.925817154 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.915862597 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.928839907 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.941479886 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.917447404 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.913833734 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.043081333 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.92811928 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.914408096 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.921436393 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.91462292 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.919570792 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.284367754 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.914898599 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.915260602 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.032842852 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.915417367 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.920781478 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.7215648 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.155831502 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.916421954 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.91478746 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.764977528 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.917212294 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.997439306 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.916564336 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.920936512 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.915316971 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.132853063 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.915873151 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.915307755 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.916103307 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.919147367 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.057924911 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.918569278 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.039591044 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.918596242 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.39258762 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.916070929 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.916912007 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.650764631 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.497025714 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.918565123 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.919306489 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.915840514 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.916040576 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.921860855 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.533909332 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.990333657 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.918208156 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.91934093 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.921392809 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.915940575 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.91696351 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.949596858 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.919450184 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.377417637 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.978027238 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.03569349 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.040585163 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.91926808 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.98429037 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 2.011206459 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.918361847 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.917624815 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.916898756 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.916775125 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.997978765 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.918010097 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.040893176 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.925274808 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.918963099 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.968443652 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.986316771 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.918755207 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.77410704 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.920759952 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.917236746 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.181946514 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.982969287 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.918432026 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.917651599 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.917126914 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 4.042964114 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.048827598 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.625672806 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.921255971 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.596108692 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.05573939 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.919574978 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.068825533 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.921896689 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 2.000988971 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.92427652 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.920942016 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.951187195 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.920693774 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.972951357 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.919369971 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.291423382 seconds)
  done (took 418.056157844 seconds)
done (took 805.778017904 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.517681837 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.489680999 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.585481927 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.507620813 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.481160632 seconds)
  done (took 14.430840568 seconds)
done (took 16.283242829 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.007116821 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.012918119 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.94448048 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.011004208 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.94165549 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.009967602 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.993432252 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.945430627 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.977827414 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.944726331 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.979704061 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.94581711 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.931833811 seconds)
  done (took 27.496890167 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.14936559 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.157945654 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.990836044 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.14670627 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.966473293 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.165781386 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.082125068 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.067556903 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.069129247 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.936492061 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.934059462 seconds)
  done (took 24.51985899 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.150015625 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.153121813 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.99633774 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.158492541 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.969506353 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.150514687 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.080019299 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.074412965 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.070091191 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.93719858 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.933385784 seconds)
  done (took 24.524508185 seconds)
done (took 78.393387001 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.931093652 seconds)
  done (took 3.783116007 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.957051419 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.125385365 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.937269473 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.934251848 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.931530961 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.930856099 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.933379009 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.930595537 seconds)
  done (took 17.533159172 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.926569589 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.929110168 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.92834329 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.926329947 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.929845555 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.928964559 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.926252187 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.929687915 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.926508471 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.928392454 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.929224571 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.929961081 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.927753245 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.92731516 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.929140185 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.928100676 seconds)
  done (took 32.704959084 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.928529534 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.927379112 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.926431956 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.927853068 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.927649375 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.928930911 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.928803239 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.927596657 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.928138097 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.928204859 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.928915882 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.927652778 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.927425542 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.92791482 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.928161164 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.92899475 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.927427811 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.927975586 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.934038251 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.928102372 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.929008489 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.928627693 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.928561121 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.929245048 seconds)
  done (took 48.137939306 seconds)
done (took 104.014410335 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.624861878 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.799193091 seconds)
  done (took 10.278563813 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.934225549 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.931787932 seconds)
  done (took 5.794281351 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.931141124 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.931176298 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.930767468 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.931060205 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.932016 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.930857635 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.930722739 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.931112644 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.93155569 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.932392458 seconds)
  done (took 21.167904622 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.931843057 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.932501258 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.929069728 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.931110872 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.93232625 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.929808185 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.932034719 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.933425497 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.932529951 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.929514036 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.93275374 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.930861185 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.933294537 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.931356965 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.934518575 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.930604764 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.931309236 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.931315578 seconds)
  done (took 36.626423489 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.932314036 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.932899891 seconds)
  done (took 5.721319371 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.930434381 seconds)
    (2/7) benchmarking "second"...
    done (took 1.930326201 seconds)
    (3/7) benchmarking "month"...
    done (took 1.930274088 seconds)
    (4/7) benchmarking "year"...
    done (took 1.930303314 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.930311856 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.930096557 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.92995265 seconds)
  done (took 15.368207145 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.934253671 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.077463088 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.140791243 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.589131629 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.935107431 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.936624629 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.863727091 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.93699212 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.938840184 seconds)
  done (took 21.209541911 seconds)
done (took 118.023315901 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.799657269 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.933099985 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.179618564 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.990643371 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.983274524 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.273682833 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.94722009 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.214432572 seconds)
done (took 44.182503803 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.935520629 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.644400072 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.680810188 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.966577032 seconds)
  done (took 16.150568192 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.914339967 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.447719524 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.968436811 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.506835715 seconds)
  done (took 20.698801021 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.30046693 seconds)
    (2/2) benchmarking "read"...
    done (took 2.279939191 seconds)
  done (took 6.444592451 seconds)
done (took 52.091177539 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.935448881 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.934945633 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.935324664 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.932608851 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.933970241 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.931966664 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.931864613 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.93493615 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.93698479 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.936079961 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.935605615 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.936285009 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.933125115 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.932343773 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.934803676 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.933086889 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.933135295 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.933325082 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.936415219 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.934389726 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.937373699 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.933888103 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.934674276 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.934216338 seconds)
  done (took 48.286170558 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.936679343 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.935233949 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.937455432 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.936987402 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.934918485 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.936607317 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.936523292 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.933870011 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.936809897 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.936653582 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.933472171 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.933679974 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.937146666 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.934285874 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.937435576 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.935399682 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.937762562 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.933248856 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.937841498 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.933975981 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.938410843 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.935431269 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.934373012 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.937124692 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.93514611 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.935192239 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.937257527 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.935522889 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.937242761 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.935532414 seconds)
  done (took 59.938484933 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.942430586 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.946137401 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.937142858 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.937930189 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.936809016 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.937408042 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.938160168 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.938157589 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.938883339 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.939320134 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.938255265 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.938194065 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.938693068 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.93828496 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.938906964 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.939710689 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.938829709 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.939333672 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.938998178 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.93923108 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.939158606 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.939057318 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.938237564 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.938007405 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.938777201 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.939824141 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.939032394 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.93913357 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.940392746 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.939755607 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.93904811 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.939174999 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.938607702 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.939613621 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.939590995 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.939346101 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.944472572 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.9475388 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.940528336 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.940614558 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.940080976 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.940051929 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.940120331 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.940155829 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.939407418 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.940880484 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.940286778 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.939721406 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.942595376 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.940518862 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.940873029 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.940923907 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.941091701 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.94019936 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.940813792 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.940681995 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.941307351 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.940974427 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.941627249 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.94118315 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.941569686 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.94127804 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.941054161 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.940357821 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.941838132 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.941080621 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.941117646 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.941729025 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.942001344 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.941796208 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.94141637 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.941589188 seconds)
  done (took 141.554448146 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.941578051 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.939920818 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.938810628 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.939353711 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.939754965 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.941578808 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.938586936 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.941213402 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.939194324 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.941176066 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.941767355 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.94062446 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.938736298 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.942639598 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.942035786 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.940342292 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.942089201 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.939873047 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.942551248 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.942853058 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.942326264 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.940578995 seconds)
  done (took 44.563673161 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.942844045 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.94316471 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.940572166 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.943135809 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.940079448 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.943620236 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.942510211 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.943334755 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.942941558 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.94012956 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.94105162 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.943191065 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.940841811 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.941005488 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.939984605 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.941637139 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.944332444 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.941615815 seconds)
  done (took 36.822048475 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.942281195 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.942226544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.944421484 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.942483879 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.94204869 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.945149975 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.941873372 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.945328337 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.944256398 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.941791923 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.945132248 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.945103529 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.944300153 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.94230338 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.944660828 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.941804185 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.944540913 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.941912875 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.944499242 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.94265717 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.941741814 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.945191326 seconds)
  done (took 44.623669914 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.945287547 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.945094656 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.941816937 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.942622631 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.941857971 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.946490026 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.944897731 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.942650761 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.944557023 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.945816347 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.943708593 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.945933764 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.943626547 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.943973379 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.943036793 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.943149222 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.946223865 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.943998949 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.945674889 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.942221877 seconds)
  done (took 40.751577513 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.949642528 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.949543746 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.949418017 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.948550319 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.949564848 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.950308045 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.949996094 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.949798894 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.949667523 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.949989772 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.950789473 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.949907183 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.950690723 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.949507029 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.950080802 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.949490958 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.949631103 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.950202333 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.949902655 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.949761889 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.951781899 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.950245239 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.950619284 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.951688946 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.950790778 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.949960015 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.950417134 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.950359522 seconds)
  done (took 56.472259822 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.947776633 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.947439 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.945266312 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.945353442 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.946124676 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.946042087 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.945570827 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.945861306 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.949479524 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.945674159 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.948640165 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.948937655 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.947864308 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.948320806 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.947736483 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.948511077 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.948487519 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.946503827 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.945456268 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.945901306 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.949196774 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.94889117 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.94990155 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.947109094 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.945662349 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.949172995 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.946535629 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.946847415 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.948357879 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.946206804 seconds)
  done (took 60.291100289 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.967534875 seconds)
    (2/2) benchmarking "in"...
    done (took 1.968194232 seconds)
  done (took 5.808034434 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.946760723 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.948725315 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.949865443 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.947504226 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.94778158 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.951162723 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.950382567 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.946807708 seconds)
  done (took 17.462017478 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.950992833 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.950917855 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.95044965 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.950612741 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.952892727 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.950871387 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.956052007 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.950520809 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.951351468 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.951885517 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.957950493 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.958952901 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.95307952 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.95147105 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.950853348 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.952575492 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.951696101 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.953628966 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.953303273 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.951007789 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.95378805 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.953521529 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.954100326 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.948156268 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.953711348 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.961780929 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.956356221 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.952186903 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.951914222 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.955152636 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.952307035 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.948626305 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.955335923 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.953609231 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.95250425 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.954191607 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.960374889 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.953413481 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.957597588 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.954796318 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.952594257 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.950236876 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.953901323 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.953823072 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.954693235 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.955240304 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.952473759 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.950310622 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.952540506 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.956836315 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.959671897 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.953633523 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.950928438 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.957488771 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.956437861 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.960499258 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.957458312 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.959214841 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.963448928 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.964238842 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.96857252 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.962525266 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.956286438 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.956730256 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.964254505 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.979787349 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.960931106 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.951733678 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.952370289 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.954465084 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.961916317 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.967768891 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.965355865 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.957528953 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.957742736 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.954916708 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.955353736 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.956191311 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.962719466 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.959154525 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.958273131 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.958573779 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.965400669 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.978287191 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.955941081 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.957731301 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.958198938 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.958460775 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.957192704 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.96659947 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.960847816 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.956871926 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.956651512 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.956428305 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.958214007 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.960396208 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.955808555 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.956947515 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.954422702 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.957048522 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.959441119 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.960728585 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.966940246 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.960600793 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.959803906 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.962423778 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.95640622 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.956000399 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.963134669 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.956911902 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.959760303 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.958479564 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.963964711 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.954926933 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.961147254 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.966551566 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.959461878 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.959959742 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.960237977 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.95773436 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.968113967 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.984393503 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.957777434 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.957426806 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.962550556 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.972864353 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.961124866 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.962938288 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.959065341 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.956646118 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.955395682 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.959672346 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.959441328 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.959390566 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.961037764 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.961132313 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.956430738 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.958642279 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.961910899 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.960246435 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.961538183 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.959091598 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.960790156 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.96126746 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.96224333 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.96174009 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.965617405 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.959058588 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.961380155 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.960822229 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.957943051 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.959340199 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.96060227 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.963612002 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.960980135 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.962949372 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.959183219 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.96232054 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.960821476 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.96141808 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.959381085 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.961682806 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.964142008 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.962989654 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.964028455 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.960926659 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.957190337 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.960046116 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.960097896 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.959604215 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.96041604 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.960026537 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.963874796 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.971310862 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.961635812 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.963332194 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.963530432 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.964451048 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.963842675 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.966332457 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.964365579 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.969637921 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.964059852 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.96798149 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.963852511 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.964925649 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.962215096 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.962657097 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.961205071 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.9645835 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.965267178 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.970752692 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.975715376 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.971402715 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.964199113 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.96648594 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.96449432 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.969238428 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.966303776 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.964789927 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.961685555 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.964436145 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.96322425 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.964859275 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.964048507 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.965281681 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.961622879 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.963496013 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.962553156 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.965282005 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.96396867 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.962139998 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.963981355 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.96073516 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.962325128 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.965616646 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.963144183 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.960632608 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.963340694 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.962821183 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.964129615 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.966097823 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.970129001 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.961656832 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.965758988 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.965556208 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.963925569 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.962923747 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.965686324 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.966653213 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.964951912 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.970829076 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.964229025 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.964454639 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.970287492 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.964220547 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.963492239 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.968212866 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.965307045 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.96222345 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.967052028 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.973069685 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.964581411 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.967397708 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.967665757 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.966093043 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.966772903 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.970967012 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.962782921 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.965945127 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.965384602 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.966522256 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.962412338 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.966791583 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.966594743 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.966176014 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.968290063 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.96606955 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.966912072 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.967870826 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.969437595 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.968544203 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.968635327 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.969257773 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.977020073 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.971757842 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.967238947 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.968988758 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.968555193 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.971089817 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.967596369 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.970401977 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.966549509 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.979895014 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.977487249 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.97220302 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.96837827 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.967054737 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.972732303 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.968437825 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.970759086 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.96709717 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.967857359 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.967028339 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.966920768 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.9640423 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.967551972 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.967389577 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.968788129 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.967776713 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.970746443 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.967576156 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.96724816 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.970625476 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.971008359 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.968077814 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.967832543 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.968149125 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.970529697 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.970643855 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.967200067 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.967918071 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.974650127 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.969353035 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.969093256 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.969277259 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.969088989 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.968279514 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.970442087 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.970856157 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.972614508 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.978985185 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.972523278 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.978852987 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.970477031 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.977961661 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.970734151 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.972642353 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.979041692 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.966118449 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.968600028 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.969556763 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.972234227 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.976403117 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.971616695 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.969763646 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.97743475 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.972236696 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.972314878 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.97004621 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.972390986 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.970693433 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.972284057 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.976564061 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.972308502 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.97340758 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.972390471 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.96795525 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.972492702 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.969498481 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.970317461 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.974097768 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.972501395 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.97067537 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.969386841 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.970032866 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.970120584 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.972701392 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.970555378 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.967724675 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.971136744 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.97714293 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.971980217 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.978470347 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.971000145 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.978866435 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.974281991 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.978555881 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.974201905 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.972744101 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.974504738 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.971655351 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.973145469 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.971398665 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.973202327 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.974078291 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.972735727 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.976532669 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.973714402 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.97308512 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.972400212 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.974505034 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.972931141 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.982756955 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.999465425 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.974196124 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.977221619 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.969923194 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.973804413 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.979158178 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.974962721 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.971450187 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.97679718 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.983582241 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.981136714 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.972682593 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.975361381 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.974441612 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.975912549 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.972921668 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.97279397 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.974663133 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.973586151 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.974044049 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.976203136 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.978130401 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.973907627 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.975448212 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.975066866 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.975831253 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.983740912 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.975891736 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.975631392 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.975969785 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.974188385 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.97512403 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.975271415 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.976722529 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.976023729 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.974525531 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.975943938 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.98230225 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.982382218 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.976542513 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.974908172 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.977748511 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.97473041 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.975413457 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.977377644 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.97729571 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.97754785 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.976275579 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.977676334 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.976586489 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.97363959 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.974173521 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.975834805 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.975577303 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.979438114 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.983953599 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.975762518 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.973371755 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.975600681 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.975614443 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.974660086 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.97627756 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.983384979 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.979168835 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.987126708 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.985120072 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.982965373 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.976503597 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.980069383 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.98480965 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.975642849 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.977448122 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.97934861 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.978045016 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.977815285 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.980378999 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.979794577 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.982012862 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.976944183 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.977347429 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.984563888 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.977922813 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.978732575 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.97795638 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.981579537 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.97687476 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.975102808 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.97846283 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.977264524 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.983735076 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.979041451 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.980971144 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.980290567 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.975993644 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.97897606 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.984496249 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.977856718 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.978863729 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.97502156 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.978942493 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.981156082 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.977738505 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.975357831 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.978215944 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.978287416 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.981527101 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.986333049 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.975637141 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.980151078 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.979003029 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.97888335 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.982192455 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.978277853 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.976179768 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.975877104 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.978399864 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.980877129 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.979117755 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.982157248 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.978068186 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.979684007 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.980106558 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.982439905 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.98308501 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.990082427 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.987328667 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.976530123 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.981096595 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.981587358 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.983055107 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.982182671 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.982841347 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.980619645 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.981207916 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.980542171 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.982868807 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.980035166 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.984023065 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.996966995 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.980372414 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.979518551 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.981501777 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.983299213 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.980677076 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.978025792 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.980170644 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.982288104 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.984097599 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.991220789 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.983459579 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.987196945 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.981263504 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.981926939 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.985281873 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.984057283 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.989237665 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.984397578 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.982851546 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.986128518 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.985967388 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.997737408 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.981237401 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.99086302 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.011353655 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.983016656 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.98290161 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.984450078 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.980951436 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.985217365 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.984121003 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.983826132 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.98135778 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.982169323 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.984944472 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.983154708 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.989364445 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.983984177 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.981736349 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.98248505 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.982657867 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.984146177 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.979335346 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.985187993 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.982675575 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.985833564 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.984680734 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.985156024 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.983517575 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.995085623 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.993285293 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.982781114 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.986117746 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.979783971 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.9867704 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.986744421 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.993876365 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.991308751 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.986078643 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.985163817 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.985586273 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.98661862 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.980220079 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.984794966 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.983429316 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.984306868 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.980645748 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.996329173 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.995343791 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.988265213 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.984129131 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.986234412 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.984164167 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.985345984 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.985293693 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.986996657 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.985867397 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.985404783 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.990551156 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.984645321 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.984485988 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.98882427 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.992815504 seconds)
  done (took 1176.262652288 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.982362457 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.982106917 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.98098897 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.982397343 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.981653736 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.982042279 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.982695641 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.983515392 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.983564414 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.982478883 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.983487003 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.983208836 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.98247764 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.98300905 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.981807151 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.982714687 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.982700002 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.983743723 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.982477376 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.982873144 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.983241857 seconds)
  done (took 43.541931335 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.986534315 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.98429895 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.984043068 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.987018615 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.984293187 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.986176451 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.98484206 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.986492989 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.986762457 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.983448493 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.986368069 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.986183531 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.983340234 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.983876935 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.983348567 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.985218911 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.987237666 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.984810883 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.988545571 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.985187451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.988180783 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.985083344 seconds)
  done (took 45.588587355 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.988679473 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.99032948 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.986512273 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.985536351 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.98731074 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.985752787 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.990605316 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.988173199 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.989044368 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.988921742 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.988207676 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.989626631 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.996318486 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.993789951 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.989695698 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.988389672 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.132532569 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.99133837 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.992209727 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.990193997 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.985365148 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.994132088 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.986233183 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.986449683 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.98784035 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.991327284 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.989324508 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.988506877 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.99164314 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.988868725 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.99600064 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.988180651 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.987854269 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.991052977 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.988536892 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.990525118 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.992250706 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.99149104 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.987056293 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.988629338 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.999680018 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 2.010580709 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.992290126 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.996307685 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.989343222 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.989911149 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.993514657 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 2.001072131 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.986573188 seconds)
  done (took 99.593788874 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.988621907 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.990705477 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.987536099 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.990007036 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.989764898 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.989060117 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.989983827 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.989587819 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.987871347 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.987608744 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.990320331 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.988107471 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.987960889 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.990009842 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.990108038 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.987292075 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.987559307 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.986960564 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.98741412 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.988634713 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.987446843 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.990825588 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.990603213 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.98904868 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.991389436 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.988970466 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.988205167 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.990918454 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.988980085 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.989374151 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.991750757 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.991597036 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.991929364 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.990176413 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.98939096 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.991210736 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.991544589 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.989558445 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.990785425 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.989733914 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.991516729 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.991323366 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.993577426 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.990787245 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.987449005 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.987831316 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.98716313 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.988669422 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.988287117 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.990296838 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.990685826 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.98838377 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.991198866 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.987982135 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.990872476 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.989989463 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.987701857 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.986962628 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.990758796 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.98846801 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.987832209 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.990812953 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.98945949 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.991672244 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.990451349 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.988223323 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.987618676 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.98980437 seconds)
  done (took 137.197375186 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.993561685 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.993647897 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.993162616 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.994701898 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.99403172 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.993693468 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.995381187 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.99368503 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.994214356 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.994339781 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.992791881 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.990612325 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.99317463 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.989319057 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.993090442 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.992568816 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.99273195 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.992914625 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.993254331 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.989906072 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.986325072 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.985606372 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.985583361 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.986406418 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.98760105 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.985294498 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.985982871 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.985653056 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.985765192 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.98505994 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.984590852 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.984018754 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.984609138 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.983572739 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.985210039 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.984907838 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.983174096 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.983884915 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.984670409 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.984894351 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.984572558 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.984447916 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.984650969 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.986095411 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.985925935 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.98523028 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.985780792 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.986360441 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.983709805 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.985685549 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.985293286 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.985451874 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.985219329 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.985103785 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.985853047 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.983747598 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.985160496 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.985257951 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.984611628 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.986543963 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.986728259 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.983405829 seconds)
  done (took 125.153954247 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.982822238 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.985039237 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.981436434 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.980159287 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.983412522 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.98055237 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.984747623 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.982652327 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.982555849 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.983536702 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.983602802 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.981957049 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.981612322 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.982594406 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.98148601 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.981433114 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.982010864 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.980687691 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.983617547 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.980698317 seconds)
  done (took 41.551337116 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.982467882 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.984389472 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.981074257 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.982702488 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.984209198 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.982796639 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.983620298 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.983811871 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.981001234 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.985119564 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.985354194 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.984233181 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.981330556 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.982257229 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.984462095 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.982285307 seconds)
  done (took 33.635581438 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.98179515 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.983846658 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.986780584 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.986389002 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.982326659 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.982128513 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.984470888 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.982418739 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.981341911 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.983706716 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.98167194 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.983226102 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.982250003 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.985001654 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.975522731 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.975936857 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.973206109 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.973137994 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.975691726 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.97926369 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.974724568 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.973376249 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.975592857 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.976330711 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.974773876 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.973822511 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.972181534 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.973396103 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.972769088 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.975463245 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.971108203 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.975626129 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.972585 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.97279071 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.976593392 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.967255471 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.969645172 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.970537373 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.970642161 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.97135422 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.970927192 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.969172385 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.970948799 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.969867344 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.968650905 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.970681731 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.96814567 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.968837662 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.967607235 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.970130748 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.970878994 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.973669165 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.971427214 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.971415974 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.9716194 seconds)
  done (took 110.541461756 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.971404148 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.972357901 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.969221927 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.971312174 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.971322552 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.968567166 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.971144181 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.968284723 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.968609428 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.971328641 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.969218909 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.971867081 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.969079599 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.97210491 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.969293942 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.971438741 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.969351657 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.969057198 seconds)
  done (took 37.358143847 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.969707598 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.96861782 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.970349524 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.967321758 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.968236508 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.971137245 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.966795558 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.969914277 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.969683537 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.967786809 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.968785982 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.970722754 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.969946599 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.969853591 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.967266943 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.966715157 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.969615143 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.969320345 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.9670891 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.966713389 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.971796197 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.96784783 seconds)
  done (took 45.208223158 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.967569502 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.968353319 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.985221663 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.989080198 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.992241348 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.004239807 seconds)
  done (took 13.796109583 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.966035352 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.966471863 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.964747176 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.966617232 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.967620129 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.965018785 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.963083253 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.963152458 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.965932587 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.9642618 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.9640679 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.966549981 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.966198386 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.962609781 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.966027809 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.966198849 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.962644913 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.963713639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.963823403 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.966822478 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.964223873 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.966447256 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.963258326 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.963309839 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.964659781 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.966656838 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.965713006 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.964570836 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.963338041 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.965545907 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.965808067 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.963206676 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.96651837 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.963223874 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.966156728 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.966516795 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.964135692 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.965125274 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.966030229 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.963291693 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.965669198 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.965796053 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.966554602 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.963221651 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.966034392 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.96402793 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.964243721 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.963925376 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.965261838 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.966771051 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.966433118 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.96445303 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.965797456 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.966468314 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.96649048 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.96498536 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.962822742 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.961222751 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.963536333 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.961221176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.961550951 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.964560753 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.961113789 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.960826923 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.964192009 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.961162091 seconds)
  done (took 131.558493247 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.961140636 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.961963946 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.960855103 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.961319237 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.960953335 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.961809725 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.960223113 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.960967415 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.961126461 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.961426325 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.962961284 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.959804482 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.960696039 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.960172317 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.960368042 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.96193011 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.960155937 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.960939138 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.960887315 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.963308614 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.96091683 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.959654178 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.960836304 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.961421577 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.960716815 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.962866957 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.95665222 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.957200579 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.957334807 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.957710226 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.959169882 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.957608949 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.95733035 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.957088396 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.95740003 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.957993623 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.956712863 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.9569211 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.956621919 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.959693259 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.958152532 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.959044752 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.956663611 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.956840204 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.958335543 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.957626641 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.957425421 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.956812668 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.956628377 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.957126203 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.958539734 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.95753919 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.9573219 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.956446033 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.956836617 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.957276211 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.956641454 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.956817567 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.957662366 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.959175722 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.957131338 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.957664388 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.960435526 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.956485065 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.957840753 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.957385508 seconds)
  done (took 131.178180104 seconds)
done (took 2730.605360517 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.972251401 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.952857809 seconds)
  done (took 15.806591866 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.123652174 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.073117436 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.958202073 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.00569854 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.958664655 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.961297846 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.957166487 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.95940974 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.95797561 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.957654481 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.958648682 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.145304056 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.011061997 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.957919804 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.958339946 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.051993066 seconds)
  done (took 53.881019681 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.961172396 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.962580911 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.972142213 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.964715697 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.961235222 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.973368825 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.994749549 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.963159808 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.99584302 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.977050749 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.028883963 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.971830507 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.959886908 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.011774523 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.977844254 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.975185314 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.05139387 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.03596546 seconds)
  done (took 37.620785011 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.037921171 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.968679712 seconds)
  done (took 10.895464693 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.97817607 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.01775041 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.995540792 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.97345335 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.974520985 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.96578532 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.960762166 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.995734314 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.984425871 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.997749742 seconds)
  done (took 71.729578513 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.966162506 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.962211972 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.961978643 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.96086659 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.954857975 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.960041029 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.959931741 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.959973097 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.623681588 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.997129886 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.969181791 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.967615991 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.961916551 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.963809311 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.959807028 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.986644179 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.074761902 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.958840253 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.958602724 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.96804894 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.963377269 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.029410482 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.975634467 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.963153872 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.991811621 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.625910276 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.97253207 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.969062465 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.063100635 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.959559096 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.962997279 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.962756028 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.964635299 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.369095828 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.236787816 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.965167773 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.976686815 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.971997363 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.959276585 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.097473971 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.963427634 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.968517158 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.748229596 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.215592942 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.067355495 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.006006043 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.267849045 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.980239919 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.964779138 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.993361666 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.966115759 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.964549415 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.977307244 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.456672669 seconds)
  done (took 137.485342143 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.959565542 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.311581998 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.129218805 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.961885452 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.248350699 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.168321874 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.960478719 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.009289864 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.962546097 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.193554005 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.21957156 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.068397981 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.961238501 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.959581227 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.959221129 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.958694237 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.118002134 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.034091236 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.963034286 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.959409454 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.991609414 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.20481007 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.084942279 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.963602497 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.991040327 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.175397075 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.084161515 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.066232024 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.740168062 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.961323544 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.025379746 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.962656008 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.9596573 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.958899094 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.118402816 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.057979695 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.04998677 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.96215018 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.959559633 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.960933479 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.632148529 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.165577994 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.058179955 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.103168611 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.161321899 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.16820886 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.746061566 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.960612526 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.705704775 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.12780786 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.191694849 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.197483276 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.085551572 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.96349651 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.498110788 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.960303164 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.960190571 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.213576732 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106543665 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.061348609 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.965902294 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.960333381 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.962455414 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.208414023 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.964067344 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.059130743 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.964008568 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.962452541 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.060365357 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.063140722 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.101667514 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.175702002 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.996011599 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.856889188 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.502671355 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.212619465 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.029360818 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.214782596 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.965191241 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.961880594 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.04364737 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.8022855 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.218804492 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.21356981 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.217520901 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.999691835 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.688141122 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.961881025 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.191799138 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.18501884 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.22705639 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.171186243 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.206403265 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.285817906 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.963207065 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.962252268 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.182023227 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.101756077 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.965063769 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.31069289 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.196923803 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.513451402 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.985744446 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.271431578 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.096518605 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.966183923 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.607029316 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.965177291 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.197496266 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.005776504 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.964696327 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.963884043 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.184974583 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.957675594 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.963934654 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.626259468 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.027653844 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.96637815 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.198623646 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.965105039 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.235059458 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.965491272 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.203522957 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.969573837 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.998305725 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.196950265 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.170660679 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.967260284 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.210827922 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.211117295 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.082760133 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.187710095 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.657616865 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.965685417 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.254325076 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.967821315 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.965930323 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.137492319 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.965630613 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.111799707 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.967658782 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.259948154 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.990199417 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.200349298 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.967811315 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.224477415 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.001034373 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.018353498 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.967799137 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.099345216 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.968609844 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.892303876 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.126540911 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.966189543 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.967517064 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.768360742 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.966216164 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.119357415 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.200722881 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.990130628 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.040774992 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.635641756 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.966721144 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.047503504 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.993948706 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.363020306 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.965175623 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.220147297 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.968242602 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.967683706 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.966212574 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.209041679 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.153878732 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.969429781 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.967527329 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.878345198 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.967258124 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.967603669 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.152651258 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.413878823 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.966774755 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.172501172 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.969436106 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097531421 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.971458259 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.046970181 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.310638309 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.967550292 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.967767807 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.967259528 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.968810058 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.969440336 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.232421907 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.996908171 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.499805735 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.109179602 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.244734886 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.28185618 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.218648921 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.013152871 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.970173977 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.226579906 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.970876173 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.03333036 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.969498477 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.991408677 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.199097542 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.970156362 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.180735927 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.248601778 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.821811157 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.019034602 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.971712503 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.969382703 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.967460283 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.115438051 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.059335869 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.972306268 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.969098451 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.086129835 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.091149121 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.180266089 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.970698297 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.038762942 seconds)
  done (took 924.929068116 seconds)
done (took 1254.230710028 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.96881605 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.96968936 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.959355902 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.972796634 seconds)
  done (took 29.768293665 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.976456051 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.974383081 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.976484695 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.974578051 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.976816167 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.974584117 seconds)
  done (took 13.750461437 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.436894808 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.971523353 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.971906917 seconds)
  done (took 22.277511662 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.044595538 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.360031707 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.076698892 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.399842468 seconds)
  done (took 10.778604756 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.979314269 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.979617534 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.980348871 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.978819977 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.978717871 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.980087126 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.978149055 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.978607508 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.980477924 seconds)
  done (took 19.714140507 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.285541342 seconds)
done (took 102.471273783 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float32, false)...
    done (took 5.715405579 seconds)
    (2/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.056602242 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.215439438 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.119985699 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.289297601 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.973473119 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.068501302 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.95910387 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.134041413 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.989674908 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.633734839 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.047297196 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.10324788 seconds)
    (14/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.308336729 seconds)
    (15/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.139580556 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.879445543 seconds)
    (17/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.388205039 seconds)
    (18/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.496965315 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.138271916 seconds)
    (20/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.202660723 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.215744098 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.065551197 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.998859696 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.208877692 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.769279998 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.983143763 seconds)
    (27/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.406105964 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.088888534 seconds)
    (29/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.852141611 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.261179258 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.065165886 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.358319901 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.142863186 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.998891115 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.97178278 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.971994033 seconds)
    (37/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.174563044 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.071301492 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.893007404 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.378922572 seconds)
    (41/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.975131985 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.235008952 seconds)
    (43/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.04918539 seconds)
    (44/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.956665035 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.265730741 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.078436125 seconds)
    (47/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.480065925 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.324521846 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 2.196439607 seconds)
    (50/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.975919339 seconds)
    (51/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.263195259 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.249490813 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.601335442 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.304592339 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.300045056 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.724292875 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.99217629 seconds)
    (58/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.0574987 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.046621634 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.227419434 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.115136696 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.138072657 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.995510395 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.622074049 seconds)
    (65/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.104501559 seconds)
    (66/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.063054726 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.132629903 seconds)
    (68/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.065691033 seconds)
    (69/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.976224824 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.575597893 seconds)
    (71/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.08854915 seconds)
    (72/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.995355857 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.977006216 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.681577777 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.092764715 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.302971049 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.016357376 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.985718923 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.094866894 seconds)
    (80/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.529443488 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.340951313 seconds)
    (82/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.127047716 seconds)
    (83/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.04681795 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.056825793 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.169329747 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.047841106 seconds)
    (87/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.944674531 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.000716635 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.971158644 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.297484184 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.372794441 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.15276952 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.120177739 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.077931235 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.128674023 seconds)
    (96/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.985958677 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.225287822 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.993846314 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.202534107 seconds)
    (100/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.137148188 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.58069117 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.999333769 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.963317682 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.352111093 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.011062815 seconds)
    (106/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.559237784 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.977934023 seconds)
    (108/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.549661847 seconds)
    (109/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.986469958 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.509408751 seconds)
    (111/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.171842834 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.028368941 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.977071077 seconds)
    (114/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.97001151 seconds)
    (115/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.222270013 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.644715688 seconds)
    (117/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.13110191 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.087792737 seconds)
    (119/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.053791062 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.190532318 seconds)
    (121/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.031028186 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.017454143 seconds)
    (123/309) benchmarking ("sort", Int8, false)...
    done (took 4.893467114 seconds)
    (124/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.113040567 seconds)
    (125/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.00661957 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.347215076 seconds)
    (127/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.086706102 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.018610894 seconds)
    (129/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.110050758 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.005086053 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.019764726 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.30671142 seconds)
    (133/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.04168032 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.674536812 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.245653347 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.924778618 seconds)
    (137/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.091124955 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.153828522 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.971446089 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.206552451 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.249842291 seconds)
    (142/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.219591645 seconds)
    (143/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.39884905 seconds)
    (144/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.318329034 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.017983257 seconds)
    (146/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.414907004 seconds)
    (147/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.010486795 seconds)
    (148/309) benchmarking ("sort", BigInt, false)...
    done (took 6.990128026 seconds)
    (149/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.415450108 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.181034894 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.097400487 seconds)
    (152/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.097550311 seconds)
    (153/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.132956122 seconds)
    (154/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.014786561 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.306172745 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.0156458 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.125828032 seconds)
    (158/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.503801984 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.121224846 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.310302416 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.408819298 seconds)
    (162/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.289889987 seconds)
    (163/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.164434171 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.998232664 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.142430482 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.059824189 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.977683832 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.509343102 seconds)
    (169/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.293916969 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.289191483 seconds)
    (171/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.993853858 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.413482252 seconds)
    (173/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.996400335 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.113257947 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.991493062 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.034750951 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.037547291 seconds)
    (178/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.127601201 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.959284148 seconds)
    (180/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.147858009 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.997823321 seconds)
    (182/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.086641872 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.181762877 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.127366341 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.404493379 seconds)
    (186/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.614054811 seconds)
    (187/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.095979708 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.368433455 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.126161335 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.394871461 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.473671626 seconds)
    (192/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.302678719 seconds)
    (193/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.029232961 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.761635064 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.372642884 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.064383151 seconds)
    (197/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.137122818 seconds)
    (198/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.985908206 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.203320627 seconds)
    (200/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.061154922 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.086665387 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.147111237 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.070469007 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.277237531 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.403738382 seconds)
    (206/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.058368178 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.285297404 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.274389707 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.262957857 seconds)
    (210/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.018689617 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.332347385 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.011318777 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.089843958 seconds)
    (214/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.982638777 seconds)
    (215/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.344137055 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.996715265 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.233484806 seconds)
    (218/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.43585678 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.319048135 seconds)
    (220/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.939279359 seconds)
    (221/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.985261237 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 4.013835451 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.212861225 seconds)
    (224/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.979570074 seconds)
    (225/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.026303164 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.848059681 seconds)
    (227/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.985577197 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.50900562 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.297203721 seconds)
    (230/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.172022129 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.001022458 seconds)
    (232/309) benchmarking ("sort", Float64, false)...
    done (took 5.779626101 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.02449534 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.155998107 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.709722454 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.258462279 seconds)
    (237/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.066786643 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.997253652 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.257596218 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.983945803 seconds)
    (241/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.602281437 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.250326884 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.085496397 seconds)
    (244/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.998362542 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.011519308 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.980574226 seconds)
    (247/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.10158093 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.133552514 seconds)
    (249/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.02042004 seconds)
    (250/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.143622743 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.866283031 seconds)
    (252/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.564373924 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.404145466 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.000997519 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.94462431 seconds)
    (256/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.258729308 seconds)
    (257/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.231683885 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.174156959 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.109080152 seconds)
    (260/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.092047384 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.996516149 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.998830167 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.269116713 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.000352302 seconds)
    (265/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.406254871 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.025963174 seconds)
    (267/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.177019719 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.854477424 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.002594135 seconds)
    (270/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.48679818 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.242291809 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.338556153 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.180923382 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.246185913 seconds)
    (275/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.085836569 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.997692739 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.018335086 seconds)
    (278/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.077804461 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.999795881 seconds)
    (280/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.158552837 seconds)
    (281/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.280615842 seconds)
    (282/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.1597957 seconds)
    (283/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.137260392 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.604332497 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.98708968 seconds)
    (286/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.086758883 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.150560277 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.317248943 seconds)
    (289/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.143902483 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.302653678 seconds)
    (291/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.292107011 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.211224568 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.737196705 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.03176016 seconds)
    (295/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.011208019 seconds)
    (296/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.295707018 seconds)
    (297/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.12376503 seconds)
    (298/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.472729808 seconds)
    (299/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.989999976 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.440548029 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.039000934 seconds)
    (302/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.149268838 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.950957645 seconds)
    (304/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.525884098 seconds)
    (305/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.402553868 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.026072351 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.217266243 seconds)
    (308/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.38751101 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.078699959 seconds)
  done (took 1046.756190995 seconds)
done (took 1048.722256701 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.03296016 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.025589879 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.011643068 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.033063822 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.121250074 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.037643535 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.022768186 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.013825697 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.059058978 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.061509136 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.008142088 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.036966438 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.012150638 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.010464287 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.012543807 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.023693669 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.326069027 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.043459113 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.027745114 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.022343337 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.0265674 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.008027453 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.061785875 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.036413927 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.016409959 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.017559254 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.01403451 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.030765884 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.122884162 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.013577998 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.016592946 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.021798927 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.325513011 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.045437968 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.008360293 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.031110352 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.022795309 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.02382109 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.017827886 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.04376808 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.415645018 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.051928841 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.01406299 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.014540282 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.014754463 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.019180516 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.013584002 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.020346843 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.025416388 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.026229956 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.406976303 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.070873968 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.015224949 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.01556967 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.02470035 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.013123076 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.017998655 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.02915457 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.032000442 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.029006907 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.310206096 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.051864385 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.017072228 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.030815676 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.02210451 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.441359418 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.053240948 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.019563779 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.417806128 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.063966053 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.441831862 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.065290054 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.017462457 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.028482433 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.045417402 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.328038532 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.042167173 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.016041347 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.022963119 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.010630751 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.025544479 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.027150991 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.021240492 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.01828622 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.02847956 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.041470915 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.026453816 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.01567 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.0261084 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.033361786 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.022836437 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.024857555 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.020193726 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.013748711 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.026129363 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.02074807 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.016951648 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.017621775 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.02255348 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.028146665 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.417087302 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.07257016 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.014387727 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.015066277 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.016578281 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.028891952 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.416036946 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.058513493 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.040086475 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.065257615 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.019645473 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.31265058 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.051580408 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.031957455 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.027901399 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.021927426 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.013527551 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.312810954 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.442795409 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.071443348 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.020009774 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.013165225 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.031878762 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.020789166 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.015830282 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.330654644 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.051710542 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.031683237 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.137860236 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.028968824 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.048858578 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.014815874 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.022394011 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.047384691 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.032645542 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.048211859 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.023045938 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.032684011 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.033425361 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.017254143 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.027958411 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.0315197 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.021506687 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.02588454 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.013652884 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.048180098 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.03070663 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.030960719 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.040880892 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.139293123 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.017891472 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.314021114 seconds)
done (took 316.168852593 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.091741302 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.008419307 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.115987332 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.014130271 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.099973814 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.102623376 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.011706967 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.01197629 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.011574481 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.390293355 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.012480693 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.013206286 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.01600315 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.012375593 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.097291595 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.014526876 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.01335325 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.374580723 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.017749101 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.08829023 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.014403992 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.012004273 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.014759955 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.421095896 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.010810964 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.018458799 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.088763988 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.01525965 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.360382706 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.017431111 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.016900629 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.38453009 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.108610463 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.034678947 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.025509785 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.023248187 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.101319233 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.021684314 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.098567456 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.098285855 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.11822683 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.058603226 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.016121191 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.017687947 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.019835577 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.020248656 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.01383724 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.044145552 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.015026285 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.012785699 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.354337779 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.026134493 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.023343191 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.014817188 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.015249193 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.040428203 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.014083205 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.019487213 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.109890188 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.019785073 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.084097969 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.399534123 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.415200511 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.017750966 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.011210567 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.01489811 seconds)
  done (took 194.256584843 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.085578147 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.096990529 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.083397017 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.022423485 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.068722428 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.087255747 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.0226993 seconds)
  done (took 16.402267374 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.024758158 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.017857549 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.071822801 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.069167504 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.019199925 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.16646689 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.018659465 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.029952125 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.025313837 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.071591355 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.019006651 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 2.019698864 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.016816124 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.018309825 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.070129572 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.029874888 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.135381651 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.020420433 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.021712526 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.171331322 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.017209187 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.025707633 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.07274822 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.03086063 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.020791067 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.025475021 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.606164242 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 2.021278905 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.016776016 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.019412905 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.016975578 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.061433272 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.02080644 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.018181349 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.017783585 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.135615369 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.022509278 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.017406428 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.020336261 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.017025933 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.019809497 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.019480402 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.020389116 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.016836731 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.020656869 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.04288158 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.021007472 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.020359106 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.022376217 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.020721282 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.071921051 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.02105139 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.018408863 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.019930094 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.075592225 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.02732845 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.023155332 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.018425981 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.023152906 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.018852541 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.173181328 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.071909931 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.021171462 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.073279257 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 2.020471747 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.021860542 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.020180238 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.02194822 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.11826279 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.021529561 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.072295066 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.019049044 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.182506821 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.044946305 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 2.023331213 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.025460553 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.024563693 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 2.024213608 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.021382425 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.027878794 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.019800002 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.02359808 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.028223825 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.02016292 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.019776784 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.135301774 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.130676582 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.019970366 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.036328409 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.030698906 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.021059398 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.076132141 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.024161452 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.020727967 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.080774283 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.139521128 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.078905701 seconds)
  done (took 220.659140412 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.027907639 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.03222149 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.023712951 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.039201674 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.023534114 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.022497859 seconds)
  done (took 14.109432272 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.024864478 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.024742309 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.022603954 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.022795173 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.026687451 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.023285542 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.025519974 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.024916415 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.029055725 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.025140382 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.024969544 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.024629307 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.025308107 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.024594779 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.028873717 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.022977571 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.025066783 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.020493071 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.024098572 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.026544009 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.179515952 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.025275044 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.025121502 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.02542999 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.028358227 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.025186855 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.031986835 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.02441758 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.026993418 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.032991292 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.029019784 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.025023813 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.026388056 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.034842299 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.030783625 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.026060852 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.030027111 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.026534929 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.023206932 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.026373371 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.026532715 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.026552475 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.026072225 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.02912135 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.027425879 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.029785636 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.03008458 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.03345164 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.027264605 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.027601749 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.026292848 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.026394936 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.025708 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.028627743 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.027767559 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.031965401 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.030543672 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.027509201 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.029179345 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.027908377 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.027465085 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.027112241 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.027451454 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.033136467 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.024539299 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.028385955 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.026702631 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.031718189 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.030977166 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.027476929 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.02800715 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.024500737 seconds)
  done (took 149.049420525 seconds)
done (took 596.427297798 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.210524509 seconds)
  done (took 9.155551138 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.07220762 seconds)
  done (took 9.060052434 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.573107196 seconds)
  done (took 10.519217224 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.046629892 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.046286836 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.033476353 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.021206123 seconds)
  done (took 30.11602642 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.145995883 seconds)
  done (took 9.091703614 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.044750307 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.020489877 seconds)
  done (took 16.038087427 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.064760245 seconds)
  done (took 9.010821975 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.157630321 seconds)
  done (took 9.127718554 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.029505726 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.055034201 seconds)
  done (took 16.043838802 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.007852486 seconds)
  done (took 8.953475601 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.75112547 seconds)
  done (took 11.788316271 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.038904196 seconds)
  done (took 9.093185177 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.021631342 seconds)
  done (took 8.966246739 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.1469099 seconds)
  done (took 9.091175282 seconds)
done (took 168.00066387 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.025752617 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.02153795 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.021573632 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.019617759 seconds)
  done (took 30.032944429 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.062019966 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.059956415 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.061301823 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.071083526 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.062559751 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.060121191 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.053138893 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.053409703 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.072140057 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.065070577 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.062380719 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.063521801 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.061036317 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.053076092 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.064367064 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.062390465 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.072633581 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.061882362 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.054565601 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.06468243 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 2.029255658 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.072170431 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.065006181 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.02823702 seconds)
  done (took 51.381294423 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.222673723 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.100901122 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.182084203 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.079936705 seconds)
  done (took 10.533507574 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.079333643 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.081188609 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.09203647 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.131168891 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.156192734 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.090437449 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.055101683 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 2.049750548 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 2.036871173 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.082219618 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.15808922 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.076362789 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.169679141 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 2.03062294 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.216289066 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.028177086 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.028122268 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.081567661 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.132965927 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.145892952 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.029913692 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.079706065 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.085254453 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.077564393 seconds)
  done (took 52.141838572 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.027289547 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.035826301 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.034320528 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.031264158 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.028691409 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.029668278 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.035445967 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.030984351 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.052587983 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.030258617 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.027586668 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.028789573 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.028051463 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.029821622 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.028039207 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.042164865 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.042878812 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.030793039 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.031519529 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.034937248 seconds)
  done (took 42.609223755 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.023747111 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.876785062 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.376490518 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.280656801 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.024856547 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.028455232 seconds)
  done (took 32.559221256 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.045017391 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.036785052 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.030953315 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.089223753 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.171801622 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.038561017 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.030708422 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.042817403 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.079937766 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.093705705 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.061657972 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.06596145 seconds)
  done (took 26.73589985 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.033708684 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.034200101 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.03520596 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.049124679 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.048520548 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.04385815 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.043468269 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.030829751 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.050624412 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.055484798 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.044088578 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.04888201 seconds)
  done (took 46.475275765 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119217004 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.916988867 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.668008324 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742837643 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.565901505 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.24174524 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.561123076 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.20299583 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.03501633 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.304381132 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.690485971 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.285557017 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.285749707 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.032857698 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.108231951 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.512595446 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33670805 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.261260159 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.05650417 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754782814 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157831527 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.586981243 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.843755643 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.166087077 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.242804951 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.162051948 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.292227735 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.982525795 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172006168 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071779971 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04269354 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.033485708 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.306336565 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253471506 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162632596 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043022879 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.687327472 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.748365565 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 7.13102801 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.815245627 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.755313182 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.175110869 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042714427 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.034877141 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.967398418 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.580325056 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209715801 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.039739664 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.738104336 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.035905636 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045367485 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12565078 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.036939237 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.851661367 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.984555135 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.311845316 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.033162897 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040485605 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.603331789 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.172979288 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.670054475 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.972252739 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.126623219 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.815425731 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.52089985 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.195366341 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.037750505 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038653092 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.969229804 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.768718395 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164191931 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180288978 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.055027571 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.684461355 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347218492 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.79271742 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.125372833 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325679334 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.816188052 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.971987157 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26252224 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.991632262 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.96907001 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.892604134 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.970312413 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.30165619 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067181163 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.688544676 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070029502 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.207224179 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047044959 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057520142 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043516768 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259656637 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.917370357 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.038260754 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.645030893 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328863048 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05831856 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.208072796 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.970768474 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.041141029 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2911209 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.246978584 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.274006318 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.512839426 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211310378 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.038994806 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.126864409 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.964918345 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.047930789 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.323680523 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108263147 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.175970765 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173737436 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.993710969 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333255904 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.061054914 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.21626591 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.725106112 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308646946 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.360455256 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2840694 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122482867 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.045590809 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.038765393 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.831409868 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.669161826 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.262190891 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.039463174 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40970966 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169834982 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 7.041971079 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.973344198 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.705526571 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.715160399 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.158214373 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.261395833 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.900727703 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.416584615 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.972278312 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.183929436 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.152966196 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.260736409 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.69789338 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.126339743 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29927862 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473921392 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.263223185 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153021125 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057906776 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160529196 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061906888 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.339854785 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397186047 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.044635885 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.04479489 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.849282618 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.125070484 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.049969924 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.045095682 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837523806 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337762645 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.077288824 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.050647747 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.976265478 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.055340499 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12563505 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046542663 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051856402 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.56761007 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.791828342 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.0510258 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.708601721 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265928876 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050263736 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.773997172 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234699704 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.125211829 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328897257 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113816594 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.974635497 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.744384201 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.745668955 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.043288758 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.977442378 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.043231328 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052350824 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053466686 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.240230432 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335001406 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.098128192 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.828041678 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.16280462 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052978448 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.047772675 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.043958227 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.564853019 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.184452457 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.593850535 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157046429 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178817946 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.055933471 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.975396298 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.045819266 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04701166 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.044306241 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.997884068 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096633921 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.828170011 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381559513 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302244609 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.691915614 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061309936 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.802872714 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.180567315 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.06650815 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.678284378 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.03931017 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.1383546 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100362338 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.054410933 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.783542949 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832807788 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.612599868 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378542175 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.383284879 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512996505 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.436896359 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.368541181 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224950418 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279482549 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.573059115 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104222425 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.222807793 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.988579556 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130611368 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.707062468 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.410591232 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061683661 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271522426 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454587075 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.144446446 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214692011 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256057263 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079749706 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.875268786 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.078137897 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.568551594 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199405414 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.670448037 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283992902 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221899786 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.677247081 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.157683035 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 7.045982954 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.505812131 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122094492 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.757587928 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.406687892 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.616123876 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.731089955 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425321055 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.055092325 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.491289186 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.4155838 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385037245 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.134875689 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.980655192 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.057666254 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.057024918 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.047301289 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.025194087 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.899667039 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.298820846 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057004047 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281399964 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.312832702 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.331389926 seconds)
    (280/481) benchmarking "3d"...
    done (took 3.041080114 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.05309364 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.048745927 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344757896 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.69833206 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292996049 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.372337483 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.622706359 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.053724668 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.981293228 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.981771982 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.751055215 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.058324789 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.022021154 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.26951055 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.155020509 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.000644906 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.466354287 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362422021 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303748101 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.063544957 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.339154192 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335318282 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.786498923 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076971619 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.149070463 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.681499847 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.761667791 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.271666403 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.283966796 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846316812 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.280115284 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.696719334 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 5.017359809 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.051789802 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26339525 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.271895077 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.740260916 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308522452 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.772548615 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.066034452 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418680869 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116513693 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.796719245 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273218982 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.143356863 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061767824 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131357985 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059713563 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.060750958 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.06272948 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096938934 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.784735526 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.196495583 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.06477007 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141892814 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.213101044 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.636867982 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.061370115 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346387779 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426308552 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403808401 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120453574 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.052581765 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.055456944 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985559353 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190478236 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.496271269 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.325814658 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.182322703 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.192459351 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077142737 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.675664101 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335244794 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366918132 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.327609117 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.947130441 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.053637811 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.145500752 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.276512191 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063536368 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.263198403 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.278792522 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.361201831 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.519915428 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.184717395 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329588229 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.327026505 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.419012753 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.054372904 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.642195616 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.066528865 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.557955022 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.088914606 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.74887373 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349766064 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066114486 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26983581 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.074449005 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.254864264 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.506479154 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.849270527 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423892893 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.04830988 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114206559 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348235877 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.477387464 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377597315 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134431964 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064838728 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.780645368 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192770829 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.938841168 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.291675771 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.056112648 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265252303 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.766824885 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.064487528 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347661279 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375498287 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.051876782 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.973759125 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091690422 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.064700143 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.277918466 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.319304133 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302191184 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064739166 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.064652953 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.870843699 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348920794 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125983158 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.988965321 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.060523967 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152658661 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302324476 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077133302 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.57298381 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.759583013 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363273459 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.970702223 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078045511 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.485795261 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.520618787 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412239118 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.586527574 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.287905498 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.61092794 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.927880875 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.431981306 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.061481884 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.451565479 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.435029093 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.061160251 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.559037794 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170171496 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.347187615 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.391312227 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.075459045 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853102234 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.108411996 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280543302 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.650323748 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.997427357 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.062595829 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.118762683 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.057937739 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.186442461 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069394962 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.00848203 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916427325 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.896410556 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.553858067 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.063149229 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.047115169 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.846450763 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.645719982 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167407977 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21333308 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.068849343 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.780517615 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.349644867 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312534551 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.55419935 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.132168023 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.066252105 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.06088055 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987279143 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256692795 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.255646553 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.354568352 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.376715754 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.169311705 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064517716 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.273814255 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269078349 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.760073873 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226364856 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436499362 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173358118 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.986333453 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.772851289 seconds)
  done (took 1765.874120661 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.086610409 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.077835025 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.064791591 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.089985808 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.069462287 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.075971721 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.133830384 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.156341104 seconds)
  done (took 58.736917928 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.05890799 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.251497804 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.066819789 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.059668412 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.08560889 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.05926264 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.251980853 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.070688918 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.074722569 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.068207711 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.060418362 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.059316511 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.408554066 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.083570368 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.058794888 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.066811224 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.071361072 seconds)
  done (took 77.846244934 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.059334553 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.230404227 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.075299731 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.084999174 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.935663347 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.073602268 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.008107735 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.066876959 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.062619069 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.227085041 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.396783661 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.110997399 seconds)
  done (took 92.313876555 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.075233744 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.06718679 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.068180555 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.068053784 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.067845235 seconds)
  done (took 12.336164369 seconds)
done (took 2301.538014165 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.451332626 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.251455874 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.299882516 seconds)
  done (took 6.534031531 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.212417806 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.261717366 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.379883976 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.387756324 seconds)
  done (took 11.23211839 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.36339912 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.449087339 seconds)
  done (took 6.799037749 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.389426908 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.10078439 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.484150768 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.067118381 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.070304066 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.07138933 seconds)
  done (took 23.201319904 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.070943081 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.074676086 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.070487101 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.072788589 seconds)
  done (took 10.2756129 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.052061493 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.856132361 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.052098729 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.070133235 seconds)
  done (took 22.019311177 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.821222095 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.194623712 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.813521845 seconds)
  done (took 9.81797953 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.729774118 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.723604858 seconds)
  done (took 10.441602504 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.229076435 seconds)
  done (took 4.217962897 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.099130008 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.341571564 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.618933531 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.639208381 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.727647706 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.326904455 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.419167119 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.309264957 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.511579521 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.551469309 seconds)
  done (took 27.53421506 seconds)
done (took 148.482754996 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.642699027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.102130715 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.269157626 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.438967059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.305948602 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.26908376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.287103947 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.434181956 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.12308673 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.113356213 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.445209574 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.305806315 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.233730256 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.093001534 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.242384995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.092488184 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.301746195 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.463360263 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.126398347 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.358076878 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.300846603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.08356822 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.27351609 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.097044042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.365894447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.223152765 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.625433652 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.096843136 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.255798464 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.637167252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.226037069 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.500662158 seconds)
  done (took 175.32469183 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.072893547 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.071692309 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.072512721 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.07249312 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.548576602 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.073403871 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.074981387 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.072318322 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.501923017 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.494196605 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.074416123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.536262567 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.075687511 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.072865621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.074536369 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.07291083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.653651985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.074049164 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.072564056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.071721702 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.074313602 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.375061216 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.074826601 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.379235126 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.647909343 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.075640682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.072592957 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.073115011 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.071271824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.070901873 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.070534031 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.069092612 seconds)
  done (took 215.881762968 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.066943474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.069257785 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.070120254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.067439804 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.068977109 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.069959479 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.066716108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.063000987 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.792433326 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.79253151 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.062241386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.063215865 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.063239178 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.063264678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.061883131 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.061755735 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.062554803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.063300988 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.063373878 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.064029678 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.066597288 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.802186856 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.06872978 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.83159944 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.07108282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.074096163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.062834415 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.076455558 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.079536238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.077059794 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.080148323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.063218704 seconds)
  done (took 227.100428955 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.323048809 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.069061618 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.069129601 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.98872091 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.06951479 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.0675751 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.07676927 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.317412679 seconds)
  done (took 20.986514772 seconds)
done (took 641.290688188 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.530617691 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.37756551 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.253840538 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.09328916 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.352729307 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.129764706 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.088733866 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.161966298 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.710875994 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.164409238 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.738132238 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.112252405 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.823615737 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.121601532 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.208143716 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.152625748 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.637973828 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.723652073 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.27068096 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.160530189 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.266334742 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.011773374 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.175802024 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.740477481 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.845344738 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.064539707 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.158073379 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.640014653 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.100455552 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.24868729 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.831345691 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.386449044 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.109271034 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.088825611 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.14621102 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.124222059 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.357172296 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.106258157 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.215590696 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.812612815 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.176942005 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.623015848 seconds)
  done (took 111.027553914 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.060740225 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.058079538 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.056906422 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.057535793 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.057180123 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.057697098 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.056098748 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.056879887 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.057936698 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.05740899 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.056981031 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.056987088 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.058088845 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.058245307 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.056958857 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.057354279 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.058343957 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.059076619 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.057699198 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.05749571 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.058086567 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.058037327 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.073927041 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.058051877 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.058271275 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.058954932 seconds)
  done (took 55.517798096 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.072627829 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.228555516 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.312131702 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.095877787 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.071994187 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.07546569 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.090761504 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.077945842 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.075167975 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.075413905 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.166103895 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.081700558 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.092530766 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.308527552 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.093325072 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.074293979 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.074651849 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.073477967 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.236814368 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.091033879 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.094044592 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.079128245 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.093699101 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.088054444 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.075128236 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.074227675 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.07717907 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.566498427 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.082917478 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.165333502 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.132404594 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.10199485 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.484274265 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.319232165 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.132783594 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.088042549 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.074519113 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.167694605 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.08087908 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.074441916 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.093710312 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.080004654 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.308932974 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.571530813 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.091500938 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.074463255 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.576403548 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.176991205 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.117532682 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.087195611 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.312854126 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.096485316 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.077051104 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.076623125 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.112833159 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.081682013 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.075688954 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.431773811 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.088725843 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.094534397 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.081299545 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.07752097 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.238544845 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.08501311 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.231325017 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.086475186 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.083704765 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.077750849 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.310782558 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.09526745 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.569463844 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.092048814 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.076628219 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.165945492 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.236517707 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.606606878 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.091150655 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.242720534 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.500480282 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.101791909 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.085489918 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.555986425 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.105414097 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.083820236 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.079094623 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.079031419 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.077272274 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.124172285 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.093714162 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.507686673 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.58183783 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.451019357 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.10625096 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.091504089 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.077747785 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.431570201 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.086633815 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.07828374 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.307484414 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.588840395 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.095099066 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.084933501 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.562996651 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.096490927 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.097411473 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.086599082 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.315923397 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.09724076 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.123337507 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.079731055 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.084714799 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.082597934 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.097499175 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.087087744 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.079469786 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.559501298 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.191607653 seconds)
  done (took 256.605739659 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.076593624 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.076830844 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.073005949 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.078439305 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.072696244 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.077812667 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.073237103 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.073703112 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.078880657 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.073042444 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.07304893 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.075066511 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.076948943 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.077994862 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.109765692 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.093048154 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.691040712 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.086610511 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.088159524 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.086543998 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.749674983 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.09425349 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.089128985 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.106811944 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.087238612 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.087970791 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.09531819 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.10338186 seconds)
  done (took 173.624519705 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.094109745 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.208949324 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.118810454 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.12226114 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.102128916 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.092272526 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.117434794 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.109139196 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.099747887 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.091770426 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.092265818 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.15491626 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.104910617 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.19093762 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.126337882 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.124932623 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.197101597 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.101874332 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.091110482 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.090633278 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.122714136 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.088504999 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.15455477 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.219885313 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.113563131 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.209580751 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.102320388 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.095432285 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.093533058 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.211289615 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.111083416 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.155628961 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.123772306 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.113482759 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.21473339 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.21286216 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.19954897 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.124504243 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.098963824 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.09269255 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.093302821 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.081589861 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.211617666 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.115467553 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.096659597 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.20158252 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.114173526 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.097149874 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.104196395 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.093957227 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.110534059 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.113651939 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.16514144 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.229410658 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.131442903 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.121583662 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.119918462 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.373691337 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.106557929 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.193492944 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.08843827 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.213182884 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.117738397 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.082496737 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.095973606 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.100362111 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.124128959 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.127274057 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.200677973 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.104734698 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.194692679 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.132087154 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.10320807 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.094528345 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.098203634 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.212343254 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.216120247 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.131205188 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.134030035 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.129105398 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.091467291 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.095908343 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.084108762 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.115226879 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.100655782 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.213613437 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.219209677 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.105156156 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.09873676 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.100482372 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.097806827 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.12369455 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.223591874 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.134642664 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.190107389 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.166079234 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.175925011 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.116213724 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.110418029 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.102049284 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.163631141 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.117106337 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.108633554 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.421710023 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.171499917 seconds)
  done (took 226.525567378 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.551916203 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.150927144 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.156763908 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.42651238 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.442839001 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.127635058 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.145876282 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.148227896 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.1717464 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.337959224 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.220341835 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.16619075 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.134893044 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.121463078 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.145884084 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.170667685 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.157638638 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.475750151 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.25311205 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.301633551 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.128485326 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.451498924 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.419121545 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.536786701 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.18242485 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.49759093 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.809623646 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.294829462 seconds)
  done (took 68.14823456 seconds)
done (took 893.434325143 seconds)
SAVING RESULT...
DONE!
