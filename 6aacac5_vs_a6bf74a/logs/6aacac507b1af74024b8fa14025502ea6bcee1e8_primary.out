cset: moving following pidspec: 22917
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.37943317 seconds)
loading group "string"... done (took 0.568231666 seconds)
loading group "linalg"... done (took 7.180045011 seconds)
loading group "parallel"... done (took 0.157907145 seconds)
loading group "find"... done (took 1.144149068 seconds)
loading group "tuple"... done (took 1.746920667 seconds)
loading group "dates"... done (took 1.230873715 seconds)
loading group "micro"... done (took 0.22001349 seconds)
loading group "io"... done (took 1.012066969 seconds)
loading group "scalar"... done (took 37.684384994 seconds)
loading group "sparse"... done (took 11.853028621 seconds)
loading group "broadcast"... done (took 0.933611716 seconds)
loading group "union"... done (took 12.177982103 seconds)
loading group "simd"... done (took 4.436492002 seconds)
loading group "random"... done (took 9.073550121 seconds)
loading group "problem"... done (took 1.8669109 seconds)
loading group "array"... done (took 20.865088938 seconds)
loading group "misc"... done (took 1.687522487 seconds)
loading group "sort"... done (took 3.342149694 seconds)
loading group "collection"... done (took 17.281454216 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.524319141 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124763152 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117999198 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119017053 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146939459 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.111982346 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122951723 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085634439 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.809367367 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148274271 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11702693 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428493407 seconds)
done (took 5.166844918 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174301637 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084271227 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082895059 seconds)
  done (took 1.292953745 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064450318 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123762081 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066033789 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066812758 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066571972 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065326641 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065652002 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065750863 seconds)
  done (took 1.64580906 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074384905 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069443443 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065263853 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068000599 seconds)
  done (took 1.403456273 seconds)
done (took 5.718256084 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.787907811 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204934423 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186673956 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411956839 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130447123 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158156791 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637194058 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329571009 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188140681 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080282731 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107946479 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.327662997 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110598116 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.626929435 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075314538 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090114528 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136622159 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.413617739 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066694934 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081339949 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088123605 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127331411 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08451204 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074019006 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14928481 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067065734 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135594408 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079239112 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065762779 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212448505 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171812617 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661289932 seconds)
  done (took 10.234270985 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097865979 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.0964488 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069164804 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122490411 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095882824 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06930221 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070701677 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067312353 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086453436 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127744685 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087715002 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101123843 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064925925 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067972744 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084813541 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204126136 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08226576 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081170613 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070110502 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07504029 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104220608 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07763626 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076558622 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07670438 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129383826 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180337511 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098302121 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096692101 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066275886 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078934471 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114449406 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1242917 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064930692 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065451362 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123385649 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093733435 seconds)
  done (took 4.557235368 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.000016299 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.142889973 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090622758 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133760572 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064161414 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108475917 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064842308 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080153503 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.208905925 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.38432922 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.601683788 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110488073 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103544615 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066693711 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.11067134 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06754648 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066059753 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.486162968 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094590571 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105827494 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065725791 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080798563 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070064448 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068056845 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067255902 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063802258 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067911733 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.109688379 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.299544408 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125214657 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063089186 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06760453 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.948536144 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.131254008 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06690856 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10105428 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168462783 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088304889 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273719772 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06940301 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064509059 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.152821299 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069861079 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065999341 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08332802 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103355234 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113029798 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065410612 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065879254 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165011791 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064211062 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078958524 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.644733216 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.1519164 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076179055 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064665125 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.254920143 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08824224 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068966529 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064384968 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176139652 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133496174 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067529047 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066041065 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067594689 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068725241 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396515144 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065815537 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.194470849 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067572486 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076241933 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06938186 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069134989 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072680868 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072393865 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087483912 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066254782 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074943073 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065836165 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065543987 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066995487 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083580776 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.386285203 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066291758 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067591209 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065040825 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089172563 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096725448 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066335836 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065560796 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100222039 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063750198 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067376346 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065442671 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106296383 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066289098 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083374659 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068784213 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112968075 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067139023 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.211664126 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066905496 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096361748 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068610337 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098118777 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079796678 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067938831 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.431432822 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065170913 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064728241 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067921643 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065942378 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067378555 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066021093 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079112202 seconds)
  done (took 21.371450457 seconds)
done (took 38.287484645 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236456334 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074317214 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073926079 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080233988 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073527428 seconds)
  done (took 1.756234117 seconds)
done (took 2.951846718 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122652881 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100468747 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0636914 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096912372 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064152017 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101134979 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101072631 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081186591 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100951584 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064052046 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097792471 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063735009 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063893542 seconds)
  done (took 2.34093147 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086489995 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084168944 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07011664 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083258116 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063300272 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082598447 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081779492 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.0892845 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081903044 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072871492 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063761906 seconds)
  done (took 2.050913498 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084555902 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084401281 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069722357 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081630649 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063375533 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081719698 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081375535 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085795912 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081739448 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074147564 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063214665 seconds)
  done (took 2.039942612 seconds)
done (took 7.617971773 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078292896 seconds)
  done (took 1.255829741 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.594425896 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.074573275 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081650183 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110596814 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191308673 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118363934 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272108426 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086079461 seconds)
  done (took 8.894525483 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089441555 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068543028 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081740574 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068784405 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07114521 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071996076 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071417354 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068023586 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068124832 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068280037 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069669889 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07165737 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071443478 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070825728 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069820881 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071355053 seconds)
  done (took 2.406891166 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092493705 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091371578 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073190398 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073965875 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07167988 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071526971 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074232037 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072857841 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070675226 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071836787 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074076164 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073529255 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07092002 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064253127 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073265871 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07483034 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070127527 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073404012 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073927792 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074934411 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074230544 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063611111 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070918694 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073252428 seconds)
  done (took 3.061015457 seconds)
done (took 16.806738623 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11625789 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071464283 seconds)
  done (took 1.37181581 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082264414 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083273957 seconds)
  done (took 1.356433678 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08407303 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065760012 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089648082 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077827444 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065426649 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065078641 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087353396 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065798711 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065237412 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065330958 seconds)
  done (took 1.923655416 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069870635 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077717202 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070350726 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080735509 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072860381 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063837823 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071176252 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067146948 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076473764 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06191588 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071119306 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082322146 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071343855 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084387367 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071753479 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068372461 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069963041 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067327449 seconds)
  done (took 2.494532645 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067338338 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067303647 seconds)
  done (took 1.333557756 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067992971 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063095237 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066503107 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06589334 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063229415 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062236046 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063485903 seconds)
  done (took 1.646862436 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387882691 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113997012 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311762164 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070749327 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08148488 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258082576 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065212591 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070415645 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07029162 seconds)
  done (took 2.669359542 seconds)
done (took 13.996849907 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081838307 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086304249 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096326458 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.377226755 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091155198 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066191202 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113648071 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187866191 seconds)
done (took 2.312031088 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216264534 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.64251284 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404336169 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204128894 seconds)
  done (took 2.452542436 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344185158 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088232662 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058009252 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066385132 seconds)
  done (took 1.768573909 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.0680434 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069231 seconds)
  done (took 1.345948878 seconds)
done (took 6.994078175 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083181449 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065681452 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065778887 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063344196 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065733099 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062913501 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064268437 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065419769 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065921448 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065670091 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068067252 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065371703 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063718714 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064029095 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065965995 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.0633663 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063612719 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065600132 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063163535 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063689732 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065782458 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.0631552 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063324327 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066196641 seconds)
  done (took 2.816722559 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086232126 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066102488 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071662998 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071075916 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06935689 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070479967 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070865506 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065297892 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070798332 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067582122 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068751017 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068843771 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068023424 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069036855 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067987024 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069052882 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071282919 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065545332 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067814161 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069648073 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070434619 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065623738 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069168993 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070692715 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069281321 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06997864 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068436108 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065732815 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070429963 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068906987 seconds)
  done (took 3.30108012 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071386082 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0628559 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064496486 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070299316 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063497711 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064833889 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062684266 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063782892 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06375564 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062851784 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06465639 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06283735 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063633573 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064594517 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063900526 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066863572 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078946438 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063529011 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063141392 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063879891 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066756932 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063484053 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063123213 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062651635 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062859437 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063036999 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063456576 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063043157 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064044967 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063701386 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066414904 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067063718 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063564254 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070327531 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066755214 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0626996 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06701668 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063391814 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06358068 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063008849 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062687851 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062902416 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063318875 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070567492 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063119467 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064467637 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063055915 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065005871 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06347002 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066038769 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.175660136 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062833393 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065121927 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064335017 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067094793 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062593674 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063939509 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062207226 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063954189 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062966732 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062663623 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062674854 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065732334 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063443029 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077752892 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069728941 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062949234 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064340192 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06415321 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065299878 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064211952 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076042491 seconds)
  done (took 6.009908846 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09173909 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087214927 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064847032 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064519163 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061393231 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06342138 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069214009 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063510939 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065199698 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080894505 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064116957 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064599339 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06496343 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066977634 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063454478 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064446539 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071324562 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060824027 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062962322 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067242399 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06352938 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068993208 seconds)
  done (took 2.725539906 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158110101 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070234237 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105971647 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074976006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069529384 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074732442 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069273391 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069498371 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069505173 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067843636 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066765241 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069857703 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069376664 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067205362 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067008751 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067103165 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069218523 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067631 seconds)
  done (took 2.599270438 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078807145 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065805383 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086718091 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065638524 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065411686 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067911557 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069872296 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073427733 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068256239 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065344316 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074129859 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068429774 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068005257 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065432922 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06849474 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065690457 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068017158 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065247058 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073350607 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06948372 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069747287 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07367685 seconds)
  done (took 2.761020251 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081571226 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068064155 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080670161 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06785172 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061301616 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06341173 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069409464 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065764819 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070629414 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067197456 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064928403 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06354411 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068546158 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065283221 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067931328 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065357575 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067574867 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064901748 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067156674 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061241351 seconds)
  done (took 2.57766775 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088326175 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067651467 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068404515 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074799571 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0672414 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06737249 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074343839 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06652075 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066569528 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088438858 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066618832 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066637415 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075117568 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071011403 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066667465 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07407421 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074292438 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073809815 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066696666 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06672045 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087908081 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066889341 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074138015 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067093232 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066814209 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066878105 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066835861 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071214268 seconds)
  done (took 3.226802762 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069389628 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066468963 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062976412 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063107343 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06275976 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062518098 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062944092 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063242779 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065827999 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06287812 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065505799 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06554594 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066066994 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065416513 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06600246 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06583455 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065937392 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062990905 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063520131 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063110225 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065666895 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065642927 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065828692 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06298071 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063104263 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065183749 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063850694 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063299747 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066256269 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062728583 seconds)
  done (took 3.166897404 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077410282 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073316702 seconds)
  done (took 1.381735781 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064637037 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079262517 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063038483 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070229537 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0692294 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066292237 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07324608 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068870992 seconds)
  done (took 1.781197652 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083923915 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077116112 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067428096 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079408541 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076529977 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082909379 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134562863 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066935995 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072715615 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063912278 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079912673 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066287447 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072522283 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066001438 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071277158 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072779357 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063934283 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07230807 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068452612 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064787092 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066790909 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074252238 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068448517 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061475108 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06716976 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088135803 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076476887 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065381842 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068944869 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072712949 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07134079 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060008453 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065555323 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065764928 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06361163 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075183552 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080316977 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06834832 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074901679 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065902119 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075640978 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061019219 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070490573 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072307543 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075711075 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065969539 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065978332 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060447714 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063098954 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067492086 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060650005 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068239055 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060322885 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072703267 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069212132 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076839933 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064501533 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06702062 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06814624 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068365142 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072406017 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067598754 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068498124 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06478865 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075435215 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070300116 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073902649 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060693152 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059699422 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063600343 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075683596 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088767033 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071820354 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066464148 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066312831 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063390344 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069307691 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067034286 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071242969 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072140456 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06584244 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071395959 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073332652 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065835715 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06838766 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07297274 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063902828 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068395265 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063766171 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08246121 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064293098 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063639008 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064196798 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076069545 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068963698 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065002611 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063736226 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072805327 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060172292 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066082917 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066479043 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066018363 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075713606 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069242969 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069168677 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073073961 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.0719058 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064931696 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067831028 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061291097 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065122023 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064198078 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07201579 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058394065 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06708938 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065353706 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064238447 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072776778 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062669084 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064763224 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071540669 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069732658 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.188323809 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063014638 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068751159 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066609062 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069539347 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074907091 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065128818 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061362967 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06163215 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070492341 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066095974 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069763809 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071041316 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069746342 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060364577 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064650838 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070830993 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074752158 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066955779 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067677221 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072787877 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06819537 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065814125 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072840929 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068776151 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065359871 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071805458 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067443097 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061664312 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068967543 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069222828 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064679319 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069332498 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068971173 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068167072 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066682094 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064688163 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07315316 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067051699 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065638077 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066676626 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065393884 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076653662 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068687909 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061471657 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062842702 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075055912 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064706058 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06567855 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065430946 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068180917 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066606121 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064827681 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064960496 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068277557 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075316591 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069122124 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066835661 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072232653 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077239868 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065694745 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068560169 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065752915 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066348589 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066362248 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074691569 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072497056 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071046396 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068247929 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062192404 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071491144 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073346981 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065464684 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063001526 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064803527 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06956855 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071434439 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069390661 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066629297 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064072116 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066367759 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069029914 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068325898 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065058672 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064938677 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071549829 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063151612 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072291224 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066063476 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075949244 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068928048 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060962981 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068501716 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063656158 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072208667 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.0613934 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063493947 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065557194 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066654089 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064828088 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068147162 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05983691 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07274594 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073532169 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066366196 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065064132 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065294935 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073326584 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067314877 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068812653 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067784438 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070290427 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074684889 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063877869 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067891854 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075019844 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064699829 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.0585621 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070067121 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062889081 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063363829 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063435629 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062214262 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067266885 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07178856 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071367095 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.186522748 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070484881 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065460572 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065434779 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061375349 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071903004 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06988752 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067270689 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073797794 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066923733 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066001687 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069727725 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065266866 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066949338 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06799164 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069469983 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066020074 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068119885 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065731194 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069570261 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065211944 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064018973 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068445796 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065899733 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067149616 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07137063 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066362447 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066748443 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068353014 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066362402 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067420887 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066704287 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066042819 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069195685 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067266738 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066729002 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068436579 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061435918 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073799138 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065510283 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073681808 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066328065 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062712568 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072247823 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068314216 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071639793 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066914274 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067362964 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068296215 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065910007 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068748842 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072921412 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064051761 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077160086 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073171124 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06751536 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069016743 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066468788 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06782512 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065261426 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067887957 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066535423 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066499751 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065498593 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071015532 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068585285 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066804921 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067993946 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066636887 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06698397 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067175122 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060244277 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065278068 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065487346 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066312737 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075433403 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066147393 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065261468 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064312152 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066710549 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064821552 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06232194 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073268767 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07479209 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066340468 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073523674 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065488123 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068015033 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076599058 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060136275 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063899399 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064111041 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064048129 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073022681 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066399709 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075498465 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066599225 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065816294 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063644772 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066845906 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065050026 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060713209 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063745445 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069569556 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065578179 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065052451 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065804616 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068910244 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067041008 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07573733 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06518044 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06725531 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065670066 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062518366 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064416811 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064175117 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068038841 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065059238 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062859045 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062616994 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064754818 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065703173 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066530918 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066952849 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066587201 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071382759 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064331194 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068043073 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067181172 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059654146 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.200249327 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067653265 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067306977 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06658064 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071128801 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07080898 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068447041 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076051878 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065986605 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067610983 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066559243 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064619135 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066315862 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066276876 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066219651 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065618979 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067466547 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073832193 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064155415 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069554792 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066949228 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067259862 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073954767 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066895455 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069705063 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072928686 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067009278 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06890228 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074912178 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070194009 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071058067 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067550706 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068077358 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072259448 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065540121 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072906959 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06690185 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067119873 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068226556 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064573117 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066255029 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065943288 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06526886 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072108805 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067785104 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065827315 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065404439 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06496976 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067438256 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068791899 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074272105 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068885173 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06959726 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061726983 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063236976 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067288625 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064672495 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068187936 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069087736 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071814093 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068684542 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066213641 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064990371 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074793548 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071947092 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069799772 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064108343 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069918855 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066388945 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068988599 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066726458 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066733571 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067388379 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070216038 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067734136 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065446307 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07271994 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069530562 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066794318 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068085628 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067077717 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066877046 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061319167 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067123722 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068444461 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071162735 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068826685 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065846856 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07681907 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064157013 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067009677 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069145884 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065178747 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070496514 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061038782 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067770232 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066934052 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066720456 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061310704 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065748691 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064493363 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068155444 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06496172 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061614282 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076763021 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075266025 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069140407 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064891587 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064821666 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061379623 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060966582 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06571188 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067035916 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067620324 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076067018 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064628304 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064435118 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059871495 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064695915 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067913596 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068537454 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061985658 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.05995473 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064184959 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06769416 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070304848 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063205773 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063971496 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067830429 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067103029 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.194425123 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070818241 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063729014 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071449723 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079754959 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067042842 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067264527 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073269735 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074016162 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067525087 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061865195 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066849449 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069622728 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067898905 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067781835 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067667049 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082057448 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069796732 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06629754 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066210647 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070062408 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066313938 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074945368 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067234317 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067494054 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072097145 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068710337 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07533885 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069308102 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074463581 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069874729 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069569548 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065919333 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067122291 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064960649 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065756245 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067575839 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067116721 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071457444 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07472707 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065783966 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077544544 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07570812 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068141158 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063544261 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06580513 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066165857 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061818839 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067344269 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064901931 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06433911 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064446977 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065709061 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068281856 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071889479 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067360396 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067065536 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066094599 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060190043 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068843971 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06837536 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067113278 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062925115 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06675934 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066755473 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07053471 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069599575 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064261235 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068693628 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067896781 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067785975 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061718948 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072243428 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064962035 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068161562 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065263252 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065738 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066788551 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069053442 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07063815 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067177134 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068128794 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070102125 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067447953 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063107551 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063346466 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071151923 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063583446 seconds)
  done (took 42.299661016 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103485432 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064843267 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062261812 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061671347 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073523277 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062566431 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061665585 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062401633 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062998168 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064908555 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061964884 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061311148 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070452067 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077465215 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073086005 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066058808 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061668089 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062860198 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061070107 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062588106 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069928015 seconds)
  done (took 2.741092871 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076060132 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078806004 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075628708 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081812926 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070824874 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070033894 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075093088 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070601898 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078328024 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072230589 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078047133 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070269358 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071953355 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071763542 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072062345 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070348912 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077699433 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070858799 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070016196 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07525962 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070363575 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075368019 seconds)
  done (took 2.931321493 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069239666 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067041105 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068483233 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061061324 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065825856 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06097369 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06900578 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063987701 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069212649 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065282907 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064549165 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064788073 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067608511 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060675389 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066100786 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063608629 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107430227 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068949715 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065707024 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066172906 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060975575 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067600784 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061550183 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06151694 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064563733 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068721974 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065813882 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063812068 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06571384 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064760322 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065655527 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063386616 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066826169 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066285533 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064702741 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06482539 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065555635 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065477745 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060764574 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063393332 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065866657 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061133804 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065046391 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067019889 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063343975 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063373385 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066779573 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06470382 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060431609 seconds)
  done (took 4.533262819 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081054262 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109449911 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067618364 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090892612 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079877402 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072573902 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069406065 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089782158 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06304345 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064094433 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081031593 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078103957 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065441553 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069879106 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071763273 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064793133 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066886672 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064422372 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068835474 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064331437 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068502457 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071981478 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07935831 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077877499 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069198597 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063714766 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064315513 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069647203 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076750306 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069298594 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069486207 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070171313 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08020728 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07023559 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064035128 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067790053 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080812908 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064836479 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067120281 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063148277 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066838124 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068706867 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071423164 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081003356 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065437619 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069425623 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064531225 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06217624 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077179498 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067374596 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072390141 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078627606 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068401312 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065000195 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069295209 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079461189 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064660062 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063196015 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067776963 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076643395 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062444272 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068708955 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077888555 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067002974 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072251397 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077937539 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070039789 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068640522 seconds)
  done (took 6.303856425 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077864537 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095708901 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083390086 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08257157 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07456951 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075142283 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074847077 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074754358 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074754802 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07983288 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074866782 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115113511 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07098462 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077548811 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075343571 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075150132 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075056688 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074745647 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075130785 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074451835 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075444731 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082633958 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075074438 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082937126 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078988282 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070188538 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074175022 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074688071 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081867746 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075064867 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078407274 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07427866 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083656057 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082353539 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078450878 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074475419 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064634302 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074070217 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075166596 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07519216 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069610565 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081684343 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074213309 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069858785 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074233751 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074581021 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08199086 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078525287 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076785525 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078825059 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074641208 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081826472 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074409746 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074512014 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08299806 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085457508 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082253181 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08274068 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074620086 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082201479 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08245857 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085186848 seconds)
  done (took 6.165510359 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084328563 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073869166 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082322881 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061137771 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063853732 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071757107 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063344361 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063920933 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073892494 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072795923 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07563413 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071450184 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073954899 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075503367 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071465473 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073901597 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071123471 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071130874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073475723 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07146546 seconds)
  done (took 2.770066031 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076139792 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082655949 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067026926 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070747678 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068514244 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071162439 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06772204 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0689023 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066350374 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068854399 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075247332 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075151528 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066398628 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071014441 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075265046 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070663962 seconds)
  done (took 2.463819442 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086690515 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073968127 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079820837 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066657464 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066168828 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062392676 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065168802 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061185788 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061838349 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077103101 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065665529 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075430275 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06514695 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06401907 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062254583 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070995878 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061480226 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062617222 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065219654 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077495412 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068682715 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063772086 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068132112 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065332732 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067784504 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.0694336 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064122773 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065007553 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062432388 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065220296 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067770059 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068886185 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061596018 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063048908 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063830289 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06220298 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064692876 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065260099 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070525403 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065017393 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062969624 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06667567 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064830318 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065827224 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060981278 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065313345 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061294839 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066880227 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06255716 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06742372 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065143589 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067510421 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066076076 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071961537 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068629801 seconds)
  done (took 4.99122831 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081852207 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069185516 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061407774 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06366895 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068513673 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067060903 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068929833 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066814917 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066617255 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063866425 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066801305 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068414452 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06673905 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069436854 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066207307 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068623426 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061285791 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066461936 seconds)
  done (took 2.54551115 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073259193 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065655348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072682434 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065556501 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06574093 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067531014 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061952899 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064263183 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064312567 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065837817 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06518716 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067688105 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063469106 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067572505 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065460761 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065363452 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.0679529 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064255053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065446127 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061240666 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067456306 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063822776 seconds)
  done (took 2.778952989 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095557252 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082895728 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139816934 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07850118 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084195921 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071206417 seconds)
  done (took 1.880602608 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093197091 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100068842 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065960118 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068195996 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075371892 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069355388 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069328892 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069370674 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077200247 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075152234 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070143616 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077801814 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077364593 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076748287 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07531017 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075171946 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069276329 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069035589 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065686024 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082558065 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06940606 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077584395 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068946902 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069047409 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068884564 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076792823 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07697088 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075065211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069379321 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078146348 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074871507 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069224855 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07765384 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07516193 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06856817 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077345964 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069044067 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08286732 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07489071 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076541707 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068533474 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07493448 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077358668 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0740121 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077295659 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069948015 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073674123 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06940666 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06937037 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084959398 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075820279 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076751991 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077851611 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077902573 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078138195 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085530639 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07572607 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076932287 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075154493 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07575005 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077575988 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075103891 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076940835 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075211323 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075580271 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077025062 seconds)
  done (took 6.284412331 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105704145 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067222132 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06996351 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07546948 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077729745 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069434396 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070183847 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069916029 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070224553 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066351081 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107830364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069650994 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076957171 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077492705 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069782441 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069726362 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069764559 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076984161 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066380547 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084997112 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069396695 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076745787 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077035576 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077426842 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075157238 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075494717 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069928433 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069419181 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069490267 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069353338 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074271889 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069546548 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077009365 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06593208 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077172701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069956212 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069278986 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074350553 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069606547 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075584438 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077659408 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083467218 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070180038 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06989905 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075839232 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069429042 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069657084 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0665899 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069816793 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066670905 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076031749 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075533483 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075343497 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077099953 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069480821 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070403082 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070030491 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06958277 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070071789 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075830515 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077756833 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069686291 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085871957 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069559072 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069684256 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077107176 seconds)
  done (took 6.210931398 seconds)
done (took 128.453961846 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193405687 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165110088 seconds)
  done (took 1.686191575 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070432634 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099721366 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076474884 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128302309 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066147418 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100170237 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09867121 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077864198 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066114414 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066937259 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065819746 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068576361 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132464388 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066488078 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065824071 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06937405 seconds)
  done (took 2.660995892 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103080353 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163016224 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104330865 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064923675 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099844641 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072776282 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065224695 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075046727 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070662301 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06487458 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073198363 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.06977848 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06471841 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070445323 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071632986 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07216945 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064773647 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072083381 seconds)
  done (took 2.788594919 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101980393 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09057116 seconds)
  done (took 1.535116462 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.165968731 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107342528 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145961723 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351109989 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164109712 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149659839 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146081383 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145674607 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121268751 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140165903 seconds)
  done (took 2.976045426 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102544279 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155402549 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26796249 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116969749 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072613288 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093634859 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118167585 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078206748 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079989196 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079664387 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079579566 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076068481 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099260638 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072381503 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07374557 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074970363 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103152766 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073118965 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074082918 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075173056 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099979341 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065447051 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072643117 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072352127 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076691806 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07627233 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064800772 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064867723 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075306655 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073734484 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075956849 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091665296 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076382911 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105473431 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070283939 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106296072 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075799503 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072613379 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074037618 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07248381 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077177815 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077299487 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072386683 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075584604 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065048772 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075773182 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065608359 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065216459 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07678306 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066473817 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076769887 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07547431 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10512316 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066102763 seconds)
  done (took 5.935053178 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105575138 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106881023 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072004995 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112603024 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10204442 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071459106 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102953731 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095190175 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104049056 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069589103 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067730649 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06952154 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081900174 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082274953 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114486351 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10654042 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07315565 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070573032 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107244851 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104607675 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06777033 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096481699 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090814197 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103012366 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067187985 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069640557 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067477524 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069910298 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076403313 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078749754 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069365279 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079606531 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084392577 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077471931 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067068292 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067543947 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067592503 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.0796586 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079121918 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078243736 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07713193 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067331667 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067299796 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069247308 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069702655 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067639329 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078810383 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07941553 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077941739 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068843494 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06983369 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067811342 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068970863 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079408147 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076935548 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080038272 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079638083 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067939392 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068094294 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071880878 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079567784 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078618795 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079372921 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068920362 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078827249 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06816024 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079780645 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082976592 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068594373 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069699701 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068227608 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069504414 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068973952 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076970093 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077542228 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068864002 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069689418 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067604594 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079231453 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077472633 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067304497 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075783173 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066431497 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067375856 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068895539 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069092262 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076532724 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078896879 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069053006 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067374416 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069091312 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067680515 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066853414 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076189012 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079189619 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078233779 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076453682 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068220833 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076474648 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076798372 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0683851 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076859136 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066994359 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068151226 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06821917 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07579751 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075160701 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077442755 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.197196122 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067771531 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078243428 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08021249 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06907013 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079043755 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081164043 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079575372 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068084969 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081342671 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068389338 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079828899 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069369901 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079939019 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067862829 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080095196 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068300133 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067987887 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069234443 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07952478 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073465241 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068499106 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070517415 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069900783 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078919166 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082212611 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070717896 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078667097 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078749999 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070103996 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078897374 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068805927 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079293365 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069624085 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070163803 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067330752 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081935697 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068991417 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069170935 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069150218 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080534554 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068389012 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079794444 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077871903 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068155617 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08121777 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079441679 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076993367 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07984415 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069540368 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068116377 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067640062 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069205118 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078408291 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079671847 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070890898 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068359236 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077482591 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079576359 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067121328 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077674305 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077749867 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078251802 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067873251 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070090384 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079955348 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080703237 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078568333 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077746769 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077758596 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068299885 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077243741 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077683817 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068447336 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082972721 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067446276 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082084002 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078182701 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075929773 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078937293 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080051156 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079639928 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079430123 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082215451 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067527447 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067923866 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079023057 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068050573 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069563081 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078107472 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069531899 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069513892 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083239003 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068538063 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079474702 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068061233 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078258046 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066496842 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068771709 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0807018 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066617305 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067544761 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077603776 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06777619 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075119179 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077787656 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07562669 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066173441 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067917752 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209083957 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079674149 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068755857 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068016264 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070604425 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077396586 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076990356 seconds)
  done (took 18.543613424 seconds)
done (took 37.480077584 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20863937 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152077253 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182544178 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118296162 seconds)
  done (took 2.108741785 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119370399 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100809425 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092881081 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064465146 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098696472 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064519496 seconds)
  done (took 1.926062469 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313269132 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210602104 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187313017 seconds)
  done (took 2.087956767 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200825534 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188609493 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420858958 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263478427 seconds)
  done (took 2.565884135 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143548575 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087835924 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067124623 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083263266 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132707526 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159687482 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100516533 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125776853 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077967348 seconds)
  done (took 2.413245172 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148411894 seconds)
done (took 12.633221384 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.267244163 seconds)
    (2/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.228867908 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103537653 seconds)
    (4/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.223405534 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097278134 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090257332 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.197710271 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082380842 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.187584454 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203825217 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077613935 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.162838038 seconds)
    (13/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102537371 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11242426 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.206929084 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07265033 seconds)
    (17/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.175862881 seconds)
    (18/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111649724 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088086567 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.187347116 seconds)
    (21/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174513262 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073201315 seconds)
    (23/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081950813 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081256918 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074121952 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.153656011 seconds)
    (27/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075902266 seconds)
    (28/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.218500968 seconds)
    (29/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.160657994 seconds)
    (30/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081107124 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06383096 seconds)
    (32/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205571233 seconds)
    (33/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072202952 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089193204 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089775642 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075430673 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071759989 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.172388503 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074422423 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094844066 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074437749 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064704055 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148722679 seconds)
    (44/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065644032 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.18064686 seconds)
    (46/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.061313485 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170615789 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08878837 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099470091 seconds)
    (50/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109616001 seconds)
    (51/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072831793 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123427663 seconds)
    (53/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.180269978 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073128688 seconds)
    (55/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069370422 seconds)
    (56/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.179080075 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091370007 seconds)
    (58/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07132276 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072327847 seconds)
    (60/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080719025 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065873711 seconds)
    (62/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109149053 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091273286 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066918376 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188049313 seconds)
    (66/309) benchmarking ("sort", BigInt, false)...
    done (took 0.192325113 seconds)
    (67/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076221793 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090360585 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066113088 seconds)
    (70/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075673642 seconds)
    (71/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.152490487 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122932809 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07053475 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141332838 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075058331 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.153855538 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.198891366 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.064950102 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063860143 seconds)
    (80/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.063830889 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050525915 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089207721 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.04964249 seconds)
    (84/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067578641 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094480592 seconds)
    (86/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.334389828 seconds)
    (87/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090915171 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076768195 seconds)
    (89/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.15464039 seconds)
    (90/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.174642533 seconds)
    (91/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.144620005 seconds)
    (92/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.157391779 seconds)
    (93/309) benchmarking ("sort", Float64, false)...
    done (took 0.131363414 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073616098 seconds)
    (95/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066778516 seconds)
    (96/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051171699 seconds)
    (97/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076039685 seconds)
    (98/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072548381 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13324661 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065621859 seconds)
    (101/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051118866 seconds)
    (102/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.099848211 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072594363 seconds)
    (104/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069307976 seconds)
    (105/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073342197 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13590438 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088207481 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076399187 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.204714902 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140819426 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064962868 seconds)
    (112/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06049103 seconds)
    (113/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072406969 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182074684 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143732586 seconds)
    (116/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073498463 seconds)
    (117/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05031518 seconds)
    (118/309) benchmarking ("sort", Float32, false)...
    done (took 0.132926632 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076766225 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.1823772 seconds)
    (121/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072237225 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.137706846 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074399467 seconds)
    (124/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065339024 seconds)
    (125/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120040071 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086100791 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.092858521 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050370452 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065129563 seconds)
    (130/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072659844 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071479924 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071921832 seconds)
    (133/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153791071 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071750732 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.155898447 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05388244 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050441364 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071382018 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093008545 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.075927806 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071260704 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064551701 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072448684 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070267834 seconds)
    (145/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080726901 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077106837 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069135005 seconds)
    (148/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062443733 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089077105 seconds)
    (150/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074766092 seconds)
    (151/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079923671 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072788394 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087895603 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051250268 seconds)
    (155/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051189114 seconds)
    (156/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07100874 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06482837 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051287285 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051009671 seconds)
    (160/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050833087 seconds)
    (161/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108604562 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080632179 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120116176 seconds)
    (164/309) benchmarking ("sort", Int8, false)...
    done (took 0.141346794 seconds)
    (165/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050251877 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.31649469 seconds)
    (167/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052442938 seconds)
    (168/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051373053 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050120703 seconds)
    (170/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067334148 seconds)
    (171/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07358419 seconds)
    (172/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071337914 seconds)
    (173/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072194 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088117722 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096001964 seconds)
    (176/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072194952 seconds)
    (177/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073997739 seconds)
    (178/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086309829 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090089536 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063740179 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050350077 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052396609 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087331373 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095747769 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.160217151 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064396086 seconds)
    (187/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109009052 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062732083 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.051929307 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.050800347 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.153967806 seconds)
    (192/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.049873653 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089626445 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171935448 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.190446859 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050148992 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071183791 seconds)
    (198/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050105167 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066530784 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073093917 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07052936 seconds)
    (202/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.051734801 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.210547899 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077494736 seconds)
    (205/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082270284 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.155110513 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177549148 seconds)
    (208/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108554371 seconds)
    (209/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067933341 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065644961 seconds)
    (211/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072163657 seconds)
    (212/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07021061 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066573619 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051480976 seconds)
    (215/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091003093 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052454987 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076935006 seconds)
    (218/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072077976 seconds)
    (219/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063456824 seconds)
    (220/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067475738 seconds)
    (221/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.050777571 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088724041 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090940105 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064944971 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051673563 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13564368 seconds)
    (227/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051829268 seconds)
    (228/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152801144 seconds)
    (229/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101315861 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066670158 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11601943 seconds)
    (232/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069702519 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195998342 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067325543 seconds)
    (235/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065805688 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050353782 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051187437 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051801264 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071324271 seconds)
    (240/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100659742 seconds)
    (241/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.050674418 seconds)
    (242/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18113817 seconds)
    (243/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051365849 seconds)
    (244/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051690748 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052999301 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064730327 seconds)
    (247/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050496327 seconds)
    (248/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050093907 seconds)
    (249/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077863325 seconds)
    (250/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052928831 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184363604 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070782218 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067134026 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109053312 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072458378 seconds)
    (256/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079545192 seconds)
    (257/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050755719 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051304207 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073439847 seconds)
    (260/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067825875 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089626994 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064820744 seconds)
    (263/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066087879 seconds)
    (264/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061515058 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064798594 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064541965 seconds)
    (267/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067531237 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050524593 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139557192 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108423317 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064261746 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052623645 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090088966 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137296118 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050035808 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086545454 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060791957 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.122995822 seconds)
    (279/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051416192 seconds)
    (280/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.050903182 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064850915 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072980376 seconds)
    (283/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.050961598 seconds)
    (284/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050513318 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06314971 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063704748 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138662895 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098838817 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100585115 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071953636 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06436289 seconds)
    (292/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088293553 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064528481 seconds)
    (294/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050485176 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050407625 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071505884 seconds)
    (297/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050266988 seconds)
    (298/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06462152 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.0640433 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072886812 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176382699 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090331719 seconds)
    (303/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066179936 seconds)
    (304/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051082427 seconds)
    (305/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051223799 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066166752 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070953716 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065014895 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078323169 seconds)
  done (took 30.733238471 seconds)
done (took 32.123368456 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086552119 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0913873 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074528469 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092980214 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080413719 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075766989 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072010544 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078096983 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07958279 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081233131 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077531065 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053688918 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073527501 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073684565 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074937116 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09146401 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078125439 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072514645 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072529976 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064088347 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072231504 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064586064 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066768504 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053230274 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077898105 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071095177 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071901111 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073417581 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064485713 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064694203 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068426708 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072912038 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064287522 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078062723 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071329241 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072348364 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073848985 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076062338 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066422306 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065387021 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073907108 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065123498 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072105762 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073032649 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071023746 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070529518 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07256553 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077185302 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090498006 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066620012 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074040592 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075215891 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075196008 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07219181 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069231345 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072465174 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070153191 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090269742 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073324544 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067000914 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073912657 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073567515 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070382397 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072566564 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072477893 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074456083 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075185146 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070776648 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074070609 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070644202 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064722558 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07227746 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068126827 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064588466 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075193126 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076809292 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063436538 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070437096 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072542199 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070202015 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064145644 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066877859 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066117401 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.0707917 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066220273 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05330907 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068586834 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071084968 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063516027 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072345907 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070921805 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071731087 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066832485 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074947717 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064267239 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070345566 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064838797 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064665779 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065984364 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069330181 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064067623 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066373073 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073961844 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066296046 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071578485 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077917943 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064506828 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071784125 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063730194 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064297047 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07925582 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073848593 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064860711 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066927285 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063850464 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072362162 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064106712 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064600479 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065055766 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064422091 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071178306 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064252646 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066176288 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072088498 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077552664 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064225786 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067485857 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066006027 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063784125 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070071048 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063841217 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063910027 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065064094 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060163512 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065520225 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063949013 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072016143 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065512545 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.205168804 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067495631 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074442637 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071363992 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071321381 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071138286 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063931373 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059286028 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067629923 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066657364 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06754659 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065165644 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066419599 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064802307 seconds)
done (took 12.332606917 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068579806 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139920165 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096607083 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095304494 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085422704 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065905278 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075627937 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101626971 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067055458 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101242204 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087305036 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085332159 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113071286 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064027719 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064892287 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069046574 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066954269 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081061524 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100529215 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085741786 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115096132 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064409312 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091914777 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088992352 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087813552 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102866112 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068806136 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069028799 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068860662 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092345817 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087628783 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069348009 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066257517 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098131707 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093544572 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083411839 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065498289 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08281967 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065760773 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065182292 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066736282 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098109686 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080578232 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081203824 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069611918 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06906702 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066831517 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084022301 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090324012 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07885809 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086186402 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101342115 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068143156 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065347968 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064282715 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085415617 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064866982 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068269722 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065898093 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067603991 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065356511 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06854923 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080381002 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08012263 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06960036 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07965504 seconds)
  done (took 6.755379508 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086826772 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090520598 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082846004 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083802691 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064574593 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065710801 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065563335 seconds)
  done (took 2.017356037 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069601294 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089694059 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089134927 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088502999 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081171242 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087564671 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074856207 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066219767 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087561692 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067229022 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086982736 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100483981 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069289011 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073947791 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090074794 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066410893 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090155277 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065726303 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068501857 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089671537 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068231851 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095672352 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069264565 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066383136 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080832245 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065862433 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11320002 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070414634 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067335649 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068955015 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064266329 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10666708 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07976238 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073344921 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065515963 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080513351 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080359431 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064033825 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082842687 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074558556 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079491099 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066394605 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066519374 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063632932 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070009403 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076137144 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067119315 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066459958 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068557786 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086531029 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066661715 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080186026 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069023579 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071744265 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067395797 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073132656 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07661379 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066860622 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086293445 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068213238 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0833357 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082831582 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080601627 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081949086 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0683211 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079136755 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079844871 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068597652 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067611696 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069194321 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081904946 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06441482 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067247768 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076121087 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067455801 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089405135 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.0898851 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067380064 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079660412 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066673177 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065802017 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066559123 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089074731 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071657798 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066058077 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06987462 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069114642 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064060005 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06514793 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069726592 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063833908 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066902103 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068667356 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068834053 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068860257 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08234481 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068074743 seconds)
  done (took 8.74386367 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070400589 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066637573 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068957901 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067452273 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067362676 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068314407 seconds)
  done (took 1.908413407 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096264017 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068628493 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079856382 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071773748 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104106335 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086504475 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086438153 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077829079 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083274168 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077702253 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085994435 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087856284 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091464695 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071905076 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085568159 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070671718 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086647795 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074492587 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077367388 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071916293 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08585748 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072177101 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072071003 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081033291 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074861572 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071024334 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066327166 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077644993 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077767766 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077633114 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.0711346 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075315678 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070001285 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077618163 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086106183 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070050737 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07075627 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077245588 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072020175 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075017076 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08777981 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072237375 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073884435 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076477464 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077182896 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070089986 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076346762 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073932927 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085528872 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076489283 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076477166 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070674463 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074348956 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076195137 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069547804 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077276516 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077087379 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085978259 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070871625 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069764496 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067672317 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074692346 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076250999 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075063955 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077875502 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076222993 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070001144 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071477643 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072277679 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071022973 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076359625 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068034996 seconds)
  done (took 7.009876502 seconds)
done (took 27.904780341 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.558610196 seconds)
  done (took 2.02297199 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613630178 seconds)
  done (took 2.102961996 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.579273634 seconds)
  done (took 8.065725132 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.402274199 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.493711248 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.720044702 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131743553 seconds)
  done (took 3.270111024 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.700573502 seconds)
  done (took 2.198853779 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.218154234 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201748971 seconds)
  done (took 1.925124895 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378367953 seconds)
  done (took 1.866399237 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.134551056 seconds)
  done (took 2.623439854 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260247724 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174604494 seconds)
  done (took 1.936557425 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.48346614 seconds)
  done (took 1.976716076 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.842936099 seconds)
  done (took 6.340093113 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212423799 seconds)
  done (took 1.754772417 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241889207 seconds)
  done (took 1.739219346 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.709212926 seconds)
  done (took 3.207118131 seconds)
done (took 42.527274817 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08329501 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081473048 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080819111 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078237546 seconds)
  done (took 1.803936624 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080106937 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073314341 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076643303 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073034581 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076688843 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072805121 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074391099 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076776285 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072374403 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073484112 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072750478 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073000862 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075026493 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074246965 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072084986 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075126722 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076211393 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072740542 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075521668 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073084873 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070297454 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075054542 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075170102 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071557546 seconds)
  done (took 3.280100138 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080627378 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072939851 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074107475 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072014894 seconds)
  done (took 1.804100698 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081335162 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095159717 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089985396 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077991318 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09266754 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086512436 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069284598 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068789579 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070310189 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077406112 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067551152 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096696204 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088620324 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077769779 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080188308 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065954302 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068224551 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087392778 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078072559 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077964615 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070138497 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077856885 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067789634 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088605349 seconds)
  done (took 3.402517005 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089408885 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105342704 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082304373 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089699322 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091331409 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064876267 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087266177 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091641231 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127034074 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065138536 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070331785 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065054828 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073050928 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064684353 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080770571 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107399512 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111300228 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068652912 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097208626 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065285899 seconds)
  done (took 3.208840713 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075396969 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069417343 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066648526 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068844993 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07729434 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072743045 seconds)
  done (took 1.94338762 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070955616 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067751097 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067793499 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067376031 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071656253 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067375429 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065731494 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067824584 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067297565 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066736943 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066522872 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065882582 seconds)
  done (took 2.319231935 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205782461 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068670111 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06860796 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065839039 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070213663 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066111095 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080658192 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06765682 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090857575 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066578445 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066369999 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068318576 seconds)
  done (took 2.493793186 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210997055 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076193222 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239446518 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150476604 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110975151 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11556335 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111815108 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113437257 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141537579 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100476268 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167845499 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166525289 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107717826 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137086595 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08852835 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100232985 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153617778 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16262194 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104756091 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167171905 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145284125 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12609172 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148365922 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107913624 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10605273 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121485785 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070946624 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079409803 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169622617 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132387609 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144114813 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110686715 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091922051 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176387347 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172839639 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140229795 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146149136 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084021972 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104612862 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133374673 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200413607 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089090251 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159426572 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107688053 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219440902 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135216871 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120410493 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120590665 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106966337 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090246467 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145018666 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184493806 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138717361 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087602614 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123713907 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114350759 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115179742 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112968509 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182490522 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162184437 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129036418 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071201043 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107283474 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154609596 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135015766 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10864456 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125926742 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091852258 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13509155 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156552617 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121079639 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145587398 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116375695 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088740889 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119529834 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140198286 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127696945 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161119329 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124407014 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.0729434 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123895248 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101697702 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080994824 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145925853 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07503621 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176538597 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098746022 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109130263 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124480927 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11065183 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10886151 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158329535 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143642332 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102068086 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064963462 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245006747 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122967232 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147570016 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087287574 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108959643 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118892073 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077440975 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138280386 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075479019 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124646195 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078217244 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12742544 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130954062 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077527792 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122554393 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103467124 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100768714 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132360863 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161932384 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088068371 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080838601 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170572131 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122158577 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103556739 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144825129 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157050905 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102096838 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101108673 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149424704 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17928215 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089136911 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163538782 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106597191 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083452061 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08746766 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123801664 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111954937 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123479513 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081491548 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118211384 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168680924 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075024361 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095846042 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134306758 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078799657 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081019405 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105392074 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104084824 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095631024 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099487629 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102557171 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135837218 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123353584 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104925906 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123052366 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097388498 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316061836 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088670903 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102609096 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10562864 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070038559 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135660935 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158094326 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079440659 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164197913 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12447656 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116247616 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119971025 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083381119 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14115551 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0799231 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069584098 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145177481 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110991325 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10942556 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151302214 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116322233 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126350337 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11924029 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134140471 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131910867 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131199665 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105647815 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08881422 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113054909 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126732509 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073354493 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090635471 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079956497 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104801547 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095761629 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082518347 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141084506 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124059565 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108933492 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11244899 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096377998 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148091459 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075641649 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128062027 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118948602 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095702144 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152707859 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152265765 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130498719 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098778596 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135674912 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069765768 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073507134 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087523888 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122197372 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082129554 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082238701 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258199996 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149431311 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130672598 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137803278 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123523605 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120787781 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157276753 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070404283 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117652928 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148345296 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122047628 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104722518 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089575412 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099340634 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143046847 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107914355 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183280147 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117651054 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124500601 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1542893 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101485475 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079812865 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103012701 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136825316 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103540027 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143791501 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099639258 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088730767 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109918468 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074332843 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098674432 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127077299 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118398723 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134882309 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115298355 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132047016 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077689739 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116050716 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121201049 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121954701 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063636479 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120699607 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161772171 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094480493 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118303956 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15217932 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078445943 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133615961 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174923886 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143432241 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084567556 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253603304 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120972933 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129628509 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12077566 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142522515 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108220583 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138594527 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1103644 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086100793 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088275892 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098009768 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105009823 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095392602 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106932451 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114023212 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095414456 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132600396 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103706697 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110413804 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119466998 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09972019 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091528225 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096790853 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176958462 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119645868 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171153189 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100046952 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144435851 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164515712 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074507413 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078299317 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07788446 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140299497 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083782012 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130142407 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106652211 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116939276 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123766195 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143064619 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095742957 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068427872 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109277801 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132749205 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123923284 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098254072 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103406302 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164183195 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101347734 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079057554 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113813773 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115528988 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102483252 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170863761 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060721015 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104924896 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076053786 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079611108 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126824537 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292303864 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081286008 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103801327 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120459025 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112446139 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128929469 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101818937 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108752292 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126942145 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150106782 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127825007 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089973292 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111494435 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129497927 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158088111 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105758206 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096870372 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174454457 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153175128 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159551125 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087535557 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114586505 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115555186 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108720695 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138217799 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083794414 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164226916 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082520955 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135405357 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103243673 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088183853 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129579784 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108474491 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08751907 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148088291 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117713459 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082571282 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07768422 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11834754 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120052902 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105757019 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074984842 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139118183 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073512546 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134900939 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159057686 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080118717 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10735507 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095971904 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07883031 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105324461 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101161287 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086682847 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.239565617 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177084819 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089004099 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151737645 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13466585 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113028869 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138516024 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103358289 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640574138 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078025582 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153202978 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117244989 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176387282 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100869591 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118878198 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111448168 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124714238 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145599793 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104171858 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181013274 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131860423 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117247881 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079798336 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102089661 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105049057 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088010424 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107907106 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11405005 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115748289 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092507558 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116381629 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124599282 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081611623 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095826407 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156782761 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116627871 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14356729 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141068645 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085521251 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117925164 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138166314 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079694961 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120960452 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151110152 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105664 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098697077 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080063765 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099500012 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157706264 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07281958 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157698577 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116772698 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253675551 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114332375 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112512892 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131716498 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108471604 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122089708 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092679757 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110743026 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113186939 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082253523 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07743931 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1056832 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111585242 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099142243 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098535813 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09881068 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152931764 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071866899 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099421311 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114654538 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143844079 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175201797 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08800537 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08264882 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118834086 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114250388 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113572802 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121646845 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07869962 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081765624 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081057762 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077326545 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108619392 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112763692 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114777185 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111349505 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163490681 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083047223 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231279642 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095611427 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105313359 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069124507 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078087323 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096032786 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098127974 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107172839 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109629992 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159208721 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095293715 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090017712 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091783126 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073852393 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083412481 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128726651 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109878897 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1176868 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097675841 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061596708 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10626005 seconds)
  done (took 58.966585297 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113436959 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082691819 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096433999 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144480107 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122519904 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202681222 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154395257 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189019006 seconds)
  done (took 2.738549132 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070409309 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096598 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102534628 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083500618 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066552152 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068571607 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23276883 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081646798 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066432037 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098390637 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078457797 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068784814 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.428398541 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066025527 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067865603 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061070028 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066871552 seconds)
  done (took 3.409367078 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390678209 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610913996 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.383331384 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073503033 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.473972649 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088845451 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.157440449 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128174909 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073138518 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537434291 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705875829 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126499995 seconds)
  done (took 18.36897092 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077808444 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069961847 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083756206 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083747636 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072824988 seconds)
  done (took 2.002283495 seconds)
done (took 107.289219682 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083810162 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.607933431 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053285466 seconds)
  done (took 2.300258587 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084271037 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085670723 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08584443 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083401251 seconds)
  done (took 1.958941494 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076282395 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076350669 seconds)
  done (took 1.762903224 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232385926 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170295911 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095626732 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085827059 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079375912 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080125175 seconds)
  done (took 1.862699983 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074710547 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075624625 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072152443 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076825881 seconds)
  done (took 1.911448014 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07921517 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051975631 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054653328 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057994239 seconds)
  done (took 1.856619651 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089457367 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079363629 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078854364 seconds)
  done (took 1.860680484 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105829127 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086245965 seconds)
  done (took 1.805561554 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084693309 seconds)
  done (took 1.699211688 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101642276 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101613952 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132440029 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110698336 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140810337 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112039733 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084777288 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085988836 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076124629 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087001772 seconds)
  done (took 2.646015744 seconds)
done (took 21.857814576 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081038365 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368857667 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360197499 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090325662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668311829 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356259731 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.982205229 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093158382 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115872426 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067132759 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084789322 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648004957 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973525141 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324124919 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.95954588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.416913334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650789478 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068101221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067613966 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067959122 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965520408 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067179351 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067389579 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068583892 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648413888 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371958848 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068396436 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.417911081 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068005843 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069818209 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354747287 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067876879 seconds)
  done (took 16.279813759 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073447804 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120732376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073718397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084848975 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070407407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069679091 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071478609 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068938698 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121516544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06756652 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085327995 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068040946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071882445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069003455 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088225974 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085759963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069743198 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068589914 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068140744 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068621319 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087202196 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067415478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068185207 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069042165 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06807268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080990358 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068165132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067763418 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068189287 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069948918 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070776886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068457039 seconds)
  done (took 4.049684972 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122276812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127473987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074194144 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106603183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114405545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069914755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147649847 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093237825 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12927785 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067808676 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085080118 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067939415 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102402774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068727926 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088169123 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068842848 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068537444 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068152306 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067902912 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068296354 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087506354 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067411108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068280259 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068496873 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067979872 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081405158 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068444997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068027626 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068088752 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070381654 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071107933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068140514 seconds)
  done (took 4.293947431 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07603364 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075863581 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085096303 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084862617 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069826056 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072912374 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072998653 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069367361 seconds)
  done (took 2.239631363 seconds)
done (took 28.485909793 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082109123 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069557239 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073358994 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083327324 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073456875 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078933056 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067342156 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076045584 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072791319 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073080243 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074996011 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06767845 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071278175 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067488766 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074335037 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067983121 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079464047 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071772042 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079350623 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079501222 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070024121 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073278472 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07522673 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078590161 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078882111 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078858518 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077164418 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073121066 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069245358 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070707749 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076680513 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084173753 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068347585 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079394918 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067706767 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068264369 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071837689 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067451707 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078971574 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077009817 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06945664 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076605233 seconds)
  done (took 4.721651775 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090868844 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093344745 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085196251 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061457985 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066681865 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066335032 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08937309 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059797816 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059338993 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089072945 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055579554 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059489581 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065712916 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053495247 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060447072 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056281982 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062038332 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055818429 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059977988 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059894072 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08952333 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052944932 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077692876 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063670624 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055733532 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061688895 seconds)
  done (took 3.391509439 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077898778 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087457557 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090428667 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130796866 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106662455 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079516893 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080778356 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095306305 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089421524 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066950771 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071111392 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093009733 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091638114 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074434826 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067573094 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087069795 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084459933 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069121399 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07399671 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096572757 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08710491 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087547009 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099493169 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084534375 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066964665 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06981141 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071215563 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082010717 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072593676 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077768361 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071804626 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071287122 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069673028 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079735069 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071237196 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070138358 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093568748 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077595201 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079618563 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068388322 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.0711766 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069205367 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093536567 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134565387 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067104337 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074499624 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07611362 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077828665 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067985781 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089436653 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079989264 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06760028 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071426201 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067330312 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068469479 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081732137 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069897386 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07055164 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077368228 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07113904 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093504792 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073111345 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083957598 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068075053 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07600252 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067551539 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068810181 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067233696 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097769675 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069984762 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11287404 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069385484 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069158039 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077740661 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076237617 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075255492 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069230391 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084269877 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079329793 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071907051 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077247952 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071212329 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071273898 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092140643 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070861159 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069904216 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069427133 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074544379 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070441924 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069424179 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080786521 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068210974 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070822299 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086987119 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067456175 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068766376 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073941311 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072880924 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07882103 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078954413 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07269384 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068860499 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077640922 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067978002 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070922506 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080928447 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074212399 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067264677 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072259351 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073729337 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068270187 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068997148 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070896244 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070163059 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076789614 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074908635 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072106415 seconds)
  done (took 10.718869931 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168512295 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158562102 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070470917 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149523846 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076852933 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079641382 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151953463 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09551631 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067907099 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068560393 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068574351 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110959724 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107007332 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116478012 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079036417 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067551258 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.0850617 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114990784 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154159312 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147501036 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085038817 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077100131 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069970932 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069141355 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070731966 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078300953 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085503666 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077224361 seconds)
  done (took 4.428265385 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083856315 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106156595 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074622727 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090972779 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091532705 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068015655 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070565491 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070052074 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081336924 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078740719 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068014056 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073575272 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074812602 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071138786 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068775489 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075072508 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075456754 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069359438 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071730556 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073473164 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078017781 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092595704 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071385711 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066736449 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072665251 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066949619 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063604065 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084730643 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06794417 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095242243 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065964693 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076463245 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082031046 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068497957 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067764661 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067604614 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067642557 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067976868 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069995224 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066696499 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066522996 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057516066 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06709755 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.0797142 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074851252 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055997246 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072611066 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073325924 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073387156 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065783818 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070891576 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071090365 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071377739 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075998187 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072945694 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073150385 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06911644 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074694055 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077115193 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067559776 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065224376 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066645166 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072862616 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065544346 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076605225 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072792647 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06622256 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067446041 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069655144 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075197222 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067675609 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071092637 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065411714 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07015714 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073357191 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070094495 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06941716 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066159715 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067828899 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069034007 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054866682 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06760792 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05333068 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070907686 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066182868 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066424722 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067696434 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072865771 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079762613 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069376035 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073906218 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069161012 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066700581 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071408757 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06017656 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070655554 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083766881 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083402444 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067532679 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065621744 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082850082 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072849863 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067710323 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056156414 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07516399 seconds)
  done (took 9.199644459 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094093312 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070919142 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086901056 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093433454 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087394544 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075993225 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077530404 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069722019 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08382868 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074554196 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077369579 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06820034 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078662725 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078154953 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070533357 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077913856 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072781846 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085333769 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08347848 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068887299 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076393296 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081248391 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090559262 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08320851 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081342889 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082613453 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091639834 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072614959 seconds)
  done (took 3.909259373 seconds)
done (took 37.996015082 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.704501093 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.883517417 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.70729401 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.081863962 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.785751597 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.011357521 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.832392318 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.70362564 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.869900091 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.739548148 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.91813345 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.812344347 seconds)
done (took 64.692496531 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.748168319 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.849952571 seconds)
    (2/2) benchmarking "String"...
    done (took 1.946022043 seconds)
  done (took 5.437223629 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.936125397 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.270274326 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.95543252 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.701580716 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.707212925 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.04483023 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.504598293 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.214547731 seconds)
  done (took 30.040230608 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.785680796 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.934186039 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.36500498 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.395295421 seconds)
  done (took 15.169719651 seconds)
done (took 62.059678878 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.706816841 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.723012319 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.712053173 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.68586765 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.763815049 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.717813702 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.091568332 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.744172812 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.70547379 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.69377237 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.705533266 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.160610692 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.72143088 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.032567037 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.701956199 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.710602833 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.748716344 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.216142855 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.861174076 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.720782484 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.701973606 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.727347715 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.703902625 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.710164104 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.765113634 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.705586164 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.14769109 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.716198124 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.330218661 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.706901412 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.737809847 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.221302585 seconds)
  done (took 201.939223792 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.704454649 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.739480056 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.770881013 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.749367801 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.184568484 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.886750045 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.827873478 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.221232962 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.707844049 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.708255294 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.937551054 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.70338583 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.022506826 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.65007273 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.738413345 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.705017981 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.963743629 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.991624348 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.73738422 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.850204258 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.73184441 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.862989002 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.790849595 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.944843556 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.746516315 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.79021422 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.723107498 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.723871693 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.895936577 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.929191012 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.727627262 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.756351427 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.842361924 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.577907068 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.710970188 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.736662954 seconds)
  done (took 167.935843119 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.24346932 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.710572245 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.710506015 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.710153929 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.72242544 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.708719078 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.884794234 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.829530059 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.311249468 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.168451316 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.764384616 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.535150887 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.70404505 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.77812345 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.706659349 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.721433139 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.709760521 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.723670577 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.733984026 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.705737892 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.707846597 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.710706367 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.835929698 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.72171091 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.714054885 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.709321127 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.714024297 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.079643433 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.829069587 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.708005205 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.709677041 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.713850451 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.971630194 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.710828961 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.707966927 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.614846652 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.022920107 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79866929 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.708954768 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.71480967 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.70840364 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.930925744 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.70912788 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.710893931 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.714577696 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.899037669 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.707151977 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.83105146 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.710803036 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.21445243 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.707424215 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.709938476 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.466266437 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.402802759 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.707333505 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.710417446 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.713352608 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.710473543 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.710751665 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.71991353 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.394215008 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.788373153 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.713377568 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.714930324 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.714780814 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.711235012 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.910812786 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.711206027 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.848452357 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.771093497 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.834475146 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.833608572 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.712852309 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.780740089 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.805599062 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.709627462 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.71167138 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.711150032 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.712468008 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.793884534 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.710090758 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.855911223 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.718391667 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.711862491 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.76363582 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.784249623 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.709946075 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.616528449 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.712152266 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.713496494 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.036970105 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.711166666 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781062847 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.711823099 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.711514384 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.712800179 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.845685126 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.832814263 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.504975858 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.712210096 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.384544487 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.714773286 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.864551623 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.711790715 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.895957666 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.715167557 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.797596861 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.714834037 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.714284185 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.715590089 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.746469903 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.714849785 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.7742884 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.713776798 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.085810404 seconds)
  done (took 395.60676425 seconds)
done (took 769.423989636 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.374547175 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.330232322 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.451590088 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.353327471 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.32474913 seconds)
  done (took 13.480169167 seconds)
done (took 15.128844929 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.804640966 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.805704427 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.735513936 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.803763123 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.731177232 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.804240113 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.783925244 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.737774137 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.77197679 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.738392611 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.770510954 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.737628977 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.727295037 seconds)
  done (took 24.599634479 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.948216724 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.957123661 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.787775599 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.948169514 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765211085 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.947457379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.881458875 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.868463521 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.868632986 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.730960683 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.729019041 seconds)
  done (took 22.081649461 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.969417695 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.966836941 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.794082895 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.957152287 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.76668062 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.955021834 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.88158812 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.869499782 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.867448116 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.734165802 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.728908653 seconds)
  done (took 22.139497057 seconds)
done (took 70.470133834 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.725246594 seconds)
  done (took 3.373368838 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.747870497 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.905137336 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.727547504 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.725936447 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.726280965 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.726357585 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.726816653 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.726431971 seconds)
  done (took 15.663598295 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.722440414 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.722221586 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.724696577 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.721924543 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.725093541 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.726162291 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.725578623 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.724519549 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.722266424 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.722061762 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.722421226 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.726528588 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.724812236 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.726423211 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.723999157 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.725142191 seconds)
  done (took 29.238273913 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.725789083 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.724858621 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.724796505 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.72536682 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.723509888 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.723682168 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.725309439 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.724014742 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.722936369 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.722295565 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.724323741 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.724156386 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.725053191 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.724470321 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.722840975 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.724643673 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.72300782 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.724789364 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.728111178 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.722464386 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.723012146 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.725161802 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.72466376 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.722624149 seconds)
  done (took 43.037161825 seconds)
done (took 92.961434229 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.626044169 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.142427737 seconds)
  done (took 8.419335328 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.729214831 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.726832805 seconds)
  done (took 5.147264067 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.730539862 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.726423421 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.725948821 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.725306687 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.726690863 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.728435631 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.726446689 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.727006532 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.726880315 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.726512695 seconds)
  done (took 18.922140884 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.727413584 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.726723086 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.723903245 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.726626101 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.727324978 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.723141653 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.726256161 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.728665161 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.726595799 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.724418807 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.726300781 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.723870183 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.726797524 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.724404653 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.727913973 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.726661317 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.725132786 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.724549396 seconds)
  done (took 32.719086129 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.729004966 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.728281742 seconds)
  done (took 5.111793957 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.72737238 seconds)
    (2/7) benchmarking "second"...
    done (took 1.72489953 seconds)
    (3/7) benchmarking "month"...
    done (took 1.726192215 seconds)
    (4/7) benchmarking "year"...
    done (took 1.725322085 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.724388822 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.724649758 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.726609171 seconds)
  done (took 13.733101287 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.728054578 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.884997321 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.957870158 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.386593393 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.729661563 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.731516899 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.671108441 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.73121295 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.734323783 seconds)
  done (took 19.2099812 seconds)
done (took 104.914268003 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.577113171 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.719119073 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.074185565 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.766802371 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.776893663 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.063637681 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.753405452 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.027999096 seconds)
done (took 42.415473062 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.733339297 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.282988888 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.313087903 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.203701615 seconds)
  done (took 12.455365494 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.709437471 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.255589789 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.754102785 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.312684239 seconds)
  done (took 19.710698255 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.106104998 seconds)
    (2/2) benchmarking "read"...
    done (took 2.065893751 seconds)
  done (took 5.833642202 seconds)
done (took 46.392387495 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.727914218 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.731308454 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.729298062 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.728120386 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.730770418 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.728870008 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.728062464 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.729900268 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.730261892 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.730483771 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.730607545 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730799267 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.726793924 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729200895 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732117268 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.727814383 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73020147 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.731161302 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729367725 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.729355255 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.731379087 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.729152298 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.729698435 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.731790331 seconds)
  done (took 43.169840326 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.732129443 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.728851837 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.732260244 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.732627927 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.730684627 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.731647774 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.734291699 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.729056154 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.732696476 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.732662803 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729361709 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.729427364 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.731777062 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.728951683 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732915779 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.730022547 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.732429075 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729808642 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732258953 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.729822708 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.732322926 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730643598 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.728738621 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.731617434 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.730694111 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730943943 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.733901728 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.731098033 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.735187461 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.731403992 seconds)
  done (took 53.598932088 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.737440824 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.741270439 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.732718291 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.732609625 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.732869029 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.73243409 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.733359677 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.733238832 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.733317279 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.733640339 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.732840292 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.732819242 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.733922765 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.734228284 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.733544943 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.733828615 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.733619261 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.7333979 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.733510602 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.733702446 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.732477858 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.733798044 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.733465499 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.734082476 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.733724737 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.73398373 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.733410746 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.732472138 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.736357049 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.734728187 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.735250163 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.734419839 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.735964612 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.735873864 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.734934575 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.735116718 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.739962076 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.744474574 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.735510785 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.734498171 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.734935675 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.734596544 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.73597484 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.733171951 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.736029146 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.734934626 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.735884648 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.735171555 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.736813613 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.735269248 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.734697825 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.734551435 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.734734672 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.735851632 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.735403075 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.7343086 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.734343531 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.735562066 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.735131567 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.734772223 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.734192298 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.734842715 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.735580662 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.735552489 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.736548098 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.735758776 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.73554684 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.734023325 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.735277538 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.735843458 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.735875947 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.736531629 seconds)
  done (took 126.572137061 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.736778807 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.734884924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.732816147 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.732766077 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.733110072 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.736681119 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.733365809 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735692975 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732889342 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.736246618 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735111175 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.733626423 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733997629 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.736240789 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736803845 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.734270015 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.737654013 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.733017963 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.736839007 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.737164783 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.737531591 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.735021242 seconds)
  done (took 39.834870158 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737966211 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.738552329 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.735318141 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.736538924 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.733919286 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.737997751 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.73665051 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.737931541 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737997632 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.735531666 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735355651 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737246486 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.735085926 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73588109 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736864685 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.73640481 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.737835672 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.736714074 seconds)
  done (took 32.923570746 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.734805123 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.735503996 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.738268201 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.735345274 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.737813832 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.738956061 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.737305171 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.741001817 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.740232495 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.735753455 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.739386985 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738280187 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.740086079 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736583388 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738430743 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.736723754 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.738799158 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73624362 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739671924 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735672809 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.737340962 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738826457 seconds)
  done (took 39.895637813 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739456721 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.740698895 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.737624657 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.737023577 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.737418821 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.739555019 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.739685865 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.737295781 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.739285511 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.73844718 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736676855 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.739560238 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.737477271 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.738709787 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.737027217 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736288175 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.740294798 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.739038655 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739860105 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.736885381 seconds)
  done (took 36.434830295 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.741376817 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.740646912 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.742132894 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741794807 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742028021 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.741154359 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.742773958 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.740778908 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.741065616 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.74327439 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.740454764 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.741449808 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742497922 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.742045537 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.741241079 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741130865 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.741208008 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.741113638 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.742081243 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741713278 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.742693464 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.742689767 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.741204132 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.742797861 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.740909926 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.742205626 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743649417 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.74283749 seconds)
  done (took 50.437924885 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.741490697 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.742249637 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.739843559 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.74159967 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.739820551 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.738084011 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.740414475 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.739241144 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.742585923 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.741824393 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.74336056 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.741895868 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.742653497 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.741922143 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.742967976 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.742795608 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741761205 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.740504001 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740535369 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739525381 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.74298091 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742383135 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.741919375 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.741540722 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737886261 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.744103266 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.73930984 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.739561745 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.742957657 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.740777031 seconds)
  done (took 53.905468558 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.760022141 seconds)
    (2/2) benchmarking "in"...
    done (took 1.761414028 seconds)
  done (took 5.19199807 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.740940317 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743648224 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.742875547 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.740702781 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.74125706 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.745796719 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.743889229 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741394164 seconds)
  done (took 15.610421446 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.744957283 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.744754998 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.743842449 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.744320485 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.745091616 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.741765531 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.749745111 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.74377296 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.743642962 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.747975765 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.751852693 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.75275787 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.744949859 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743117583 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.744167648 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746602109 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.744468066 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.745633178 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.7460004 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.744500876 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746701276 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.747038375 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745477418 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.742067921 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.748041577 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.75527976 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.747804387 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.74490705 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.745884361 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.747708787 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.744407241 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.741555199 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.748701359 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.746668712 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.746237986 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.746425777 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.750909135 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.743168729 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.74993664 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745567625 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.743844271 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.743076168 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.746843445 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.745689264 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.746863735 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.745055529 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.746010686 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.745428 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.745491609 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.749634228 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.752776697 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.745672615 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.742059763 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.750283683 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.746034148 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752915598 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.746082448 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.750584514 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.757562816 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.755032275 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.757547077 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.754528023 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74786166 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.747016671 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.756532923 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.773996495 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752650005 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.743456313 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.745154448 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.747216586 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.752253341 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.76055338 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.757517338 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.747256276 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74816142 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.748275735 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.746339664 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746671817 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.755208969 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.750262463 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.747381082 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.747998494 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.757055026 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77236243 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.747505781 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.750841068 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.747704533 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.749773773 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.749119805 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.76018393 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.746775523 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.749172998 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.747543452 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.747268781 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.749142528 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.749394239 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.74729862 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748269877 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.746114484 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.749699801 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748666492 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751850117 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.756458308 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.749198155 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.748956124 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.754330338 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.748195375 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747956796 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.75379471 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.749536373 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749617922 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.749761031 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.756373383 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.746418694 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.751876955 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.759501067 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.749894362 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.750462394 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.748749394 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.748515263 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.759816632 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.776520965 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.748207048 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.750130394 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.754674333 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.763376789 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.749946742 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.752592847 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.751107986 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.747302146 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.748034555 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.751787824 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.751709381 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.749907378 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.750449226 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.74962063 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.74671482 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.749365588 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.750420737 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.751799442 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.751657255 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.75052386 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.750784799 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.75258998 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.752827335 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.753062886 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.755761819 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.75218896 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.753663179 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.752530735 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.748838762 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.751419701 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.7517502 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.752558773 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.750103404 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.752244745 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.750285019 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.751806322 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.752790449 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.751176955 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.753369281 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.752093224 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.755793532 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.751724122 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.754663907 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.750592401 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.74846185 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.751642421 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.751951034 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.75196304 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.750329689 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.748829165 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.754655131 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.760841744 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.75182378 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.752701672 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.754104908 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.756443661 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.753132649 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.752872753 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.756485841 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.762285052 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.751831315 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.760160686 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.754758414 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.752932833 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.754555869 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.752167287 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.752340943 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.752988603 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.757701303 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.762866094 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.766183502 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.763926598 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.753359455 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.759049284 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.754578072 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.758489943 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.756454586 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.754693324 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.754163147 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.754275898 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.751212857 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.754696953 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.754068869 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.754058544 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.751692744 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.754516471 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.753590688 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.754909278 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.754271712 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.754001754 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.754082262 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.751615571 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.755405269 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.755665292 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.75471484 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.750275044 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.753339687 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.752555715 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.754442589 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.755084762 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.759838252 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.751953594 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.754455046 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.754092225 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.755597396 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.75290977 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.754407936 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.7574728 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.753564937 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75944019 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.755575841 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.756911326 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.760622354 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.754170323 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.753734285 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.756614319 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.755847455 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.751951034 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.758706586 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.765051494 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.755457819 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.755761433 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.756358646 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.754975686 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.755133499 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.761376514 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.754344927 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.754657983 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.756838413 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.758054098 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.753755617 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.75677814 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.757668524 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.75721977 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75765799 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.758005626 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.75880765 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.758828117 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.759952108 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.760074325 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.761807432 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.763418486 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.771280128 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.764420707 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.758757684 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.757383512 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.757312396 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.761096748 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.756352133 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.756405445 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.757487334 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.770405115 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.768109312 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.764507023 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.759512676 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.758892966 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.763380341 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.759327124 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.760513591 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756822773 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.758597778 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.758582043 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.755533358 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.756005022 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759230969 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.760718623 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.758747111 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.758568605 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.763564201 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.75940592 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.75763657 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.759946934 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.758846274 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.758924114 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.757472441 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.7595359 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.760741758 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.760250215 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.757977673 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.759191699 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.76373105 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.757788421 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.758686474 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.758088925 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.758842735 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.757661084 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.760677679 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.76132507 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.762108288 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.769483108 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.762926885 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.769761409 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.761474375 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.769378881 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.760280621 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.763491931 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.770710872 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.759461314 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.758939837 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.758020907 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.761208639 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.766435773 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.759911844 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.759485299 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.766091884 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.760127829 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.762384228 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.760067961 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.760592564 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.760755904 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.760235351 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.767995183 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.761048164 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.763906238 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.760861384 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.758761525 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.76117592 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.76134198 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.759240491 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.764382383 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.760217233 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.760387194 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.758984151 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.76009008 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.761213905 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.760743377 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.76305761 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.758147771 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.761053595 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.766600572 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.762056067 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.767682512 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.764073336 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.768163311 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.760783888 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.767697396 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.762185521 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.762780391 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.762693641 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.762956526 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.76348153 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.76161535 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.761434375 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.761837655 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.763445904 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.767075469 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.763456718 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.763901236 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.762341932 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.763310149 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.761725813 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.771138285 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790423131 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.765031189 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.768665893 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.75979807 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.763483729 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.769494715 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.764583154 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.760237827 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.765837027 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.776074741 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.773140851 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.761975217 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.763823411 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.763067328 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764950939 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.764800626 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.763843067 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.76378259 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.763767357 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.762418902 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.763492172 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.764777624 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.763784729 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.763158374 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.76391156 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.763819382 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.773674884 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.766439751 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.765120992 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.765701753 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.763997639 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.764779411 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.764659743 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.765684888 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.765345796 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.764579081 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.765977785 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.770562613 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.771666145 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.765874495 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.764523375 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.764221319 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.764012234 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.765782963 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.765834654 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.76499274 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.764908533 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.765642459 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.765466221 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.765076657 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.763787871 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.765006352 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.764799953 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.765824582 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.767740161 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.773522704 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764442451 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.762936888 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.765296774 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.765341127 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.764226055 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.767458948 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.77284132 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.766756457 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.778111725 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.775942537 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.770222827 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.767280533 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.769345414 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.774563872 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.764079461 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.765827331 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.766711895 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.76743465 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.766501077 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.770091004 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.765786721 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.771365469 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.767126041 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.765520685 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.772105322 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.767687807 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.766786147 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.766643777 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.771991703 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.765525317 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.763542532 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.767969772 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.765960333 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.77232061 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.767092934 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.768469172 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.769308998 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.764027103 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.768678136 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772697609 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.767357234 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.767535772 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.766896486 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.767651527 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.768966963 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767265768 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.764811535 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.767671019 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.766996408 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.770901784 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.775527393 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.76464076 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768759203 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.766681167 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.769256077 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.768424566 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.767944989 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.765655033 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.764422437 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.768079077 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.769543877 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.767852832 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.770352356 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.767031902 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.76923803 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.771030103 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.77051208 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.772147738 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.780579374 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.778459278 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.765178469 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.768769419 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.768156 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.770488585 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.770085741 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.769412712 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.767814668 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.769793265 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.769244092 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.770691416 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.770194082 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.773029336 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.784092198 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.768906649 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768364791 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.771598051 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.77202837 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.770058783 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.767332994 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.770457453 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.771978513 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.772387599 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.779106487 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.771749184 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.775663245 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.768993293 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.770885864 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.775136502 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.773441938 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.779157044 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.773196668 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.770767147 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.771281635 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.776220299 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.787238516 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.770715411 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780442134 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804688844 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.772362713 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.771827355 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.771069641 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.771789168 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.771645535 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.774435435 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.772062392 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.772102773 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772282908 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.771891324 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.771902251 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.778423823 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.772280012 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.771084907 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.770772999 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.772132646 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.773638968 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.767822543 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.772165863 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.77083695 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.772552273 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.772748863 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.772028832 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.771747842 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.785010241 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.782771362 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.773355663 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.772791686 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.769302764 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.774210775 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.77421597 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783399512 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.782057143 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.773371368 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.772394432 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.774562551 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.773444472 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.769408127 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.771278883 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.773613462 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771303261 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.768468712 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.784807169 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.782065537 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.776751176 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.773143674 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773532622 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.772902726 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.773525621 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.773809452 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.77406143 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.773554129 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.7749031 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.777512212 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.773447514 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.77479373 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.777284599 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.781867558 seconds)
  done (took 1050.970676436 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.771481584 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770770944 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.770230066 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.772203745 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771030556 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770058061 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771931068 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.771837619 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.773248241 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.771117598 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.772134254 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771443362 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.772229787 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.772021542 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770894128 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.770026873 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769880055 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.771878519 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.772003189 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772519176 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.77182846 seconds)
  done (took 38.899923721 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.775069539 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.770982219 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.772733102 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.775088957 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773266389 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.775767566 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.771813754 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774479957 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.775084876 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772847441 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.77425097 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773833623 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.771578873 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.773804652 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772642788 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775360291 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.776705083 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.77184256 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.774084406 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.772396278 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775345764 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.77352491 seconds)
  done (took 40.72306163 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.775632712 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.778212041 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.773935985 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.773691391 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.7752271 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.773314507 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.775996322 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.774489949 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.776710043 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.775151053 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.7738559 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.776184586 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.783826581 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.782576468 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.777852052 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.779070896 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.930595277 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.777092587 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.779907986 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.7783035 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.773310477 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.781171154 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.775439953 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.774190695 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.775037423 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.776096712 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.778709998 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.776921483 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.777567587 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.776727728 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.781254462 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.776864726 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.776515865 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.778113324 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.776173329 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.77860722 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.781936961 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.778618791 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.775401365 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.77840111 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.786860246 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.801322355 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.779146885 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.783669083 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.778095141 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.777547192 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.78109391 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.786326247 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.775426727 seconds)
  done (took 88.990616375 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.778145449 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.779318211 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.781182874 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.777290358 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.778465356 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.779701398 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.78043526 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.78248676 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.774208389 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.773850631 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.777559343 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.774336299 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.774007156 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.777732296 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.777166337 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.774830698 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.774337527 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.775047913 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.774479072 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.775735469 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.773632983 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.778261861 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.778501727 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.774216597 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.78034666 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.775308906 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.774794303 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.777531587 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.775687828 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.77388279 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.778179496 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.779335997 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.778632948 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.774382193 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.774618504 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.778325828 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.777758898 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.773950225 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.776668605 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.774449337 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.776651798 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.776515552 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.776281728 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.776371753 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.773908284 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.775719333 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.774303747 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.77788727 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.772599791 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.774922018 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.773720006 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.771736722 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.776781549 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.774526307 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.774885767 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.774004563 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.773644355 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.768683237 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.777184349 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.769724193 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.771130571 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.77313942 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.772485359 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.771930597 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.776272566 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.767781739 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.769467941 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.769660459 seconds)
  done (took 122.436574129 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.777388858 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.77395719 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773628007 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.775000271 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.774607797 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.777217255 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.773756988 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.771837595 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.770930889 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.77410172 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.770514057 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.773311348 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.775153804 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.770448265 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.772825593 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772329401 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.774233542 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.775653161 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.771532243 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77322044 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.771840858 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.771474748 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.774743489 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.771447833 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.773450439 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.772781161 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.774251722 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.776221038 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.774191033 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.773312292 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.773207964 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.774433645 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.779496839 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.774454072 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.775223222 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.772805143 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.773892114 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.777562494 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.773305229 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.770833325 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.772467876 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.778891438 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.775257599 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.77285968 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772625439 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.781171876 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.777185042 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.778644085 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.778358637 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.77511492 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.779272764 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.778523396 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780509968 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.781357439 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.780202323 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.775121599 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77976285 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779626823 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776767542 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.773120696 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.773925316 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.7771924 seconds)
  done (took 111.747229934 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775972605 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.775170085 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.771240049 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.773052252 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770974767 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.777540063 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.774893042 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.77539692 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.774317159 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.775313211 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775132701 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.773398772 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772249992 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77281944 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.772773029 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773178175 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77561992 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.769482312 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775447684 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.770951954 seconds)
  done (took 37.17687572 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.772150077 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.776194866 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.770179557 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.772398391 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.772950614 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.769496172 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.77292194 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77492724 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77079142 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773957313 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.774006113 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.773263234 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775491864 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.76575123 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.769092247 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.764829505 seconds)
  done (took 30.047786084 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.765941603 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.771571136 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.768074977 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.767307239 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.765228294 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.764989401 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.7671154 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.765758649 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.763769074 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.767328467 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.766965872 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.766734294 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.769133696 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.768955715 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.765375203 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.767139166 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.764547987 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.765326383 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.770413245 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.765932369 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.766003643 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.766227596 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.766279364 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.766738012 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.76310782 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.764943899 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.764828194 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.763045876 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.762889632 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.768971388 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.764327444 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.76304444 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.764782902 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.76408681 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.770955221 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.768344143 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.769056884 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.766566728 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.766572122 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.766844369 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.772074819 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.764395724 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.768531286 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.765251723 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.765384751 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.768324902 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.764564785 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.767102808 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.763835442 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.764508519 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.766328927 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.769571083 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.767404412 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.766952433 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.769704317 seconds)
  done (took 98.855594803 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765726364 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.766322622 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.764357828 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.769861775 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.765854862 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.763662254 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.765450721 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.769351217 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764153146 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.766431221 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.765850952 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.766550078 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.76702529 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.769169031 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.765613232 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767578788 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.76617561 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.765416047 seconds)
  done (took 33.488520124 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.767319431 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.766273151 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.771762504 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.767045042 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.765474234 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773596054 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.768182575 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.766104218 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770325921 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.766949617 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766792791 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.770008562 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764503304 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.766002226 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.770654247 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768840516 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.76670938 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.770736523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.764416723 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76413301 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.764852191 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765326087 seconds)
  done (took 40.581263222 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.767080247 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.765233241 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.7792417 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.787406701 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.785390764 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.801112354 seconds)
  done (took 12.382598327 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762725495 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763221272 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.760202794 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764802518 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767637647 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763095749 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763747452 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764967704 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768724861 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765739431 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763741832 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767798916 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767701724 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764628926 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766561522 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769796843 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763945548 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764448978 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764010182 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769211556 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76498123 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76820534 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764795689 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765973103 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764730798 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764075709 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769555198 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765320602 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763663461 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767295157 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76827218 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765627095 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770362555 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765907045 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767206067 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767864657 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766820961 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767668402 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767651088 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765236718 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.766514722 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767700698 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768063235 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765888269 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765931313 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764669853 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764992602 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765076975 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76363087 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767662061 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765077498 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766340798 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764252547 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766302895 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766486413 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766801563 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762487606 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762855506 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766623549 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762434508 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767617979 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765522748 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762600596 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763028713 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764195432 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.760991914 seconds)
  done (took 118.22700653 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764108423 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.762888912 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762157876 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765142375 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76224515 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763246303 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762631553 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762277808 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763892294 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763814212 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768292459 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762368666 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762641448 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764367891 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764342361 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761809789 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764805746 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760723338 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762138341 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764583556 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762091676 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762700402 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762073072 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76255293 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761894149 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763587186 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761152992 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762734266 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760848979 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760229728 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760170368 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76288606 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760748491 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.765241891 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761036785 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762949747 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760628924 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76157853 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759460112 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765837482 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76023985 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763728965 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760520718 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760964581 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764832579 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761334424 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761136609 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759281147 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760523795 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76034689 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763468912 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760890691 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759636824 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760766888 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76085267 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761256887 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764012173 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75990791 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759989913 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762570215 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.758750099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761722344 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76378563 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760446619 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760890386 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761796537 seconds)
  done (took 117.99480767 seconds)
done (took 2441.755043741 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.79718909 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.816218454 seconds)
  done (took 15.303306989 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.927956875 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.878424016 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.762790383 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.812646702 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.760970308 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.785387422 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.765886912 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.761667468 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.762990848 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.76158304 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.76359857 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.947849471 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.759776659 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.762972044 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.760563804 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.855818769 seconds)
  done (took 50.529715579 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.766459208 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.770835533 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.777636808 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.768285396 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.765319599 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.777338089 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.79852782 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.76600141 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.798105448 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.775801808 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.832941847 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.776082435 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.762872123 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.817166674 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.7758198 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.781252311 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.856110667 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.836710155 seconds)
  done (took 33.891945713 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.842762732 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.769183449 seconds)
  done (took 10.312049573 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.76999447 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.760896595 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.784076547 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.775156491 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.785088858 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.789663276 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.762657313 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.798681759 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.778416798 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.779981771 seconds)
  done (took 69.479782775 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.77057594 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.764191493 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.763658753 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.76112377 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.754966049 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.759922157 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.764072383 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.754122781 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.441319179 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.798443466 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.769809647 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.769047112 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.766044087 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.769264825 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.761357784 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.789893284 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.893732712 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.762518842 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.760833416 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.774714122 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.764385825 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.821355007 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.775847537 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.763315318 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.798459038 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.443646342 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.772059437 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.769954807 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.88164432 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.762214007 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.766870753 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.764109885 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.766689094 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.161961029 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.054310993 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.762962622 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.771472202 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.77304497 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.7671724 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.89522536 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.764432115 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.770829426 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.673657572 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.037366201 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.88311772 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.810478996 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.211034974 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.766936666 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.767983681 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.795418609 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.766062765 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.774037326 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.780336679 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.275747645 seconds)
  done (took 126.960081835 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.762914654 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.025584532 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.918220078 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.764093183 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048851874 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.969884026 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.766984192 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.81304467 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.763561685 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994682935 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.979565256 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.871423534 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.762393553 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.762066005 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.759239903 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.758096585 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.922972556 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.835361492 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.761900134 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.762700561 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.792990273 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007681778 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.895758378 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.763316848 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.783282174 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.974690044 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.89596479 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.868902068 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.213524775 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.762314135 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.827730359 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.763036034 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.762248355 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.759696317 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.918696275 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.855374401 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.850776058 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.762338767 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.760500156 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.759925044 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.433594522 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.96122114 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.858933495 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.903592865 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.007495101 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.965542412 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.550023381 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.766318991 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.499836315 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.92500111 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.995404051 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.994521583 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.886260867 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.763654331 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.278576499 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.764422181 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.760409669 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.99788381 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991378752 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.866076459 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.765944404 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.760739116 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.758257864 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010453441 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.762068151 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.856299203 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.766388428 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.761503422 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.857726439 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.865113333 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.993305947 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975762344 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.795959031 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.095512764 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.244764893 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.012886654 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.831861703 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99702328 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.761921111 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.761120415 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.848083077 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.714075543 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.962147164 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.011738388 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.019235512 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79945582 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.487611791 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.761545487 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.993501612 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.985312939 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.063291099 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.002094385 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.914544143 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.069921712 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.763894725 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.763280202 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.017454864 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.899316324 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.761742804 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.122726222 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999743555 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.344629394 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.79152761 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107325294 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.896360389 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.762541926 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.40626304 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.763085137 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.992487744 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.806044089 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.764407463 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.763997374 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.983297824 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.839619645 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.764001116 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.405850207 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.831226294 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.764786327 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.001281643 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.768399602 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031319496 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.76457935 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003422615 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.303220208 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.797157485 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.995205442 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.004993696 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.767527358 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.013998516 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.008810332 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.884987689 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.986368497 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.393706548 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.767215703 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055692283 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.768071217 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.765303269 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.939335105 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.765295048 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.940438162 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.766383112 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107927115 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.787687637 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917594339 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.764070259 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.021168292 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.799149601 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.818953235 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.764781071 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.900195966 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.764684536 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.667435779 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.922724758 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.773459085 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.771347206 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.48947397 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.772720267 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931478491 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.006166518 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.797202346 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852999766 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.440043834 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.770255218 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856904992 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.793474733 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.120101635 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.76760897 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.985852365 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.76812333 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.300584372 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.77119811 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.009249177 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.950204785 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.77237791 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.766057171 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.682472377 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.767601262 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.767769116 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.938797825 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.160059672 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.771231819 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.976043068 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.772870124 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917160465 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.775832858 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.846864239 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.127163473 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.778135578 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.77375104 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.773290061 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.778342607 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.775411022 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040363452 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.803729814 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.296932671 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.919328965 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048990531 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.092714454 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.023677351 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.818655955 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.778708321 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.022339917 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.776451371 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.837553618 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.772099867 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.798615947 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009022341 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.775748962 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.991778155 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0605128 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.694733327 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.831160162 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.778430506 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.784545685 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.734704154 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.93165528 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867353082 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.776958828 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.776767747 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.903592865 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.907260866 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990779073 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.775117357 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.109709932 seconds)
  done (took 881.74878505 seconds)
done (took 1189.914608832 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.775620064 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.779394829 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.762765904 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.776536933 seconds)
  done (took 28.801566053 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.782648736 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.780609235 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.781767474 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.780065862 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.78338781 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.780740556 seconds)
  done (took 12.399929905 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.806105888 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.777561523 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.776317602 seconds)
  done (took 21.072209016 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.84904043 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.186596901 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.889727491 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.219192964 seconds)
  done (took 9.856110455 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.783741812 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.782550669 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.782755711 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.784782226 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.785012927 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.78585663 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.78323043 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.784581963 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.78413955 seconds)
  done (took 17.769285906 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.239599301 seconds)
done (took 95.848394537 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.727277112 seconds)
    (2/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.492832613 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.138562236 seconds)
    (4/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.980919564 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.785558791 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.231451674 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.116886957 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.917708927 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.004593901 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.787624732 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.8299161 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.878626915 seconds)
    (13/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.693886897 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.583102063 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.122260846 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.814509006 seconds)
    (17/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.341912385 seconds)
    (18/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.061602292 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.839039181 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.01874871 seconds)
    (21/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.889690573 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.813904645 seconds)
    (23/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.922024373 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.788364256 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.009636026 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.092676577 seconds)
    (27/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.804748086 seconds)
    (28/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.772501664 seconds)
    (29/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.040068974 seconds)
    (30/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.316042309 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.988054985 seconds)
    (32/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.135812511 seconds)
    (33/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.814607757 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.085329851 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.11632087 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.277157373 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.995358723 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.892062578 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.789233799 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.864817488 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.813070784 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.056906832 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.824136047 seconds)
    (44/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.680705142 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.170461697 seconds)
    (46/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.866176627 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.791475912 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.079681099 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.853049809 seconds)
    (50/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.075315283 seconds)
    (51/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.799388332 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.352134905 seconds)
    (53/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.879372676 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.962816387 seconds)
    (55/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.850935741 seconds)
    (56/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.785958772 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.700241847 seconds)
    (58/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.201868011 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.049696021 seconds)
    (60/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.254192863 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.805204708 seconds)
    (62/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.066107604 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.788615943 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.916530699 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.092110647 seconds)
    (66/309) benchmarking ("sort", BigInt, false)...
    done (took 6.794249495 seconds)
    (67/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.897630692 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.768128391 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.859947762 seconds)
    (70/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.801202818 seconds)
    (71/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.956038647 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.96725934 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.949150384 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.793633395 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.794464768 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.845104183 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.176403388 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.474181919 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.937245845 seconds)
    (80/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.198918311 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.773523852 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.882185229 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.966577276 seconds)
    (84/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.859191513 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.815530379 seconds)
    (86/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.13827137 seconds)
    (87/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.982788266 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.411122313 seconds)
    (89/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.176358161 seconds)
    (90/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.168252593 seconds)
    (91/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.131865859 seconds)
    (92/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.950962183 seconds)
    (93/309) benchmarking ("sort", Float64, false)...
    done (took 5.560547381 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.318012976 seconds)
    (95/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.007665018 seconds)
    (96/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.931169439 seconds)
    (97/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.898788423 seconds)
    (98/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.894027345 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.898772147 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.077523775 seconds)
    (101/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.937712459 seconds)
    (102/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.922373125 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.997066296 seconds)
    (104/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.853203093 seconds)
    (105/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.306538192 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.890994401 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.73020047 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.797404128 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.843906643 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.797942054 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.096313747 seconds)
    (112/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.966778776 seconds)
    (113/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.824121778 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.972312146 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.793284513 seconds)
    (116/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.82353553 seconds)
    (117/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.872764723 seconds)
    (118/309) benchmarking ("sort", Float32, false)...
    done (took 5.538256628 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.930433054 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.160753184 seconds)
    (121/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.878639567 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.256254324 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.816553616 seconds)
    (124/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.789767362 seconds)
    (125/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.875966402 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.068767804 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.490994221 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.72188971 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.037676774 seconds)
    (130/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.821902716 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.010809225 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.060938204 seconds)
    (133/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.891015918 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.822941636 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.960185198 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.860728088 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.351733581 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.901802401 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.852235713 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.119291172 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.049474726 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.03654892 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.821668863 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.030104159 seconds)
    (145/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.368146046 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.897058327 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.250631937 seconds)
    (148/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.783075765 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.241159164 seconds)
    (150/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.882626043 seconds)
    (151/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.958600945 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.812073766 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.705972617 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.791128812 seconds)
    (155/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.25984366 seconds)
    (156/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.911153915 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.010626329 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.781212374 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.190882467 seconds)
    (160/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.941222545 seconds)
    (161/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.977100269 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.630090842 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.785996517 seconds)
    (164/309) benchmarking ("sort", Int8, false)...
    done (took 4.824954323 seconds)
    (165/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.902724361 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.44148317 seconds)
    (167/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.418097952 seconds)
    (168/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.263718123 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.971766252 seconds)
    (170/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.173731967 seconds)
    (171/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.938837564 seconds)
    (172/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.876751179 seconds)
    (173/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.819668104 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.723038822 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.789122184 seconds)
    (176/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.862726253 seconds)
    (177/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.827443407 seconds)
    (178/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.809814211 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.017853816 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.879968343 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.724509117 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.994686573 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.868187671 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.971837725 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.467395462 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.796476076 seconds)
    (187/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.35079085 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.854323659 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.73252941 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.274358685 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.895268081 seconds)
    (192/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.983560942 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.216214857 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.049142991 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.103480265 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.103802209 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.819684246 seconds)
    (198/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.040329876 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.795978098 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 4.024605054 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.015128839 seconds)
    (202/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.819189164 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.191150109 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.912850596 seconds)
    (205/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.311852179 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.825090375 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.795585878 seconds)
    (208/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.969681427 seconds)
    (209/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.944036425 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.797292468 seconds)
    (211/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.857130699 seconds)
    (212/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.919058835 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.490811186 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.008438971 seconds)
    (215/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.937916532 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.8766101 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.333483592 seconds)
    (218/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.836303996 seconds)
    (219/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.838294556 seconds)
    (220/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.878676115 seconds)
    (221/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.932645182 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.031402944 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.611405102 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.185052941 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.371736495 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.69957364 seconds)
    (227/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.167644325 seconds)
    (228/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.002166666 seconds)
    (229/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.151943195 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.879078922 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.915881633 seconds)
    (232/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.883421754 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.157915714 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.800380684 seconds)
    (235/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.067272615 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.137108284 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.190933076 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.783238927 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.907763634 seconds)
    (240/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.932794435 seconds)
    (241/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.938370067 seconds)
    (242/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.801247374 seconds)
    (243/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.970610157 seconds)
    (244/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.369213853 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.785377598 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.245387737 seconds)
    (247/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.90368868 seconds)
    (248/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.030040209 seconds)
    (249/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.515475303 seconds)
    (250/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.790463008 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 8.185706454 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.288411543 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.840827239 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.851102084 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.826045709 seconds)
    (256/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.627276791 seconds)
    (257/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.099350098 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.291449625 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.170153836 seconds)
    (260/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.862977305 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.92231999 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.198021879 seconds)
    (263/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.888289505 seconds)
    (264/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.009281218 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.134901347 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.138357193 seconds)
    (267/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.926288904 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.422702183 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.897356106 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.998282095 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.448060311 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.787298833 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.56759797 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.812297606 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.108895269 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.826551829 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.318405715 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.830560907 seconds)
    (279/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.298792517 seconds)
    (280/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.967131738 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.181427888 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.886503756 seconds)
    (283/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.930931183 seconds)
    (284/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.069109012 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.885046674 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.920590722 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.799854777 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.879297567 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.873355172 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.555976835 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.074275263 seconds)
    (292/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.835251278 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.040793561 seconds)
    (294/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.435582558 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.103642524 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.845719308 seconds)
    (297/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.881271035 seconds)
    (298/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.896848316 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.92345765 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.817860861 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.803146104 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.441398396 seconds)
    (303/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.897498754 seconds)
    (304/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.136796774 seconds)
    (305/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.805362825 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.865913019 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.921742262 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.140904515 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.501208566 seconds)
  done (took 993.281099201 seconds)
done (took 995.275864492 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.838674215 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.827051334 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.811178675 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.83281883 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.922397629 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.843530008 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.82190371 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.813077133 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.859193404 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.861686978 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.810959244 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.842390879 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.814080744 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.811736396 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.811349708 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826957219 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.122538778 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.842071985 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.829649101 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.820665618 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.829077911 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.812687487 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.861724625 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.842262713 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.816877893 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.814034008 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.816741098 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.832864314 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.924433409 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.816912013 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.814834248 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.824265378 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.122750435 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.841344241 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.808150666 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.832582435 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.825021886 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.821196464 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.817295783 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.845889165 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.270377441 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.820394815 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.816170451 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.814436868 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.813773095 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.817188415 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.814305529 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.821340628 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827366701 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827254368 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.266072398 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.835655825 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.816773263 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.814115727 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.825705078 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.814357696 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.821346481 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.829996657 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.835424403 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.830683979 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.117324282 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.847399733 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.816504686 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.830598498 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.823131821 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.303443367 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.817094312 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.817648629 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.269478664 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.827994654 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.300241879 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.830517623 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.815928878 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.831085282 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.847652748 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.124947753 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.83943873 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.815389297 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.822366083 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.813674318 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.825546807 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.828744316 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.821252761 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.816058053 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829327894 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.848864735 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.826229738 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.816813589 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.82402571 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.83501931 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.824491142 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.826896053 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.820363981 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.811598419 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.825623859 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.823511267 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.819730527 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.819511074 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.821409487 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.827777891 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.267134083 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.840669917 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.813647142 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.814059873 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.816881142 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.830420644 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.268178683 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.824219244 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.838074056 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.864237955 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.820020784 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.117571373 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.851078109 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833497378 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.826290669 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.821755794 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.812045726 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.118896608 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.296769928 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.8390146 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.819095254 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.817000817 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835351409 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.820795123 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.814597721 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.12854646 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.847943143 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831904921 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.940080526 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.828081929 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.850355049 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.817444934 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.822231689 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.851190484 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834344758 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.850798366 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.822656721 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833967735 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.835913857 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.81494129 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.82882613 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.82926835 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.819785224 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.825787625 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.813071829 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.849498112 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832165721 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.83337721 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.841035198 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.939707725 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.816011037 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.120932657 seconds)
done (took 285.853408998 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.906062933 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.814135863 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.917580499 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.816389835 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.910352212 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.902313738 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.813425846 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.814733127 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.814257695 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.19112035 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.815445739 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.81534287 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.817093956 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.814391603 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.911815172 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.816934489 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.814656556 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.152639695 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.817625706 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.904187835 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.814857732 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.814772093 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.817526915 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.191735229 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.809898372 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.816370852 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.889831212 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.818475063 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.185664268 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.81055687 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.811126334 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.157730502 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.908632331 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.845802046 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.829218799 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.816764807 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.900414295 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.831192332 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.899525205 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.912091913 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.919533559 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.850520642 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.818113935 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.815684493 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.822111846 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.820064096 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.816565406 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.846739273 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.818697333 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.81774431 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.154972916 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.829736632 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.827371768 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.817456898 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.817691049 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.841376325 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.81699373 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.820448906 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.928926615 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.821185769 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.88324182 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.224506896 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.192684255 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.820344526 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.81451702 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.817610477 seconds)
  done (took 180.983187708 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.888126651 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.893098009 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.886993315 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.823295464 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.87031313 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.888399332 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.824212783 seconds)
  done (took 14.821704152 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.827546426 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.820702989 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.871687014 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.870684368 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.821154201 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.969753089 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.820613518 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.831780194 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.818198621 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.873150889 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.822510567 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.821152162 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.827808548 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.815948876 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.869469005 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.833077274 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.93582972 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.822019352 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.822127906 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.971983857 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.817908762 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.827943614 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.876392594 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.834094804 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.822979874 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.826982054 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.405071701 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.823232036 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.81815987 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.82105128 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.820385818 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.8644069 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.823511436 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.821883288 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.819552735 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.937998633 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.82443742 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.819992408 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.822736785 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.815175435 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.822745377 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.822244612 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.822777045 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.819485721 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.824340577 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.846396876 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.82279115 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.823038706 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.822409903 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.825722129 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.873488105 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.823427231 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.819985275 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.820152968 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.878603143 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.83261733 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.824777916 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.821300577 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.824059262 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.821131944 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.976173738 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.87098902 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.823871238 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.870950006 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.823732449 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.824498153 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.823827781 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.823856332 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.918181586 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.824373149 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.872235778 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.820770363 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.982048078 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.848292772 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.825980777 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.826924313 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.826992892 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.825493416 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.825557918 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.829947144 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.82194787 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.8260078 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.830754878 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.82211435 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.822831656 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.93751845 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.932159259 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.822950506 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.838458048 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.832284402 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.822523712 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.877426214 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.826346262 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.8223724 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87914327 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.940788311 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.880051017 seconds)
  done (took 201.253376719 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.830716648 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.833871624 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.826360409 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.842522463 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.824669213 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.824812551 seconds)
  done (took 12.735138715 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.828352406 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.827254802 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.825178178 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.82579761 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.826161257 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.827118342 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.82652495 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.828385875 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.831217283 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.826257783 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.827068596 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.827095603 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.827316148 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.827767125 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.826634306 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.827341767 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.835000319 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.827101493 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.830420424 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.830036111 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.98882975 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.829306225 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.830121424 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.828775715 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.831648586 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.825285821 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.834175637 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.826024005 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.828266858 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.83624615 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.832525545 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.829535993 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.829173643 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.833951309 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.832208134 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.829406789 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83176042 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.829042542 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.824354245 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.829841561 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.828355664 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.828367161 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.827650178 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.830144136 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.829461002 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.832694479 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.832105271 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.834950035 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.82895371 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.82836356 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.828424562 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.827919183 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.829184155 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.828237172 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.829437408 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.834393568 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.83320968 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.82932811 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.829251697 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.82949766 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.830253611 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.832830227 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.830845854 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.833724568 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.825794017 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.830429412 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.8313507 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.83346721 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.829567743 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.827876586 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.829038365 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.827173155 seconds)
  done (took 134.636258427 seconds)
done (took 546.189448393 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.953318156 seconds)
  done (took 8.709164878 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.977289172 seconds)
  done (took 8.831034131 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.524193985 seconds)
  done (took 10.282014502 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.845895873 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.849175309 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.825434531 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.831894012 seconds)
  done (took 29.119848934 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.891292713 seconds)
  done (took 8.647571031 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.837384372 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.82218664 seconds)
  done (took 15.451067152 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.014998657 seconds)
  done (took 8.773080589 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.910908372 seconds)
  done (took 8.677160858 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.831324685 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.860503845 seconds)
  done (took 15.462450275 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.808402164 seconds)
  done (took 8.565745554 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.539724215 seconds)
  done (took 11.304126783 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.829672597 seconds)
  done (took 8.601240626 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.854563521 seconds)
  done (took 8.611920988 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.070906129 seconds)
  done (took 9.827326523 seconds)
done (took 162.620881287 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.827335513 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.821815384 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.824007639 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.822220634 seconds)
  done (took 29.052360466 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.864053391 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.864115808 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.865653388 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.873498457 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.866056952 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.863237556 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.856468679 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.856851786 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.876412115 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.868235004 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.865457862 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.866588866 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.863690267 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.85779267 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.866708423 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.866384929 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.875059088 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.86670425 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.856994131 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.86795071 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.832059474 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.875423901 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.868316937 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.831316422 seconds)
  done (took 46.471727194 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.032054064 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.902240397 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.985094697 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.883610265 seconds)
  done (took 9.561678441 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.883752741 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.885304988 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.897407244 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.935851272 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.972357573 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.893935684 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.859558319 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.853476804 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.839354687 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.88584248 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.959708203 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.882292164 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.971414881 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.83225367 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.027595307 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.833039941 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.832296557 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.88403557 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.935369897 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.949333851 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.833290053 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.884380412 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.88877759 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.882141176 seconds)
  done (took 47.262581475 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.831714644 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.840046431 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.837569336 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.832753653 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.831106986 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.833035215 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.839312068 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.833747164 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.854008097 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.833588323 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.831325771 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.831779173 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.835138927 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.832562316 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.833016736 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.844839635 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.846111168 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.834078959 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.837316588 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.840081072 seconds)
  done (took 38.492852791 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.826329767 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.680623002 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.180479538 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.082309142 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.827435469 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.830448775 seconds)
  done (took 31.188984539 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.846878086 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.839540844 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.832686559 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.891505763 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.97124055 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.841316988 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.834428131 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.844533122 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.881067812 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.901329237 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.852659921 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.861404961 seconds)
  done (took 24.159563289 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.82907177 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.830372719 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.829932348 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.847162282 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.8456141 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.841319991 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.840589222 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.827323505 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.848057835 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.854049141 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.842572235 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.847572702 seconds)
  done (took 43.848484051 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918751679 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.719289609 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.860932804 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548957197 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.301931112 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0418007 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.356465468 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.165678722 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.833082465 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102545988 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.859578256 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937048497 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08299028 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829078684 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.84987907 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.304310052 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125036305 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056091408 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857896993 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.59815399 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878441177 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391668683 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.668069316 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887658678 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041831138 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.963031169 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.091105132 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.781974455 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964019236 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866562749 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840614924 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.83135401 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105388631 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200327718 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940205204 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841255375 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.4884589 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.547175291 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.824787349 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.598385042 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.610492092 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.955415664 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838943798 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831829955 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766022424 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339589844 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20853619 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.837199878 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.542647768 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.831668592 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842831573 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920641342 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.83629869 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.646765584 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786952805 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.112448273 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.828786403 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838794636 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400304984 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.941959113 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379502483 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.812305509 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.02385682 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.587792245 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21999172 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.979908004 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.837917776 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836314562 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767400243 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.599771876 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883915549 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977850345 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.301910086 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481741868 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133203307 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.925002381 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775990006 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121046066 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.644553876 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.811538084 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061124594 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.790841382 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768002563 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.692462143 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.767039315 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096121307 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871007874 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.466325955 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87657947 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.16579427 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.84481911 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852028572 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842342902 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.057930964 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.400375292 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833841305 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.644590151 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.985535555 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856153009 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.166506765 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768349917 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.8369562 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090044886 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.045821376 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.088484024 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.346150899 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996787065 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834484187 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.919032031 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.766758784 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.886962372 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.105521698 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892209596 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.940543674 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892841289 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.7991652 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13249975 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862751539 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.004128554 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.898688269 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.964261629 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.167282786 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.129330292 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900140609 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.842322434 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.836410096 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.684462845 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388614154 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.102492494 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.836957819 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366881028 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886966583 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.836151925 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771117098 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.440994194 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.86491758 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.810474599 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059414521 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.81233281 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151654731 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771070907 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.983265926 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.950664983 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.059761784 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.476272805 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.914087168 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097383206 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349724628 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.126078107 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889469267 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856762058 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956129816 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859265219 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.286732165 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.129912515 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.841618357 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.842253155 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.678870078 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.840361173 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841951639 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.842642721 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.637295747 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115719958 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.862522751 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.847506934 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.72832156 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.851793511 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905314702 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.845939069 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.849092512 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.386113186 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.593670546 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.850782361 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.469599025 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065412844 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851095428 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.60755275 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950653327 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.923446819 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109214203 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89924398 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.776499014 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.550251263 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.531943087 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839122682 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775099019 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.838790388 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85003803 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850765773 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.221360914 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.115473913 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882748327 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.606939912 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.881601095 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850933115 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.846007312 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840176792 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.384377191 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.956538752 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390746702 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.889149331 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980169138 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.854083093 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774766526 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.844917094 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846200109 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.841947923 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.796278845 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894703609 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.606885213 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213809381 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097695251 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.489615919 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857370518 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.632732675 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.901236044 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.868472961 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.670610433 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804663995 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.877279598 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855389378 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.851817484 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.60940413 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.54728553 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404723154 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154832817 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146234489 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278666958 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.341028319 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.147245187 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.181400728 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078657436 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370853239 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903228692 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18366327 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787280257 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92623583 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.481626727 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193458408 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856988459 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070963327 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224054655 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.587555661 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017445307 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054163808 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878085619 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.783892199 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.806307211 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.049041129 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985289018 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.581482829 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045603567 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173044229 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.54413354 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.936686333 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.841689617 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.522341941 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927948519 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.557347457 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.204921908 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414554995 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.799416109 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312580859 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.84324532 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.290432726 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192178079 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.195072497 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.967673825 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780627182 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.854948248 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.854821412 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.844679969 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.844144904 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.708797665 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.097705401 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85552553 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079795013 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.142367132 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139676366 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.751207606 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.850363281 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845081612 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138483641 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.661170305 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010491977 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.305936006 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.373348001 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85275666 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779203971 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779819483 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.539354578 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.846859163 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.821273579 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067974876 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.034798728 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.799014483 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380492102 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090288459 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.099443327 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.860047982 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.115412565 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122749165 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.583277684 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873780908 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.945584547 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.524797581 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.954092584 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.113840084 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.082424118 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.651089223 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.077079959 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.866733564 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.664457621 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.846709675 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063572882 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.11928341 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.811366907 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08399397 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.569478556 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.853563777 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157815423 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907131602 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.772792698 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.001430461 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.040386771 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857633958 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931858764 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856887342 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.858199679 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.858387722 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89473096 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.773859602 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.971353 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.861527417 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937531069 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.962394509 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.37955835 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.855649993 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120065406 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207906608 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171380475 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906460203 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.848374405 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855969751 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782335567 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985021606 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.29513796 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121237532 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.978614531 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.149880781 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873560789 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.531384109 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.249694214 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092545254 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123383313 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.74277757 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849488678 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.874898183 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.116994996 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859525197 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.059755237 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077218113 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161959497 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31998298 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.119280987 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.214001709 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123932172 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.219503616 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.850449514 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439324157 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.870574521 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.530883447 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.89255347 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.750722155 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117893899 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861445183 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224545643 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.873093872 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.049836272 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.367060611 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.624294346 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139044036 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.83574015 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.911316957 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122145033 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.23096716 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161081231 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923629188 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861344877 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.556615162 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989776408 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.714023216 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.120251828 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85134931 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062678462 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.561508734 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.861829769 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125862042 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158439829 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.846981092 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.738255103 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861290891 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.861857078 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.076530853 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116675652 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103560092 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860925329 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.854718385 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.667259439 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124991754 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912554031 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787621003 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.856293664 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950422998 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.101520646 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874725026 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.369681962 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.564726925 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148908699 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.772867266 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874184432 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404894001 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.225246537 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175827761 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.397057345 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07972595 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.412015552 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.840972001 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156878618 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.856891507 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.370233684 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163263086 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.857248966 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.48718799 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894652049 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.122488686 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171868994 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.864710565 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.619183857 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.824737026 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0777442 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455416894 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794825853 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.855221352 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.915168502 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.854346635 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.986177725 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866158585 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.742541953 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816296446 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.605044213 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346691639 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.859386242 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.84167462 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.590594922 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.49561525 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89182 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997436281 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859383546 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.563514147 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.146794135 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.108233702 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.501161377 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.86439922 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.858794171 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856012717 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.782325872 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.054449016 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.235735298 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150010014 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.32566188 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.894812751 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8600245 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.072537579 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068296745 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.767617607 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99362783 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371510265 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897009753 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.58865695 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.5380855 seconds)
  done (took 1672.858084961 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.861849871 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.942195879 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.870404247 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.922579904 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920663364 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.861490319 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.885909121 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.89688965 seconds)
  done (took 56.951232233 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.853858445 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.05380344 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.863980402 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.855254274 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.864326853 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.854111168 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.032669025 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.864201227 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.86371364 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.865638991 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.868965457 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.853448059 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.172746411 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.880367676 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.857528442 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.855495623 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.868259129 seconds)
  done (took 74.117602829 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.857608199 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.073801558 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.889711334 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.877045608 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.795164756 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.862369151 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.864984178 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.86903695 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.862871599 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.07882875 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.491406716 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.874491309 seconds)
  done (took 90.185940972 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.866482838 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.863747615 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.862985893 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.863192093 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.864345761 seconds)
  done (took 11.112139794 seconds)
done (took 2177.048815744 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.104689342 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.088320736 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.094946878 seconds)
  done (took 5.968701454 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.006542648 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.052956318 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.172101951 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.178586742 seconds)
  done (took 10.199212419 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.150259348 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.226551851 seconds)
  done (took 6.164184381 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.263458704 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.86766365 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.254521948 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.854564426 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.855131069 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.856321431 seconds)
  done (took 22.355185402 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.858946656 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.862276977 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.860010536 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.862293562 seconds)
  done (took 9.230029675 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.841017683 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.583253229 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.839643509 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.852917789 seconds)
  done (took 20.905162555 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.607952418 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.258181717 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.603946476 seconds)
  done (took 9.255119117 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.378823129 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.753705222 seconds)
  done (took 8.918334418 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.12973613 seconds)
  done (took 3.913727002 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.888899631 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.131409918 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.375935013 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.380757416 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.474736583 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.720820897 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.181214126 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.104760495 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.270502775 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.301555749 seconds)
  done (took 24.61756636 seconds)
done (took 136.807472964 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.238575477 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.096045751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.059262027 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.250362775 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.076452846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.058676981 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.061345036 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.234973785 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.702784079 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.698450315 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.204932974 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.075228457 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.019582836 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.09551932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.021407228 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.222545774 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.078334384 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.256993509 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.898948212 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.100188006 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.073911061 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.835994272 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.047946412 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.847441375 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.075959278 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.007823938 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.429078703 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.220344962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.054776119 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.435870019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.009192376 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.253272515 seconds)
  done (took 170.528450413 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.858649933 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.857198039 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.857841068 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.857398976 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.189739099 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.865816117 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.857388073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.865790908 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.075582107 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.068541378 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.878314111 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.177091398 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.867880464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.862301185 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.866745362 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.863411165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.189661075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.86852538 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.872401442 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.87273996 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.876064768 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.084329778 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.877345687 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.124389867 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.210383535 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.879648619 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.860627688 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.88287424 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.867353921 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.869113987 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.872083714 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.860826726 seconds)
  done (took 207.728565952 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.863478519 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.862593342 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.858334395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.858938734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.858939121 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.859930574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.862115102 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.859493775 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.498178743 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.512685714 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.866925474 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.8647972 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.867446079 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.859875426 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.868391377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.858282691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.865661489 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.867137913 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.863559057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.866451076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.870330762 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.763086035 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.867167465 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.772973803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.863297006 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.864773187 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.857994957 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.868985692 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.871447707 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.870678948 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.871032506 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.859487515 seconds)
  done (took 220.548400602 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.056226079 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.866976572 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.869749837 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.811427745 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.868769661 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.868861962 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.824301656 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.059002016 seconds)
  done (took 19.029855918 seconds)
done (took 619.633587546 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.34378373 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.196995073 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.037806203 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.891365649 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.123189311 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.923559855 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.889609841 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.953385459 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.614999166 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.956631678 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.533137375 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.903960923 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.626042859 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.910265825 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.015530899 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.943710651 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.433727087 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.524494504 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.068896806 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.954856391 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.059606305 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.825024843 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.964424586 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.644004962 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.641179374 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.864683659 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.072723545 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.441354476 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.89622286 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.054930298 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.645864094 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.271069834 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.899127278 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.885674728 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.941234008 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.921580184 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.240631753 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.8984154 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.005359678 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.629326595 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.942808444 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.49806153 seconds)
  done (took 102.878651799 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.860157058 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.858624466 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.85639118 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.86092419 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.857389526 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.855007884 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.854737154 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.853970082 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.856327689 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.854391265 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.851358206 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.85360917 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.851785491 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.852902908 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.852725819 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.850244787 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.852963625 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.852920078 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.850149069 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.850556944 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.855197361 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.84920925 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.863258795 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.849692635 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.85070567 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.851336689 seconds)
  done (took 50.009476609 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.860640588 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.011293617 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.116798228 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.877840299 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.856398277 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.860419038 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.876320108 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.860455648 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.859587093 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.861173134 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.960762041 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.859124382 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.875880405 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.111530498 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.866993079 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.852756662 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.852653362 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.853303435 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.01090487 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.868144198 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.869944818 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.852823006 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.86981147 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.863710897 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.851584622 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.851624951 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.853899133 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.328027277 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.856556906 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.95487911 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.890777244 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.868372429 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.291506386 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.119044227 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.902943 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.85703283 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.850710325 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.958214174 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.853784089 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.84973168 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.866182971 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.848971944 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.101168627 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.326718736 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.8570063 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.845546063 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.332215353 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.959932673 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.884083946 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.854693147 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.106035834 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.85999874 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.84636821 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.84649181 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.88068354 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.853737198 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.846169368 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.190379396 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.855055964 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.864469255 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.852206747 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.846957701 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.009798984 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.85515525 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.997482048 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.855324546 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.85280012 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.847545706 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.102919295 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.858833442 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.341292057 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.856069294 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.847321604 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.949938685 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.998419695 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.363221446 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.857060232 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.011628427 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.307802064 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.870293945 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.854109732 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.313009577 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.873403594 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.851349817 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.849002411 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.848485317 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.848020918 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.892091995 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.862596851 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.268933922 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.34614693 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.200665631 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.871547452 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.860895827 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.846779056 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.193915417 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.853731431 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.847011559 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.102917587 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.34600416 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.859811605 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.855156635 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.32465968 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.859237698 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.86773801 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.853879969 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.10840718 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.861095725 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.892898307 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.847815749 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.855953669 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.851267509 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.86664767 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.853842777 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.849136612 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.315245644 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.972381596 seconds)
  done (took 229.868965364 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.844004904 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.841142333 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.842804536 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.840288456 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.842142816 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.84900879 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.84163012 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.842124503 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.850724038 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.842505161 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.843366428 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.843088526 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.843320078 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.847796051 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.879668027 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.85287139 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.500997272 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.847553224 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.8460392 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.842410778 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.495747348 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.848646221 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.845678724 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.844730486 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.845880458 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.846910367 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.851737741 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.871383342 seconds)
  done (took 166.807989306 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.856487155 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.967017195 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.867940986 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.881835639 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.860429751 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.851002501 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.877723342 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.867528496 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.857888852 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.851060642 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.851819668 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.913071192 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.86321255 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.955905843 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.880881047 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.883620622 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.958747059 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.857758406 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.852668042 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.85314368 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.882505239 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.846880297 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.915448185 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.976289072 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.869307787 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.967748921 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.854434632 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.856680711 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.854811484 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.970765621 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.866572347 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.916326687 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.879638587 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.86888735 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.972585619 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.967378992 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.9596225 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.881624703 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.856964857 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.853640366 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.85319211 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.841812988 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.969423623 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.872791763 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.856737939 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.961327889 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.870319788 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.857671136 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.864660678 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.85364625 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.869426745 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.872198996 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.919019688 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.981855556 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.885331615 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.877890531 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.87865949 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.135603217 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.863058642 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.957860602 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.847807737 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.972727315 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.87340958 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.843217971 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.856202787 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.862623634 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.883293025 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.882709372 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.961278289 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.862256494 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.956550576 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.889381209 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.857960138 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.854049969 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.856834378 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.971219568 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.975579603 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.890607504 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.890607552 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.884034135 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.847622907 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.855110469 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.844078392 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.87275598 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.857642642 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.972544199 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.973688412 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.86407996 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.859087568 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.858571836 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.857248629 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.882243006 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.976980139 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.890840853 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.953276674 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.921960624 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.929957534 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.868922374 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.86862101 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.85616613 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.920486415 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.869533836 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.866983211 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.181310685 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.925592318 seconds)
  done (took 200.897649405 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.319243161 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.907618898 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.911106463 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.175441614 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.285664814 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.742638233 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.899411794 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.902761858 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.925595506 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.098593532 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.976580115 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.931586239 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.892051762 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.876482491 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.904792741 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.923376432 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.914694635 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.219069827 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.022275244 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.009305661 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.882558767 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.216820826 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.223611984 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.298506907 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.938792179 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.234495025 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.585279057 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.150356779 seconds)
  done (took 61.155384611 seconds)
done (took 813.408760533 seconds)
SAVING RESULT...
DONE!
