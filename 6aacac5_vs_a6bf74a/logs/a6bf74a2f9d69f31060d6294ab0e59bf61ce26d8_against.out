cset: moving following pidspec: 14307
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.381660709 seconds)
loading group "string"... done (took 0.56810669 seconds)
loading group "linalg"... done (took 7.244893986 seconds)
loading group "parallel"... done (took 0.158277705 seconds)
loading group "find"... done (took 1.172984143 seconds)
loading group "tuple"... done (took 1.823959346 seconds)
loading group "dates"... done (took 1.33980954 seconds)
loading group "micro"... done (took 0.226453918 seconds)
loading group "io"... done (took 0.954856472 seconds)
loading group "scalar"... done (took 38.899591247 seconds)
loading group "sparse"... done (took 12.219373167 seconds)
loading group "broadcast"... done (took 0.935862908 seconds)
loading group "union"... done (took 12.18185757 seconds)
loading group "simd"... done (took 4.437243141 seconds)
loading group "random"... done (took 9.081445008 seconds)
loading group "problem"... done (took 1.839744494 seconds)
loading group "array"... done (took 20.892899223 seconds)
loading group "misc"... done (took 1.688321866 seconds)
loading group "sort"... done (took 3.348548746 seconds)
loading group "collection"... done (took 17.385703531 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.524844115 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124213707 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118362819 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11952941 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147855173 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112695529 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123369456 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085995065 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.793192144 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148532368 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117037021 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.429490914 seconds)
done (took 5.15078513 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174280927 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085067743 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084021629 seconds)
  done (took 1.288992495 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064452372 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123397941 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066455718 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066336873 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066818452 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065759107 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065734102 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065630714 seconds)
  done (took 1.642237419 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075067466 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069090839 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066433255 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067430045 seconds)
  done (took 1.399267018 seconds)
done (took 5.701407321 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.789374524 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20251702 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187337923 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.409915417 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133782819 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157915451 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647446738 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.309451631 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187770147 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080718162 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108273827 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.326530303 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109847316 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639908423 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073648057 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.0904726 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135267039 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.446985612 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066445076 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081874693 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088124273 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128858707 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084652034 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074294158 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146627455 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066927486 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135999782 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080412481 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065435475 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21204511 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172170083 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651585818 seconds)
  done (took 10.254279367 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097771859 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096894953 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068104335 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122251788 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097312754 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068891214 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070565939 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067028834 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086192568 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127109259 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091204041 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102393494 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064893212 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068073405 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084419449 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204038125 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081966165 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081671206 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069795 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075332267 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104694868 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07821128 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077037387 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076834371 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129700748 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180055118 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099563454 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099195395 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068829257 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079560411 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114333257 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126749767 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067525913 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067560748 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125876617 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096159425 seconds)
  done (took 4.581130006 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.001769184 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143362692 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089653845 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133903952 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064014126 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108519258 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064931112 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080499443 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209073246 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.391287231 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.5895595 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110717971 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103677686 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066834082 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068489545 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066304086 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.492820353 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097730758 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107455043 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081296301 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070356133 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068642881 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365741666 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067718798 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063637591 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068432145 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056642442 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125445409 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06830384 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.944886203 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12676866 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066076059 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100299389 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162193305 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109756411 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086437706 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063229895 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273154269 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067843968 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065387673 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.152801745 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070395049 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065300984 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084111574 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10298835 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112915573 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064747729 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066264336 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164905205 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064385238 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079524301 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.646530732 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153283933 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075889092 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063608282 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.25385207 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087559273 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069554902 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064141607 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.188958365 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133286507 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067592674 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067162623 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068131729 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068947611 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.358565723 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065940394 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.876586968 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068434152 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076119247 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068816623 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069271961 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072536525 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072440015 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087490847 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065889417 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064225941 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075341019 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065986792 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065774333 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066637901 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083237903 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.379170282 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06660415 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06787948 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064553903 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06354672 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088743478 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095873559 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066219131 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064781788 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099302378 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067626584 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065607608 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106076507 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066063442 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082744812 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069673503 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112414842 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065707671 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.198828916 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067610925 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096327373 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070150757 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098441352 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080277172 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070178764 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.422597395 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065235951 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065491899 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068829119 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065483404 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067734546 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066892822 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080283879 seconds)
  done (took 21.01234891 seconds)
done (took 37.969499459 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236347276 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073231756 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074107904 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080490777 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07409596 seconds)
  done (took 1.761182675 seconds)
done (took 2.960577332 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122379129 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099843867 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063795794 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096596066 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064038542 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101545781 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100661996 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081217081 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099707087 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064559691 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097572102 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063943669 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063878323 seconds)
  done (took 2.340973271 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086168321 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084318622 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069568548 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083060018 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063589274 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083213699 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082030117 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088856216 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081021377 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072438717 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064135921 seconds)
  done (took 2.048946391 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08567071 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087823465 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070402473 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08242838 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063437725 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082536676 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082053041 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086119359 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082009811 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073918289 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063360172 seconds)
  done (took 2.052157116 seconds)
done (took 7.628461591 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080418253 seconds)
  done (took 1.264367498 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593369368 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.07837246 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08205332 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110965969 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191538182 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118108529 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272865073 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086383328 seconds)
  done (took 8.905322235 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103525682 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07180055 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068657884 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072669989 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072243732 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070762595 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070118376 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069445974 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067844111 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070711918 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068692647 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071545072 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068522558 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069017379 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069261518 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071192053 seconds)
  done (took 2.413901916 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092993914 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092200026 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073542478 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074673808 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071988518 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071619868 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073967354 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073273478 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07022291 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071793886 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074154937 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073077771 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071435633 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064232308 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073287082 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075664567 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070441637 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073574182 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074024681 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074971411 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074937276 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064162141 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071596597 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073660683 seconds)
  done (took 3.070762178 seconds)
done (took 16.84688275 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116514332 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071124345 seconds)
  done (took 1.37636138 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083375347 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082925491 seconds)
  done (took 1.365231908 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084815895 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065796816 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090575189 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077800367 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06552535 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065281012 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087370436 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065833593 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065798972 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065289387 seconds)
  done (took 1.933204006 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070467184 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077994067 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070468669 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080708024 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073290466 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063768833 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071718535 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067235567 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077218092 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06218533 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071053432 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081845758 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070989564 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083895608 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071712434 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068868951 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070205011 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067104695 seconds)
  done (took 2.500769695 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067917736 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067301128 seconds)
  done (took 1.340536652 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068598012 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063252257 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067015827 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066443571 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062542852 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061813507 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063115617 seconds)
  done (took 1.653309685 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388152995 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113164736 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311205529 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071190953 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08211486 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257401552 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066005043 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070937423 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070537745 seconds)
  done (took 2.676263494 seconds)
done (took 14.052286087 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082427657 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086075037 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096383671 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.376343105 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091599023 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065777579 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11441577 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188389039 seconds)
done (took 2.318243658 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215065029 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.641383656 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405283566 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20449056 seconds)
  done (took 2.453534301 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344025237 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088611879 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058580132 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067394543 seconds)
  done (took 1.767554029 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068036966 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069290439 seconds)
  done (took 1.343824391 seconds)
done (took 6.986932291 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069050825 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066249224 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063944666 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066300625 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086594621 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063605538 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06352786 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063395177 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065410721 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06573505 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068493275 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065925009 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066024999 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062938209 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063412667 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065736435 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063554169 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06348248 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063369963 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065881667 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063159843 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065754077 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06318285 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063467909 seconds)
  done (took 2.818119695 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086058693 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065700816 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07141766 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071361541 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069779521 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070785292 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071332973 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065819095 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071533248 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068198255 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068497855 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069083811 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067619731 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069291847 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067603815 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069208912 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071002465 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065357018 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067983667 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069409685 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071049963 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065480629 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069408823 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070724952 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069349079 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070977358 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068419795 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065681374 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071083513 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068435427 seconds)
  done (took 3.303354205 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071437431 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063121881 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063877793 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07038791 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063279908 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06391649 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062847268 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063361273 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063819805 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063060516 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.0648243 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062704956 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063255876 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06395674 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064368026 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06766458 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079030136 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063943519 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063725378 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063748161 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066749382 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062818592 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063309474 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062868743 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063329903 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062844672 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063996787 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062864939 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064200207 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063142619 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066787203 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066718932 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062897186 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070204204 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067259857 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063055662 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067424927 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063216039 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063906747 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062748256 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062465201 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062773897 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063147922 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070078294 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063537523 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06479976 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063076047 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064680211 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063329436 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066084347 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062975229 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063475969 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.177808558 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064409068 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066904357 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06269927 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064006395 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062911056 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063343431 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062770616 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062458825 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062225392 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065619154 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063283043 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077659491 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069956707 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062514992 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064339856 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063630893 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065962441 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064744943 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077367029 seconds)
  done (took 6.016081039 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0929227 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08742596 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065527838 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064673026 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061188771 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063737754 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0692846 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063558261 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064840402 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081265513 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064593955 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064501647 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065067874 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067473024 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063646854 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064392133 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071481872 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061671877 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06337711 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067103445 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063850615 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069046525 seconds)
  done (took 2.728469304 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158182566 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070211176 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104735791 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074873035 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069614025 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074712867 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069270504 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069518462 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069543696 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066953417 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067138532 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070139427 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069705675 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067025124 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067281895 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067332777 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069061745 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067165017 seconds)
  done (took 2.600820191 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078608175 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065769566 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086876017 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066082924 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065669635 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06773758 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069928285 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073499653 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068304917 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065368334 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073870656 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06804537 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068269184 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065338135 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067986543 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066149721 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067916614 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065547705 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073304375 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06956455 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069926015 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073716458 seconds)
  done (took 2.764892773 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082541434 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068811154 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081262988 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067610934 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061469075 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063903223 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069891192 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065550442 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.0697769 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067435587 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065020609 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063507892 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068385987 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065348418 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068123318 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065409405 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067168516 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065358836 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067151908 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060687681 seconds)
  done (took 2.583427542 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088873767 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068460771 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067552841 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075201351 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067194664 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067020503 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074648719 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067030431 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067098193 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087839122 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066822151 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067010085 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074742623 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071636993 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067002292 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074482521 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074060788 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074488129 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067018498 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067197527 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088460943 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067198924 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073893733 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066855131 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067163473 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066919397 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066463563 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071316951 seconds)
  done (took 3.234707193 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068721173 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068001754 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063949977 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063788432 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063800805 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06266609 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062919537 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062906241 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065670536 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063037799 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06623275 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066216651 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065812843 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066115988 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065804705 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065522009 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066172328 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063336189 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063452198 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062977684 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065606127 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06569841 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065293167 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06303419 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063065098 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065387009 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063172418 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063038204 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065714241 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063236163 seconds)
  done (took 3.174356852 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077193839 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074207915 seconds)
  done (took 1.386672112 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065066679 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081809326 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063213688 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070288996 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069807565 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06626021 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07370926 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069061332 seconds)
  done (took 1.789042428 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084169308 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078099843 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066728596 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07936012 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076333887 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082531341 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134185176 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066320989 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073048026 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06407984 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079438462 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065150472 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072029546 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066645294 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071865534 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072358438 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063670949 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071775255 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067727257 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064254453 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06669615 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074917664 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068458289 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061316394 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066891202 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087982978 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076916146 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065356087 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068901918 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073546136 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071701717 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059725743 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065351305 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066109282 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063172069 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074916459 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080343565 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068451938 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074527537 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066319125 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074928325 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060378032 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069918148 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072126108 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07607753 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065743835 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066172276 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060723166 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063480335 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068047107 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060768323 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068872881 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059997278 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072761719 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069499289 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076061399 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064574144 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066908938 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068549807 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069074043 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072291603 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06758669 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068793048 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065196667 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076190118 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070559698 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075328682 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06164212 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059933959 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063951079 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075141604 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088442322 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071850898 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066158288 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066266946 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063167097 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069643902 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066639176 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070684396 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072255998 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065666941 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071194802 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072938878 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06588614 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067929366 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072922878 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06367164 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068001296 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063834233 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081929175 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064447003 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063451636 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063858936 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075977364 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069001745 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065820934 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06365104 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073309914 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059931912 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066270089 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066115973 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066368602 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07590197 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069652618 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069070808 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073755823 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072463083 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06489728 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067571713 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061493853 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065643851 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064055089 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071915488 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058666198 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067207409 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066283638 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064915675 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072670282 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062533635 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064917777 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072171514 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070183963 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.188286469 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063570747 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070097879 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06628811 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069440948 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074441014 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065458066 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061465797 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060679032 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069930734 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065801078 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06944119 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071033422 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069953796 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061100035 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06527709 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070500644 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074964633 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067476006 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06719179 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072212787 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068366321 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065996587 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073106821 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068874815 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065875215 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072309022 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067362126 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060607996 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069151644 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069410383 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065285902 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069941616 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069160286 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068996321 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066982052 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065177738 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073132342 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066692936 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06600721 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066129148 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064437251 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076427079 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067642077 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061516263 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063411484 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075070442 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064454606 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065839748 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065092122 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06841885 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067222694 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063869335 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06548677 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067734145 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075810669 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070019555 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066712649 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071178548 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077754224 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066299511 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068567683 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065494933 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066854598 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066479643 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075238362 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072026416 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070761636 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068968788 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06316073 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071506369 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074660848 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065431104 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064055973 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065060692 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069832716 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071337109 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070046906 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066610786 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063930654 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066718836 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069066304 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068717167 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065721985 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064906812 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071719918 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064348557 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072732402 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066748651 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076602074 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06965999 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06102332 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069031641 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064383164 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072962231 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061038057 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06428259 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065802534 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067496896 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065448415 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068887723 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060321484 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072899116 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073390074 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066442945 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065279811 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065468807 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072626508 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067608454 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068770664 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068213641 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070553328 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07555766 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06399044 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067940516 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075096291 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064689607 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058804733 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.06965079 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063736966 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063889958 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063409576 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062473903 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068125063 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072325492 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070619284 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.18632201 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069780974 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064751469 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066992489 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061978171 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070877121 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069851283 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067623601 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073650827 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067041988 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066614756 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.068906874 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064901334 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066781308 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067007855 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06979669 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067278727 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068121817 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065918247 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068814431 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065058011 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064222587 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068059744 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066367707 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067491917 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071279403 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06598228 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066645945 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068740521 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06653932 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067573047 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067314898 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06595387 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069124723 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066967001 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066715642 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068647141 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061533402 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073465561 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066070662 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074430683 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066907166 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062701999 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073986871 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068921493 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071601882 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067046646 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06661008 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068217284 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06556069 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069250234 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073244907 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064691371 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077419601 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07405694 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066757199 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069061952 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066173526 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067296157 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065549044 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067107351 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067565859 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067025746 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065283348 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070745834 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068368711 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0668436 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068063276 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066377641 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066495059 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067184934 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060655861 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065448475 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065290391 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066125235 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07550638 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066213452 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065414462 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064252045 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066586914 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064639206 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063160169 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073227047 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074693516 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065980624 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072774988 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064828638 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067716798 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076196851 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059709475 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063916272 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063709013 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.0635792 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072967003 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066380563 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075584081 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066033602 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065154063 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062456151 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066524218 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064461605 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060264439 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063346613 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069362476 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065015202 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064717846 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065822181 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068524118 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066770385 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07549646 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065262721 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066508638 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06527438 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062641954 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06485793 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063842393 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067323288 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065065309 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062619639 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06193267 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06418557 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065304962 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065896764 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066425444 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065903842 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071278285 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064304065 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067609599 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067303548 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059425623 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.198867522 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067257053 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066669453 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065424455 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07088648 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070067746 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067604766 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074868183 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066262024 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067132314 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06572345 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064086733 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065854914 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06601444 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066546656 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06578472 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066990569 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074622441 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064051508 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069928356 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066649841 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06657439 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072569989 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066960719 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069569036 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072564957 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066635019 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068464116 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073865658 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07080445 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069311289 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067147833 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067605795 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0728945 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065710578 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073118471 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067027055 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066345524 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068753049 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065143465 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066222488 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065681481 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064842609 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072552669 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067162687 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065727913 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06588072 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064008672 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067196599 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069534229 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074244886 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06912954 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069769265 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061065009 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063080754 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067080123 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064147754 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06829106 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068347465 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071556232 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06869669 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066352844 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065175995 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075082285 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072427373 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069815293 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064549927 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069379629 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067133085 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067870233 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06746101 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066659274 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067139816 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070330169 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067978947 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065132736 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072670847 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069041001 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066548616 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067305326 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066685012 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066487533 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061057031 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066625942 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067648484 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070506787 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067635096 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065466558 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075869178 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063276294 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065872316 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068874784 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064872813 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070312906 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060951656 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067422844 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066875215 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066279332 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061268487 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065795113 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063873484 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068083539 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065132287 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060899777 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076164059 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07490455 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069041167 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065592123 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064848547 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061072654 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060942603 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065627676 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066612748 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067546765 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076085571 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064842144 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064597116 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060263661 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06476208 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067913682 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067863522 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061989841 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060119159 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063627443 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068199888 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070088372 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063672217 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064850391 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06761276 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066810226 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.193489295 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069904109 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063505898 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070114192 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07954085 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066283799 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067324231 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072742801 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073823396 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066791077 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060819711 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.0666325 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069940551 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066513048 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066103238 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066966519 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081515203 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069164502 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065996125 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064956659 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069380562 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066105521 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074050219 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067766729 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06660531 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07128001 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068068571 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074651232 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06932214 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074433487 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069796611 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069582254 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064872727 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067140584 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064788271 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065060257 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067651401 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066712704 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070964841 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074219494 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065615953 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077217973 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075228532 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068510545 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063658115 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066320696 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065479682 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061561583 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066756135 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064294889 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064570797 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064215265 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064995404 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067205511 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070997275 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067705584 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066556359 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.0662559 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060391203 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069180073 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067736099 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067201065 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063146677 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065647913 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.0659589 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070247869 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068610503 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063560745 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067843978 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068075578 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067068171 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060976411 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072981323 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064739268 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067694571 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064936515 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065559676 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066518998 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068995029 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069940151 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066924517 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068383953 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069670259 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067431077 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063370097 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062689776 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071416595 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064093038 seconds)
  done (took 42.257093183 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103075166 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062933923 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061052502 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06174929 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072949457 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062613329 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061658948 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0630742 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062611879 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064751528 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0613243 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061291877 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070483325 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07735806 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072768641 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066346434 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062147609 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062857006 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061441136 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06305859 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070307361 seconds)
  done (took 2.738754237 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075926038 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077371808 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076212923 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082477631 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070871976 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070040586 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07529172 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070039852 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07801647 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072038771 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077807688 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070159274 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072229797 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072402167 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071996382 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070525367 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078144296 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070716268 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070294241 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075454979 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071005278 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074986583 seconds)
  done (took 2.929008561 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069318086 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06604356 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068107935 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06160954 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065654359 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061240728 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069387941 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064246572 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068912057 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064966106 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065323977 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065051185 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067963547 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061077085 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06604452 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063767195 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107227781 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069059479 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065355026 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066462618 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061056787 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067397264 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061045313 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061429535 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064766422 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068937905 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066404803 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063352352 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065281584 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064995569 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065626092 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063144182 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067583748 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066416986 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064179511 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06430133 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065215745 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06492933 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060537111 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06406001 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066204725 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06142412 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066023934 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066444164 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063406292 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062925151 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067004916 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065007673 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060418923 seconds)
  done (took 4.533368973 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080246197 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109717038 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067050032 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091124434 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079591412 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072303831 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06965298 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089841599 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062962339 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063512797 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081091973 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078374963 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065230919 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069685034 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069622904 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065100202 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066191448 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064861539 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068845726 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064573845 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069127487 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072319274 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079655604 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078216958 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069517141 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064103417 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064414038 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069470018 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077346341 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069372863 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069649438 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070794708 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080201881 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070238283 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064201527 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067038598 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080673131 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065408977 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067650567 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062707067 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067377178 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069581443 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072034974 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081474008 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065820968 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069827001 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06503611 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06203023 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077672826 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06730459 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07267827 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079098895 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068577911 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064996061 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069055781 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079619993 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064800913 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063220976 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068225829 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077092803 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062239346 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068812473 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077679467 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067142477 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07194855 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078242601 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069780134 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069111633 seconds)
  done (took 6.31405454 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076771207 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094830784 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082888898 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083165551 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074661027 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075544673 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074728962 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074594337 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074694137 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07923205 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075246914 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115368116 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070217256 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077532795 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075399743 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074717538 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075301692 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07498271 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074896694 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075058684 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075000922 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082320577 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075324516 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08240163 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079252317 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070444758 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074514646 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07516954 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082226763 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074890555 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078754808 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074443589 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083812136 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082448594 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078873363 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074854803 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064849335 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074072952 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074398914 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074438584 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0701664 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082233854 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074478311 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070099579 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074717167 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074475789 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082226648 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078984271 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0775266 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079935123 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07495962 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082520077 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074842075 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074880285 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082514686 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085534014 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082577524 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082324934 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074811926 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082305537 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081774362 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085087274 seconds)
  done (took 6.172761367 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083935305 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074268023 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081653679 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061755988 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063709008 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071461733 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063582719 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063750962 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073741606 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073728268 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075751655 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071156578 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074264541 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076025235 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071061748 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074142847 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071614038 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071348722 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073475778 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071155424 seconds)
  done (took 2.774783846 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07543715 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083626494 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066807394 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07158332 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068552262 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070969945 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067716099 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068915243 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066570462 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068871111 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075564728 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07555856 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066556232 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071269323 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07527853 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071453755 seconds)
  done (took 2.470350962 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086537671 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072200565 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079514077 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065995717 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066634408 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062026013 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065294709 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06104012 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06160588 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07733919 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065633491 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076196247 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065412947 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063861567 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062078813 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070703335 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062193443 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062473428 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065596467 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077708479 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069361317 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063394229 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068380152 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065510253 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067949039 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06970964 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064760481 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065218071 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06274871 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.0657072 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068623536 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06873989 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062089368 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063220709 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064052262 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062275026 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065092285 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065741983 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070235991 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064991651 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06304385 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066841765 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065223057 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066137318 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061299549 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065556876 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061248265 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067334955 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062921156 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067445433 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065211255 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067742916 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065817239 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072054437 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068175165 seconds)
  done (took 5.001834192 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081304684 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069703092 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061131229 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063404439 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06876144 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066628539 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069153267 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066874013 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066829391 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06335035 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067100601 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06788903 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066663158 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069297379 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066720897 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069294195 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061295464 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066359379 seconds)
  done (took 2.5495803 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073397876 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065065693 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072774839 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065405983 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065816199 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067552995 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061390402 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06438596 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064671895 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065459452 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065227224 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068203887 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064351431 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067872554 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065192826 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065141099 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068048644 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063986322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065548559 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061450618 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067911139 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063901491 seconds)
  done (took 2.786290765 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095996189 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081880536 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139758742 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078603758 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083763474 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071059081 seconds)
  done (took 1.885203649 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092314271 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101085062 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065757913 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068697946 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074780178 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069589403 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069221335 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06906112 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077374819 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07642101 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069325976 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077581553 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077461761 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07677264 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074930193 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075528017 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069450701 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069574798 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06611009 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083338426 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069325515 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077253232 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069493932 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069298764 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070066487 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076580771 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077472116 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075634779 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069317915 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078270592 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075308333 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069219436 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077563521 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075336163 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068522701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077625228 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069210065 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082711957 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074803832 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076663046 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068426105 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075804559 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077804987 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074010235 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078199772 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070518681 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074447362 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06974196 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069669613 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08560535 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075566417 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076943754 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077981992 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078613662 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078227654 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085649935 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075793981 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078099831 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075232817 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075802257 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077691773 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075461718 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077468547 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075772719 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075573683 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077857965 seconds)
  done (took 6.301970529 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105623467 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066933552 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070110752 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07598027 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077484923 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070099348 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069748665 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069832625 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069788422 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066926645 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108265793 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070250252 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07761911 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077910069 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070280556 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070031683 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069697028 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077447777 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066580898 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085150759 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069978684 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0769663 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077406332 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07685612 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07594402 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075242046 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069597583 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069695444 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069879408 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069471075 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074326125 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070061412 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077378271 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065940403 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077392214 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069695156 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069368915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074692822 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069464357 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076195519 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077897724 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082956244 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070012426 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069562981 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07538166 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069997343 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069900985 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06671371 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070318202 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067132935 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076069983 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075607765 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075872718 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077202618 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069852031 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069754404 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070149679 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069689347 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070027128 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075825651 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077607181 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069837842 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085755934 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06960288 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069825633 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077356681 seconds)
  done (took 6.226282534 seconds)
done (took 128.543357056 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.19238109 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164819888 seconds)
  done (took 1.686581638 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071337013 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099442555 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077913567 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129000408 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065530099 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099921058 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098975732 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07799358 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065769731 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066035117 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06589526 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068842915 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131136377 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065567042 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065474786 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068822385 seconds)
  done (took 2.660976837 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101253288 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163327608 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10247193 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065094186 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099501972 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072757378 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065243135 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075560227 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071073786 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065032486 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072619447 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070367355 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065001987 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070354342 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070587582 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072722132 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065436604 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072580143 seconds)
  done (took 2.786454259 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101507739 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091499849 seconds)
  done (took 1.539795172 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162755407 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106232668 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145981257 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352224155 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165806695 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.15042224 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147381311 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14536356 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120655875 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139682027 seconds)
  done (took 2.978156205 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102799982 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155098399 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26823382 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117584692 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07296714 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094058939 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11772734 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078326189 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080529004 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079758453 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079832356 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07627349 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099491465 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073585471 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073380033 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075655152 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102979514 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072703184 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074703587 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076030945 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100001036 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065537018 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072947288 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07269322 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076773382 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076599645 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065634797 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065275275 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076121553 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074499982 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076516 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092852205 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07694663 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105581933 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070231631 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106997799 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076086297 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07357902 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074669822 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073696883 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078337467 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078357391 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072585514 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076959082 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065640869 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076763381 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065431073 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065369504 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077609531 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066636718 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078003997 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076491 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105929777 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06654078 seconds)
  done (took 5.964570241 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105856752 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106243604 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071602054 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112052346 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102374216 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071863151 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103386297 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095835602 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10418127 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070241391 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068089078 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070458768 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081716262 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082165536 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114907068 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107030147 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073308664 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070827309 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107666358 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105421473 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068099624 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097181544 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091465309 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103489439 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067264034 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070499338 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067964639 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069979939 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076849998 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078208406 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069539079 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080370198 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084492709 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077859269 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066866775 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068053023 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068299002 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079064011 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079084028 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078641249 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077660708 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068278036 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067918833 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069093626 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070494438 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067691689 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078289045 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080256174 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078452497 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069235215 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070294008 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068359592 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069353037 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079978012 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077575806 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080607987 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079441777 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068753669 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067816787 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072220887 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080536996 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079107513 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07985096 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069689241 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079196624 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067895334 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079706973 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084186342 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068099369 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069675539 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068257938 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068798948 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069228321 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077213651 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077428858 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069193457 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068928248 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068045425 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079355925 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077869485 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067974391 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076911859 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066897503 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068053366 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069209801 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069461934 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077171006 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079941223 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069614087 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068251246 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069402392 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068260724 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067065594 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076956063 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080337003 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078676453 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077510989 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06820528 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077281628 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077193721 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069194511 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077899255 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067221567 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068501211 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06828789 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076124359 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075549527 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077237896 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.197217506 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070273657 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078380686 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081804242 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069002298 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078491604 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080624533 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079461031 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068612303 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081360102 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069656584 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080761099 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070133807 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081234725 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069519742 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080538968 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068802219 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068692918 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069448786 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079778441 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073528516 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069177889 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070003642 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0697372 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079715474 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082930735 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070822166 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077774364 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078096789 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069958649 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07913045 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06845855 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07868629 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070069592 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069956048 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068422886 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082879183 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069479259 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06902695 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070105501 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080262642 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069181995 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079724145 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077922463 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068593843 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081176444 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08005136 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078161791 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080275825 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071193683 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068753524 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068230697 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069462211 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07813628 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079568556 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071180772 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068930305 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078085155 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079674492 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066987979 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07811314 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078805793 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078914034 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069165259 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070188559 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080928738 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081133325 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078146453 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.0781608 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078536348 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068775523 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077780168 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078347394 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068015625 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083741226 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067773819 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082569595 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078865099 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076995033 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078271646 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080317452 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079635645 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080169078 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083747483 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067927158 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068174969 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079383268 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068545057 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069672836 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077857562 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070124776 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069885532 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083094241 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068632556 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080384297 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067708225 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079184266 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067775956 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069266357 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081736871 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067495814 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068672138 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078113197 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068367122 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075623695 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078036953 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076342071 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066716891 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068704383 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20927918 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08040202 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069484243 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068950195 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070490396 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078748365 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078310395 seconds)
  done (took 18.633830843 seconds)
done (took 37.603679191 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210190813 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15338467 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183143462 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119234228 seconds)
  done (took 2.114462752 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119794036 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101923539 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092587612 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065183681 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098731389 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065272516 seconds)
  done (took 1.925835651 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312880575 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210477742 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189664595 seconds)
  done (took 2.091664356 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201969982 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189993346 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.423028095 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264502377 seconds)
  done (took 2.575283297 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144114619 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089245643 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067188568 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083679817 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133188892 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160035801 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100012101 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125038209 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078168648 seconds)
  done (took 2.418399642 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14916616 seconds)
done (took 12.654522599 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.257703831 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.206815425 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.23815017 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.208225513 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094784561 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.103002232 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121473508 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104625621 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142635497 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112206883 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090595035 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065568326 seconds)
    (13/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.176610318 seconds)
    (14/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077494101 seconds)
    (15/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.174530004 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07198628 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065304884 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.161563306 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078051114 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074035919 seconds)
    (21/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.176077246 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.100178553 seconds)
    (23/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073635753 seconds)
    (24/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.062022746 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065793841 seconds)
    (26/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.219916144 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099455276 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.128808713 seconds)
    (29/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161510645 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194052945 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182273013 seconds)
    (32/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.162968642 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090571542 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.18112231 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090429891 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.208918285 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.200791776 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071074915 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.083217132 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.172405215 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077658049 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.154055233 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089074266 seconds)
    (44/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075548592 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078162184 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090606079 seconds)
    (47/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071445764 seconds)
    (48/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.099723906 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127465985 seconds)
    (50/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080317264 seconds)
    (51/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06182621 seconds)
    (52/309) benchmarking ("sort", Float32, false)...
    done (took 0.132320791 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064966566 seconds)
    (54/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.187131569 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073176579 seconds)
    (56/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072698656 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086042527 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064719922 seconds)
    (59/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075663016 seconds)
    (60/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.152847297 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050443608 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052013202 seconds)
    (63/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143336914 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066924832 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.204635155 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17676271 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.195987821 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.062139607 seconds)
    (69/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07335445 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072044955 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050470619 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.147290404 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124202314 seconds)
    (74/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052327455 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183550174 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051758956 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051086996 seconds)
    (78/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089381849 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.170909498 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15241517 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139953066 seconds)
    (82/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076621881 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050355668 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089461573 seconds)
    (85/309) benchmarking ("sort", Int8, false)...
    done (took 0.142424404 seconds)
    (86/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088184305 seconds)
    (87/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.261482686 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.067432894 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051549572 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.216938667 seconds)
    (91/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.164342395 seconds)
    (92/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076984147 seconds)
    (93/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074846729 seconds)
    (94/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157144782 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064805867 seconds)
    (96/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051172072 seconds)
    (97/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.112145864 seconds)
    (98/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081969366 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050762915 seconds)
    (100/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074043722 seconds)
    (101/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066986001 seconds)
    (102/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074025096 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.15794944 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102351847 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182812836 seconds)
    (106/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072535824 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154803637 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091602155 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065809818 seconds)
    (110/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.151795142 seconds)
    (111/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074351565 seconds)
    (112/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076094037 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072711698 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093847906 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.163670665 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.144042064 seconds)
    (117/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.112166416 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140761794 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050885737 seconds)
    (120/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.073461876 seconds)
    (121/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07629382 seconds)
    (122/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09107844 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065723896 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095665423 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053138922 seconds)
    (126/309) benchmarking ("sort", Float64, false)...
    done (took 0.131083031 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050821474 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077163385 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.137537442 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071790836 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073139885 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064846711 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072478411 seconds)
    (134/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071002841 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139916274 seconds)
    (136/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061220146 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071194087 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072287517 seconds)
    (139/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051296209 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050392252 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088923751 seconds)
    (142/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061167468 seconds)
    (143/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05017997 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171099846 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051877833 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081152321 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071861001 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091715526 seconds)
    (149/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072127294 seconds)
    (150/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069356733 seconds)
    (151/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051044485 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066348132 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064899276 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07276984 seconds)
    (155/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075067824 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05215568 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138303799 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.139107448 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089347114 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066802765 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073347773 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051311119 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089022273 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091939244 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116481927 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064635768 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06788587 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079325449 seconds)
    (169/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068589161 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109247656 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.406025254 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051422717 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052534253 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068912723 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068785419 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052839409 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110103459 seconds)
    (178/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05047605 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053459202 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068138362 seconds)
    (181/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075299722 seconds)
    (182/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082490904 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072338612 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090492378 seconds)
    (185/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071202213 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07353582 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06459971 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074154829 seconds)
    (189/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050041434 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089994671 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066271421 seconds)
    (192/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072278105 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.0713241 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.182364684 seconds)
    (195/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067409724 seconds)
    (196/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.153441684 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094983124 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051333347 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074102037 seconds)
    (200/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073271567 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065177286 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063627104 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08760856 seconds)
    (204/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.075887662 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.245931256 seconds)
    (206/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06957691 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071664222 seconds)
    (208/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068068115 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143938195 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075525216 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073250242 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065422953 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06860979 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105910583 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138036893 seconds)
    (216/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089506539 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065615703 seconds)
    (218/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100130572 seconds)
    (219/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072381679 seconds)
    (220/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066062067 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071058958 seconds)
    (222/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07450107 seconds)
    (223/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064357947 seconds)
    (224/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081050012 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08915142 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070177644 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064323583 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051164308 seconds)
    (229/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050791002 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051773008 seconds)
    (231/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06821808 seconds)
    (232/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050765736 seconds)
    (233/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110813068 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069805027 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134232338 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13616541 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091204987 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064300518 seconds)
    (239/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.194900083 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066458318 seconds)
    (241/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.163858533 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051729701 seconds)
    (243/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077423296 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065558052 seconds)
    (245/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051875148 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051937599 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093410565 seconds)
    (248/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157473574 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108563214 seconds)
    (250/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086626361 seconds)
    (251/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072562396 seconds)
    (252/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067289069 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06684508 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072675041 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080111802 seconds)
    (256/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108655417 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051515902 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050643616 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065233443 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074220602 seconds)
    (261/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066153603 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073792633 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06644508 seconds)
    (264/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064605037 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086443417 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050531935 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050910656 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05049499 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175811985 seconds)
    (270/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072686389 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050807781 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073655245 seconds)
    (273/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065713376 seconds)
    (274/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081473174 seconds)
    (275/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05131951 seconds)
    (276/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066103201 seconds)
    (277/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051823694 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095407728 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050503239 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091311356 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064624868 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073154702 seconds)
    (283/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051938505 seconds)
    (284/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050130499 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063737914 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065415621 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071338483 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.0639193 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072880874 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051697588 seconds)
    (291/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050031107 seconds)
    (292/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063144647 seconds)
    (293/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051137516 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071463287 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064770267 seconds)
    (296/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06128976 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050407788 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070983609 seconds)
    (299/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06498186 seconds)
    (300/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051564777 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142161706 seconds)
    (302/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066902029 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07124302 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107724009 seconds)
    (305/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051370744 seconds)
    (306/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188263482 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.09969887 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171606954 seconds)
    (309/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051122414 seconds)
  done (took 30.87933817 seconds)
done (took 32.274883922 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089200989 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09303793 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075242599 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092909418 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080780066 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075862992 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072542729 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078534275 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080164339 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081589721 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077724431 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053848458 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073798488 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073733442 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074586131 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090978716 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077969653 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072868658 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072781119 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064450807 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072850923 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064867376 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066506387 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053981984 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078704252 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071395226 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071984267 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073791756 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065241678 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065052617 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068987683 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073075295 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064833842 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077917394 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072039723 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07265054 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075041872 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076599591 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066847369 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065079765 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07453415 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065166428 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072723641 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07349526 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071796359 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07114836 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072885705 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077744496 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090912256 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067073187 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074307324 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076309485 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075413293 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072041288 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068957048 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073224661 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070356576 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091229394 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073461498 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067036005 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07384647 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073968878 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071008961 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072565966 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072890185 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074958136 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075281388 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071086869 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074717665 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07142387 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064670462 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073775958 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068836359 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065111069 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075354595 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076788358 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063605714 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070459761 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072424324 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07060715 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064260681 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06706687 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066668422 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071565018 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067098739 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053545185 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068934753 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071595435 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063826293 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07294264 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071344098 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072142592 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066177094 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074885459 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064307722 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070537842 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064853125 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065002873 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066988633 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06903394 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.0648099 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066506001 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074469868 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066421648 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071416666 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078324738 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064414406 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071292902 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063759962 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063747608 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079071086 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074192652 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064479844 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067048027 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063566459 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072434451 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063909637 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064595862 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065509082 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06425521 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071316495 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064096554 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066395739 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071974679 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077627743 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063943633 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067465383 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065702247 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06413784 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070046499 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063568045 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063889117 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065525028 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060796823 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066284084 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064032529 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071507696 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065790498 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.205392574 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067059023 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074124052 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070373763 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071561121 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071446931 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063831772 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058342559 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067969466 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067722187 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067523235 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065272313 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067284449 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064747483 seconds)
done (took 12.377426708 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069485476 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14187382 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096606849 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095792274 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085929705 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066421639 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075597894 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100954969 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067806141 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101814184 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087601718 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085763974 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114089647 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064553013 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065352848 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069544036 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.0671963 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082522195 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100529155 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086435848 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115863393 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065159452 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092998106 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089964783 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088661833 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094154866 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068785055 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069740441 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069357332 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102010948 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087684955 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069661185 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066367438 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098378294 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093420854 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083809832 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065835128 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083246843 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066220975 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065110632 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067738239 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098975998 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080511634 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081097817 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069987772 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068630821 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066915591 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08421394 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089752582 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07908223 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085982825 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102506199 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068751681 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065026975 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063978995 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086086746 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065014615 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068813219 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065691226 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06823887 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065746479 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069013459 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081071217 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080228722 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069734985 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079399793 seconds)
  done (took 6.780701986 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086965371 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092346995 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083654528 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083789261 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065124784 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066152247 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065617553 seconds)
  done (took 2.030853291 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0687277 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089448864 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089460883 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089211915 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080936445 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087713708 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075972673 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065916034 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087579493 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067466253 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08720296 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100124062 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069500975 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073723916 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090898754 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065815798 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090116611 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066085685 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068677871 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090084158 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068404372 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095803879 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069360877 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06633827 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080274409 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066246884 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114008504 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070616084 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067278397 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069048089 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064023891 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106523737 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079850242 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073937367 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066266962 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080237471 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080402584 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064299934 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082674597 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074807686 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079979663 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066363784 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067232054 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063848839 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07005864 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076368859 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066860633 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066934182 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068680739 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086317424 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066994244 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079949878 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069277199 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071645533 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068022964 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072844023 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076168882 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067149934 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086506426 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067647855 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083192619 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082425581 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08005472 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083363498 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068464445 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079819363 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080540468 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068909728 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06789224 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06963767 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082649644 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06464129 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067429786 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076566938 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068341232 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089334905 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089010539 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067481804 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079721467 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066500017 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066051041 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066713377 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089432828 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071781909 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066108956 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070125704 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06964836 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064212639 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064980794 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069864464 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063907903 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067946836 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069041229 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068960043 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06896259 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08358296 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068738126 seconds)
  done (took 8.763201886 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07102721 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069099373 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068892546 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067111991 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067257319 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068028093 seconds)
  done (took 1.911639311 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095904534 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068906025 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080511877 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072017222 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103970584 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086467274 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08686513 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078022678 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082879537 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077898644 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086494969 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088028305 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092187417 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071868453 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085803408 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070890054 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087126984 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074500898 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07772 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072288785 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086161449 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072672088 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072007602 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081640064 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075763352 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071311882 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066882863 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078033609 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077727208 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078073454 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071558251 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07541309 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07016328 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078041577 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087128304 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069985415 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071111635 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076815741 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071890627 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075258304 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087566962 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071909692 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.0735499 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07665969 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077580536 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070104026 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076630321 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074345209 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085551883 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076531953 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076599661 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07044441 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074584002 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076550905 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069671437 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077199164 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076385834 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086404341 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071434984 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069732016 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067687386 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075225008 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077225168 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075727171 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078195052 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07656176 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070080566 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071773563 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072379135 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071165978 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077355298 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068204999 seconds)
  done (took 7.027843626 seconds)
done (took 27.983131484 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.534439836 seconds)
  done (took 2.001748135 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.615521895 seconds)
  done (took 2.108689334 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.155190777 seconds)
  done (took 8.647958166 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405270392 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.495527284 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.720767255 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132822122 seconds)
  done (took 3.280624261 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.712061982 seconds)
  done (took 2.216099323 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.218074506 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201561756 seconds)
  done (took 1.932695621 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380035382 seconds)
  done (took 1.876365153 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.14093763 seconds)
  done (took 2.634650374 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263391657 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.1747479 seconds)
  done (took 1.939651283 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.487064474 seconds)
  done (took 1.982222616 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.858456217 seconds)
  done (took 6.354235531 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.216274499 seconds)
  done (took 1.758271484 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24363905 seconds)
  done (took 1.741867448 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.764592636 seconds)
  done (took 3.2617043 seconds)
done (took 43.23556648 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082373756 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080746092 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080939858 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078079753 seconds)
  done (took 1.80338538 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079318106 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07304699 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07614093 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072853819 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076157278 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072783258 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073721434 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077062243 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071625266 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072471199 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072812165 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072204604 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074334502 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074557381 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071008031 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074564966 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075220513 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072284744 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075508274 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072313432 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069926103 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074346974 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07415744 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07118508 seconds)
  done (took 3.266327618 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079917352 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073135353 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074158533 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071528379 seconds)
  done (took 1.804232015 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08094852 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096671369 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088324732 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078091585 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091685756 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086468581 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068367805 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068577798 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070192153 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077199511 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067423482 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095657166 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08802722 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077273172 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079049372 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065345686 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067682036 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086543426 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077142358 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077710046 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070071504 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07684847 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067231577 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088131052 seconds)
  done (took 3.391057703 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089599862 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105268795 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081602233 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088916199 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090002594 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064861606 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08686848 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090521874 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126221697 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064326876 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069875412 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06483806 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072491084 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064482365 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080336754 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106139755 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109945497 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067817633 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096197275 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064485752 seconds)
  done (took 3.199185385 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074683258 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069689897 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064774451 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068479406 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077188081 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072517693 seconds)
  done (took 1.941824945 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071068186 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069691424 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066857212 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.0661835 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07090982 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067310872 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064597276 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066806139 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067331779 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06667155 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066186728 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065093743 seconds)
  done (took 2.315437071 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205128419 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067912965 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068229239 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065233608 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069890849 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065644097 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080032441 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067332253 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090973037 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065989505 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065805104 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06787768 seconds)
  done (took 2.488294483 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211456519 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07548692 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238815635 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148941036 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110157761 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115014366 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111038543 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11353019 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141198054 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100485329 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167002346 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16651422 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10713012 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136603079 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087928588 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099815571 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153167103 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162297115 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104251984 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166188242 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145265764 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125295278 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147530514 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106268458 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105715671 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121241593 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07040812 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079432205 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169481564 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132553594 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143284261 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110467185 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092105709 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176868999 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171412075 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140105268 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14567908 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083732953 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104748452 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132845241 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198926336 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08797205 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160284541 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107233629 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21860247 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133791423 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119287626 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121056018 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106495966 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0896306 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14560166 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183073061 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136623577 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087088342 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123941275 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113536861 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114434949 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112724622 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183037554 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16153036 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128549795 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071889572 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108270395 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154109891 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132695843 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108181691 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125871379 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091443534 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134900788 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155202713 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119449865 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145249221 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115662278 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088304086 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119484113 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139648401 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127349686 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160438426 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123317314 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072092718 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123020486 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10118745 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080093387 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14501064 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074812425 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175243555 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098137115 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10771857 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123862942 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109190456 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108282881 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158340796 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14435597 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102266012 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064093422 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245276568 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121105111 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14781058 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086949958 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109667555 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120326769 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079131736 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13889767 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076511626 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125869872 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078352633 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127485242 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130722341 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076485797 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121847982 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104221474 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101076345 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131736153 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159839216 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087889404 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081841469 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168853414 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121047789 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103939852 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143986063 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15727648 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101681066 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10122218 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149296834 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180220397 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08907034 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162754793 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106151148 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083351995 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087040502 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123199383 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111556578 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122410385 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080928672 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117528144 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168728684 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073914616 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095085038 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133797705 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077994453 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080355095 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105546854 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103656136 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095076605 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099313608 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102247538 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135831283 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123004043 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10464096 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123068398 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097525251 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31495567 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087451486 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101517291 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104337761 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069997914 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13583879 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158395466 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078657194 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165030142 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122699001 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114901599 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11984676 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082882499 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13983345 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079349975 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069572019 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143166796 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109152915 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108981176 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152174378 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115560169 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125762387 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11898591 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132348466 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131511574 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130599 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104780959 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087662017 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111021603 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125812421 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072390259 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090244541 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080186847 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103433495 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095154504 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082298682 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140693799 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123476954 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10821357 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111478033 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095871129 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147733418 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075218649 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127445963 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119014256 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094863078 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152237943 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15252573 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1302247 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098492227 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136175235 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069432243 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073185917 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087380278 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122149636 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081535446 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082097143 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25783434 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148801837 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130671698 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136322047 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122515604 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119666272 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155712118 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069378568 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118815182 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147844253 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12171251 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104270846 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089893647 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098948045 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142010864 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106467217 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18185056 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117657202 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123262326 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152402622 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099920644 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078889493 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102231059 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135928446 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103773845 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144420205 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09936022 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087706006 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109145284 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073648293 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09832631 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126479188 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118800133 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133699436 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114390249 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13171816 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076727496 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115454742 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120275889 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120956662 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063229495 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119850064 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161355175 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094282643 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118417611 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152389574 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078123605 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132604906 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174652418 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143148052 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083794342 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251438566 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119902504 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127533785 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120153042 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142105988 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107526384 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135836325 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110847376 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08530399 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08756289 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097378674 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104498173 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094080189 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10707092 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112891584 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095237563 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130958274 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102866698 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109179472 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116958604 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097676945 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090461878 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095489424 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176918631 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118047612 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171834136 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100529997 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144933981 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164656446 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073453334 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078236431 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077243665 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139359942 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083744422 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130132587 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106347447 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116474044 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122793464 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141971296 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094980362 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06784414 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108485351 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132197272 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123447272 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096923045 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10289823 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16390338 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100474859 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078555417 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113350085 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115515967 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101682961 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171096631 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060636032 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104903749 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075407605 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079365454 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127248265 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292714546 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079974086 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102849906 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119788525 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111789612 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12790194 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100333299 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107780046 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125658037 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15034908 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127452848 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089431646 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111581889 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127867164 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156378041 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103924039 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095533929 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172330223 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152511095 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159262376 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087027997 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114759801 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113799008 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108120169 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136894406 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082473902 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162874613 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081350247 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135477487 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102226488 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089084195 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129022653 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107648541 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087473361 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147464995 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116469584 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082147004 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076840644 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116783507 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119702365 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105513828 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074234145 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138579862 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072836528 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13404387 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159278178 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08038407 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107428542 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095536758 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078241505 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104889766 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100647546 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08628189 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098502935 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.31800172 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087920239 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151702373 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133826168 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112358381 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136997714 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102505809 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639163596 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077613654 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15353348 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115785698 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174159974 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100020781 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118172561 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108991225 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121843764 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145180929 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103800324 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180229157 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131760423 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115908912 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079336662 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101431869 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10362726 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087716951 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107311045 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114157517 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11515099 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093203369 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114992815 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124032734 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081183012 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09499496 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155744968 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116243375 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14272736 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140321631 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085030024 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117518302 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137439285 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07968333 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120564741 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151303604 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105165499 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098149122 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080403083 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099329838 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157789371 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.0732337 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157488481 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116899798 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252502021 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114111298 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112702839 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13089897 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106478351 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122456897 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091815736 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110045913 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114262052 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080864716 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076856972 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104516007 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111063642 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097611135 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097028052 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098787881 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152019318 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071283758 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098755289 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113777322 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144115445 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173598049 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088140228 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082378075 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117773868 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112499596 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111709254 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121063207 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078339729 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080695118 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080969273 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076925003 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108306471 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112008048 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114280186 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110424225 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163484365 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082586244 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229969038 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095102199 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104921751 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069391212 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077714073 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095331786 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097727592 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1066384 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109770223 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158829323 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094997413 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089584971 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091342973 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074026072 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082776547 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12816674 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10946376 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117569045 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097417123 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061353682 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105948407 seconds)
  done (took 58.698882894 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111270972 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082062059 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095768305 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143614749 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122318605 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201989746 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152914034 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18800882 seconds)
  done (took 2.73202178 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07018404 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096566373 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103251829 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083113486 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066260367 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067377302 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231683208 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079790182 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065559259 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09792274 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077111173 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067815109 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.427684435 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066686703 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066456417 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060551782 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066231443 seconds)
  done (took 3.402991803 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.386716326 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.608059629 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.381111229 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072444623 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.516217155 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087558833 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.171607739 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.12655443 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072036887 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536402688 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703189218 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.122803194 seconds)
  done (took 18.403071318 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079510617 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071223311 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084239028 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083963136 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072788868 seconds)
  done (took 2.074114082 seconds)
done (took 107.047497887 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084122471 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.619044245 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052735078 seconds)
  done (took 2.31908668 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086883091 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085707428 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085753457 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083770043 seconds)
  done (took 1.964788804 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077372072 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076984498 seconds)
  done (took 1.770604158 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234181831 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169945513 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096263783 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086909498 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080442447 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080892376 seconds)
  done (took 1.865951276 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075950347 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07574541 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072948693 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077026117 seconds)
  done (took 1.911200891 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080366459 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054083252 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056276121 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057762386 seconds)
  done (took 1.861033862 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090967394 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081724787 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079739655 seconds)
  done (took 1.866240269 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105777046 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087061051 seconds)
  done (took 1.805296278 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085777102 seconds)
  done (took 1.704529852 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104927057 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104987255 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132565573 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111171721 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141075342 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109720551 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084926762 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085941463 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076794445 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086892469 seconds)
  done (took 2.656493959 seconds)
done (took 21.923896991 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08289539 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36890625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361314956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090411738 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669766733 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357407834 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98138391 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09271404 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115529945 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067773575 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085124519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649030069 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974478886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32329642 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96003937 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323760281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650108655 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068584072 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067853801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068008072 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966833902 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068034534 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068007487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068762658 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648985856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372683513 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067866476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324072388 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068053621 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069962941 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356369321 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06862552 seconds)
  done (took 16.109119166 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075131652 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120947109 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073215208 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084515576 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070498724 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070063053 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071303737 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068825293 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122674721 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067944133 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085556462 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068070496 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072109611 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068772847 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088217595 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085859362 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068408193 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06880516 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068443871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069094854 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087736491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067765544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068692054 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068562196 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068323571 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08119669 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069152635 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068443058 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068824059 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070030661 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071095117 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069317809 seconds)
  done (took 4.059363872 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121679115 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128025096 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073975362 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106108049 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115472409 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070600233 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148447856 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094762948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131007594 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068096491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085725036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067953559 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103028123 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068954317 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088773267 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068394228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068976299 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068490558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067824389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068202046 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087537053 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06787175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067961446 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068738034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068121466 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081950315 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068856475 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068524599 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06816328 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070007937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071406651 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068488691 seconds)
  done (took 4.307427963 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076672669 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076230321 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083154201 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084438124 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069247311 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072455416 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073384732 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069834815 seconds)
  done (took 2.244052779 seconds)
done (took 28.346160378 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082607384 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071286396 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072652805 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082448888 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073476717 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079416525 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067768415 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076002705 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07307058 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073510924 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075244259 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067634819 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071635472 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067235404 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074365161 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067931997 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079325748 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072035721 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079435466 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079875626 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070027728 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073134383 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075576605 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079192362 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079037139 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078811994 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077112211 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072905294 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069119422 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070579656 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07702095 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084059988 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068285409 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079047433 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067800293 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06847185 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071393777 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067455333 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079039532 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07700119 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069851435 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076159101 seconds)
  done (took 4.73037237 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093252464 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095821343 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085361187 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061678958 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067441293 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065818633 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089524856 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059785976 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059425755 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088629742 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055539442 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060097576 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066010827 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053414287 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060289261 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.0565139 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061819273 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055553404 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060057724 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05974023 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089741032 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053647664 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077504295 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063207422 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055826626 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061364215 seconds)
  done (took 3.399874028 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078295121 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088963945 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090064922 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131992613 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105899589 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079358435 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080923765 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095638529 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088889858 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066644136 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071326504 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093018063 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092263062 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074622762 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067730119 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086503751 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084470095 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069107422 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073701204 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096585452 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087492659 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087118972 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099889784 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084563271 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067359494 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070435262 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071675065 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082257099 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072624301 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077218752 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072183401 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071714834 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070117313 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07944096 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071986168 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06979504 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093355456 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07783404 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079462101 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06879037 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071443465 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069409647 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093990004 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134441335 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067248435 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074523735 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076538967 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077844385 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068108021 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089183603 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07968135 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067716502 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071350473 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06740065 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068327305 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083255468 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070214458 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070380178 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077584176 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071766544 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093472961 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073004833 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084257909 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067688684 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076060394 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067319303 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069348387 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067836432 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096490217 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069943989 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113595621 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069385347 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.0696435 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077738473 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075978091 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074404949 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069253719 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083920152 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078926562 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071578509 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077680439 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071474657 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070952093 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092443464 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070783148 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069998611 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069258067 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074773615 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071085524 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069501428 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081735792 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069996847 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071525999 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085433871 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068110954 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069194741 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074250403 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072756326 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067657462 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079107333 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072763616 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068644373 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07803471 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06786724 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070837999 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081067741 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074723045 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066865891 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072647566 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073887119 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068507383 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069252529 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070680949 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069810374 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076743961 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074795696 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072035003 seconds)
  done (took 10.724155269 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170171932 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159157503 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07117994 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149632317 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076810037 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079871504 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152296324 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09534354 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.079631809 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068564229 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068623855 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111282556 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107020994 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116646999 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079822671 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068018968 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085324754 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11590506 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154079888 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147982843 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085093251 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077305884 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069744121 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069075399 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070616975 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079427801 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086081386 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077062191 seconds)
  done (took 4.450944116 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085265257 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109272943 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075627216 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091947566 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091108852 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068140915 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070350669 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070171525 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081741652 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079050907 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067624229 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073506063 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075179135 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071590323 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068930003 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075110117 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074820753 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069692319 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07167022 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073917841 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078752525 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092749877 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071688134 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067394838 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073184684 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06703548 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063956341 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084728579 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068480249 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095435287 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065830783 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075614889 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082159137 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068759511 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067913197 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068012652 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06785748 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068261915 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069686287 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066591243 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066808756 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057518649 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067754237 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080240103 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074983183 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056583268 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07296933 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073681486 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073325251 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065517405 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071336347 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070894876 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070981399 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075808614 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073479084 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073496167 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069513509 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074818058 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077532258 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068140272 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065204317 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066596986 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072695964 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065493659 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07725843 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072816076 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066387319 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068258313 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069866719 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074950854 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06776945 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071555545 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065733826 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06979849 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072840777 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069971069 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069420972 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.0664352 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067561629 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06891233 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055428566 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067706914 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052928014 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071340467 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065955222 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066556608 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067657098 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072744003 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080486228 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06919459 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074055942 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069021642 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067311951 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071123254 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060207173 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070566795 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083736108 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083075258 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068282076 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06578692 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083341394 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072739442 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067219771 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.0562394 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075592325 seconds)
  done (took 9.226642665 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095515779 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070650427 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08656913 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093954127 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088323364 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075924601 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077823161 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069991613 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084077629 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074214478 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077503758 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068127305 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07865409 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077889706 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070523263 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078612655 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072678662 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085770106 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083176884 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068308418 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077208106 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081158965 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091373676 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082941955 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081632536 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082401408 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091334346 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072452286 seconds)
  done (took 3.919812976 seconds)
done (took 38.082028978 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.712881823 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.897273298 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.714276724 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.123148279 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.79092878 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.890868195 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.789706849 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.71155411 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.902645525 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.750084372 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.918947469 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.831661975 seconds)
done (took 64.682424766 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.77734016 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.860543714 seconds)
    (2/2) benchmarking "String"...
    done (took 1.94042003 seconds)
  done (took 5.45069753 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.933893229 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.272392437 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.962699445 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.711369582 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.714572593 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.052529741 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.522399061 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.224200432 seconds)
  done (took 30.111746764 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.854250229 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.944485523 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.404501097 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.445293599 seconds)
  done (took 15.352769517 seconds)
done (took 62.362329639 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.711798559 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.739838474 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.718834725 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.695992205 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.770226178 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.719270218 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.929683813 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.749442702 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.709384056 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.703190394 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.710628215 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.151209826 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.720061427 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.073530034 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.714194135 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.725000522 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.730770709 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.200833706 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.87269535 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.725930363 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.717021542 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.91434917 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.714362098 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.723243982 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.753234128 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.714015044 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.171651277 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.72674248 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.338263598 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.71091076 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.744648106 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.2897598 seconds)
  done (took 202.239538845 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.714962198 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.792853189 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.883559087 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.747535899 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.230943915 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.904403711 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.849051853 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.28915107 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.718617626 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.737061815 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.033465713 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.71533672 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.059899738 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.709905167 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.743382685 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.719504337 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.981465807 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.006598174 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.749946835 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.8984571 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.724553733 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.8573559 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.809399804 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.948515922 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.733685067 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.745906721 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.737917866 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.730039835 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.919621074 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.948833253 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.75025004 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.759130461 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.912945901 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.588937558 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.718062647 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.731577091 seconds)
  done (took 168.757233314 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.103917549 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.717788007 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.716275658 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.717709033 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.722364089 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.716670424 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.840013718 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.840268789 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.31024127 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.237918808 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.767518891 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.555823458 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.713587728 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.788421004 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.727280652 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.715537525 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.73506021 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.747452058 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.717892631 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.717806913 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.844666277 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.729600167 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.923210386 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.720422725 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.719501184 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.723404681 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.09334056 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.714882811 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.726128837 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.964130115 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.715563749 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.716464437 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.612958702 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.32029813 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.720603811 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.803185292 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.714507806 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.719591289 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.728069542 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.718981672 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.941428003 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.714143795 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.718864975 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.722916282 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901392193 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.715451522 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.843847544 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.715708 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.219969422 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.717476681 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.718028897 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.454313885 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.421882682 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.716979719 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.71844876 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.721457586 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.719173865 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.719620962 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.727011336 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.52949229 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.794694115 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.721945317 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.723433511 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.725716405 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.7219128 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.887951305 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.720234983 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.170185348 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.778590296 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.846385635 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.842556213 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.720611386 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.78878167 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812818288 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.722039843 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.719957361 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.720126263 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.719165562 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.717595527 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.800391188 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.716504514 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.841357135 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.721362639 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.723246383 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.772192371 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.789209666 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.713803145 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.72046366 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.604010107 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.717828869 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.720053851 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.026572789 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.782556172 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.715352477 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.717009558 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.719838034 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.844086738 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.839396147 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.503779502 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.717776896 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.610967281 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.909907713 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.923618973 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.720354048 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.987145111 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.719059172 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.814701845 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.724149702 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.726419431 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.722662204 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.756679737 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.72243063 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.781189167 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.723913374 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.096688606 seconds)
  done (took 396.76445258 seconds)
done (took 771.574903674 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.409268493 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.363761974 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.489348018 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.384540278 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.359715299 seconds)
  done (took 13.665399241 seconds)
done (took 15.323014314 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.818350306 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.814961619 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.744618444 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.813487367 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.742353291 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.813763793 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.794323691 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.746631906 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.781317922 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.746118373 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.787407689 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.747345433 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.733716348 seconds)
  done (took 24.746629365 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.9568298 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.98250001 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.80044051 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.963294819 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.775403563 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.959068779 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.898629235 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.883795925 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.893901719 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.738467676 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.737559841 seconds)
  done (took 22.252149626 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.959470661 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.977496248 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.803988212 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.966810439 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.778166875 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.977116392 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.892954955 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.874951176 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.87461062 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.738913364 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.738958304 seconds)
  done (took 22.243612843 seconds)
done (took 70.902088569 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.733527999 seconds)
  done (took 3.394018876 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.758908633 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.913448769 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.741789976 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.737130904 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.733782058 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.735147461 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.738012853 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.734101211 seconds)
  done (took 15.755726346 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.734416343 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.733657596 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.729952146 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.73266543 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.734038022 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.733862373 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.731709089 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.731173262 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.730895551 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.734075341 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.732461634 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.732438964 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.730218959 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.730830605 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.732544284 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.733237707 seconds)
  done (took 29.381850584 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.733785869 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.73134189 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.731388613 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.731815905 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.732949761 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.73407583 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.733544205 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.732304608 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.733288744 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.732852373 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.734244336 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.732588278 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.733677189 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.734591548 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.732391371 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.732892352 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.732928583 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.732557121 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.736744937 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.733287166 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.733349348 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.732922836 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.732956841 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.733752544 seconds)
  done (took 43.262429754 seconds)
done (took 93.453905718 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.670447545 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.182534501 seconds)
  done (took 8.516457074 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.738274764 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.735460591 seconds)
  done (took 5.181962519 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.735868773 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.736871003 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.737093176 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.736544085 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.737055609 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.737256975 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.739440412 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.736909253 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.735530501 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.738455688 seconds)
  done (took 19.035845676 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.736587329 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.737846353 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.732868479 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.737261409 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.736622606 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.734677662 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.735571761 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.736477975 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.736651652 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.733419822 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.736882393 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.735147671 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.737676153 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.734725239 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.738608024 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.733981933 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.735421877 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.735605044 seconds)
  done (took 32.911056558 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.73786496 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.738846728 seconds)
  done (took 5.14215423 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.735273639 seconds)
    (2/7) benchmarking "second"...
    done (took 1.734676476 seconds)
    (3/7) benchmarking "month"...
    done (took 1.736160813 seconds)
    (4/7) benchmarking "year"...
    done (took 1.735831448 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.73458271 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.735604411 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.735192006 seconds)
  done (took 13.813607799 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.739648115 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.905262512 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.974724338 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.378707466 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.74075569 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.74055156 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.70042732 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.741065663 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.744443813 seconds)
  done (took 19.332228427 seconds)
done (took 105.593879239 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.596018413 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.730965157 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.097336671 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.789742586 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.778958818 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.073869914 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.745702316 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.035089312 seconds)
done (took 42.512467228 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.804028915 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.291286299 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.31908875 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.22724762 seconds)
  done (took 12.504615084 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.733456657 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.258690316 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.769998179 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.326621809 seconds)
  done (took 19.780359318 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.104573781 seconds)
    (2/2) benchmarking "read"...
    done (took 2.081152853 seconds)
  done (took 5.859444735 seconds)
done (took 46.616850309 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740073255 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.739366385 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.736376734 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.740585442 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.739818448 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.736688854 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.738052148 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.737898535 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.740308649 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.739688364 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.7390263 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.739623288 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739927047 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737160503 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736904606 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739624917 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.737049812 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.735961964 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737068196 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.739310813 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.73736742 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.74023992 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.736755218 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.736376308 seconds)
  done (took 43.389778962 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.739550795 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.739031369 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.739737014 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.739895714 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.738335806 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.740653326 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.741010661 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.738794333 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.740008221 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.740686948 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739326142 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.740031461 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.740985247 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.738200071 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742645455 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.738444581 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.742393732 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739901009 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742131815 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.739598067 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.741436954 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738762574 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.739774599 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.742884369 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.738215356 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.738698575 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.741468748 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.740391034 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743167934 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.739364564 seconds)
  done (took 53.875436983 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.747008381 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.751431731 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.745063119 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.743325796 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.742580556 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.743514211 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.74299566 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.74266032 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.74114361 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.740692618 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.742052982 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.741484748 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.741649065 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.743093427 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.741559455 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.743136226 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.744281916 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.742913909 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.742231193 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.744197788 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.743895667 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.743410637 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.74371665 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.742977602 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.743851441 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.744468472 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.743806564 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.743609917 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.743929201 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.743780852 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.749595296 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.742902742 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.743405683 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.742024323 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.745261228 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.747281806 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.748453069 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.751005025 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.741041904 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.742645595 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.741765426 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.742313817 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.742350485 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.741892346 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.742957041 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.743698745 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.743115738 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.740681347 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.740411529 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.741649881 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.741706799 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.741574865 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.740475241 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.740388332 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.742289268 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.740270788 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.740401375 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.741393336 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.741239021 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.741731499 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.741967849 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.743400636 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.741653077 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.742727217 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.743651699 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.742433461 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.742537643 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.741121477 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.741172562 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.742040127 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.741117136 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.739841734 seconds)
  done (took 127.166704759 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.739112223 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.736536283 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.736816404 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.734932631 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.730521389 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.733094023 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.731228694 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734705539 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736008221 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.73308494 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732660768 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.730609179 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730750329 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.732951422 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736498406 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.729259193 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.732056004 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.728406705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.731457988 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.731977534 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733816655 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.728264967 seconds)
  done (took 39.792624733 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.73077515 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.731753205 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.727513046 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.732465372 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.72953581 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.73309998 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.732529661 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.733468948 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732643286 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.729817484 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729553528 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732179677 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.72953259 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.729499072 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.73031787 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.729168034 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.731570215 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.728741972 seconds)
  done (took 32.814253156 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.730433295 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.73030936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.73250921 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.729507654 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.729787454 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.732020646 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729247248 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.733348585 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.731402322 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.730471637 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.731546172 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731780102 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.732536912 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729394274 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732588617 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.72966082 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.731872364 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730245185 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.73179034 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730286186 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.729769912 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733924433 seconds)
  done (took 39.74546956 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.733032336 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.735334909 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.730432892 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.730124229 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.72832098 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.732905099 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.731838949 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.730715833 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.73344457 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.732441461 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.72985759 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.733460863 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.731242972 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.732753284 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.730769986 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729972979 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.732375562 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.731819508 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.733809571 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.731818946 seconds)
  done (took 36.298415635 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.734431152 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.736027849 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.735154957 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739081459 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.735063173 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.734103135 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.735633779 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.737415474 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.734927742 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.739094488 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.734955881 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.735208835 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.734801518 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.735709159 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734822694 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.737623474 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734791589 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.736029783 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.734344048 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.734286448 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.735802732 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.734094256 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.734470737 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.736168994 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.736519419 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.73480631 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.737572655 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.734594677 seconds)
  done (took 50.261098699 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.733955881 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.734192892 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.730761852 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.73284164 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.726830928 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.728886933 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.728855121 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.727992429 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.731542419 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.729651513 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.729336659 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.728738211 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.729361901 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.729574139 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.730165884 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.73203052 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730982693 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.727139042 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.72779815 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72668141 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.729138494 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734952587 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.732203941 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.727038102 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727739528 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.731992172 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729862474 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.728366786 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730848356 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.728271434 seconds)
  done (took 53.560210566 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.748757836 seconds)
    (2/2) benchmarking "in"...
    done (took 1.74964174 seconds)
  done (took 5.159137928 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.727955031 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.730953319 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.732664398 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.728747398 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.73009467 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.731191152 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.730173314 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72929833 seconds)
  done (took 15.500130301 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.731216787 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.728947175 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.730126949 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.732702311 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.732430972 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.730700764 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.736023518 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.731751737 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.73270062 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.731402533 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.738104256 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.74067374 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.732247478 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.73108783 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.732621773 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.733413914 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.731520873 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.730435138 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.731311833 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.731992787 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.729947725 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.734485793 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.734003759 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.729925423 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.734432861 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.744258765 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.735986686 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.731360101 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.730710667 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.735870899 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.735498032 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.729534461 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.731444491 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.734047631 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.733545385 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.735833231 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.738831188 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.729891213 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.737789314 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.730076221 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.732452122 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.730781038 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.731443788 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.732638717 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.733251963 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.730821009 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.73081733 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.728617288 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.728692338 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.732664036 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.735911475 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.729094216 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.726008639 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.735589906 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.730388549 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.735171054 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.729398683 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.733538372 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.738813713 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.740295236 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.741458378 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.736573478 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.730317314 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.727373746 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.739136318 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.7531455 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.733711621 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.722674128 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.723404005 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.727518566 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.736839518 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.744679462 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.740862146 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.730571372 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.731477808 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.728796989 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.727517528 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.729504146 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.735619192 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.729842962 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.725435695 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.728007129 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.739435769 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.751758707 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.727673946 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.731068029 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.727781248 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.731251532 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.729417186 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.737090367 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.729313298 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.729616461 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.72966562 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.733309166 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.729168236 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.728365319 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.729895218 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.729966519 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.724403718 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.730541201 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.728962544 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.732786932 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.738050422 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.729821348 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.729706518 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.735305509 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.728469288 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.728108407 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.732685381 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.727102447 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.727934377 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.726576903 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.734042209 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.723658028 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.729626973 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.737217155 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.726726919 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.726847976 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.72615836 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.725960134 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.738132804 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.755156094 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.728295922 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.727803082 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.731014804 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.73943665 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.727129247 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.728656916 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.72507256 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.722137217 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.721355659 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.725178113 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.727769396 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.727363874 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.727824587 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.728485587 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.720082238 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.727026603 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.727955861 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.730980317 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.726706479 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.727791421 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.729703146 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.728985269 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.728682516 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.729104754 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.731721872 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.727447493 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.728445585 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.727502051 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.723684361 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727251752 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.72770383 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.726492844 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.726902593 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.726928885 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.726435968 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.727641099 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.725863651 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.725900126 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.728742985 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.728100182 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.732073494 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.729588722 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.727159567 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.725976828 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.723057576 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.7281155 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.731615555 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.72564834 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.726074755 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.726414809 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.730146965 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.734896887 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.730244703 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.728262801 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.727193053 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.728240039 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.729335782 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.727239579 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.731892325 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.73526603 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.727255394 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.731593162 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.725919287 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.727207729 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.727369245 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.725441527 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.72475279 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.728123946 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.728865573 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.731610736 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.739995627 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.732787842 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.726693068 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.727172052 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.726285554 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.729741367 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.729927987 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.723258637 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.723939751 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.725696038 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.723829808 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.725805641 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.727398894 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.724091148 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.726875171 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.726931997 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.727125719 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.729459343 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.725944239 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.727136929 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.726396203 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.726260242 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.727502332 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.730845401 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.723916153 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.722450919 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.725620562 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.726213997 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.729376218 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.728798155 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.732200501 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.722390148 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.726849978 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.729525897 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.7274553 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.726608166 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.727576013 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.729556149 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.726243014 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.732007858 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.726689052 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.728489916 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.734554608 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.726918671 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.72511286 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.7294015 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.727576851 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.72256133 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.728557949 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.73343286 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.723660064 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.726230366 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.729710784 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.726930815 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.726277103 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.728586983 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.723697223 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.727361521 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.725555954 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.725677766 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.721173058 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.728683425 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.727125318 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.729750232 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.726988298 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.723147845 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.723961519 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.72830136 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.726136293 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.7282038 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.725890383 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.728070062 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.732287288 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.731230117 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.726710953 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.729271251 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.726462398 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.729239633 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.728860371 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.725953331 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.726419238 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.738160943 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.734490879 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.731731828 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.726117927 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.726033599 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.735995106 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.727182112 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.726680402 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.726662657 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.72695893 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.726908155 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.730328202 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.722626496 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.723817689 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.723042857 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.72902375 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.723367047 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.731777904 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.726618016 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.72728266 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.72340289 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.726268275 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.725449342 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.724724342 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.725514941 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.725459131 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.727039072 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.722734978 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.725353238 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.733598506 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.725805926 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.72718266 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.726063701 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.727502875 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.72644243 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.72697438 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.728826954 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.728558636 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.733171309 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.72901968 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.734186165 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.727528951 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.73274986 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.725934508 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.731146328 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.735981678 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.724972387 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.725300052 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.725774542 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.725845728 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.733302003 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.726811445 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.729321719 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.728840798 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.729204865 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.729703195 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.729421083 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.730232679 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.727954005 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.724461102 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.7364352 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.725453476 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.73100782 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.731489952 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.725040717 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.727661554 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.729191135 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.725973739 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.730687943 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.727834179 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.731161081 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.727556011 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.729585277 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.727443139 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.729316259 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.729082991 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.724570702 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.728370823 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.73525749 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.727608409 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.729709042 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.729264605 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.734322143 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.727342479 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.733722058 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.727216797 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.7328813 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.729397456 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.728622257 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.73034869 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.729002633 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.730255697 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.731418261 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.733338711 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.732869322 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.726742022 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.732911845 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.728629993 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.73342791 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.728372637 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.736277562 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749012256 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.730391021 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.73318095 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.726877845 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.730868823 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.733305266 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.731762616 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.728479007 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.732800995 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.737860403 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.734637394 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.731161554 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.72955357 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.73145381 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.729913813 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.730802513 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.728768868 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.728417454 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.731040782 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.730179264 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.733410242 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.735211157 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.732310487 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.731253227 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.731395702 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.732220789 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.739964792 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.730738837 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.732028282 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.729954142 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.730388565 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.730767139 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.732592313 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.728860021 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.731699403 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.730163353 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.733556902 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.737667561 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.73580959 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.734370149 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.728800294 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.732936659 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.733451591 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.736619781 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.731173173 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.732793572 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.731976302 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.734435869 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.733048855 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.739321052 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.728330555 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.729808161 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.73059252 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.731593345 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.730501854 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.740129607 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.730489439 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.727843814 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.730191046 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.73174006 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.731837128 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.729546425 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.735835994 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.731811486 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.7392031 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.73884979 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.737302532 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.730677218 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.733817351 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.736028784 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.730009375 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.730350412 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.733841505 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.732461612 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.730389206 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.732670982 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.730705978 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.738644268 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.733171254 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.730269614 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.739017616 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.731354649 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.732434449 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.731870573 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.743286622 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.734518278 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.732396949 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.73497156 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.735695818 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.743673271 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.736256073 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.736355902 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.736991631 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.732588131 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.736341813 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.740455673 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.736112587 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.736931757 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.733999406 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.735172216 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.734303001 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.738099214 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.730483991 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.735578744 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.73712195 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.739338138 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.742472791 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.732642802 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.736632096 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.73528419 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.734657705 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.737141948 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.738180976 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.732202625 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.731636677 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.734971027 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.734942943 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.737385041 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.74168892 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.732872922 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.734004525 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.734853366 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.736712292 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.737673242 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.745548314 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.738577881 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.731476016 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.736145156 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.733563794 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.737528662 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.7374036 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.73320735 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.735701656 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.73573799 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.731769779 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.738043838 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.73162296 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.737265437 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.74566808 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.731515358 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.731484937 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.741113189 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.737718425 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.734042362 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.729145819 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.734936128 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.737899885 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.741096326 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.740192401 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.735616945 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.740430156 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.732769896 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.731579784 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.738019293 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.730292275 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.737412693 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.731685388 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.7292179 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.734923147 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.738661853 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.746287088 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.733718708 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.737291358 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.758661042 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.734791506 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.73208212 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.730374556 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.729957065 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.731115796 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.733328006 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.736207285 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.731370425 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729767093 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.730644748 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.730456998 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.73508046 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.736499571 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.729141771 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.730557989 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.730737284 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.732721663 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.726536657 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.731819402 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.731032808 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.732077139 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.732425519 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.732996628 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.733400368 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.744121153 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.740859719 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.733292653 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.73320211 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.73015534 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.73867914 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.734524038 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.741095054 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.736747605 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.733109834 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.735072165 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.734958085 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.732171567 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.729892836 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.733808364 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.731768984 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.733359288 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.73142184 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.74602548 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.740848354 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.739275285 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.733547334 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.737371308 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.733078949 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.735605461 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.733711273 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.735033229 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.735965834 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.737812592 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.736401303 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.733789092 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.732745442 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.737231784 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.742113545 seconds)
  done (took 1033.564338324 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.73072461 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730932415 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.731219443 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.73188983 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.729867545 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.732359947 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730768941 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.731736879 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.73021849 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.731996807 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.733083794 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731285923 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.733498242 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.732166784 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731052226 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.730821646 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731816444 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.733581687 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.732369551 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.733651535 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.73225527 seconds)
  done (took 38.034992671 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.735832409 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.732390807 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.732061736 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.735227937 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.730920862 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.73486615 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.732992864 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735321308 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.73622334 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732853645 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.735586894 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73529439 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.735984508 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.734671948 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73421167 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736554603 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.73555035 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.737287649 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.73636412 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.734265833 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.735621753 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.734950386 seconds)
  done (took 39.830461638 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.741830333 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.738600516 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.737602623 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.732946591 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.735646312 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.734270322 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.742302644 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.737990392 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.737979727 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.737334483 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.737517118 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.738172341 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.746201554 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.739491987 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.737317043 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.737794074 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.892340648 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.739072506 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.737509263 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.735502924 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.731963817 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.742268329 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.734330994 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.735944561 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.736632662 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.737676815 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.737247417 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.736397136 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.737910279 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.741590522 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.739066522 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.736366115 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.738078604 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.739624449 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.736393608 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.741099813 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.739782028 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.736241623 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.735164084 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.739900572 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.75076706 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.755943156 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.737859653 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.744071431 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.737128094 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.739723966 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.74484881 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.742631671 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.735299174 seconds)
  done (took 87.026839198 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.736176513 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.737759229 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.740804713 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.738072267 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.738420332 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.739064265 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.73904829 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.739559654 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.741664701 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.737669977 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.740798875 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.735562651 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.73471073 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.741153008 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.737108233 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.733831529 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.733733491 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.734202023 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.734191598 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.739536927 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.733983586 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.738871823 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.736928833 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.734855295 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.737877198 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.737124128 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.7355133 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.738520345 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.735180665 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.735555149 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.737831598 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.741614296 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.737697059 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.736277122 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.73559224 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.738882568 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.742562535 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.736461374 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.739522827 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.736414114 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.740788958 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.740817033 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.746624243 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.745272377 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.739043133 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.739296556 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.738685988 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.735828796 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.739636753 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.737736779 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.738497696 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.735604915 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.736567512 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.737027173 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.743529765 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.738617987 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.738306774 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.73624336 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.738391329 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.738481885 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.736890176 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.740466212 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.736578319 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.739171978 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.73901058 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.738708981 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.736742859 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.737785669 seconds)
  done (took 119.858470712 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.739449657 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.739419474 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74314386 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.739746416 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.740602159 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.738777671 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.740274277 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.74187024 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.739920572 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.740353497 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.739731636 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.741176843 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.741837013 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.740867425 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.742440223 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.742692181 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.741420331 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.741180768 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.74195537 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744356517 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.743940277 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.741672639 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.743735037 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.742641428 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.74347612 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.744028639 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.742349295 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.743155289 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74391284 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.743955359 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.743174363 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.747246124 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.743355043 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.745093461 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.744157437 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.745361018 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.747638242 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744114393 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.744739952 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.744908621 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.743514077 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.744018547 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.749775958 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.745546084 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.747971919 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.744174977 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.746659097 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.746670373 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.747834518 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.745799435 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.744738158 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.74578539 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745462024 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.746610096 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.747609785 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.746153336 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747363763 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.745071013 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.747347546 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.751862025 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746257372 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.746302873 seconds)
  done (took 109.795686195 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.745247465 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.744986071 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.745749733 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.741809911 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.744365621 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.741389127 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.744293689 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.744407966 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.747155402 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.74429208 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746451584 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743903632 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742134773 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743231627 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.744285511 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746427382 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745143801 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.744455684 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743071248 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.746537823 seconds)
  done (took 36.563268429 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.742928328 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.746548743 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.744192657 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.744696937 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.751034643 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.747467053 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.749839211 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750568262 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747743318 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749461843 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.750862047 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.750123859 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747587799 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.749315823 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.752371041 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.748418005 seconds)
  done (took 29.650000155 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.747835548 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.748845894 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.751326653 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.749182045 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.749872737 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.747850667 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.749549809 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.748311507 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.748174891 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.752867203 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.751013069 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.754104105 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.750335559 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.750005065 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.747576007 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.752741776 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.748457867 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.745191297 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.751554249 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.753024873 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.749060085 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.747270605 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.752542922 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.750957632 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.749733041 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.75038002 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.748843749 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.752871484 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.749914352 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.752900538 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.748559123 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.752272579 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.749871601 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.7511483 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.754476601 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.74877427 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.749530017 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.751167438 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.751206812 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.755782839 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.752514091 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.748610242 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.7537778 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.751764086 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.750480019 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.753470307 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.751563226 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.750123756 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.749847023 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.749940825 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.755239603 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.753517349 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.753412886 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.751973052 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.754848359 seconds)
  done (took 97.977120534 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755417707 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.752128576 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.75118584 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.753420079 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.755310599 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.753499427 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.753076329 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.753036273 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751469845 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.754430585 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.751091241 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.753720641 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750847934 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.752158012 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.751813732 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753767114 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.750933233 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.751814345 seconds)
  done (took 33.231638547 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.747891958 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.747333413 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.753029206 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.748195758 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.750768662 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752787295 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750850722 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.752391597 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751781464 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.750863413 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750939157 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.754070848 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752599828 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.752356554 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.750260858 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75195978 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.752479663 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753318496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.749287569 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750645274 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.752481631 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751368429 seconds)
  done (took 40.209917981 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.753028355 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.750944962 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.768437692 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.770181588 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.771915248 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.781899462 seconds)
  done (took 12.27874176 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750675454 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753415049 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.754525885 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753443725 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754741764 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750805569 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750930905 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751028351 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756412371 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75205777 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751912521 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75360142 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752509568 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752086218 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755755727 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753875015 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750914063 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750230651 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753544345 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757170822 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754685115 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757285075 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755834484 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751827433 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753189979 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755396463 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757325019 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755862277 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754614917 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758202506 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758663987 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7580647 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757736846 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756693523 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757716867 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757655354 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.755665242 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759476408 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758369677 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756779208 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.75752925 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759370988 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760372819 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75702339 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759154025 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756170813 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756856586 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756144464 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756191697 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759896516 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759036787 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756240509 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759948501 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758532559 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759495029 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759602305 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757892479 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75432251 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761437784 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759023535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.754839533 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757712303 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756783611 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756442965 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757309025 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755450942 seconds)
  done (took 117.580083344 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755278465 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.754530621 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755843394 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.755831546 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755518557 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756363172 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75726167 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757727893 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757350114 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757001823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759784568 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759091785 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757605849 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756237061 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755857345 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761202276 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757421867 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759340569 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756820953 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762521118 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758793894 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758345877 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759535399 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758027093 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757583474 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760877559 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758533434 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758476206 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758580078 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758126866 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756229499 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757582034 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760098251 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.759484667 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75849037 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758226704 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758566734 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759140131 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760057122 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762389897 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758874645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760718468 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759340815 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757629788 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759043021 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759044586 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758576065 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758234774 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760198474 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76015271 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76088477 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759313841 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.760943712 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760615736 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760222826 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764338908 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765109631 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761350149 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759978249 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764182022 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763059383 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758398323 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760918959 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760400921 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757648637 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758257927 seconds)
  done (took 117.782876623 seconds)
done (took 2412.613217401 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.791963054 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.792370635 seconds)
  done (took 15.275466493 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.918114899 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.87337796 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.755476235 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.801721739 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.754188746 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.775348519 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.773126583 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.753980215 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.756398778 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.75651449 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.755760798 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.942043783 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.761358643 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.754871223 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.756240528 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.851066629 seconds)
  done (took 50.431906714 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.758234186 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.763557166 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.770882315 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.762069 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.75805874 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.772400934 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.795420011 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.763081777 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.792706627 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.771740715 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.825481479 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.765909517 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.760144632 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.806902395 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.770595873 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.772525284 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.846863354 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.83067111 seconds)
  done (took 33.775300947 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.83522041 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.7565888 seconds)
  done (took 10.285959619 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.761850108 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.753892385 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.765575079 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.778131172 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.768412093 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.795311111 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.768536847 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.764450114 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.764199231 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.775260478 seconds)
  done (took 69.385929824 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.766459168 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.759462911 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.759496935 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.756971432 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.753223427 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.752662342 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.7552992 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.752145219 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.426208845 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.786938708 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.761203358 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.764210183 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.760428966 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.760321602 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.757270171 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.783583085 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.95115408 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.755781565 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.755268337 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.763673294 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.758225568 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.849931611 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.771780476 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.758259809 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.788804951 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.431107426 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.762913236 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.764669578 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.896926555 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.75460685 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.758033603 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.758355632 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.759997804 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.141577657 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.026930659 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.754718735 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.765348816 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.765936849 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.755639415 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.870604982 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.760966341 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.764836865 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.636037265 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.008091921 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.873722978 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.798885983 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.116850063 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.760932189 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.759414283 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.790664288 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.761775835 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.76265949 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.774122895 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.268184447 seconds)
  done (took 126.508436369 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.755013199 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.015645865 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.910654758 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.755314609 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04257969 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959120948 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.754546279 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.804515867 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.75356257 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982362996 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.972225453 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.861407676 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.752682275 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.755941715 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.755989396 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.751675091 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.915824837 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.826996123 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.755308622 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.753630139 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.788785721 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.997576772 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.885217149 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.755989289 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.776049415 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.967054865 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.888334514 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.864109382 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.206224026 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.755974075 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.820619694 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.754790444 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.758232 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.754649569 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.912745037 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.848794112 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.841585267 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.753680617 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.754133141 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.754604742 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.431823569 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.955491617 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.852792307 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.897566232 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.000473427 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.959151581 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.543054963 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.757442622 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.49355424 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.918101044 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.990514902 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.987665749 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.879915204 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.75668794 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.267832381 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.754693074 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.754614644 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.990786728 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983112102 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.855996724 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.754768395 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.754315894 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.755187159 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.003744365 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.755491149 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.849292061 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.756314721 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.753296601 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.852159235 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.860971203 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.985533231 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.967747434 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.788313052 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.086490019 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.238785345 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.005170952 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.824401763 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.990126749 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.758129804 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.754620185 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.842344483 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.712012889 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.959751198 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.006439659 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.012982881 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79453212 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.476566481 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.755826735 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.984410171 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.979162909 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.057467087 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.997381021 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.906757353 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.074251589 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.756230079 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.756761301 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.994584796 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.896618469 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.758547201 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.120066035 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.993601456 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.330167218 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.79010005 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100027564 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.891784429 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.758713417 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.403731505 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.756745014 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.985244377 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.801550847 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.758551531 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.761026565 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.978502713 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.835775824 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.760248831 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.384713367 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.822329786 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.759739819 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.992320873 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.758966713 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025622151 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.759842176 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999811058 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.05416097 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.792655184 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.987895684 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.996968338 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.758002098 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.007120116 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.003760411 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.873530979 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.978389767 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.383734492 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.760365671 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050076483 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.758625518 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.759004008 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.931362896 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.758761922 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.937826442 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.759917539 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093155351 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782778694 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.913584807 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.761178956 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.014929079 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.794824361 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.810126131 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.761495122 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.894597199 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.764370811 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.692901727 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.91342635 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.762545091 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.760433277 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.468281019 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.760449201 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.918280363 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.99272548 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.784064981 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.836460475 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.431949418 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.759037421 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.848061801 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.786195125 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.114036525 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.763374061 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.977212783 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.762265493 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.291763967 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.760740506 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.005457543 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.941877104 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.764068263 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.760487658 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.673929105 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.76097881 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.761075522 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.923744815 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.048003827 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.762126637 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.966814233 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.764360158 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.902325288 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.762220096 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.843677324 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.120232095 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.761153329 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.760779332 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.762719488 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.763723317 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.762449212 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.027313921 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.791327352 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.28566858 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.902069246 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031927829 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.080188866 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.014202288 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.809708567 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.76273937 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010385558 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.763508029 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.826769924 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.763024776 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.786228021 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000221685 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.764733939 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.974826237 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.042255549 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.683426957 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.811352807 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.763613723 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.763337522 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.721660138 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.919654218 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.853719843 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.762412002 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.762741091 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.889082403 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.8922879 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977566477 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.764034402 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.098050851 seconds)
  done (took 879.554014612 seconds)
done (took 1186.905725675 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.764946829 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.766453942 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.751217963 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.762265922 seconds)
  done (took 28.744421353 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.77842642 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.768904317 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.772916445 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.769275271 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.77050109 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.768559998 seconds)
  done (took 12.333404848 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.790118784 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.759354717 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.764400168 seconds)
  done (took 21.010473849 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.837629301 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.170511553 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.876274131 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.205085196 seconds)
  done (took 9.788691127 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.773337323 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.771864368 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.772197419 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.774388038 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.77346013 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.77349703 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.770799411 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.771765276 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.772525021 seconds)
  done (took 17.654765671 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.160735886 seconds)
done (took 95.390421619 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.070199024 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.766204331 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.74897203 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.323049623 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.00975614 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.002049675 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.830344288 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.766271998 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.140530409 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.944161657 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.052159464 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.097243734 seconds)
    (13/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.906159896 seconds)
    (14/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.852408376 seconds)
    (15/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.307072694 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.899002886 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.088499905 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.951040264 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.810882601 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.791392423 seconds)
    (21/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.069800179 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.652712487 seconds)
    (23/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.796911075 seconds)
    (24/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.835213762 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.766623728 seconds)
    (26/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 4.167000764 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.43837268 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.758593434 seconds)
    (29/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.914735364 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.752553256 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.813529937 seconds)
    (32/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.922290158 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.784617137 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.955163969 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.141477485 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.142336588 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.105877829 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.87087896 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.164486867 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.007678349 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.879875667 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.788278531 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.776609222 seconds)
    (44/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.224677182 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.865379709 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.198842351 seconds)
    (47/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.899735164 seconds)
    (48/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.896011588 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.800926311 seconds)
    (50/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.431607052 seconds)
    (51/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.091045517 seconds)
    (52/309) benchmarking ("sort", Float32, false)...
    done (took 5.488641304 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.062981138 seconds)
    (54/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.919820931 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.878881172 seconds)
    (56/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.792148587 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.026826147 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.062567916 seconds)
    (59/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.883908875 seconds)
    (60/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.968393069 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.132713868 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.12541829 seconds)
    (63/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.766460288 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.825573009 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.754665509 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.773279111 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.114213852 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.68993137 seconds)
    (69/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.775847784 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.039876014 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.687335468 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.274105102 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.844502247 seconds)
    (74/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.75589322 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 8.297052937 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.754097119 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.497077183 seconds)
    (78/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.788485673 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.963984343 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.071631606 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.873756191 seconds)
    (82/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.874858396 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.069381953 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.666003385 seconds)
    (85/309) benchmarking ("sort", Int8, false)...
    done (took 4.755635594 seconds)
    (86/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.786544546 seconds)
    (87/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.754533741 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.486388824 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.127544973 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.762708993 seconds)
    (91/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.227262911 seconds)
    (92/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.893269734 seconds)
    (93/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.219617576 seconds)
    (94/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.148118376 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.093562552 seconds)
    (96/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.937605911 seconds)
    (97/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.055020841 seconds)
    (98/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.28033439 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.872066157 seconds)
    (100/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.794157303 seconds)
    (101/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.845248606 seconds)
    (102/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.787806874 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.939993572 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.925365528 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.940042861 seconds)
    (106/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.85552234 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.967227599 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.553204618 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.112045985 seconds)
    (110/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.853251595 seconds)
    (111/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.849861713 seconds)
    (112/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.414800913 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.346171316 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.637468279 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.32857237 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.245085904 seconds)
    (117/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.023003681 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.784815586 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.189994267 seconds)
    (120/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.976768104 seconds)
    (121/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.784144404 seconds)
    (122/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.856074842 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.165639428 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.829685804 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.768338676 seconds)
    (126/309) benchmarking ("sort", Float64, false)...
    done (took 7.210231523 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.097494554 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.084638893 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.247003456 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.811775492 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.801338743 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.943430793 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.061094578 seconds)
    (134/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.864997417 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.78132122 seconds)
    (136/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.956250984 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.006707125 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.045877299 seconds)
    (139/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.920204874 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.825537458 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.789722611 seconds)
    (142/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.987530111 seconds)
    (143/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.101376783 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.780567679 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.300295318 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.294309721 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.893249633 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.207864607 seconds)
    (149/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.806074238 seconds)
    (150/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.255675635 seconds)
    (151/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.936865921 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.874663391 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.020582159 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.810842038 seconds)
    (155/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.871724393 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.115547874 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.890985131 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.770094169 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.918600549 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.783798409 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 3.226607314 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.123935654 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.71503589 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.858358608 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.888054976 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.00191254 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.864906956 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.945578926 seconds)
    (169/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.84747788 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.738001929 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.185257064 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.255950258 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.712538669 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.86521614 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.848999028 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.772041033 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.013000828 seconds)
    (178/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.987887814 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.771896045 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.208414221 seconds)
    (181/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.781878312 seconds)
    (182/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.781543321 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.815597308 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.42739743 seconds)
    (185/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.91801372 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.807815659 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.087649837 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.820092675 seconds)
    (189/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.060142228 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.785137116 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.846256097 seconds)
    (192/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.895677461 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.931080837 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.113894902 seconds)
    (195/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.882571024 seconds)
    (196/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.422017114 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.822663076 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.278020096 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.89905808 seconds)
    (200/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.796106881 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.883246163 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.893886594 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.770184009 seconds)
    (204/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.793358932 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.985714533 seconds)
    (206/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.931544059 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.366328577 seconds)
    (208/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.802984002 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.881633631 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.584842898 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.990961235 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.02730865 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.201003159 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.147859862 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.785008869 seconds)
    (216/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.87539015 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.110296051 seconds)
    (218/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.935226861 seconds)
    (219/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.876892169 seconds)
    (220/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.786775261 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.868419459 seconds)
    (222/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.912667327 seconds)
    (223/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.333053872 seconds)
    (224/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.615271393 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.028680132 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.808281001 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.828908649 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.10081993 seconds)
    (229/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.780091096 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.811394358 seconds)
    (231/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.857291554 seconds)
    (232/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.890493999 seconds)
    (233/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.29577634 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.91326768 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.916512289 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.739494721 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.606174326 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.904972307 seconds)
    (239/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.221346164 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.985764176 seconds)
    (241/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.982393111 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.774616299 seconds)
    (243/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.88116441 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.877753585 seconds)
    (245/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.365069597 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.777949659 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.425770752 seconds)
    (248/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.885243837 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.518541443 seconds)
    (250/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.927044709 seconds)
    (251/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.912807956 seconds)
    (252/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.840878486 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.789305719 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.874354241 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.392902733 seconds)
    (256/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.980794911 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.106909915 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.961989108 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.489545136 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.155530235 seconds)
    (261/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.787835919 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.887865685 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.960326491 seconds)
    (264/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.874373139 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.724441982 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.186818354 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.003982145 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.988968674 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.796720579 seconds)
    (270/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.82141162 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.039768164 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.799792404 seconds)
    (273/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.438539922 seconds)
    (274/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.737983377 seconds)
    (275/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.931410488 seconds)
    (276/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.85691331 seconds)
    (277/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.873073556 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 8.128437675 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.007549875 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.435749052 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.492199212 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.871612427 seconds)
    (283/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.365551909 seconds)
    (284/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.870172758 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.875794286 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.18065411 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.04840201 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.9288682 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.520637303 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.257608604 seconds)
    (291/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.997594382 seconds)
    (292/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.775402408 seconds)
    (293/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.185617384 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.826949742 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.123884348 seconds)
    (296/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.08373167 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.399469466 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.810429323 seconds)
    (299/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.192543012 seconds)
    (300/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.928270506 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.792680615 seconds)
    (302/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.89919171 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.811108753 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.96552972 seconds)
    (305/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.135506313 seconds)
    (306/309) benchmarking ("sort", BigInt, false)...
    done (took 6.794291258 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.868983979 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.018567861 seconds)
    (309/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.928157796 seconds)
  done (took 989.949259269 seconds)
done (took 991.722254938 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.826384257 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.820297949 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.804186111 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.823499835 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.915907561 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.837468473 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.811317065 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.802677571 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.850934691 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.852298765 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.801938211 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.834953088 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.805858097 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.804506006 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.805509787 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.816505084 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.115191315 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.831944231 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.820291555 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.811824373 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.821439212 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.804910991 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.855259184 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.833184876 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.810887115 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.80500742 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.805632258 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.824072976 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.915558983 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.806995942 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.808423243 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.814228239 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.115170625 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.829906739 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.799210743 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.828182664 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.82057422 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.816257027 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.809501402 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.838806508 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.264888247 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.812476139 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.806138282 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.805120597 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.801178915 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.804961996 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.80658757 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.811071653 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.817473098 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.817990904 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.25765417 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.824393071 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.808356945 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.804371691 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.813054053 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.804269335 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.811590388 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.822078924 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.824467862 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.821381814 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.109227017 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.83489085 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.807503624 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.82114412 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.814392094 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.292775264 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.806392406 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.81229758 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.262808185 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.813678222 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.296063089 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.817691164 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.810002458 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.818422085 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.840874359 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.1172966 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.826617606 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.804455994 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.815683657 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.80418085 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.815209861 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.816480131 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.809561797 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.808030454 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.820710061 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.838035646 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.815944468 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.805605335 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.814440055 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.826383339 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.814910992 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.817324783 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.808315252 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.801948109 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.817231117 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.812380703 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.808986524 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.808526528 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.810824051 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.816777735 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.262916207 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.827384364 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.802333059 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.803954877 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.805330066 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.825462367 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.261204408 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.812831791 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.829753603 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.855037824 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.81076549 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.113675719 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.840232624 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.824431121 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.815598672 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.812787368 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.802188353 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.10911346 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.288356235 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.830491433 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.807064268 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.805871527 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.823098333 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.813082927 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.805286565 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.120822486 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.837346086 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.822074493 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.930415344 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.818385972 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.841951198 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.809623022 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.810826664 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.842713148 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826916404 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.842224885 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.811279055 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.829813583 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.827386445 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.806849571 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.821126795 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.818339048 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.811369232 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.814429348 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.80345661 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.840765808 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.822295531 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.82377451 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.830399213 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.931534504 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.809266312 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.111490676 seconds)
done (took 284.447020134 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.878076105 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.8032479 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.906384142 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.806227605 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.888507572 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.893554619 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.803118897 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.804975507 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.802300476 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.20951428 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.8029639 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.803698461 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.799262803 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.803158788 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.889032574 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.80768445 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.806495542 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.141961001 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.811767432 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.880882829 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.809219622 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.805067256 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.809063648 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.181539457 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.80488972 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.806616127 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.880119173 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.806008554 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.148513755 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.806325366 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.807950613 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.1466387 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.898433522 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.825384061 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.818451628 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.813850619 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.889544039 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.812872123 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.888933932 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.889442967 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.909614586 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.850651982 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.798664084 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.809454495 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.811691436 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.809204845 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.80609067 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.835897402 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.806206963 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.806666635 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.144511914 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.820856083 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.807616203 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.803411731 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.805935444 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.84072062 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.805560025 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.810962127 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.901907099 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.811084897 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.871851185 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.183302439 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.213829387 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.809927173 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.808746483 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.807346361 seconds)
  done (took 180.217180038 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.875829415 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.882370489 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.87452596 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.814617051 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.860110378 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.878232567 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.815104962 seconds)
  done (took 14.735676112 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.818585076 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.811641588 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.858736296 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.861411585 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.811413821 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.959409844 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.810466327 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.821939011 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.807294585 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.859763571 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.81196048 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.811549068 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.817535317 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.802837246 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.859413331 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.824457609 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.92715267 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.811760236 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.811382452 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.961867664 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.808824836 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.817045551 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.865512791 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.821807818 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.812126584 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.815862509 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.394475356 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.811118685 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.808196526 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.812607884 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.809173276 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.855021572 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.812484845 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.807754564 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.809535474 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.926175611 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.810190778 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810056164 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.809556999 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.808537257 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.812607358 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.811090001 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.813834315 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.810054379 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.813044287 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.837643359 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.810566058 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.812750951 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.81278131 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.81257369 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.86257932 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.813769782 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.810004058 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.810833531 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.867253789 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.819627195 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.813742852 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.811523449 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.813808487 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.809827643 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.964814529 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.861154779 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.812438349 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.860752923 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.813427531 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.812088487 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.81357243 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.812217849 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.909218186 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.812513227 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.861683059 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.80990239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.971351982 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.837208184 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.814721035 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.818491443 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.816656671 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814989949 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.814005044 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.818730188 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.812037549 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.815941927 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.821649629 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.811108263 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.811242393 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.923874348 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.920239541 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.80968397 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.82523051 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.82281105 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.812256037 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.866646334 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.814021991 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.810885694 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.868891563 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.929270076 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.870363336 seconds)
  done (took 200.199759964 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.816742417 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.822440609 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.81575377 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.834115607 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.81530757 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.814474761 seconds)
  done (took 12.658464935 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.817148958 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.818413493 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.814433523 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.814583068 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.814860327 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.814729344 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.813617307 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.817190521 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.821308899 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.813961099 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.814888529 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.81724612 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.816975808 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.815867799 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.816736813 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.815705288 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.817503218 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.814342139 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.815700233 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.817053754 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.974767659 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.817097245 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.817215036 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.818469653 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.823020433 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.817693925 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.825817521 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.817860798 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.817189835 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.827514694 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.822427984 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.81803156 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.818779491 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.825663283 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.823005581 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.819804502 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.820669521 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.818078937 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.814885642 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.818558423 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.819049211 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.818161704 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.817988468 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.81944529 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.820609878 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.825777372 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.823669926 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.826199446 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.819406095 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.818599614 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.819326933 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.818005749 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.819059562 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.819195595 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.819711998 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.824589708 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.823875479 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.820831246 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.819574986 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.819305785 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.819352329 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.820394521 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.820416117 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.825340097 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.81640177 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.820561024 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.82081687 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.824498913 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.820229806 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.818163691 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.819947854 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.815882194 seconds)
  done (took 133.875717982 seconds)
done (took 543.43393085 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.923094858 seconds)
  done (took 8.667040989 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.889721688 seconds)
  done (took 8.73204929 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.547821697 seconds)
  done (took 10.294721096 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.819287255 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.854455758 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.814598837 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.822433014 seconds)
  done (took 29.067284934 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.854730286 seconds)
  done (took 8.60175208 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.831954745 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.813667546 seconds)
  done (took 15.428286929 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.855886444 seconds)
  done (took 8.60523668 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.919808922 seconds)
  done (took 8.670689344 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.830529232 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.853722105 seconds)
  done (took 15.449401603 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.803588272 seconds)
  done (took 8.552248918 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.535976861 seconds)
  done (took 11.288358356 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.823421488 seconds)
  done (took 8.587846951 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.827180058 seconds)
  done (took 8.575001447 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.103706403 seconds)
  done (took 9.852083949 seconds)
done (took 162.1146342 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.818671348 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.812155583 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.815932971 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.814941813 seconds)
  done (took 29.009489898 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.856029931 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.857989727 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.856477482 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.865957915 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.857493335 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.856044146 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.846703121 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.846775091 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.865441052 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.85872705 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.859827177 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.857311802 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.854763724 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.850583869 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.858074898 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.858585605 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.868055636 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.858734113 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.851984606 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.860679925 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.824553113 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.867980704 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.858281494 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.825650738 seconds)
  done (took 46.271363086 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.0247248 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.894369753 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.976393801 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.876989278 seconds)
  done (took 9.521321581 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.877922254 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.876467536 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.890326631 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.928504022 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.951732299 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.8887675 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.848916026 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.848903804 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.833837309 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.878610782 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.953798776 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.874759721 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.989076612 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.826953664 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.010522779 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.825915773 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.824775847 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.88087033 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.930555998 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.95124393 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.826295752 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.880743017 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.884871257 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.876953859 seconds)
  done (took 47.110077683 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.829572005 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.834472342 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.836152483 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.828494749 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.824466415 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.826348271 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.829267396 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.82493438 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.846231803 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.829773304 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.822256513 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.827061337 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.824034034 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.825464816 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.823969929 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.834929246 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.839047375 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.824314558 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.828771593 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.83018362 seconds)
  done (took 38.342415043 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.820181423 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.673920899 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.170901815 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.074443723 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.819114043 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.814426167 seconds)
  done (took 31.124094407 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.839672842 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.830789198 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.82550919 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.881107192 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.960924342 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.830765948 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.824630559 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.838412365 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.870717033 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.888686603 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.843813072 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.853278819 seconds)
  done (took 24.041234932 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.822439164 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.817656535 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.821736425 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.835328791 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.839119816 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.83155546 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.834338722 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.818382546 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.83868039 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.846299107 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.832403363 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.840354916 seconds)
  done (took 43.732996149 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91437886 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.71284503 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.854600723 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.541877322 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.293704315 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032867588 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.394907719 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.158317219 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.824771818 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097152899 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905864462 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929664426 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.07860349 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822453311 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.835567217 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.303117879 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121420859 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061982944 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848938115 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603745224 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875973582 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.426817315 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.737415236 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.884299062 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036440919 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.951815278 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.086386812 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.784085341 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955456153 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862266944 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835496082 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.823973919 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097576259 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201032903 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927354695 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835385595 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.482539526 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.542395133 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.81791012 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.620532488 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.648579406 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.954202822 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836399599 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82596536 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.760005453 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389113905 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207065082 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.828488303 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.538388461 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.82618077 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.838617767 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915156027 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.830531135 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.641954425 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781835878 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.102430821 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.823509786 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833102838 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396900355 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.956421615 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422475314 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.802928643 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.020289392 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.622982181 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218030884 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.978120574 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.827209353 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.831761213 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761715657 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.599623681 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882232478 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.973613966 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.841899295 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.477684079 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119044313 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.972603973 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.771382918 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.582840803 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.687013368 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.802868388 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054638651 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.776259513 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762838994 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.686638703 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.761481792 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092948832 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864039747 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.461779399 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871241328 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.168014903 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.836526014 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84541794 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83425361 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05198842 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.392440421 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828341111 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.68046496 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.968542851 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846669031 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.164268832 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760408054 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.82713754 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081194371 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.038233078 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.143082787 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.3515652 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990024103 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823878968 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.905380764 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.81732193 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880000302 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.105081105 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890901449 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.963933835 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891004809 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.785052092 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130319886 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857068257 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.990892014 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.909777722 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.954060236 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.161397262 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122414961 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893520455 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.836378771 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.827622963 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.69691018 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386618075 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.095249586 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.832536681 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41626654 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881299313 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.833441091 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762737403 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.425623145 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905543834 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.801787104 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054675986 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.83066006 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141367022 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766060746 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977052635 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.94161152 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.051032655 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.472608961 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.908080049 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090658126 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401567644 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.16388613 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88178924 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850389019 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948368081 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853480857 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.342059535 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.126710536 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.833698547 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.838932162 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.704489592 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.829193638 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835268863 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.838165116 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.636077614 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105650368 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.85853444 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.828764523 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.720412933 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.845523965 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896971413 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839073572 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.842174096 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.378006538 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.589983817 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.843109881 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.453832899 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054603023 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840785386 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.626011961 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946681899 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.916126759 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102338612 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894367543 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.766777206 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.544065832 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.524057364 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833557934 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.771967295 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.832081111 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842845988 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845714604 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.21753622 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.112317427 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881107939 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.625990258 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.877471551 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848262933 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.839453737 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833575352 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.377976415 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.969398418 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423626906 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.882777505 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974331448 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.849039708 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.769972704 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.8388598 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839833116 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.834580121 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.792638955 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889725548 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.620197564 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22328233 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088795225 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.488070907 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849066372 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.652836364 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.897977831 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.856995697 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.708465759 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848299729 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.872238191 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844598863 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.845345784 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.62636864 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.545560212 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396515457 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147277851 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146026171 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278241883 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.410734946 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.144159782 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174268014 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070338011 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.365437571 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896065044 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176433938 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778595453 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920680111 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.477048292 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190680532 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850251459 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065363569 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22210756 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.62437297 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015864334 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047328027 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872470211 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.829225564 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802652672 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.042710623 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981468237 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.617468005 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046944939 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173055645 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.564817602 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.939803794 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.836477457 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.520858869 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925636223 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.548554563 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.199744692 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440312133 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.836606058 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319814847 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.834278085 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.283932711 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193341937 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.240405988 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.964441164 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773792918 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.849370272 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.848741089 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.84223776 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.836692666 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.706027289 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.089294442 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849116296 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074977068 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.177174272 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141044211 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.746914989 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.844497603 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83935622 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135960245 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.719221668 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008794222 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.364846011 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.368494441 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843272894 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.775414049 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776056642 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.532145126 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.843286403 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.817961677 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060005477 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.029898394 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.79518822 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414735914 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086203372 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095251001 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.852991717 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.11260393 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120044271 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.577346655 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867207425 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.941153503 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.555136717 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.956038263 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.112138479 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.0782019 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.640998848 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.069373304 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.862615339 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.666041561 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.839008031 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053582722 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.110366021 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.80387253 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080747124 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.561197785 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.913303743 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151448796 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901692275 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.791347961 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.001551089 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.036090001 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850734597 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926166939 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851476123 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.85201703 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.853209518 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88720645 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.825876171 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.96952849 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.85562186 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930944994 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.981673467 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.374526547 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.844731351 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118022018 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198064365 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175939336 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907974441 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.840943827 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846477212 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778099353 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976204119 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.288490885 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118577279 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.974626202 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.14025535 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870634777 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.561280768 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.2941785 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087740524 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115609372 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.737709923 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840588785 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.861387815 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.103288864 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851313744 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.049229398 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067005328 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155413899 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31050947 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.157139604 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.207762668 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110503835 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.210361998 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.840624132 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430053627 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.929933622 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.52787605 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.887303501 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.795324329 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114526056 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855972424 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227275587 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.865195401 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.042981729 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.362209772 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.636704826 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.132025926 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.83173104 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.905348379 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120074413 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.234059767 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162206249 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915378296 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854942777 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.558687174 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979631666 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.72279418 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.114801701 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.844556952 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058181549 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.556199756 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.85555031 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124881824 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157915189 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.840362763 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.731826834 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851846199 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.855872707 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.069828322 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109915124 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099140072 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852394577 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.84664027 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.661600952 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121507613 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90338541 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777743362 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.848147825 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942685109 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.096087671 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864941942 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.534939231 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.55515997 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146766021 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.765714836 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86596231 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411538291 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.220354258 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170392308 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.389079908 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085104241 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.408731046 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.846694503 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149133892 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.854478843 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411833583 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155294804 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.850939202 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.519330314 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889415108 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.113843409 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16653728 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.865035566 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.633857792 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.817649429 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070235736 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44336023 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794225431 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.853161568 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.908472004 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.845146565 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.977619658 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856435294 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.781867344 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845750013 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.594411829 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338245877 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.850422351 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.839175382 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.593789605 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.540429283 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88365403 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990910877 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847966701 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.559712967 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.137881143 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.101300444 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.545076492 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.857638473 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.851213957 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846931649 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.773754147 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.041998763 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.226092316 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139252341 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.390378766 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.892247703 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852945734 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.063039194 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056361413 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.767420274 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986762192 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403748615 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888077185 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.619629313 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.525968962 seconds)
  done (took 1673.104814214 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.850022865 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.847855928 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.943027686 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.84024855 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.873409056 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.857519909 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.879686855 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.874123748 seconds)
  done (took 56.741573758 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.851982917 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.035889045 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.848065477 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.839470162 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.846544604 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.839503849 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.009845394 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.849821773 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.846867549 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.851466929 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.842344749 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.839261936 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.158612783 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.866384429 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.839736643 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.848601597 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.848136378 seconds)
  done (took 73.87521476 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.842386647 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.058958893 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.863103732 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.853228994 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.798881795 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.852878764 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.850330697 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.856493543 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.846069881 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.064591201 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.475938929 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.865379115 seconds)
  done (took 90.000318704 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.851303879 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.847671444 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.847371401 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.847492156 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.847601566 seconds)
  done (took 11.019712827 seconds)
done (took 2175.668765613 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.091741041 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.072368597 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.084095658 seconds)
  done (took 5.928778926 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.990168378 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.037612514 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.159212651 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.164001792 seconds)
  done (took 10.127167338 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.137060747 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.215260791 seconds)
  done (took 6.124020085 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.253342085 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.852772512 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.241107597 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.844380497 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.841068434 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.841997125 seconds)
  done (took 22.304715747 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.846726394 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.849273079 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.84690716 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.850925357 seconds)
  done (took 9.16673531 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.829350803 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.568592528 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.828407885 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.839120979 seconds)
  done (took 20.837971872 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.594048551 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.244664807 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.590675572 seconds)
  done (took 9.202330545 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.342827619 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.744052488 seconds)
  done (took 8.86006795 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.124480184 seconds)
  done (took 3.903596782 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.88139048 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.123288398 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.367605426 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.369567833 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.468387464 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.721300323 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.179597476 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.105485204 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.259222926 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.299547505 seconds)
  done (took 24.556529739 seconds)
done (took 136.219400139 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.2333299 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.083149243 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.054163543 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.199916787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.071883192 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.051259584 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.065837386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.187588188 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.698566252 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.691376987 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.201866181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.068496104 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.005568146 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.085376422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.009212939 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.08519882 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.072119752 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.2534337 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.8916773 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.092445969 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.06913846 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.827853288 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.040868996 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.839093692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.070188743 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.002159998 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.417721151 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.084935452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.048117305 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.428980073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.002684572 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.253005781 seconds)
  done (took 171.967378374 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.590151272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.849944801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.850752302 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.861739306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.335158471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.848540509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.850385992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.849596689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.988677224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.98490052 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.875128602 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.366253827 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.864779638 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.850177584 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.863299987 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.84986671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.163750601 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.683945275 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.867822855 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.871372339 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.87702039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.288881576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.870297295 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.323278914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.137220945 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.868221599 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.834502955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.868051684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.856045141 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.823867133 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.861571948 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.850699058 seconds)
  done (took 207.511664014 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.852618525 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.851343735 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.850906647 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.851081361 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.851983379 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.852283194 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.853535347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.85161705 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.538511588 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.531296984 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.85828724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.857456721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.859053346 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.852386543 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.860955065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.852153963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.859428982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.858600805 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.857079866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.858716761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.860365817 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.7395147 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.858745335 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.756648148 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.857023514 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.859919744 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.852149565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.859376952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.86036577 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.862029943 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.860894699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.85210119 seconds)
  done (took 220.334810585 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.05288005 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.860310291 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.863568574 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.812083472 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.86208385 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.861858734 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.81502929 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.053167352 seconds)
  done (took 18.979302194 seconds)
done (took 620.585069283 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.364861916 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.196159347 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.035417951 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.886913628 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.15353611 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.918763001 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.882672752 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.948087788 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.607814714 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.952011981 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.528715194 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.899292772 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.619689751 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.905318877 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.001656034 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.937169049 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.432084934 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.520662791 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.06184094 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.962518285 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.055760274 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.81835469 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.959277118 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.639639701 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.639163959 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.858192413 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.066023574 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.433053224 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.891412789 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.050858799 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.669014237 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.282409997 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.894433447 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.880975938 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.937513536 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.919218268 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.239771229 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.892013489 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.006311355 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.621791205 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.970446709 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.486759054 seconds)
  done (took 102.814064358 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.855978578 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.853553732 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.852039111 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.855561877 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.854776405 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.853868471 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.852946829 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.852819902 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.854056662 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.85487547 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.854633686 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.855866423 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.853738769 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.855303014 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.853437785 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.853864157 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.855826638 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.856785205 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.854745444 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.854014945 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.854825767 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.853308513 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.866211845 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.853692096 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.854221335 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.85542526 seconds)
  done (took 50.024168292 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.867506247 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.030776568 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.111966931 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.883608952 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.866557935 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.870732299 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.88477198 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.871617546 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.870181389 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.869900813 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.976969404 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.8725059 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.885698123 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.114490056 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.880015963 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.865107428 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.86619952 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.867116891 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.038294215 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.882553662 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.884336815 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.871005074 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.884152516 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.881052051 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.868868727 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.867734307 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.871350894 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.321257043 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.876293418 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.9731285 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.9088834 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.885520984 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.292195085 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.126356866 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.918319921 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.872339233 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.867695485 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.977552547 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.872295181 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.868234728 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.88603765 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.872391165 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.114028297 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.356973498 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.880620557 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.869234282 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.332286091 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.986053651 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.909554349 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.876989472 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.118860727 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.882352134 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.868942943 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.869599739 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.90347324 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.875562993 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.867103943 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.208618631 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.877671317 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.886157779 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.874462983 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.869195868 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.042442899 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.875488545 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.032426507 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.876866443 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.876648149 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.86942691 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.117419546 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.884521665 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.364226301 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.880106595 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.868466597 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.975906857 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.035278692 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.358267139 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.879612723 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.047879784 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.305830702 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.895094007 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.876127643 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.310797705 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.899035828 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.876786632 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.872525557 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.872619483 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.868175203 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.91281788 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.885734822 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.293506109 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.364964957 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.223996774 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.895631024 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.886833896 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.869848904 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.212456669 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.878510635 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.870270739 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.112044991 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.368689451 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.88278102 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.876674481 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.352844108 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.882413572 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.889374247 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.880383613 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.123565424 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.883888435 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.915136864 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.869766377 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.876528244 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.87320415 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.889241282 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.878072288 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.870675234 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.338559452 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.996501456 seconds)
  done (took 232.061520546 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.864534529 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.864148941 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.864010263 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.86357735 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.863459109 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.871482237 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.865331256 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.864214753 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.883484631 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.864276539 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.8623434 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.866528644 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.869682098 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.869730503 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.895391062 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.871181459 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.519748433 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.862755201 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.863289084 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.862400032 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.517458921 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.868475879 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.864014668 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.867108445 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.86485352 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.868015753 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.86433028 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.88761432 seconds)
  done (took 167.411939045 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.872910372 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.986377544 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.887139423 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.898703486 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.879040228 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.870145378 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.896032878 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.886100043 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.876069147 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.869266696 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.869912085 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.93297972 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.884519424 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.974860633 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.903967694 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.905203308 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.977418881 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.878561485 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.871662445 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.870856966 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.901044354 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.866341975 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.93327314 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.994722713 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.887038722 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.990453197 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.875787195 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.873888356 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.873311485 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.990630134 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.885721094 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.934841944 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.900427593 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.89020265 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.992897364 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.98623178 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.975950898 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.898517789 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.877718259 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.873293042 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.872744526 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.863905202 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.992112958 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.890315729 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.876505068 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.984998113 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.888778329 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.875560245 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.88386249 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.874082803 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.887799013 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.892912244 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.941382191 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.003951355 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.905268001 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.89815474 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.899437835 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.16869951 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.880907227 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.975770095 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.866602436 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.989845945 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.891472448 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.864297128 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.875035098 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.879290564 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.902189079 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.903220909 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.977702723 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.879892762 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.973785659 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.907254127 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.877785835 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.87352882 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.876215151 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.991090381 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.990966864 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.907467759 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.91040705 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.90413349 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.870519303 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.875280312 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.865880365 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.895006359 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.876809479 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.992574331 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.990681638 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.881419004 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.876785584 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.877435353 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.878267212 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.90144518 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.99925141 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.907887591 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.976209127 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.943801016 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.948137749 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.886835316 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.887946648 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.879303035 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.939333092 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.887447422 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.887014459 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.221582979 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.944551601 seconds)
  done (took 202.98544636 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.337805864 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.925222132 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.93283994 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.201558788 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.308928205 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.766811089 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.918780956 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.926289324 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.950002295 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.119470344 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.995590583 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.944444018 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.909013877 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.897585377 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.925508996 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.944464868 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.934307269 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.239503208 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.043059755 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.007420225 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.903502073 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.235696284 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.247792119 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.319309241 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.958815776 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.255922642 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.606679367 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.17149836 seconds)
  done (took 61.737062072 seconds)
done (took 818.817409523 seconds)
SAVING RESULT...
DONE!
