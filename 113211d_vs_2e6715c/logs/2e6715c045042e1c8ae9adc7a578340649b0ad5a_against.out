cset: moving following pidspec: 14078
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.358284143 seconds)
loading group "string"... done (took 0.556879393 seconds)
loading group "linalg"... done (took 7.327950074 seconds)
loading group "parallel"... done (took 0.156613795 seconds)
loading group "find"... done (took 1.190229519 seconds)
loading group "tuple"... done (took 1.771859863 seconds)
loading group "dates"... done (took 1.224808006 seconds)
loading group "micro"... done (took 0.220960137 seconds)
loading group "io"... done (took 0.933623459 seconds)
loading group "scalar"... done (took 36.662195489 seconds)
loading group "sparse"... done (took 11.27270428 seconds)
loading group "broadcast"... done (took 0.918573286 seconds)
loading group "union"... done (took 12.02104632 seconds)
loading group "simd"... done (took 4.399475209 seconds)
loading group "random"... done (took 8.852140764 seconds)
loading group "problem"... done (took 1.744775248 seconds)
loading group "array"... done (took 20.461833353 seconds)
loading group "misc"... done (took 1.636195504 seconds)
loading group "sort"... done (took 3.286059556 seconds)
loading group "collection"... done (took 17.524756267 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.483539861 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121656827 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113382152 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117647736 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.141697046 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113266719 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121551514 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082584257 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.776199412 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148187285 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118267545 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413578287 seconds)
done (took 4.878035598 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17325039 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082182209 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081610197 seconds)
  done (took 1.252125314 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06493901 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121060296 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066021411 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066312308 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066467636 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065200863 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06538912 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065547775 seconds)
  done (took 1.604509464 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072685871 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068169809 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068301685 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067586665 seconds)
  done (took 1.361928171 seconds)
done (took 5.555763203 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.761910382 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200329349 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18187469 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.395895014 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131318344 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154937588 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637179409 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.293030194 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184800504 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081172276 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102857241 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316639299 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10634041 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.628964815 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0766121 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089806256 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137783651 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428851862 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066885004 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081896564 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088615731 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127680524 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087665924 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074489949 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142237754 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067552597 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130579661 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.07977233 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066178824 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207485736 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172075632 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651723408 seconds)
  done (took 10.078735457 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.0966967 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096839654 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067958797 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135778591 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098661668 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070095211 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070509984 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066820463 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086140966 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128021902 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088445609 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10033561 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065181258 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068705864 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083923929 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203855471 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081843576 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082651205 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07129589 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075479015 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115582322 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077412246 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07752197 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077041407 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12798472 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179951474 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098943683 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099019181 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068575351 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082210832 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116269496 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128456077 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067266655 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067770631 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126471396 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095884091 seconds)
  done (took 4.567560092 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.295410868 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140591597 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090895809 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132815382 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.0664962 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110307718 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066233463 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080462022 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198680464 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.29917192 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.585146325 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110555078 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102972462 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067498133 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070755773 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066399983 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.321146118 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106084161 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101486138 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079429882 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068932341 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067259205 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340412789 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066799926 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06290889 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066952523 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056867009 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120639275 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066834027 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.913605815 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125184675 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06666816 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100541215 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162770298 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089790291 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135389934 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.198987028 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066469832 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151048498 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070253075 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065686367 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.0839769 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1036604 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112059853 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066250281 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066763517 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162794822 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065650019 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078491904 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.960369988 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15425954 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096337068 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065316563 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.249645925 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086688946 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068853989 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064558528 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09283877 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.187450777 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137154057 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068638642 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066123062 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067047163 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069018454 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367042987 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067844528 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.718728608 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070220708 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07795518 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068538159 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069049152 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072456587 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07169908 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084580536 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06526491 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074927686 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064983715 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065131702 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066162723 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063561168 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08312142 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354516367 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06537217 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066785431 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063230405 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089596923 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09515717 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065185054 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064272038 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100475449 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06333174 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066368112 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065542671 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.206202667 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068137399 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084511488 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069205968 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112558316 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067719942 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063714051 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.084812655 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067385116 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098606641 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069289578 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103130739 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080040446 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067482808 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398315517 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064433957 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064329168 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067475902 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065300405 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06748483 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066347376 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079191813 seconds)
  done (took 20.7266349 seconds)
done (took 37.753782049 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270986408 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078970995 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078079609 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.0749678 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074656649 seconds)
  done (took 1.754392686 seconds)
done (took 2.914187287 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122416172 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101989938 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065157029 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095437872 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063806616 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099313034 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098687036 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080146947 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099292203 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064151638 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095846203 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063608048 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063509732 seconds)
  done (took 2.291719054 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082703554 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084524452 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070476971 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081789623 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063548999 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081674757 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080427224 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087965298 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080490628 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071376448 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063404352 seconds)
  done (took 2.002790065 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081177594 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082967001 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068980357 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080716267 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063146858 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080874411 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080421985 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085489759 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08082185 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072830594 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063278286 seconds)
  done (took 1.989799693 seconds)
done (took 7.436402748 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076749487 seconds)
  done (took 1.218444885 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.590676767 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.087303722 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080312178 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110730289 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182407725 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118009178 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.268045813 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084386243 seconds)
  done (took 8.844251569 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104238158 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07017508 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070094005 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07111747 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068916658 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069057473 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071726635 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070647491 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071038104 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070526459 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070320157 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067639987 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071563259 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071193162 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069079564 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068410552 seconds)
  done (took 2.378383324 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091290414 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090098128 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073178414 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074418035 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071996787 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071624717 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074165605 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072773459 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070060652 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07121424 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07441072 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073111845 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070833609 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064624245 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075239395 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076898451 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07154051 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073677934 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074713093 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07435844 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073792122 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063856015 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070708694 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073495061 seconds)
  done (took 3.022824878 seconds)
done (took 16.614150412 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11276934 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073641841 seconds)
  done (took 1.337173685 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081257134 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082998957 seconds)
  done (took 1.322518913 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083251653 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066248196 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089374965 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077088813 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065954831 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065359322 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086443335 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065976341 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065832188 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065742059 seconds)
  done (took 1.891602448 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068264208 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078253554 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070122849 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079999565 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072854066 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063688017 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072017883 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067307265 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076998458 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062835735 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070651642 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081598662 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070528432 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082765488 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071839379 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067525885 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069966759 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066401349 seconds)
  done (took 2.456095616 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064821487 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066825972 seconds)
  done (took 1.294002533 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066243065 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063437973 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066246658 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065974587 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062871241 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062326289 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064733954 seconds)
  done (took 1.610060178 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.375205847 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109619185 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.29750353 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070146235 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081231251 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250066285 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065194711 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070290375 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070068 seconds)
  done (took 2.591485893 seconds)
done (took 13.67060405 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078437974 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085028758 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095810649 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.35999473 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091241513 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065883137 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113484047 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191888177 seconds)
done (took 2.255520301 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.20981 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.592345785 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.380761707 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194033388 seconds)
  done (took 2.33473383 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323634235 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085648877 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059544631 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066139291 seconds)
  done (took 1.70963456 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065250285 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068585841 seconds)
  done (took 1.305044415 seconds)
done (took 6.731228599 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066344228 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084890783 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065511581 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066177587 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063197519 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065727904 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063144069 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063364139 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06310582 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065145064 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067906627 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065362153 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065091727 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065555714 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063056581 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063292901 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065338137 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064146629 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062995645 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063404447 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062780485 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065020099 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063155516 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063127003 seconds)
  done (took 2.77235567 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083015159 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067024491 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072315154 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071325785 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070002685 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071105469 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071527926 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065800327 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070796114 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067475947 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068957168 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069133933 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067573359 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069519167 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067437624 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06965836 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070554039 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066359622 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069078699 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071678821 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072477908 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067783738 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071292864 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072490666 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071242936 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071381809 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069723056 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068170993 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071762226 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068823196 seconds)
  done (took 3.284628889 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069177488 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063078975 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064242833 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070353481 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063557153 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064458786 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062860379 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063822955 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064432079 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062780116 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064365244 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062697703 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063072904 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063781627 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06408799 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066372104 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078720789 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063265524 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062928207 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064051789 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066270589 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063784674 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063529989 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06312467 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062869618 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062829911 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063320433 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.175380432 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06387953 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062957955 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065882104 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066321957 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06257721 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06977514 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067123012 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062899746 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067474561 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062633403 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063560229 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062997405 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06226331 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062892479 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062569113 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069522357 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062963881 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064471607 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063177573 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064483334 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063687711 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065521854 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06231271 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062975343 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064790897 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065426758 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068811304 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064464857 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065083266 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064220748 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065551363 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064176713 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064286126 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064031201 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06697646 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065039043 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078915877 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071203401 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063251365 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064176236 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06435024 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065216084 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064363326 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077778948 seconds)
  done (took 5.981451462 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090529172 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086831406 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065344849 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064666333 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063349525 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066223616 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068805141 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065853878 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066660453 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071139766 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065588788 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06637239 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066788402 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078246596 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065041618 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065718052 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068988929 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061726653 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064961346 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067135693 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064942806 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06804511 seconds)
  done (took 2.707401948 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154426252 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069383655 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106221719 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072561916 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067199704 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072356111 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069295879 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069628766 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069557608 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067705349 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067387481 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069252447 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067020687 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067599269 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067565072 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067609851 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069717871 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067517576 seconds)
  done (took 2.549840122 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076685953 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06578283 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08593897 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065967612 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065284842 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068268178 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070151169 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073548606 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067677076 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06561248 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073304201 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068277352 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067690652 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065458854 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068118759 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06561 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069151919 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065634568 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074400315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070968378 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070069312 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073275222 seconds)
  done (took 2.725701316 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079440408 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06747178 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082559136 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068301701 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061430953 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063877466 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069910551 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066238889 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069635828 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068706785 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066145897 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064770884 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070326018 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067005644 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07019045 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065384225 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067129587 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06541976 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066924794 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06107961 seconds)
  done (took 2.551625648 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085881731 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067997574 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067560868 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075833571 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067207088 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066799067 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07469722 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066904152 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067154464 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088413236 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066725802 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067301808 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074642904 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071542712 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066930723 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075205417 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074293853 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074425078 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06675769 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066859719 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086646253 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06662429 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074402178 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066771868 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066585038 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067227093 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066836798 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07172749 seconds)
  done (took 3.192863377 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065659732 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065327058 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063074796 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063286647 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062555082 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0633524 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063184114 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06300735 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065414621 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062909708 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065193938 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065631018 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06512383 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065052343 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06537647 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06533437 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065218056 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062948766 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063091729 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063321234 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065388097 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065164243 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066555059 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063756038 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063629056 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065899244 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0631775 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063839849 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065793176 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062867551 seconds)
  done (took 3.12628134 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075703208 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074577309 seconds)
  done (took 1.34669613 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063124022 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08091815 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064900869 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070683565 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071157938 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068022955 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074905749 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070913609 seconds)
  done (took 1.758329735 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08141219 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078407188 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068868149 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080797697 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075972512 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08262912 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132230943 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066543866 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072309227 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063881721 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079012847 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064712577 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071882595 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065626697 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071110933 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072268928 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06350694 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07179557 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067938403 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064171658 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067011509 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07468056 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067922302 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061524201 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066738456 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087193215 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076557333 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065171578 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068343063 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073063659 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071224817 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05997497 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065340086 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066425113 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063636287 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075393054 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080412445 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06877414 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07399835 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06654995 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07587718 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060667823 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069900398 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071962523 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075163857 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065683749 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066032689 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060871678 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063511897 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068170613 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060708413 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065629133 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061016155 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075085979 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069312754 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076045803 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06437688 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067251577 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068297049 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069191612 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072194814 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067473079 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068228478 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065571793 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074966956 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069983096 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074448391 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061372798 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059931758 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064619837 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075641162 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088443567 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071840163 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065915463 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066653186 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063731948 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068600877 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06662121 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071341643 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071517883 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065402698 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070678516 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072562551 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06614069 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067651571 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073107498 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06339307 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06758159 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063300529 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080695028 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063098279 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062656696 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062517 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07474765 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067912241 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064075139 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062694584 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071365417 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058783676 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064772955 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065330824 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065433301 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074259882 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068843888 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068704586 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072676998 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071313596 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064337802 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06712906 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061192296 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064839397 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063310078 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071295996 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05871618 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066892349 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065118877 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064926446 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072159909 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.186875108 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066898297 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073954816 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071586969 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065411153 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062745959 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070310921 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065719292 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069357602 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074827675 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064687983 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061075899 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061572893 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069270568 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066125827 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069212894 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071566894 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0697137 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060957183 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064827151 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070883997 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075063876 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065991224 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067744239 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072282589 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067511343 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065287589 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072355823 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069183487 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065350385 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071493343 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06651612 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061178198 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069039416 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068901981 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064238032 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069331619 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069158719 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068190011 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066774807 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064771014 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073712394 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066346249 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065285908 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06664265 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064618829 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076807813 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068277577 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061470416 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063618387 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075821603 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063885935 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065757973 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064904844 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06761136 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066754934 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064231849 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065752258 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067786376 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075826731 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070717957 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066733516 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07118781 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076982311 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065693511 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068459219 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064991224 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066884893 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067227621 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074727019 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071896725 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070975141 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068236154 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0623439 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071373375 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073451237 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065322139 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063612962 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064972061 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06993088 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071179057 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070194469 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067242179 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064322293 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06654015 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068941893 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06822107 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065301052 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065027765 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071965983 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064081739 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072149357 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066563138 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075379345 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068722809 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06031205 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06727274 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062974775 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070377574 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059939865 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062509788 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064297114 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065317057 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063292268 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066929589 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058798493 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071180255 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07172156 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065169162 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063879536 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063936109 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071294321 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066112493 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068163587 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06825198 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070341128 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075082299 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064001123 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067904559 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074780246 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064929896 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059387559 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.197481245 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066740767 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066163434 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066542856 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064703001 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069842306 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07617184 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072801354 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061442973 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069426182 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065247917 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065646435 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06131436 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070635647 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069136508 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067160033 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073313418 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067020794 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067486275 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069970973 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066163486 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066945121 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067691103 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06900924 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067236073 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068135326 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066241845 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068903448 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06559809 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063841848 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068448439 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066730416 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066779936 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07213696 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065959493 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06631331 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068408412 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066963556 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067094902 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067082633 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.0656822 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069749349 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066979681 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067149165 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068371645 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061781193 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073854727 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06621522 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073734941 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066985692 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062883977 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073067612 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069206626 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072350222 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067215247 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067584881 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067777529 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065599626 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069242105 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072671703 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0640011 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076890081 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073254075 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066643208 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068622944 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066965125 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068020523 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065931531 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067006847 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067191005 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066235242 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066165879 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07060684 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068935412 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066376827 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068010249 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067179056 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066463849 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066824323 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060597183 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065506088 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065387767 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065818899 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075925399 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067143845 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065758953 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064752105 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066736288 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064827159 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062727668 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073708146 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074830927 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066091559 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07267006 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064829523 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066965371 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076289993 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059936513 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063831053 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063449153 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063813909 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072886029 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065505926 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074037062 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064947586 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064516171 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061915595 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065351338 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063386624 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05988139 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062992156 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068307819 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064318156 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063969287 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064928136 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06708549 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065421332 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073996673 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064383993 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065446169 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064709877 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061914682 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063941244 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064089872 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067747856 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.197684552 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066492148 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06567275 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067383795 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069400458 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06903946 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066880553 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069214564 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077253791 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066696508 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070308546 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070211576 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062014937 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070278193 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067682674 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066598195 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065711069 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070161033 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06981469 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067450397 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075346114 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067300428 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067773438 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066880987 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065567224 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066600227 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066192547 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066287276 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06578293 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068051186 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074207944 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064974493 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0692144 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067024751 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06705296 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072730858 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067020438 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070290545 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073712491 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066931575 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067906896 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074799227 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07057922 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070503591 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067612936 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068776381 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072213606 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066044913 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072580348 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06703851 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067287152 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068661294 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064264973 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06619759 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066178159 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065641934 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07290413 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06681502 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066392004 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066241285 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064332103 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067565883 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069760043 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073956893 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068921791 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069571002 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062120766 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063716825 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067353239 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064335776 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068060238 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.0685361 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072126602 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068620687 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06635481 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064860659 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074764977 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071469121 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069168175 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06380545 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069503414 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066709431 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06791655 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067218865 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065853907 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067697929 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069648084 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06718466 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06498967 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072582922 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069102552 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066329671 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067323084 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066617868 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065838281 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061548117 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066242388 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067386252 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071306495 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067788888 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065960035 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075915703 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064119854 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065852538 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068741908 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064715668 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069534217 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060095167 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06605726 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065302427 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06541798 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060193638 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064083672 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062758705 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066538467 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063649659 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05994153 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074186954 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073632073 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067351796 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063761917 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063308208 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059832109 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059928388 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063919616 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065170858 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.198416877 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076935077 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066572778 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066656692 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062298507 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066257447 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069481641 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069452531 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063687955 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061795372 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065665914 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069379533 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071924421 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065472349 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066895204 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070620841 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069146636 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064182187 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069775673 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063130704 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07018432 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079234694 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067289267 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067260882 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072039862 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074328449 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067304031 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062780367 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066717257 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069277069 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066977987 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068044107 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067739962 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081374857 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070239692 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065542708 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065367539 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069318592 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065818629 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074728642 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066889123 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066991322 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07182508 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068403991 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075448782 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069982376 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073735987 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069244071 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069420863 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065343276 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066732452 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064326414 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065804242 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067351564 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067334624 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072627906 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074730723 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06580378 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077211594 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075707369 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068632069 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06263122 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065224592 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066552755 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061497895 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06730025 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064726338 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064147441 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064638543 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065321877 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067475716 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07109727 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066838503 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066193252 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065402357 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060061237 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068300005 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068264287 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066457079 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062619925 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065902703 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066277891 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069608954 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068945757 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06358136 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067418557 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067233319 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066714963 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061176849 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071905811 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064502759 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067244155 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064729222 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065888769 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066616431 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069438507 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070408924 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066384011 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067802813 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06917005 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06727531 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062794978 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062782865 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070760522 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063835284 seconds)
  done (took 42.207256339 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100990738 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063534938 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062341457 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062657585 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07345929 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063020936 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062187011 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063001471 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06313539 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065485313 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062304366 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062512959 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070988482 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077821438 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073851741 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066779123 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061904612 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063156172 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061946897 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063122408 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070813836 seconds)
  done (took 2.734719407 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07424753 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070825904 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072870014 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075743999 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067513593 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07051556 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072291524 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070317913 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084813429 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06774302 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076046297 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071538187 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067103485 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067278004 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067133281 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07142614 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075676642 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06743619 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070746803 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072828661 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070856381 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072614929 seconds)
  done (took 2.862381648 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06703668 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065561283 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068733988 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061763732 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066401069 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061789112 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069319665 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063711518 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069118096 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065054869 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065632413 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06521399 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068037391 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061189813 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066112696 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064158614 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108391714 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069240417 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065902353 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066781877 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061832523 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067765462 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061381725 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061896358 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065251875 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069913404 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068967158 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066021875 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067253852 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066971914 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067535329 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065563469 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069289725 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068462626 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066865218 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06705942 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067611136 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067577897 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063302032 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065694367 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068601138 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064160793 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067944354 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068446178 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064393135 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063706531 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067243843 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065106307 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060802183 seconds)
  done (took 4.565281554 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08011305 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108467524 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067767849 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088187658 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079280092 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07548797 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06931774 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089648407 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063691835 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064592664 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081095119 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079756332 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0658698 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070155805 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069232174 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065366502 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067119446 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064483611 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069308462 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064874211 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069421262 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072617481 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080084617 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080453933 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071693736 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066621993 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066922579 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07174375 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079201429 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069996576 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069573197 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070680258 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079961709 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070744082 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064771714 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067863918 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081351275 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065736063 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067706005 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06361372 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067709128 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069742465 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07149153 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081204743 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065943525 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07039167 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065349922 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062701273 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077335759 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067628005 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073115523 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079131231 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068908379 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065294577 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069644029 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079496168 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.0659052 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063649661 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068243783 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077299579 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063260392 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068774476 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078665114 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067167808 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071923691 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078971896 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070525303 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068943154 seconds)
  done (took 6.316821144 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075681662 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071944961 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080325645 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079702382 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072253197 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072039556 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071803504 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071697885 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071714485 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07706452 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072164537 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092673989 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067844148 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074442985 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071894581 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071944833 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07211803 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072319212 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071864841 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072181255 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071810202 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079860329 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072636626 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080141362 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098778046 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069007126 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073928077 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07306777 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080043823 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071788513 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078907238 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072043295 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071919939 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079889295 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079017452 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071768479 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065055037 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071749888 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071768481 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071985636 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067124077 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079836976 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071472444 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067291159 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0718334 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071340479 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079052627 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079220629 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074162476 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076374749 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071795355 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079327312 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071619438 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071971666 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081402397 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107283389 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081581403 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08111106 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074111936 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081439873 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081331033 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087297496 seconds)
  done (took 6.005100752 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083018326 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074479365 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07561856 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061309617 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063872773 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06935386 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063778865 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064221457 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074124203 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073969695 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076187283 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069352826 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072241745 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076267012 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06970424 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072578172 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069128231 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069534319 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074123261 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069284598 seconds)
  done (took 2.734992774 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074334897 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083237473 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06676978 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070989398 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06829357 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071390693 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067835136 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068476116 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066589671 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070487113 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077899457 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078605782 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06933846 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073853533 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077614666 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073256111 seconds)
  done (took 2.461992988 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073696758 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071836755 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079928284 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066098544 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064748074 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062254962 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065323594 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06128266 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062158311 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077332469 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065315167 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068085826 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065635743 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064446467 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062354699 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068093419 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062241721 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063298836 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06546679 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077726702 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076237365 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064527 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066528494 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.0656611 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065598461 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070650863 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064907938 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063922339 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063348394 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066299958 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06609854 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068896097 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062841021 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06340612 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064246913 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063147856 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065657316 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066037294 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068050084 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065269375 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063526685 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065339515 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065031629 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066027273 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061626753 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065704095 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061986471 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067491987 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06342266 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065520956 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066311064 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069871577 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068104759 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073868561 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070024547 seconds)
  done (took 4.968129856 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078623935 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068843715 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061782232 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063177424 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068518393 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067165322 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069007345 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067102517 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067591562 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063370465 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067455275 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06813464 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067244377 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069120352 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067527037 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069323435 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061668261 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067671415 seconds)
  done (took 2.531362143 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070488585 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065835448 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072519786 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065507245 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065851714 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067725069 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061659267 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064183549 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064268387 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065606003 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065748995 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067914107 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064351321 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067477369 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065675522 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065969356 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067750277 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064565575 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065498028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061521234 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067399247 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064384421 seconds)
  done (took 2.760808669 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092027495 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081824807 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136586419 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07770997 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083006875 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071037084 seconds)
  done (took 1.852606943 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08983039 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078126043 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06673484 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087846574 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072882631 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066903876 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067075479 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067149739 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075679264 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075701333 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067034649 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075881137 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075530297 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074958207 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072849179 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072654554 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067224718 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067088155 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066016074 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083519236 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067356606 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075293655 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067053646 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066939472 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067912579 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07545868 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076315082 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077112136 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067514351 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075644633 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072755108 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067550958 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077213149 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078105345 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070351416 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077739961 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069138325 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085839712 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075206328 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077528672 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070589655 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075214278 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077811414 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074398012 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07794113 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0695651 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074112725 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068526543 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067628487 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085705496 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073418877 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075424603 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075244096 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078164536 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077926421 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087720925 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078135807 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077395453 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075583404 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080648039 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07732944 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074799183 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076790411 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077663512 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075853204 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077076387 seconds)
  done (took 6.233919569 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081967175 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086389824 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067719705 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075794514 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074982146 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067040022 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066952557 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067011601 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06690952 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066997951 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10732901 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067658365 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075133737 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075753442 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067386084 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067154551 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068697764 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076196414 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067359116 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085755742 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067576202 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075306179 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076901564 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077288369 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07813453 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075331627 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069230693 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069347654 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069213578 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068603235 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072486517 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069796327 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077452023 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069180005 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076600042 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0671808 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06691863 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071944473 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067251453 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072877836 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074962683 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083392469 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067207281 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067104158 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075944593 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067108258 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067390291 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067226016 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067526041 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067104593 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076238817 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075917624 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075690111 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075078318 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067704399 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069515203 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069623813 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069261638 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069478335 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074679628 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076958324 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068989983 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087825823 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069129396 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068615629 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076664753 seconds)
  done (took 6.12668719 seconds)
done (took 127.529506545 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183422419 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168838263 seconds)
  done (took 1.660172863 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068318287 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095620585 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076662971 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127076899 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066643476 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099359531 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098648798 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077420636 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066046428 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06616652 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066326785 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06792645 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130069989 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066221023 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066680964 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067357249 seconds)
  done (took 2.629562562 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097250287 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157091511 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099119835 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064535317 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096808441 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072840271 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064940248 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074461026 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07071558 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064680557 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072398962 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070162719 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064791286 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070252325 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070894736 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072781563 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06470247 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07305805 seconds)
  done (took 2.746145652 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100089 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090351811 seconds)
  done (took 1.517033445 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158019924 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10536336 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144022675 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34249091 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166233967 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.232960971 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129787301 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129149174 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.124774562 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124458258 seconds)
  done (took 2.978727832 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097972785 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.1493403 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254559219 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114560747 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071623918 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094153438 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116868593 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07738737 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080755561 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079943115 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080333881 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076020605 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098600035 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073073502 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073076972 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075807141 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102792604 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072093793 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073443794 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076570258 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.0991298 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065549192 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072850185 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072435906 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077086486 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077085515 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065390569 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06549978 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07672153 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073537567 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077387372 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093042443 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077040258 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105772529 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069818501 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107311782 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076293955 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0736005 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073368725 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073933978 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078405352 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07848229 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07319658 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075329317 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064908737 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076252112 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065190479 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065509194 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077407887 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06618584 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077615505 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076992166 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105767764 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066382927 seconds)
  done (took 5.90786994 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100968988 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1041479 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071438676 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108876694 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097261409 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071456695 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099538184 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090660465 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101953283 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092440041 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088070034 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070701067 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08177948 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082713191 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109514795 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101666607 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09511631 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071144795 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100553686 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101433366 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06847881 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094251645 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090557844 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100613578 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067144159 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070515563 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068065214 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070578437 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075876898 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077534662 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07000806 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101105825 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083984581 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077733698 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06668574 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067890635 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068328123 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078999849 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097245801 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07804551 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077121556 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06722192 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067868357 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070007705 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090292731 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066838019 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078180779 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079369259 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078645839 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069703953 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070588018 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067956384 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069698836 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079311825 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076338732 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079578662 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079103447 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068016742 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068016765 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071562647 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079945516 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078798281 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078032766 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092522384 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078355704 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068206472 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079791661 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083365926 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068556004 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07052438 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068428026 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069797559 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069651556 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076989962 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077261247 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069586429 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06934564 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067732024 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078398167 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077005961 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067973297 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075737046 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06690813 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068287401 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069740811 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069493692 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076306775 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077738287 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068717279 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066692583 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067988038 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066936304 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065143599 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074298275 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07763569 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076133482 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076136333 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067935559 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076493025 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075679922 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069062273 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077060576 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067158919 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197570018 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07150334 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079277295 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077962206 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079506355 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070340132 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06944564 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078335745 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08068556 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068842546 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078066701 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08017998 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07913072 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067559484 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081066502 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068973803 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079662324 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069876689 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07962313 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069656984 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078513566 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068817928 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067731652 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069298563 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079673592 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070970867 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068324796 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070277976 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070437376 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078608845 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082765907 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071021897 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08084629 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078618989 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070618435 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077618953 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069125073 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079033644 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070498838 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069667265 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067950172 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081571107 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068702081 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06819325 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06967297 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080618031 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069190039 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079020709 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078840044 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067664446 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081380458 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079223951 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077139868 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079837293 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070755024 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069336781 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068839227 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070234579 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077486043 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079411998 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071508134 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06936888 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078130475 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079067725 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067012834 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077245793 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077566633 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077807444 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068423215 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069786689 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079599427 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080550854 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077204229 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077446727 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077710055 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068995354 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076810112 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077737069 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068681561 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083854846 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068013398 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081198727 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077774188 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075339883 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077672808 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07951659 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07880792 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078752375 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08100524 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067526034 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06746436 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078353813 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067162149 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068461251 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075492848 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068851588 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069059648 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081222051 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067491187 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077257802 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066451135 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07631231 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065609146 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069180564 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080957085 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066751954 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068415267 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.208779846 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070695955 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.0785453 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081632585 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079471828 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068834916 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070830477 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080578823 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078665489 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069417995 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068445298 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070447229 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078338209 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077292855 seconds)
  done (took 18.640735878 seconds)
done (took 37.413426649 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207879215 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150407864 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179072717 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11792669 seconds)
  done (took 2.085768257 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122176076 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100253232 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094550616 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064764513 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101575261 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064501858 seconds)
  done (took 1.914160777 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313257766 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211356889 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181985752 seconds)
  done (took 2.069855451 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197274862 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186478134 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393771913 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252776459 seconds)
  done (took 2.501692784 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142651031 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088887352 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066649687 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082859159 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134259588 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160942095 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101053914 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125722665 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077696053 seconds)
  done (took 2.40098326 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147154533 seconds)
done (took 12.48572496 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.110910124 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.173478134 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.181968045 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.100524203 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105513843 seconds)
    (6/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095101769 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.197241922 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108464657 seconds)
    (9/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.217060034 seconds)
    (10/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.15300103 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071055546 seconds)
    (12/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072725172 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076837626 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07238158 seconds)
    (15/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.146395665 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091885163 seconds)
    (17/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075859687 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.21260027 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069592487 seconds)
    (20/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.183761547 seconds)
    (21/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.099069661 seconds)
    (22/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.192575331 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.204445892 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075942982 seconds)
    (25/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.180752142 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.180010242 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.18393109 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.206901032 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070334582 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13596095 seconds)
    (31/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.149653479 seconds)
    (32/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067303715 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.134894648 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097360014 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088232529 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.174959978 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072392094 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064896651 seconds)
    (39/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169545662 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076750216 seconds)
    (41/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.108908597 seconds)
    (42/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080243544 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070887697 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.204954567 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075286805 seconds)
    (46/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.155840836 seconds)
    (47/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.090752339 seconds)
    (48/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.154985061 seconds)
    (49/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052123194 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120491965 seconds)
    (51/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067761001 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.192920008 seconds)
    (53/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.14132524 seconds)
    (54/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.202436104 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096842768 seconds)
    (56/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.148767997 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094556369 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.193788364 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.15001505 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.157704049 seconds)
    (61/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070819818 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072002944 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075492365 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090400576 seconds)
    (65/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.147916235 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096745251 seconds)
    (67/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.14769362 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062968379 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071834132 seconds)
    (70/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074097854 seconds)
    (71/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.148357666 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106224573 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066444141 seconds)
    (74/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.062088518 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065373435 seconds)
    (76/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105260723 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065040479 seconds)
    (78/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073151089 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.205016926 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.08948724 seconds)
    (81/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154041239 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105660056 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052495728 seconds)
    (84/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06751641 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137757068 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066583056 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.096378824 seconds)
    (88/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109457333 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071777517 seconds)
    (90/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.166402699 seconds)
    (91/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076387818 seconds)
    (92/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185435282 seconds)
    (93/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.10809045 seconds)
    (94/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.297198087 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.195913108 seconds)
    (96/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06890657 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.062884974 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135731581 seconds)
    (99/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072604047 seconds)
    (100/309) benchmarking ("sort", Int64, false)...
    done (took 0.066268972 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086887748 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.096316472 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076023081 seconds)
    (104/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108925414 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077983758 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052457941 seconds)
    (107/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053735274 seconds)
    (108/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108123447 seconds)
    (109/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06908891 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071816909 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173097429 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073515636 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.134894996 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121264621 seconds)
    (115/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146285111 seconds)
    (116/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05180051 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066457221 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067741606 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110236656 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15001753 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072000101 seconds)
    (122/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064378988 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073262112 seconds)
    (124/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078124621 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159530602 seconds)
    (126/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100737976 seconds)
    (127/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081920675 seconds)
    (128/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072922163 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.132293242 seconds)
    (130/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081787747 seconds)
    (131/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072945209 seconds)
    (132/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051611631 seconds)
    (133/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071338612 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090901356 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089673084 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065546657 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052122966 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.171196432 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05077126 seconds)
    (140/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070581867 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 0.132556684 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073177463 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07182159 seconds)
    (144/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.149619329 seconds)
    (145/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109720321 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051116428 seconds)
    (147/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063212212 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070617914 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064678382 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052086318 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071369241 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071411475 seconds)
    (153/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077567449 seconds)
    (154/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053300783 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.161839122 seconds)
    (156/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.086919167 seconds)
    (157/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073525886 seconds)
    (158/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.097885502 seconds)
    (159/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071284337 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051036285 seconds)
    (161/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051149617 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071302475 seconds)
    (163/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075068178 seconds)
    (164/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065586371 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064678326 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071511996 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071314633 seconds)
    (168/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060503009 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077499642 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072523689 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094568354 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087450653 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069928047 seconds)
    (174/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053659887 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07296019 seconds)
    (176/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051737112 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091714577 seconds)
    (178/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072599314 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08053 seconds)
    (180/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107495593 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050807539 seconds)
    (182/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065630515 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050606306 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068835087 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06434296 seconds)
    (186/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.064880111 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05070588 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070081868 seconds)
    (189/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067444715 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05006775 seconds)
    (191/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050159259 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05248579 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066649305 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.315087272 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073275654 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068031026 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076324365 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073028446 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05206348 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066842049 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072972864 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065407432 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175159255 seconds)
    (204/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085626726 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090124942 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085921176 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07384401 seconds)
    (208/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.11520582 seconds)
    (209/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065298655 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11172946 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132006491 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072714554 seconds)
    (213/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05206242 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185387477 seconds)
    (215/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05299225 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051120838 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051799411 seconds)
    (218/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070602227 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051726394 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120711883 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087323328 seconds)
    (222/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064671082 seconds)
    (223/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096613367 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065689577 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065722008 seconds)
    (226/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051666542 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065757699 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065332951 seconds)
    (229/309) benchmarking ("sort", Int8, false)...
    done (took 0.139278771 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172550239 seconds)
    (231/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052550461 seconds)
    (232/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066230436 seconds)
    (233/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070289316 seconds)
    (234/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072773753 seconds)
    (235/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069525124 seconds)
    (236/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074322506 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.187029257 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067702932 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064023574 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052712467 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066535099 seconds)
    (242/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071565441 seconds)
    (243/309) benchmarking ("sort", Float32, false)...
    done (took 0.127367998 seconds)
    (244/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052389657 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064176687 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066512195 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062137263 seconds)
    (248/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079554218 seconds)
    (249/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052231795 seconds)
    (250/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051930431 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071483067 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.128428443 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051140674 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052406646 seconds)
    (255/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060425089 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064486038 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077964343 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051482923 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065421026 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113818661 seconds)
    (261/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086389667 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052230946 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065150759 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051031562 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050940184 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088071654 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052283904 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051087852 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07130262 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066081677 seconds)
    (271/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06616643 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085829096 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072725806 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064948558 seconds)
    (275/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065789706 seconds)
    (276/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05128789 seconds)
    (277/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116861676 seconds)
    (278/309) benchmarking ("sort", Float64, false)...
    done (took 0.124428318 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051059799 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08571428 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085653792 seconds)
    (282/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067259231 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072382089 seconds)
    (284/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05218089 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063733351 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064950391 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065119574 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125632917 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063330302 seconds)
    (290/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052391183 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088740886 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051789037 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071926052 seconds)
    (294/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061329114 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.123601704 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051999738 seconds)
    (297/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071559485 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070077203 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050911655 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.08791125 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087891055 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065171662 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051467218 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.128064097 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070632305 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070000471 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064691952 seconds)
    (308/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066375621 seconds)
    (309/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051229798 seconds)
  done (took 30.344192972 seconds)
done (took 31.720893885 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082853409 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092836356 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073936226 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091433656 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079768192 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075671267 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071394402 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077725692 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078862286 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080626566 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077467412 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054229941 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073359117 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073120066 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073624032 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092617675 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077407978 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072083341 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072429462 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06450364 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072588063 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065539153 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066754533 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054370712 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077571527 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071003682 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072365201 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07322663 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065502641 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065448692 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068488552 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072224518 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065356105 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076820977 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071287368 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072471643 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074114451 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07578453 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067249057 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065450862 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074128489 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065102572 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072016801 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072821023 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071805502 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07053888 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072814018 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076965796 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090857118 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067850299 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074025828 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075420973 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075912024 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072084718 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068911477 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0725582 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070060671 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090743409 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072986565 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067738216 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073088685 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073040633 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070072284 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072727754 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072006068 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07481155 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074806242 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070285964 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074037577 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070565378 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064994195 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07228609 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068073518 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065180371 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074959943 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075804273 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063773208 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070515769 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071508889 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070382061 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064190188 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066832225 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066282578 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071068903 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067215985 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053980924 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069006106 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070690504 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063873151 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072307891 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070931934 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071274487 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066126593 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074521586 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064510967 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070081601 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064677417 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064565798 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066344434 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06808907 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064508651 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066679287 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07313789 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065650878 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070431469 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077638897 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064320923 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070193428 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063458276 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063670577 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07807419 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073232144 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064619347 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067107215 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063946865 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071253744 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06382081 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064678106 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064163539 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064133129 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069883748 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064110687 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066021821 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070971269 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076123092 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064157294 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067106669 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066023821 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063987796 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0692173 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063766708 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06349661 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065125383 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.195601376 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068339429 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06604748 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072454315 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067891234 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07253369 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066912194 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072961177 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069908017 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071236631 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070474245 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063651417 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058121532 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067483164 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067060936 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06706324 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065789755 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06659124 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064996441 seconds)
done (took 12.318575745 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065974836 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.1416705 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098317115 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09444305 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085021619 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065971232 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075634232 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101132469 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067289255 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101716393 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086204086 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083964838 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111699586 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064102636 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06549826 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069308362 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067026287 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08135849 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100500963 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085534866 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108706079 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064807936 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093500555 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089391597 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086365862 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091303429 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066842014 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069058356 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068911251 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099794031 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085928604 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069389526 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066106135 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099440526 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091390043 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082697805 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065894135 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081509717 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066037322 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065864343 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080396342 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097090541 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07902327 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079413255 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069527963 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068466149 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066599126 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082590155 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088137539 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078021105 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08595836 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102375156 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067997361 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065953805 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.0644501 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084496167 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065196573 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068115014 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065675922 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067743579 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065532954 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068513327 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080301783 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085818854 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.0693976 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079339293 seconds)
  done (took 6.749406907 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08384629 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089671331 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083304687 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082947805 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065463303 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065800164 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066120715 seconds)
  done (took 2.01607345 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067199187 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08715255 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088361252 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08859017 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083934379 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086773074 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075193879 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065982391 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079834496 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067625723 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08641684 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101239763 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06637012 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072284557 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089970888 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066227607 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089565082 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06571501 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06873032 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089566833 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067811917 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08136206 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069350364 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.0667271 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080124885 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066311637 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112609189 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070167021 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067319728 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068663484 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064039137 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106079531 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079676788 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075039843 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065795877 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080322502 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080872416 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064508153 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082865267 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071165379 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079749863 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066378277 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067097684 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064189332 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070113637 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076846307 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06664123 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066576704 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068313882 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084824479 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066582794 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079414585 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068865705 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068520402 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067219431 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069607332 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075342091 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066982315 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085382972 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067246694 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082628057 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081637463 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079529781 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081884525 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068076281 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079207515 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07954617 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068414174 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067777319 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069601457 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082090063 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064721885 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067811357 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076554325 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068008435 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08882615 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088955959 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067995184 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075309244 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06686138 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066388506 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066727407 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088958306 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06841295 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065823858 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070700849 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069587588 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065368543 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065276202 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06976802 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064459035 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067535633 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068829561 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068597604 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068268703 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081883358 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068202249 seconds)
  done (took 8.69205575 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068269625 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0674148 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069164557 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06774807 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067528961 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06763093 seconds)
  done (took 1.910277224 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093981429 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068747009 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080487416 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071547948 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103572254 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08602255 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087038459 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078020089 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083241627 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078544973 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086389 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088329278 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092049883 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071931884 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085939618 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071378099 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086861706 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075601057 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078151431 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072898362 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086314394 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072428908 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073188152 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.0809495 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075605467 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07189011 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067408129 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078884928 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077790562 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07903092 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072392797 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075459218 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070190575 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078264978 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086340224 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070200985 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071396406 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076840092 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072400603 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075358839 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087917636 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073009529 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07419356 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076873745 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078041578 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070206841 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077108301 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075635477 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085587719 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076613719 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076735632 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071144817 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074563552 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076334564 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.06994782 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077508509 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076883338 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085607082 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072011313 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070019551 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068635116 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074910283 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077417544 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075258986 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078548585 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076338908 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069708792 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072021212 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072234625 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071421963 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076572187 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068637248 seconds)
  done (took 7.037378668 seconds)
done (took 27.87121278 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54157405 seconds)
  done (took 2.015522586 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.594723325 seconds)
  done (took 2.093982391 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.662365806 seconds)
  done (took 8.148591927 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390263308 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.477094483 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.691479606 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130150601 seconds)
  done (took 3.220485413 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673664076 seconds)
  done (took 2.170025362 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208461369 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195778086 seconds)
  done (took 1.911085981 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.373971508 seconds)
  done (took 1.866822749 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.104905737 seconds)
  done (took 2.596600622 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261152286 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.166016602 seconds)
  done (took 1.928156114 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460801629 seconds)
  done (took 1.955159056 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.875780588 seconds)
  done (took 6.373421903 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204779972 seconds)
  done (took 1.750563301 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238442385 seconds)
  done (took 1.73529682 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.699640122 seconds)
  done (took 3.197767595 seconds)
done (took 42.465725575 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080350728 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08100613 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080789403 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078020962 seconds)
  done (took 1.803639018 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077705248 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072987936 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075802272 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072790111 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076396207 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072809257 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074326399 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076505869 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072218783 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072674692 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072376052 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072512936 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074969512 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073820078 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071086599 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074636733 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075874607 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07262222 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075163083 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071981365 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071245338 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07475384 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07498034 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072097075 seconds)
  done (took 3.273131225 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078227792 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073447224 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07470691 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072138179 seconds)
  done (took 1.800226978 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077739636 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092482598 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089937064 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077642018 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091701626 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086157851 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069523842 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06900376 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073221504 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077104505 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067929667 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095867611 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.0874992 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076828931 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078743135 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066049342 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067931469 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086980257 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077246615 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077419044 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069729929 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076735284 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068419821 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088511507 seconds)
  done (took 3.387796979 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078847717 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102544131 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077397516 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087154511 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090072727 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065357891 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074434212 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088839708 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122839421 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065525425 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069881731 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065317472 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072440748 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065390439 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075957101 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105098325 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10827415 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068139343 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095697016 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065268497 seconds)
  done (took 3.152337894 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073825433 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070103073 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065963033 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069487521 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077268413 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07318971 seconds)
  done (took 1.944404655 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068635873 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067624323 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067164931 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066447566 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071915207 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068277614 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065998704 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067661119 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067233186 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066596317 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066675219 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065850759 seconds)
  done (took 2.317847601 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.195318553 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069154435 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070584693 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065693466 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071301459 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066224061 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079945476 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067514658 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090342838 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066205774 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066334524 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068321854 seconds)
  done (took 2.489588769 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204654365 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076040395 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23633314 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136600109 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111150784 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115056937 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103843075 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113566283 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143405798 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101569756 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167594885 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165217069 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106739717 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137360577 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088812247 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097959644 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154815913 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162169897 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103664104 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16585596 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143995282 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124503574 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146731122 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101793501 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10551842 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121917385 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071117485 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080078655 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169916104 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131317786 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146483201 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111098738 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093058713 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174893522 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169638511 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14105434 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134124833 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083233581 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103074602 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13565565 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197087795 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087467991 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160702236 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245942847 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08151923 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134108789 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121827037 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126693526 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107308732 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090563795 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145701976 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182770371 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13879497 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087071728 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113451968 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116380412 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11578235 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103892818 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181546546 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160869564 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127444575 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071639891 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099630771 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153762455 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13288446 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109179941 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127978663 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093602863 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134440963 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15497348 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119253468 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143602121 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12929781 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088493868 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119150587 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139688739 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128139005 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169405784 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124076382 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072649724 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123720309 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102591133 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080653784 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142096084 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075083717 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173665565 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098189123 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105815196 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112348994 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108383089 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107746246 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159431583 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139919355 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243210091 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067131259 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104979496 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121523662 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147786681 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087880742 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10855282 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116227063 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077452924 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138348893 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074631544 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123791469 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074890785 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125179013 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132440775 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076214067 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121038955 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101252164 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100830674 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133460421 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159598277 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088614089 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082561018 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168741848 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122919244 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103950532 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144448117 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155535461 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100141653 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103279396 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149284349 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179308458 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089356158 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162750667 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10746255 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084091983 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087868398 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124034493 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112401074 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122308063 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081910364 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117567901 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166914311 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074606772 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09412809 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132149848 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07849459 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080013944 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103143966 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099823168 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094451446 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099614888 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103582681 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13633611 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121481524 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102709508 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267727646 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099765473 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172148895 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089342813 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101294276 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104261958 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070702356 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137212737 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158366588 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079533011 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165031887 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123786464 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105303787 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119011908 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083747958 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140761787 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078810821 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070355706 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144112363 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11108302 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110624165 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150789456 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104394226 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126475508 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119515147 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134437836 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132678601 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130193902 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105949487 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088332118 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111718442 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126879614 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073368517 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091643442 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079995372 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103701113 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095414889 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083238975 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142175806 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124498906 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100341294 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111123173 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096180675 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146328542 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076071572 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127745627 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118168052 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093675333 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150713088 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151255543 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130674891 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098832451 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14351384 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069880211 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073267022 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087338766 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267681656 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08414175 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084220887 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118591994 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148840251 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13061811 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138226882 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111831995 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121362058 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15504771 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070071849 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115764152 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147519756 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123296536 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104310941 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090620579 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099181302 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142156792 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108197959 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182668773 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115043766 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126755015 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152694944 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099921597 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08021346 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10342776 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136154026 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104893014 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144616023 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099414392 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088111004 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110294239 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074290174 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100335416 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126969319 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119405845 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135154172 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114682687 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132263151 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076649373 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115599778 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119480257 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121102198 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063655137 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119194662 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160023783 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093454894 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118027099 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152115024 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079053332 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123233553 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321034489 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147007252 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085835834 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110211543 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119609051 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12868577 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120115606 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140231034 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108108507 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136178479 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109460184 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086029916 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088189956 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097110974 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105406548 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094737488 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108618631 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114684957 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095762179 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132482565 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103329095 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109511427 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11878007 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097545814 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089731608 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097230306 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175077457 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120248359 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172535188 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099798485 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145981401 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164600637 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075244104 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079315605 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078284783 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139684094 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083789539 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130891451 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097578215 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106170319 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124210554 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142051175 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09518166 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06859919 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107988503 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133021168 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111736765 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097514623 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103312217 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161641138 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100154323 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078937706 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113576649 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104007189 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101633135 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169224571 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060982929 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096049587 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220265951 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082597561 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129369596 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15484914 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081594107 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104164038 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120203383 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110251791 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127441634 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101678975 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098914567 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114598418 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151969032 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129463435 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090157383 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112779458 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131135269 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157027263 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105600684 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095236008 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1893435 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152996022 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160128195 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088609365 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117050244 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11497944 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108068143 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138925284 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083552206 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162956343 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082187133 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136359029 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104327852 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090090965 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129535673 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098927987 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088111529 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147949338 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116719552 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08210127 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076996335 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116924295 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119317862 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105896225 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074994059 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138232304 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072841975 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131681952 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167354929 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081112292 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103553528 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095218803 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077480109 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254250761 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104308666 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092160193 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099624622 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173575363 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089332662 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150930004 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142225366 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113583047 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137408685 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100061873 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636372699 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077743914 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152832564 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117445143 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172623034 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09709234 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118137256 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109518849 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123597724 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145256719 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104945675 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178617181 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132501922 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116336708 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080092672 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102727638 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103052565 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088840846 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104899688 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113749633 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115705348 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093864173 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115646366 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123376299 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082539696 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095090945 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155821975 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116842073 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14245029 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138927236 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084634792 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117222219 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137415527 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079297562 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121404741 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151162308 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105547148 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097275686 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079602679 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09979223 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314037991 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074484421 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16298646 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121439276 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110390348 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114372854 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115390319 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131916204 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108293849 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121441831 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093725966 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110953524 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113086639 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082626848 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078096015 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105950811 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113054457 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097276835 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0988675 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098004207 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151974604 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.0716087 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096177924 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103235058 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145592121 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17469037 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088454063 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082935872 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118615421 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112546245 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113404025 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12081075 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079895957 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082240387 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081718776 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077822588 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108306568 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112285744 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104251605 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111532736 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163836083 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082695726 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22644317 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094906581 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10481543 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069779324 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078148097 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095038819 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096279106 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10732125 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099850054 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168869407 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093807521 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089148408 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091415859 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072627914 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08166227 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126304046 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108490217 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264255237 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099187087 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063987801 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110691665 seconds)
  done (took 58.843115467 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109516062 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083643032 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096884696 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.151677545 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122218518 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21235268 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157428164 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199703097 seconds)
  done (took 2.758596168 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069772557 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094075578 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100473626 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084933215 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067173602 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070364164 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225568182 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08394263 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066991939 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088640609 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08058691 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070013363 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.419336106 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066236818 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068830521 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06406659 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067446012 seconds)
  done (took 3.404516301 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.370362483 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.600929585 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374587637 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07382659 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.878276775 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092243546 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.053018516 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129976549 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073684625 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538799169 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704287911 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127768533 seconds)
  done (took 18.644510145 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077188088 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070295203 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084385371 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084830876 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073151963 seconds)
  done (took 2.011911899 seconds)
done (took 107.387661813 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082022268 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.371281307 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054140992 seconds)
  done (took 2.073379042 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084377167 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084935929 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084462964 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083008819 seconds)
  done (took 1.967459909 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076293812 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076573335 seconds)
  done (took 1.776416575 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225393404 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139598743 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088107815 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083233284 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078183228 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078804538 seconds)
  done (took 1.866542204 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072183381 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074951451 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072867312 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076282227 seconds)
  done (took 1.917882737 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076919755 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05322049 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054935925 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056202584 seconds)
  done (took 1.863888092 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087191046 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079966291 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079140027 seconds)
  done (took 1.869824577 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108793399 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085100339 seconds)
  done (took 1.818369732 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083326218 seconds)
  done (took 1.707487949 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099713701 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113601853 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12997952 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109812375 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137189592 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108633991 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085331827 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086321416 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077276507 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087265841 seconds)
  done (took 2.657639105 seconds)
done (took 21.675972628 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079375818 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362090309 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360584449 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091411173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668942979 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356293058 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.980328169 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092276726 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113560333 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067749101 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083904804 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649350709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972942101 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.31934488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958066563 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.4191898 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650033109 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068223693 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067756365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068376811 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967585023 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067809511 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067888867 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068608469 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64961435 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37194549 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06858293 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.418327976 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067779419 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070044876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355557051 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068202037 seconds)
  done (took 16.278222776 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071354517 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118774155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073779961 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083876768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070644524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070212876 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071391599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069208918 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119912508 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067979729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08496348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067847144 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072137077 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068650004 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086915709 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068135264 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068597891 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068780518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068484633 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068107229 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086538157 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067660617 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068114004 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068692689 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06814435 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079688663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068464167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067807992 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068421206 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070074833 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071472875 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069113459 seconds)
  done (took 4.030434091 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116486704 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126226414 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074568175 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103658936 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112681366 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070264722 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143460431 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093120169 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127700761 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068406467 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084868643 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068189912 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101412849 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068607422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087426369 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068455903 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06913876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068689957 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068525576 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068744344 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087211158 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068400067 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068743779 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069462449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068855007 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081783086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06877858 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06906807 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069054335 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07037219 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071897336 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069267873 seconds)
  done (took 4.294697828 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072910511 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075544008 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083340737 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084004536 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070189652 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072449862 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07272979 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069781654 seconds)
  done (took 2.243123096 seconds)
done (took 28.477652871 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080392346 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069491132 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073061282 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081148981 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073582986 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07876162 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067660743 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074933562 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072202648 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073054251 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075185801 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067688668 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071200699 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067634319 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073988204 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068045075 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080033899 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072617208 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079087548 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079852967 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070142557 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07290079 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074500484 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078975473 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079125868 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079340869 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077536994 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073011856 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069233495 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070866517 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076885401 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084145914 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068940861 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079443662 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067793553 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068259918 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071914297 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067769739 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079822807 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076872678 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069922808 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075974923 seconds)
  done (took 4.728859094 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087578614 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091079606 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084948446 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062096565 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066545206 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065014498 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088510567 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059674743 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059579221 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087468674 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055776069 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059263247 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062429661 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05437049 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059834367 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056786249 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061959236 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056168809 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06000675 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059679004 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05828986 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05460694 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060094093 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062958553 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059241866 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062033475 seconds)
  done (took 3.346867111 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07529801 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084406386 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08858209 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126899112 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104884374 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077334875 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078058991 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092466537 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085883393 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067195102 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071694456 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094270657 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088556233 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074007619 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067312904 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084661679 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082084214 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069163514 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073700549 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090996621 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085125177 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084448938 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093430898 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081467528 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067174706 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070026189 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072106955 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081698453 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.0730589 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076996221 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072472519 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071123604 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069574473 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079497694 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071394404 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.0695947 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090323862 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077167438 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078440094 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068179659 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071108025 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068560281 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089711553 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123345656 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067470047 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073999697 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07558782 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076918642 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06806995 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08670227 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078818059 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067165841 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070793412 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066944906 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067925684 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080223749 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069468491 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069635312 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076587618 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07083442 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085861197 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071532064 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082757919 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067251578 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075352466 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066887094 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068349953 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067069995 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093021627 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069352571 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10806462 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068762392 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068477018 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075937307 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075173194 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073208597 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067803494 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082615122 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089349745 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071069452 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07626133 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070926753 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07082157 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087863476 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070006088 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069163007 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06846394 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073918297 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070021313 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068757271 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080642525 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067856294 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070420583 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084369889 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067234563 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069005578 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073651883 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072200646 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067170776 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078189669 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072085143 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068201867 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076482691 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067235174 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070049494 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077490801 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073859537 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066683237 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071623333 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073403347 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06795143 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068986376 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070050949 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069156489 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076639959 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073844187 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071664064 seconds)
  done (took 10.58270498 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162625222 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155302062 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070497535 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145495667 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076536396 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079507047 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148044206 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094704881 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068120196 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068491884 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069137498 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110037268 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105700581 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115957151 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078806583 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067821645 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083863284 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113802957 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149935324 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143429139 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083760582 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077115906 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070158384 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06916422 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070822785 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078529676 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086035802 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076991951 seconds)
  done (took 4.402586891 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081594371 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097098921 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074556356 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088985206 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090979663 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067856229 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070336793 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069987114 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080740994 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079040236 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067622791 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074018776 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074623256 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071348535 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069352007 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074569782 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075222145 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069352175 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071057235 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073090497 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077962267 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09188374 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072118484 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067120323 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074217942 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067669993 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064880538 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084855488 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068264243 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091665818 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065897808 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075641355 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081846234 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068785957 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067815785 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067772541 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067362212 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067645248 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069686915 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066904725 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066297634 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058000006 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067274196 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079309503 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074042727 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05711117 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07278454 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073158688 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072687907 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065323709 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070421558 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070506483 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070948176 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075029948 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072371887 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072595832 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068790597 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074239767 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075538282 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067655611 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064637223 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066370559 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072143287 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065975755 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07544957 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071784038 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066133428 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067359182 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069541455 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073455718 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067650774 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07032631 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065405817 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069896761 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072418236 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069334567 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068525637 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065943456 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067462249 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067824512 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055506371 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067496732 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053898027 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070334745 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065771011 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066160231 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067877264 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072523246 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07952833 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068934417 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073192873 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068579739 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066339955 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070475104 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060130392 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070203264 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08306245 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082497874 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067666508 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065994415 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081926168 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071997553 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066750234 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056173261 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074914137 seconds)
  done (took 9.163805735 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091330971 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070676943 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083820912 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091928743 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086278263 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075672138 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07688676 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069668319 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082749818 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073578964 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076655666 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068005683 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077303072 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07761536 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070672266 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077515454 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072495702 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082932534 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082387004 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067999996 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076177856 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077188364 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089278883 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080451341 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.07879756 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080714995 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089513309 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072161666 seconds)
  done (took 3.890972141 seconds)
done (took 37.751993125 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.716370433 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.89758474 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.722467472 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.118663715 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.055250632 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.749842731 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.874732114 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.717001972 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.888669064 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.76190116 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.990960697 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.77848081 seconds)
done (took 64.931926539 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.755889065 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.868136175 seconds)
    (2/2) benchmarking "String"...
    done (took 1.991857542 seconds)
  done (took 5.520309788 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.085161217 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.251757274 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.965189088 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.718341639 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.72520757 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.026992946 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.519224546 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.2424216 seconds)
  done (took 30.108525068 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.842650998 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.955074139 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.399143285 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.439554066 seconds)
  done (took 15.346032125 seconds)
done (took 62.561480055 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.736227769 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.785432987 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.736904999 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.701925066 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.777049362 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.736858443 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.089407814 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.748837801 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.71917673 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.710349613 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.723295049 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.153736626 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.726762659 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.975484452 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.720642329 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.727997731 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.764819435 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.297252553 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.878957505 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.731296213 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.731782079 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.764485062 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.723849135 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.728832464 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.727890605 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.717372024 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.16535656 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.730029742 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.346165334 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.724861751 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.748188035 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.159851243 seconds)
  done (took 202.367354763 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.723045352 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.54029212 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.619708401 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.727970054 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.074917311 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.898233423 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.812661951 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.224569497 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.722608209 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.721571428 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.9104454 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.722028796 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.917448126 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.663784447 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.747987086 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.821789268 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.881459742 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.953903007 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.757837424 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.891137109 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.731835534 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.700144252 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.645556912 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.900467367 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.757115208 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.724795737 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.728381724 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.886597989 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.915809846 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.834359298 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.738890703 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.735069896 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.946249375 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.591276138 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.724926823 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.737482447 seconds)
  done (took 167.294789482 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.892461968 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.722507847 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.724311635 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.722334692 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.733598888 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.718301909 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.843384852 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.850679632 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.18652026 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.013513541 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772755008 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.567237062 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.721071531 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.790852551 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.733401953 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.724880838 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.738531397 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.750887132 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.721755836 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.72364741 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843046331 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.732123397 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.874713097 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.730767895 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.722298457 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.731255149 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.088393661 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.720589548 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.733279354 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.98225371 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.722608396 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.724297788 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.628682634 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.399791479 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.812025651 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.724762129 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.727743167 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.722709065 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.946794651 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.722696944 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.722331094 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.72765074 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.915845889 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.722354683 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.848790835 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.724550197 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.237195201 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.726002542 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.723956684 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.675608752 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.43370708 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.727164255 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.72331338 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.727239934 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.72540136 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.725338942 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.7314301 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.721984899 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.373353832 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.79637696 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.723171219 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.729078637 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.729280741 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.726807587 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.860746492 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727389587 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.196480744 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.783841762 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.838279536 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.844598835 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.727391555 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.793918908 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.819112366 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.723873219 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.726054205 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.728061426 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.724300769 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.807808983 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.725697513 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.729378863 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.856648065 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.731723121 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.727401124 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.774507318 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.792080437 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.724318119 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.625518119 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.727508441 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.724681586 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.066935626 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.724271577 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.795770091 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.727748035 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.725603351 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.726715009 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.867738384 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.847698481 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.520402554 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.728466728 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.724434982 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.40070291 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.727897678 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.876285606 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.725288706 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.926265514 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.728300814 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.8100908 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.727483145 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.72987846 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.72890153 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.759065541 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.725740454 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.787706379 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.730732145 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.099529867 seconds)
  done (took 396.726283866 seconds)
done (took 769.999865297 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.410570414 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.370029144 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.490914324 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.393037739 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.376333312 seconds)
  done (took 13.705482886 seconds)
done (took 15.371197265 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.812268905 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.819681207 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.751574897 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.816913507 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.750750432 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.816140494 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.798048492 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.754909192 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.783362697 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.751531373 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.785439682 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.75223261 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.739742979 seconds)
  done (took 24.79990235 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.962969557 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.963825905 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.796812515 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.97802263 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.774519586 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.963833001 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.904241358 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.881735271 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.882957949 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744302512 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.739840775 seconds)
  done (took 22.260969541 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.965485906 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.963561748 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.79983657 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.989494476 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.77604464 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.964093555 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.888008785 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.883264489 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.895438832 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.742634623 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.741329897 seconds)
  done (took 22.275002886 seconds)
done (took 71.00325109 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.738043076 seconds)
  done (took 3.402985638 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.763006571 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.894473794 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.742103041 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.740794392 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.736669836 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.738295178 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.741250885 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.739123104 seconds)
  done (took 15.764611347 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.738666872 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.732324515 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.730873544 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.736049007 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.734814851 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.732290251 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.737695522 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.734019139 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.736930887 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.737125172 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.738620694 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.73288775 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.736102101 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.738462181 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.734771817 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.733767713 seconds)
  done (took 29.433304274 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.7354304 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.736096529 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.735310088 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.735032496 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.736786281 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.735865243 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.736780299 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.736068782 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.737725415 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.73512508 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.737167396 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.737616632 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.734562815 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.736972385 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.73726759 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.736399735 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.737191216 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.73543535 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.737267408 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.733664092 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.732575022 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.73524921 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.738635781 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.733919553 seconds)
  done (took 43.33512216 seconds)
done (took 93.604236598 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.652006834 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.165372692 seconds)
  done (took 8.484822329 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.740971421 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.738806663 seconds)
  done (took 5.188893592 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.740132437 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.741307445 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.738568793 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.739499896 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.73939409 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.74191552 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.738638414 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.739217628 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.741382355 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.742475706 seconds)
  done (took 19.07337947 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.741638453 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.740255376 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.738063775 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.740539633 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.738895375 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.736012227 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.740645331 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.74119565 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.741751125 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.737109535 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.742202434 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.738677384 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.742878687 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.739852014 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.741518288 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.739545726 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.74063424 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.737963451 seconds)
  done (took 32.990978286 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.743503226 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.741606974 seconds)
  done (took 5.157311425 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.740300017 seconds)
    (2/7) benchmarking "second"...
    done (took 1.743179712 seconds)
    (3/7) benchmarking "month"...
    done (took 1.738357226 seconds)
    (4/7) benchmarking "year"...
    done (took 1.739288102 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.738966827 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.738230398 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.738261943 seconds)
  done (took 13.851338881 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.742536343 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.902698681 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.978470495 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.430365937 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.743832984 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.744587163 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.651789058 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.744368363 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.745388618 seconds)
  done (took 19.360282477 seconds)
done (took 105.777717091 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.546104772 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.739074151 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.067703435 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.794516977 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.787518839 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.081633407 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.74045387 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.959604273 seconds)
done (took 42.393165595 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.780827382 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.21790441 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.221432293 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.348022796 seconds)
  done (took 11.459228242 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.722567109 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.254572973 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.778034883 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.33442693 seconds)
  done (took 19.773292118 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.105962101 seconds)
    (2/2) benchmarking "read"...
    done (took 2.108235854 seconds)
  done (took 5.89470358 seconds)
done (took 45.584300678 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743703646 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.742483693 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.742147467 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.741781253 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.740038112 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.740686893 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.739830525 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.742661254 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.74091656 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.741866657 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.743934447 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.745640353 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.742982422 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744258955 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.741865774 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741117589 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746365914 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.74259892 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.740987067 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742763528 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743912689 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.74556502 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.741655537 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.740636457 seconds)
  done (took 43.494272458 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.746324621 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.74185863 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.745554465 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.749016242 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.742213868 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.745041883 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.743080156 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.742309328 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.744357981 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.747454184 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741189713 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.741892727 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.744027987 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.742276368 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745107214 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.749076963 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.745337521 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743389457 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745739309 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.742292348 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.74921071 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742957314 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.742345628 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.746283526 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.743936037 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744181604 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.750153901 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.746828474 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.74714947 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.743749855 seconds)
  done (took 54.020743925 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.751546274 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.757412224 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.745549113 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.746204337 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.746497514 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.748478283 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.745012965 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.749412065 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.747275522 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.748335587 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.745723995 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.746219388 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.749468691 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.746930063 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.746063242 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.746625118 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.746602605 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.74567945 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.750716573 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.746147036 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.744675211 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.74559906 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.74715387 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.746416724 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.750565216 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.745841748 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.745004161 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.746360613 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.746491427 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.747997341 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.752143527 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.74523412 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.744641803 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.747497946 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.746003642 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.748078843 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.7499458 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.756979905 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.747314472 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.747917424 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.749321951 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.751346452 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.748031178 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.746089841 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.746595356 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.746864664 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.747019118 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.750804688 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.748517571 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.748149555 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.748734185 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.750491607 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.748217718 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.748791725 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.750374004 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.751894991 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.748845434 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.750013456 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.748918357 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.749440232 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.749215978 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.7478878 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.747681167 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.750876464 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.749686015 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.750750829 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.748455307 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.748314221 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.749011932 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.747852904 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.747845315 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.749204889 seconds)
  done (took 127.55571073 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.749857302 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.747984786 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.7464326 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.748496411 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746407181 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.74935698 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.744704836 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747799082 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749753565 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.747591775 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748071027 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.744515623 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746049343 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.748644922 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748127281 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.747243456 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.74760025 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748790418 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.746907638 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.74902246 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748378003 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.747948222 seconds)
  done (took 40.131331694 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748168486 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.748569946 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.749360854 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.750855057 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.746557682 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.75018007 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.750224252 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.751650225 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751768391 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748924963 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749406615 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749970678 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.750408227 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749125153 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748712618 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.747636797 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.750002898 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.748981457 seconds)
  done (took 33.172090454 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.748483244 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.749277532 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.751354242 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.74666115 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.749427612 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.752409607 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745903998 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.75317485 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.74935926 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.746867676 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.751131219 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749780233 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.750488832 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750424877 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75074815 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.747104747 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.75245356 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748900412 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749178242 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74870746 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.749432106 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.753527858 seconds)
  done (took 40.179494659 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.752356721 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.753272668 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.749567536 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.751243784 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.747786838 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.754107652 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.75111192 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.749837387 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.752122683 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.751564086 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.749097539 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.75337531 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.75065487 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.751051215 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.749660719 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751956473 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.752459037 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.752471024 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754150145 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.74988664 seconds)
  done (took 36.710824796 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.753314497 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.758335066 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.756057896 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752538628 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754656487 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.755731369 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755578075 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.754524207 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.758297032 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.755510941 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.757305334 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.753004505 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756551522 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755603093 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75537699 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75594173 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75643105 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.75752568 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.757942423 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757233432 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.755508842 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.758016141 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.755331428 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.756555553 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755689503 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.754151648 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.757365679 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.755556807 seconds)
  done (took 50.853451088 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.757340507 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.756944408 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.751045361 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.753663028 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.752682727 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.752644747 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.754012479 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.755296881 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.754454554 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.750898803 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.753536664 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.752380408 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.757274803 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.756562602 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.754987051 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.75761227 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758612172 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.755267068 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75313268 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75267592 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.753276443 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756956567 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.758526622 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75278313 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752431886 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.757787321 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752428351 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.754325579 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755029453 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.752201224 seconds)
  done (took 54.322190047 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.777603883 seconds)
    (2/2) benchmarking "in"...
    done (took 1.77681745 seconds)
  done (took 5.241221083 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.75580499 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760422391 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.754070383 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.75582213 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.753976768 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.758465434 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.757965816 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756493043 seconds)
  done (took 15.741498249 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.759530466 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.758317057 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.754534034 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.754156351 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.758751996 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.758670816 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.764625906 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.760151137 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.759359486 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.759638554 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.768764542 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.768755169 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.760600805 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.75834156 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.757662503 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.761902467 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.761543976 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.758869211 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.758371528 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.75741147 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.758082066 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.761899086 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.761271947 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.752073764 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.758418882 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.769127818 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.762951692 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.76064011 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75792167 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.761430096 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.757741253 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.756290495 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.758586228 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.756549826 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.757197717 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.761292609 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.763467024 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.760553126 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.765070767 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.761684841 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.760609542 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.753840368 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.759350591 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.760240939 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.75853516 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.759496831 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.761503807 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.756634211 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.760280138 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.764773865 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.764259737 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.759300944 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.758564121 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.763008373 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.761602223 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.76702025 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.75820842 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.7581148 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.769041177 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.766595135 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.769668825 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.768967988 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75713343 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.755282782 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.767046456 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.782259096 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.759122905 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.756768116 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.746843589 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.750389421 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.756347807 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.763306349 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.76135196 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.755339732 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.750978481 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.750222949 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.751560879 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.751002675 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.758956675 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.752976629 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.748228711 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.748419092 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.758660378 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77343775 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.750499257 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.743788432 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.744494139 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.743841717 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.745380529 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.752907602 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.749025731 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.741720421 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.74425274 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.743388509 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.743359018 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.744182698 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.743268033 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.744574859 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.741511697 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.745434787 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.745493072 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.748128081 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.754285536 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745697915 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.744409582 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.7499183 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.744790202 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.745390929 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.749639715 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.743353055 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.74520415 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.74578197 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.751151544 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.74016431 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747424839 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.753352644 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.743730037 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.746551783 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.745453684 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.744612658 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.755712412 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.773142218 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.742803669 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.744666872 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.749507749 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.759149708 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.745659021 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.747130216 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.744598065 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.741128678 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.742728693 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.746982869 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.743661353 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.745061256 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.745704954 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.745697688 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.745596676 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.743033582 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.745908922 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.746349596 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.747246047 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.747481804 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.747046194 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.745154184 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.746213485 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.746821586 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.750277766 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.749250443 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.745682485 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.745849582 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.741892747 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.744335021 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.746335331 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.751979384 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.746177724 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.747026776 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.744780735 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.746519009 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748212112 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.745252319 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.744224028 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.746224264 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.751065741 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.7467036 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.75175769 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.745119805 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.742714523 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.743124881 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.745574895 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.746129539 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.746947253 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.74404252 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.748917864 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.754082557 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.746329232 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.746275176 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.748791749 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.74781569 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.746992809 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746111185 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.74866272 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.756211761 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.745002075 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.749813498 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.746290851 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.745707302 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.742641787 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.74553565 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.740953237 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.741352739 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.747352188 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.75062741 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754212375 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.754644342 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.742831387 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.746381875 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.742608883 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.746704215 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.745906017 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.740925845 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.741082415 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.742232103 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.739780005 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.741137137 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.743187076 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.739550756 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.740009465 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.740333209 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.740018146 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.742040749 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.744144257 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.741173015 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.742193863 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.736315854 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.739865865 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.740271248 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.743742832 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.734645414 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.737350358 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.740506607 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.74093594 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.742155357 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.745825467 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.738064414 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.741081078 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.74045417 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.738694299 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.739119744 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.741203339 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.74287015 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.740980503 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.745956111 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.741314788 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.745799857 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.746442207 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.740399024 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.740668955 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.744981103 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.7419181 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.740558984 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.743818574 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.750084548 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.741664897 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.744241019 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.742808755 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.741197191 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.741472727 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.746453399 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.739941157 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.742966115 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.742477721 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.744226745 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.741594766 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.742912316 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.742375904 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.74432135 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.744539105 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.744540114 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.742056897 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.743900951 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.743197066 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.744370811 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.745850802 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.746899484 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.751724492 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.747836081 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.743919524 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.748689447 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.742027276 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.745161948 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.741932685 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.7440564 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.741543558 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.756213159 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.753653497 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.748742138 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.745275568 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.742538457 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.747723606 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.744427884 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.74744289 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741963047 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743260188 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.743571746 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.742189003 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.739975745 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74301295 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.743893544 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743830209 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.745240167 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.74761749 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.742755079 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.741981614 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.742941832 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.745728454 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.743144314 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.742890299 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.743173223 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.747391395 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.746420128 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.743456528 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.743499143 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.74931809 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.745188502 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.744118448 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.744467632 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.745061412 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.743262656 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.745657203 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.745526253 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.749071661 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.756189309 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.749352416 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.761214248 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.744636826 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752826483 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.746277268 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.748450444 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.753022276 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.745574493 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.744207512 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.744753789 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.744082991 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.751727252 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.743803821 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.749085564 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.749808065 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.744717905 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.746463468 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.743675306 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.74909112 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.744382192 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.745403831 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.7517814 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.745422947 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.749281272 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.74868337 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.740723709 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.744756985 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.742887687 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.742674197 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747586367 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.744355397 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.743575539 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.740953997 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.743836227 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.743123743 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.742201216 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.745825773 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.741154912 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.740760256 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.748770374 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.744119869 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749567386 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.741299554 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.749326412 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.741512444 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747182339 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.742116682 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.743445323 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.740437447 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.740242771 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.740721359 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.741985866 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.740536807 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.740449389 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.740171157 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.743975059 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.740973206 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.742208021 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.740893932 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.741218227 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.739838546 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.748461232 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.765021998 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.73985257 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.747616867 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.735409033 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.740120991 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.74507102 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.73987489 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.73765048 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.744242861 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.750216492 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.747289114 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.738597529 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.740192119 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.739039057 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.740847664 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.738242282 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.738013478 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.738916092 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.73938365 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.73921379 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.740364181 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.742677198 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.738748153 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.739002117 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.740811779 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.74199942 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.746904954 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.739694331 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.739075168 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.739033073 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.739825963 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.743791277 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.737045543 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.737754835 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.737057365 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.738654966 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.739095417 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.747850371 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.744110624 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.740465817 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.736233393 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.738596609 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.739527634 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.736526362 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.739156835 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.738014526 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.736667639 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.737865607 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.738952008 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.736880617 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.736210182 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.736017745 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.736519799 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.737734822 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.741512671 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.744946986 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.737825386 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.732930614 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.737222659 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.736594115 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.738252523 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.737947508 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.745239182 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.742584445 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.748562056 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.748487567 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.739197222 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.738119695 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.740274898 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.744628532 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.736788669 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.741240464 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.737546102 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.738239207 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.737420451 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.740623664 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.738788671 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.747581149 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.738231052 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.736676699 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.745651071 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.739406853 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.739078819 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.741607997 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.74186422 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.736931237 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.734412706 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.736921443 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.740283082 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.740514056 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.736333131 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.735694367 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.739057348 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.735231921 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.742949749 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.740782686 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.735936568 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.737729281 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.732581464 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.73589151 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.740614815 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.735440455 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.733297117 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.736262694 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.734772913 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.740334797 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.748420102 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.733170524 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.73947078 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.735499552 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.737118825 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.737132332 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.73751896 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.734229185 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.733174296 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.736227076 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.737252025 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.738021956 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.737300885 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.734634162 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.73670556 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.736611793 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.736686686 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.741218022 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.744711487 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.74246035 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.734014747 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.736707939 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.736643545 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.740856956 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.734764986 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.737683656 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.736768477 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.738178504 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.736647448 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.736931693 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.735738998 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.738085844 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.75159951 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.736899458 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.739592607 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.736401073 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.740213774 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.73620709 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.7333592 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.737642001 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.739903466 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.739224622 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.744556449 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.736574017 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.742935114 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.736672977 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.737396073 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.739494505 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.738281245 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.743906662 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.738131577 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.73680776 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.737826448 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.740540598 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.751319652 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.736943738 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.745172907 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.762813397 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.736138672 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.737395773 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.736981104 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.734915383 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.735821231 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.737487858 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.735743334 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.734166463 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.73484103 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.736160845 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.736991063 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.741481786 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.736327451 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.735211208 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.735158825 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.735685065 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.737187124 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.733597767 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.735613852 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.734398567 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.735576567 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.735627484 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.737769628 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.735760553 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.746870988 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.746069655 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.735860775 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.73556551 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.737794605 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.738007946 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.737665665 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.745849002 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.742614834 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.734821427 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.736893705 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.737090872 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.735164482 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.733814983 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.736396782 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.735264272 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.737089786 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.732487892 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.746102243 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.744423311 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.739849529 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.738239143 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.736926175 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.737007883 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.736945862 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.736387013 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.737163213 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.738998271 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.736721779 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.740633004 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.7345575 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.73632094 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.739347862 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.745211526 seconds)
  done (took 1041.672948777 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.733872061 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.734032864 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.733193524 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.733449483 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.735799475 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.734076851 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.733119391 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.734287358 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.733980331 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.73798441 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.734874071 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.73679847 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.73430439 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.735369101 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.735742819 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.738267189 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.734849894 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.734621192 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.735621212 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.734701745 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.734911668 seconds)
  done (took 38.100399321 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.736637917 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.735156548 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.734863656 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.737131378 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735295478 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.742829855 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.735615614 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738516204 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.738868152 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735918063 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.740210714 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740978502 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.73736284 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.735662988 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736130022 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.73797163 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.74065824 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.736593101 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.73916183 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.735764748 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738564644 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.737076052 seconds)
  done (took 39.899108203 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.740357467 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.740068928 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.738955617 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.735708227 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.737510275 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.738854902 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.739043501 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.738666409 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.73933937 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.740629288 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.738843653 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.74197003 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.745556692 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.743762386 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.740921839 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.739624862 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.885249295 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.738962208 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.740355336 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.740662897 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.73542215 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.74407959 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.740954402 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.737572476 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.740168489 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.740766259 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.73931427 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.738381901 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.739667167 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.741769932 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.743686766 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.741098909 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.739826624 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.74192191 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.740738608 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.741377607 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.743345419 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.740570164 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.738636553 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.740839926 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.750673791 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.759411674 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.742022054 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.745719992 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.741280736 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.740603259 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.743985074 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.748390485 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.73865905 seconds)
  done (took 87.139552437 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.741346059 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.741649568 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.739037669 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.741466457 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.741631007 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.742148584 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.741114498 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.742196705 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.740239935 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.740370229 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.742565335 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.740414762 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.745094855 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.742597779 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.742964593 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.740134689 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.740252309 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.740108266 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.7470691 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.740274312 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.739090144 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.742817705 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.742607925 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.740139154 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.749589987 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.740874832 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.740313735 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.741679218 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.740633326 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.745135779 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.740614613 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.740648266 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.743632462 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.738975359 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.738759282 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.74592071 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.741340311 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.739233728 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.741613562 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.738815316 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.742128446 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.748382475 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.74264213 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.743834129 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.739482614 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.741223974 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.741256222 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.744136576 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.74123041 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.742236781 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.743366257 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.740613246 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.747703739 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.742054738 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.743404359 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.743530998 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.741167422 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.741366708 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.747080829 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.741446621 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.742397127 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.745021573 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.741254979 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.743797917 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.747978842 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.740528671 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.742034896 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.74309348 seconds)
  done (took 120.143584547 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.745503987 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.748612587 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.746222623 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.745458161 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746100835 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.746267561 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.749475591 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.743658891 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.745760045 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.745613006 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.745958374 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.745154454 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.748410864 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.74609306 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.745886473 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.74605176 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.747432679 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.746531904 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.747941682 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.748409428 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.747224374 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.746031693 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.746353331 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.746063409 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.748953724 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.746165353 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.74591251 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.747061072 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745941173 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.748589007 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.74724139 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.747717868 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.74731684 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.747004484 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.747589038 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.749010068 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.747248421 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746495565 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.746400712 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.74753644 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.747513978 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.751160311 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.74744806 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.747219048 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.748523091 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.748147936 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.752296692 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.74875875 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.74827785 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.747477454 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.748680309 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.749780658 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75434527 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.748628914 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.747794045 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.747289368 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748331953 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.748626536 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753746325 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.748431521 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.748047168 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.748596032 seconds)
  done (took 110.027926725 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748000098 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.753135252 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.743873786 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.744870077 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.746380103 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.745239707 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.752599655 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.747187735 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.748158141 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.748613324 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748891504 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745206563 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749469226 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748164143 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.744417724 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74483163 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.74678022 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.746543132 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749736986 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.74579726 seconds)
  done (took 36.626820581 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.74723105 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.748922511 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.746466717 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.749677335 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.747553113 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.746393587 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.748561841 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748745748 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748468325 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748415334 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.751003938 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.749773703 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749710441 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.747689326 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.750614452 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.746659669 seconds)
  done (took 29.656094658 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.745671638 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.750611631 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.750101973 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.752557127 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.748066935 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.746496713 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.749707027 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.747825916 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.746083094 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.755039546 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.750749917 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.750640417 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.749861561 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.751812323 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.752278073 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.751857214 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.748605087 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.747105211 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.752142545 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.751062241 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.75446424 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.74955282 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.750471497 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.75187647 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.74913215 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.749783378 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.752672319 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.746943528 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.748677497 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.750339958 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.748943411 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.752972607 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.747716123 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.746642022 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.751151779 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.746693533 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.74995668 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.752822996 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.750020511 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.750455787 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.751202986 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.749386632 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.750409244 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.750924769 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.7484337 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.75100597 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.748977767 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.749628618 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.748309868 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.748661932 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.753320096 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.751851562 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.752027685 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.753782051 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.752219431 seconds)
  done (took 97.940636283 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753385829 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.753500923 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.749375332 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.752179229 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.753607432 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.750461039 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.751814804 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.749793389 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750948233 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.752509472 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.750113093 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.752678739 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750956173 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.751878437 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.74999215 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751970569 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.749202248 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.750534421 seconds)
  done (took 33.20828916 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.750923362 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.749198463 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.752423962 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.749081022 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.750607783 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752331103 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750669236 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.753822373 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752510534 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.750933672 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749070891 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.751973207 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75251228 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.752468913 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.748894604 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750854163 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.753177547 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752950476 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.749601359 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750047634 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.753654164 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751623722 seconds)
  done (took 40.211969781 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.751847433 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.7522023 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.768051512 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.771759005 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.772707911 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.783762879 seconds)
  done (took 12.283582665 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752679227 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754575045 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.751890279 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753272838 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755142334 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75207883 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751414713 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752439826 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754892609 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752190002 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7517462 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755660393 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754610966 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751811003 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754976664 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754475598 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752772246 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751539597 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752726263 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75469296 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753177782 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756222287 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751297252 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750551025 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754022888 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752089963 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754753368 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751524748 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750508514 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753758045 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755561289 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75142038 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755683234 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752008622 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755142925 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75560584 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753189962 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756126592 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754656917 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753056043 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.754267817 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755866859 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755260551 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753922697 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755859038 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753339535 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752636917 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753919667 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752948866 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756175113 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755628885 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.754208018 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755497131 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756375263 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756744895 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756286636 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753671252 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75331983 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756252009 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755654183 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753806218 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756994838 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753787602 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752822468 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757513048 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754318035 seconds)
  done (took 117.449324408 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75433611 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.754760486 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755326839 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756292828 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754540904 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754427823 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.755104637 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756007271 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755033764 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755920639 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757069429 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75520567 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754710923 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.755904696 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754644175 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754559706 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755347264 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.755439832 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756173704 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757227424 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755441168 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754210026 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75567168 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755350432 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75615009 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757716938 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.754306441 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754670669 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755417954 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75536025 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756654258 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755853271 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.755822823 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.757525172 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757396648 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756774411 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756809937 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756141239 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755942963 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759300179 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755528062 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75885308 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756302399 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756456468 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756207738 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756833696 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755873435 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757071762 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755892323 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75627901 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757663882 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757582659 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757258116 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757185602 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755783394 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757476589 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757720069 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757089214 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756994644 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760415407 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757557736 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757422007 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759948371 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75714704 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75717887 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758047857 seconds)
  done (took 117.608411674 seconds)
done (took 2425.066106429 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.780834202 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.956520063 seconds)
  done (took 15.426200693 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.928692958 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.880550238 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.769719221 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.816149273 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.765927694 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.79062159 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.776575028 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.765690498 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.76731971 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.769791515 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.769365793 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.955311875 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.763347194 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.767106452 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.7696235 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.862516373 seconds)
  done (took 50.621265301 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.772303779 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.772146028 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.78416286 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.776059032 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.770773557 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.790266043 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.803497731 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.775040877 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.830243736 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.782644679 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.897632287 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.778973536 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.770626956 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.830351331 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.783907026 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.787167246 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.862782391 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.845781134 seconds)
  done (took 34.114370871 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.852965664 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.775884964 seconds)
  done (took 10.336271887 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.767590207 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.763908807 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.777939486 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.786872777 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.76982546 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.776840606 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.772064993 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.778141007 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.774115255 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.783254266 seconds)
  done (took 69.4543541 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.778904554 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.77239903 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.772291613 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.771295679 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.762935522 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.769069616 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.770920208 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.768104483 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.463678087 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.805594237 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.779669647 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.780286747 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.77179732 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.77181678 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.769203707 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.793630584 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.962724163 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.76815638 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.767776691 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.777536635 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.77184929 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.824271647 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.786072449 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.773610957 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.803253946 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.460405755 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.779706698 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.778761719 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.903449941 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.7680814 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.772993608 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.772662909 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.775395575 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.166360473 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.067560373 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.770374551 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.779362079 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.780386977 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.769117876 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.902717708 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.774083807 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.781923726 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.764087185 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.048967229 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.874650294 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.816355444 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.178819691 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.776182117 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.776553563 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.80233508 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.779260138 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.774856814 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.788679993 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.290575865 seconds)
  done (took 127.516839737 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.768658764 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.347492314 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934642321 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.769819892 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04909409 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012870226 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.712040124 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.818509153 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.771396945 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.020280638 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.003179751 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.887370553 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.768675628 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.770601378 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.773903078 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.766208829 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.921666981 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.840130254 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.770498188 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.768404557 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806373753 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039964136 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.897564961 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.771431735 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.792150343 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.998652481 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.896027616 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.889487722 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.059355543 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.770712713 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.840072693 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.769283903 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.77294145 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.767496072 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.936607677 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.880175286 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872513451 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.773127008 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.768926822 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.770228426 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.441635145 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.994506798 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.882728192 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.909046956 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.021612026 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.000993664 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.420344524 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.768724103 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.416284008 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.971314207 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.978905398 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.026464257 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.900760634 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.771400139 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.106715356 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.770121565 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.769925879 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.032980878 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006701269 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.886111048 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.77107922 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.770819305 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.768625106 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.08854906 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.77170602 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.880335855 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.772166762 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.769930458 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.887420451 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.887959014 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.003281049 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013503988 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.801439526 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.498120586 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.989455551 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.057160213 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.844256457 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034506797 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.771088325 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.769346934 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867708116 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.52391398 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.983997757 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.087428006 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.036584533 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814435901 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.377982736 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.772525089 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.020724262 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.022231798 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.999583305 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.021691312 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.938391827 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.980238029 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.77150697 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.770787666 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.979686801 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.904830965 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.774263434 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.133594815 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.020230323 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.500837481 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.805236109 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.080718487 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.91096233 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.775035442 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.399532454 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.773877867 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.975912442 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.816724802 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.773493664 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.77322593 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.021444767 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.63382391 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.773017952 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.580633078 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.839147121 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.775565887 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03852787 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.775182486 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017878908 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.773902898 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.087622271 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.284759871 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.818310141 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.969393077 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.02327717 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.562524719 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.077568936 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.090116114 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.899340437 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.043072332 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.678980914 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.776678682 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060255838 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.774946016 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.774077607 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.944288014 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.775800426 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.953162163 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.774553471 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.036907193 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80148547 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947976222 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.776735959 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.054327012 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.821647271 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.828535932 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.777050884 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.90877961 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.779048992 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.805912611 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.962849323 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.779136664 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.775479191 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.384773248 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.775456836 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924836889 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.077759376 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800856749 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.848077356 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.304007146 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.775108197 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872112079 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.805585396 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.386753914 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.778861899 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.007456176 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.777397964 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.736635723 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.774934591 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.089496164 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.002908398 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.779701683 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.776060121 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.571870188 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.481928121 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.777656507 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.954310952 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.107412628 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.422363581 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997252201 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.779332961 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.91130871 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.778294997 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.85722963 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.126906284 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.776168833 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.777016974 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.777273675 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.778562002 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.779621105 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.012521487 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.804901621 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.460304043 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.915673512 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023917619 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.091392088 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.046180177 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.827112583 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.778527899 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.047109574 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.780266063 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.845910513 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.779332656 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.80498815 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.032331364 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.77833055 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.009112651 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.076121437 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.827742995 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830237612 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.780619716 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.77845462 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.777156796 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.91913218 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87854549 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.779405139 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.778697485 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.897626734 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.904561236 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967154985 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.370295093 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.961073968 seconds)
  done (took 882.431161629 seconds)
done (took 1191.591596367 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.780010105 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.781665565 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.768872151 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.780163842 seconds)
  done (took 28.824598819 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.789309076 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.78793549 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.786262772 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.786861657 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.787842448 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.786399021 seconds)
  done (took 12.440078782 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.823566468 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.780601204 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.781225076 seconds)
  done (took 21.10156758 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.858148558 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.19515866 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.887693823 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.232415362 seconds)
  done (took 9.890950723 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.790981268 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.788132458 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.789194021 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.788890616 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.791272503 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.791132647 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.789440845 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.790558591 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.791421472 seconds)
  done (took 17.829407381 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.228778735 seconds)
done (took 96.030106622 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.586934894 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.883646919 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.784392931 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.765773495 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.087436389 seconds)
    (6/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.808630678 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.076665717 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.466142094 seconds)
    (9/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.17444935 seconds)
    (10/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.02008434 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.017417321 seconds)
    (12/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.16833729 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.904099356 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.805698289 seconds)
    (15/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.766140324 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 4.218489941 seconds)
    (17/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.788841726 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.005682503 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.529844673 seconds)
    (20/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.250096786 seconds)
    (21/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.34762794 seconds)
    (22/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.203983179 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.303259692 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.061297712 seconds)
    (25/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.134091314 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.152527066 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.071369105 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.383792087 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.913172546 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.781713351 seconds)
    (31/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.031548037 seconds)
    (32/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.050579777 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.980330416 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.793596285 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.885627076 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.079134945 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.809756748 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.025839357 seconds)
    (39/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.965733887 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.793510591 seconds)
    (41/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.78133459 seconds)
    (42/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.762807825 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.914833415 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.148188606 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.86856649 seconds)
    (46/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.282725628 seconds)
    (47/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.300749357 seconds)
    (48/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.382906911 seconds)
    (49/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.377361123 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.856767381 seconds)
    (51/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.845377898 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.542307478 seconds)
    (53/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.032752714 seconds)
    (54/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.77068887 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.915802433 seconds)
    (56/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.086884737 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.108683675 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.954500156 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.805091347 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.983542862 seconds)
    (61/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.798184266 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.891279988 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.867880433 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.061197654 seconds)
    (65/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.084210991 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.781598184 seconds)
    (67/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 3.970725882 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.04043851 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.811464211 seconds)
    (70/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.892601879 seconds)
    (71/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.886425436 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.304344731 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.930196167 seconds)
    (74/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.921204604 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.895544168 seconds)
    (76/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.956866771 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.786879999 seconds)
    (78/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 3.628648625 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.143815943 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.869192403 seconds)
    (81/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.877769826 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.004876863 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.073079576 seconds)
    (84/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.893302949 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.783302709 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.085698438 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.120739766 seconds)
    (88/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.292541479 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.973678246 seconds)
    (90/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.222156635 seconds)
    (91/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.795896079 seconds)
    (92/309) benchmarking ("sort", BigInt, false)...
    done (took 6.78148889 seconds)
    (93/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.981907188 seconds)
    (94/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.870355652 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.770730337 seconds)
    (96/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.85173871 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.668469453 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.785306643 seconds)
    (99/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.813094672 seconds)
    (100/309) benchmarking ("sort", Int64, false)...
    done (took 5.507276342 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.803782583 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.169748137 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.082256901 seconds)
    (104/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.064449328 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.809540229 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.149792815 seconds)
    (107/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.59993848 seconds)
    (108/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.796998024 seconds)
    (109/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.358323878 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.184741925 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.785279962 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.389612364 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.882575526 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.774016733 seconds)
    (115/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.893259008 seconds)
    (116/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.915366462 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.026532616 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.771946213 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.502047022 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.963768679 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.002676852 seconds)
    (122/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.882356814 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.810528191 seconds)
    (124/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.87040827 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.977262645 seconds)
    (126/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.135898853 seconds)
    (127/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.627413547 seconds)
    (128/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.802154357 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.785253015 seconds)
    (130/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.607957546 seconds)
    (131/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.802810191 seconds)
    (132/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.941280636 seconds)
    (133/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.814463261 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.582795483 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.94350136 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.114796779 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.772290707 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.866526685 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.881358292 seconds)
    (140/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.874477304 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 2.238144366 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.810577694 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.042533481 seconds)
    (144/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.04417789 seconds)
    (145/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.07218541 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.089106809 seconds)
    (147/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.325088954 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.002654481 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.172164889 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.386305638 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.050510231 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.142752726 seconds)
    (153/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.787596811 seconds)
    (154/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.843832883 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 7.757108939 seconds)
    (156/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.81669586 seconds)
    (157/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.891405949 seconds)
    (158/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.92210053 seconds)
    (159/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.920501808 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.146262713 seconds)
    (161/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.971142798 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.817466714 seconds)
    (163/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.786255044 seconds)
    (164/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.417405509 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.118272811 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.815225748 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.133726181 seconds)
    (168/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.312776893 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.467330556 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.81986997 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.774257281 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.106652931 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.814930481 seconds)
    (174/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.798837967 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.814774809 seconds)
    (176/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.151612937 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.843193576 seconds)
    (178/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.398948234 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.410271375 seconds)
    (180/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.076695525 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.081089831 seconds)
    (182/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.881097069 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.995973874 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.663858902 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.118968374 seconds)
    (186/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.290107918 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.192016211 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.82035368 seconds)
    (189/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.853083333 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.847393448 seconds)
    (191/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.083257659 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.871798307 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.855127394 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.78849306 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.874320443 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.848716989 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.789831375 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.958276556 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.162630033 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.788145778 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.909501507 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.885280116 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.791553883 seconds)
    (204/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.808090789 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.189628862 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.799226744 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.842657574 seconds)
    (208/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.778707598 seconds)
    (209/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.238154839 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.866089661 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.892191198 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.989229463 seconds)
    (213/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.776709573 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.41304631 seconds)
    (215/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.29829003 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.961934452 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.944018772 seconds)
    (218/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.813381943 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.676692846 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.814943146 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.701432983 seconds)
    (222/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.856324536 seconds)
    (223/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.920211562 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.069371404 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.064541685 seconds)
    (226/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.939290315 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.45850883 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.385799189 seconds)
    (229/309) benchmarking ("sort", Int8, false)...
    done (took 4.753006624 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.792634288 seconds)
    (231/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.126088885 seconds)
    (232/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.793781021 seconds)
    (233/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.943259744 seconds)
    (234/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.999855332 seconds)
    (235/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.917477024 seconds)
    (236/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.447415262 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.776961041 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.918087688 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.871468093 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.220271376 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.794839104 seconds)
    (242/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.503707627 seconds)
    (243/309) benchmarking ("sort", Float32, false)...
    done (took 5.566682837 seconds)
    (244/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.726712835 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.928011303 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.794010796 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.949477118 seconds)
    (248/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.951920492 seconds)
    (249/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.922875822 seconds)
    (250/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.941376486 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.015355202 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.681977567 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.421602302 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.779175635 seconds)
    (255/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.696214334 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.943161945 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.482290386 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.884378919 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.036208108 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.896770803 seconds)
    (261/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.46959959 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.879585739 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.716978491 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.994664469 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.946734515 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.442737891 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.88589761 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.148371561 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.822568843 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.906147067 seconds)
    (271/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.794087911 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.745791016 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.194690229 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.093768868 seconds)
    (275/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.797420123 seconds)
    (276/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.139897179 seconds)
    (277/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.795810927 seconds)
    (278/309) benchmarking ("sort", Float64, false)...
    done (took 5.580325476 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.893459612 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.717901282 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.730849442 seconds)
    (282/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.928853859 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.877372267 seconds)
    (284/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.193763855 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.881142998 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.046949656 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.178058448 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.90445523 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.903702682 seconds)
    (290/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.059876348 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.067761571 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.754197103 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.593762507 seconds)
    (294/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.998500616 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.91115117 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.686765831 seconds)
    (297/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.822484011 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.83607969 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.984194682 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.445852443 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.849190083 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.417685091 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.894530868 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.799038905 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.923470213 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.817090136 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.177471547 seconds)
    (308/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.880187339 seconds)
    (309/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.966644398 seconds)
  done (took 989.175273432 seconds)
done (took 990.966928128 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.832608584 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.824557194 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.809021878 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.830883115 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.92254665 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.835967316 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.818233192 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.809662096 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.854959453 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.857081703 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.807944247 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.834602097 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.808929628 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.809167501 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.808156485 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.823071636 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.118919687 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.834446761 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.826132021 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.818027436 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.82630997 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.808829868 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.858360608 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.837049657 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.812587543 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.81109713 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.812952776 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.82856407 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.921405729 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.812778887 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.8131125 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.820354224 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.117049758 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.833497285 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.804327464 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.828801228 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.820728453 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.819926625 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.813400253 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.841517424 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.256602572 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.8147093 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.812957749 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.810359087 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.810715562 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.814804611 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.812489632 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.817508245 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.823220338 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.823410804 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.252564141 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.831286701 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.813448325 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.812455023 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.821529938 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.811990416 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.813881565 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.82664168 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.83384868 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.828555302 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.110018993 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.842466616 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.813403269 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.827331325 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.81876702 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.292569267 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.811566433 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.817808342 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.256934359 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.8221457 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.29190569 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.825344151 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.813987368 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.826893582 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.849923365 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.120040472 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.830780434 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.812754843 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.819614313 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.810923324 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.820498977 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.824801616 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.817067037 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.812668039 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829842742 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.841600137 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.822252864 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.813904364 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.820866409 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.832484678 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.821638912 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.825003221 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.816697535 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.808552632 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.82336347 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.817166926 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.816372153 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.81619622 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.818847717 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.825056175 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.256548487 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834956972 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.810757591 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.810110785 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.8126022 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.828195441 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.258186424 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.819465918 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.834144319 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.860517752 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.814333924 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.110211256 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.843322893 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.831062612 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.82377896 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.818606116 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.809075006 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.112829506 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.283329783 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.834781189 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.816053392 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.813103485 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.832016173 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.816159174 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.810833447 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.121327735 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.840269168 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.833436438 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.935419015 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.823946804 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.846182495 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.813624992 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.817121371 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.847581038 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.831968882 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.847124144 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.818143488 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.832017199 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.834006939 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.813126717 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.8262396 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.826083313 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.815990612 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.822214128 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.810919828 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.842850987 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.828267086 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.828931868 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.836867095 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.938282618 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.813622559 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.113965575 seconds)
done (took 285.210543688 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.885135163 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.80424877 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.906485254 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.813093071 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.895151358 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.897762272 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.808854884 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.809604909 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.809613362 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.189929505 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.810268578 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.811055227 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.803240068 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.8096058 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.894274736 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.810958066 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.809392904 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.15328273 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.814543557 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.882458364 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.81366326 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.810338431 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.811687438 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.193982256 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.81019781 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.804988653 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.882835086 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.812783938 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.160508199 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.808493361 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.814045419 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.159958977 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.902270866 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.830571884 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.822679742 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.820095044 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.898031326 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.815609544 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.894529955 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.893746876 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.908588948 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.853283168 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.806558941 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.809929914 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.817375468 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.814358082 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.812354342 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.840133296 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.80905937 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.811883203 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.156003608 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.823100907 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.813744431 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.812729439 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.8123999 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.845601355 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.810775152 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.814738266 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.904135795 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.816269267 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.875544957 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.195347973 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.192328822 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.814817245 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.810519347 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.812260576 seconds)
  done (took 180.513868654 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.88448807 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.888029013 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.881053469 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.818609471 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.866730795 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.887373762 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.817869194 seconds)
  done (took 14.785210793 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.820730186 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.815198443 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.864050086 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.868336661 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.816159273 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.990472433 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.816271324 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.827677545 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.815629594 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.869605252 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.815507627 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.815122183 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.821866059 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.809445418 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.864877737 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.826640608 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.929213229 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.816482506 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.817256933 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.973153127 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.81309665 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.824249041 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.880892873 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.828192713 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.816836704 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.823503521 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.4103375 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.816948964 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.813400236 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.816160849 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.813788486 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.86233081 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.815834662 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.817305632 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.81421849 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.933013275 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.816168271 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.813383123 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.815126238 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.809208035 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.815532652 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.815668392 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.817178624 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.815301577 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.815483771 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.839950506 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.816688511 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.816738628 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.818141511 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.81869252 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.876440936 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.816829876 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.814543779 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.814885952 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.873676456 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.824377638 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.818264609 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.815089037 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.818697622 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.814966014 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.977144526 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.865936943 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.817473126 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.867539312 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.817382798 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.820215472 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.817422903 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.252117274 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.874181864 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.817695475 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.867781913 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.815997306 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.979903487 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.843535435 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.820850059 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.823478171 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.822645494 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.820508813 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.813825461 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.826400086 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.814756088 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.820834159 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.825638412 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.816771403 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.815805723 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.932472601 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.928101234 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.8160019 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.831435765 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.829999426 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.814435529 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.880477942 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.819665411 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.817479186 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.871341887 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.938151075 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.877590756 seconds)
  done (took 201.183461674 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.824474666 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.828674542 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.822174223 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.835530398 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.819515782 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.819860233 seconds)
  done (took 12.695552112 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.822672188 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.822679749 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.819790504 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.81969442 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.820839462 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.821152621 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.823062879 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.822488942 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.825069349 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.820336164 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.821788017 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.822436076 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.822129269 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.822350677 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.821999284 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.819352418 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.821487354 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.819425102 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.821192544 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.821220625 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.979070952 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.820963233 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.826439161 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.822653089 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.825639368 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.821112742 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.829636724 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.821516652 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.823376959 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.828801908 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.82510086 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.821720143 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.822094535 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.828375955 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.827685157 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.821730718 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.825176607 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.823708785 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.818198831 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.825578238 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.82476982 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.821099857 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.821473429 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.822251311 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.826538146 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.827946587 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.828355101 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829645037 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.823714905 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.824744638 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.825584363 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.823179666 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.823445053 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.824263702 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.825205468 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827383617 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.828377006 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.82313158 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.823353623 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.823800611 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.823661849 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.823339164 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.823782981 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.827720734 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.829042366 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.824374222 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.823218255 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.827879991 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.822612034 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.82297003 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.824565833 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.820852788 seconds)
  done (took 134.210852184 seconds)
done (took 545.144265586 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.120948742 seconds)
  done (took 8.86976072 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.896359515 seconds)
  done (took 8.7501549 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.402197141 seconds)
  done (took 10.151952454 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.828231525 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.83050978 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.825269791 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.818395788 seconds)
  done (took 29.063489775 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.8896436 seconds)
  done (took 8.640412498 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.830282625 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.814457423 seconds)
  done (took 15.431239684 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.859105614 seconds)
  done (took 8.60931465 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.879465242 seconds)
  done (took 8.632927842 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.843746312 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.834702593 seconds)
  done (took 15.443008449 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.803649268 seconds)
  done (took 8.551848689 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.64619206 seconds)
  done (took 11.403236782 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.825612413 seconds)
  done (took 8.59280847 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.878058775 seconds)
  done (took 8.62697673 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.00019534 seconds)
  done (took 9.749594377 seconds)
done (took 162.266779876 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.819279478 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.815996572 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.814669565 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.816092868 seconds)
  done (took 29.013126671 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.85568704 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.857367293 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.857083909 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.867210014 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.859314751 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.855770551 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.86461259 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.848160096 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.867741815 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.858648578 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.857002082 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.857200725 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.856644522 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.848800544 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.858847084 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.858530716 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.867792179 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.857569805 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.848936419 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.859727882 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.824173501 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.868259575 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.859929606 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.824242633 seconds)
  done (took 46.290088295 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.021996762 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.896020372 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.976568503 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.876704136 seconds)
  done (took 9.521911035 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.875297403 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.877206557 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.888981538 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.927803096 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.966889396 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.884903138 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.850512822 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.845733687 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.8319232 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.876762998 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.95199595 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.893482967 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.961172151 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.823828112 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.01137886 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.822971307 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.823811858 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.8764104 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.929273085 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.942949343 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.825632321 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.876347646 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.88008821 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.892772197 seconds)
  done (took 47.089537511 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.823950419 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.83214862 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.829729043 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.824226248 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.824002541 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.824953049 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.830580583 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.824708876 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.846154966 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.824866283 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.825241482 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.824301461 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.824271815 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.824541936 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.823807376 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.836229877 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.838656646 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.825042983 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.82756829 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.830293038 seconds)
  done (took 38.316914017 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.819619022 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.762741811 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.17067076 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.074262444 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.819369914 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.819399163 seconds)
  done (took 32.218907124 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.838476 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.829022011 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.824846111 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.881250032 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.961586565 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.831596426 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.825176648 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.835458865 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.870300828 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.889709778 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.843346587 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.853896538 seconds)
  done (took 24.038693691 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.821980074 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.82038725 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.820619105 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.836981533 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.836488093 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.83476889 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.834603344 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.820048714 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.837848277 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.845646429 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.833838663 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.838695324 seconds)
  done (took 43.739264112 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90863195 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.864154106 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.86175965 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545295542 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.198941119 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031885846 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.821675037 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.152898094 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.824757204 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096132479 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.95204811 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925358453 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.079294759 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.28094912 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853213366 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.305928149 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12491211 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048660208 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853101339 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565908123 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890168425 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.975749018 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.699419092 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.884577715 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.034441563 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.953345798 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.083899257 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.822584032 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961499033 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860381235 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835306877 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.822552316 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097109231 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20507833 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92670178 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834948565 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.443440244 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.54275517 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.80995983 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.68482172 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.63682096 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.959598883 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834168464 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824210382 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.758585952 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.946272007 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197580142 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.830223876 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.537717547 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.824208067 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834731056 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91870136 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.8269217 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.640695302 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773456575 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.825396293 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.821714751 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830538923 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393868343 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.010172056 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.992501318 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.797592711 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.917459956 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.66525659 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229045035 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.979979456 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.829466302 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.829655946 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759947914 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.624303586 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883120856 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156331436 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.846804206 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.476919003 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13955665 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.023280333 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.767569941 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116068633 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.32645312 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.796804868 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054435451 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827429787 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762892207 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.773488572 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.761102423 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101421922 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867122812 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.59358094 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874812258 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172466078 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.838065254 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843038358 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850337099 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.051522814 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.714956016 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827152541 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.742467228 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979120604 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848968609 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.161655613 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761888132 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.82909419 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085858817 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.040304031 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.876129155 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.344076913 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992481043 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.359291976 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.879233497 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.945850985 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.875310722 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.108250358 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893210136 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.011715156 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884923589 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.828531558 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156714746 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394151231 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.964893945 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.967917271 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.955589602 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.162065941 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857063713 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91204508 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.832394934 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.829865016 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.652577313 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383142518 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.829531175 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.833612983 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.883769569 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876850325 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.83160429 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780203184 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.457049793 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.971105007 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.843691451 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.055121318 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372864138 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142053544 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764946538 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.159684926 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.922809386 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.051100461 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.49425658 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.916112939 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092009701 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.881482865 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.911041151 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87808903 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849577374 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930142006 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852169822 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.944767477 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.124838014 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.834290546 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.833904367 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.673128959 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.869426358 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840006624 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.837232442 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.585418721 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112897233 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.865981956 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.837694958 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.720872272 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.845570659 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897056452 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835689604 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.845633835 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.367865341 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.561092959 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.840159468 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.420740298 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057299445 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845275922 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.612739226 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948661224 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.916445182 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114076646 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896609302 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.767112855 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.544928306 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.525801572 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83332146 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.769938438 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.832518323 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844323755 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844095749 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.031404867 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.116392307 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880679525 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.664605001 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.878398544 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845825057 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.840115428 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835247245 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.341612427 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.021563979 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.999586297 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.879377636 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978249404 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.847735348 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.768444218 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.838281128 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83879596 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.833378614 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.834944716 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867157264 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.587336769 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216240177 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09385231 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.445645621 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848730791 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.609933935 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.893424203 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.835077282 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.7699028 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.978875388 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.995901302 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846380779 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.845134747 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.657548502 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.572851476 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.399953841 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153511081 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152682734 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283404494 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.02969288 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.862770783 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171926655 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769727894 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.391379358 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893920566 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181765637 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781825866 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920925975 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.498789921 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184916238 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849970982 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063788313 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.229517257 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.661998261 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991898437 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04797275 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870197003 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.966486088 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798151217 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.125537579 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982514779 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.622286659 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054201614 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173287675 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.617128824 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.974721674 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.837676806 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.544918011 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928767697 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.552144764 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.010001124 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.987365816 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.873097483 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325711776 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.84384152 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.063913415 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20464402 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.976154894 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.958334122 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772420757 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.848485234 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.848277806 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.839934432 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.832550235 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.715895777 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.091652145 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848691175 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772043501 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.923343553 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13954097 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.762460137 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.847660614 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837958081 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15285457 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.360066671 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01081734 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.914990104 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.35344701 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846128286 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.772391717 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772344165 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.531171906 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.845989419 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.81573812 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055995705 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.945936848 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.75125855 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.891252059 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918816063 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.094546541 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.852826986 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.114617455 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121298356 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.537349403 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863402778 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.939820639 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.606192734 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.960990378 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.841230875 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075396963 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596246516 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.065836474 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.890990906 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.803258806 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.839627219 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054939882 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.840823493 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.844104605 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084915344 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.561566867 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.848897469 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279279769 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91536908 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.845349551 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.898420578 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.93239121 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849966047 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920602481 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851371469 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.852468816 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.852910517 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887685168 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.833113656 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.976856966 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.85529711 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934860866 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.035803131 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.362150734 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.846393023 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12075205 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21726891 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.178520827 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905028622 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.841186856 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840993789 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776294308 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989554303 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.067486428 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116492869 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.971915126 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.955890899 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866881696 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.657363712 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.03703502 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082893914 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117524941 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.737625076 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.317569472 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.88093652 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.843924398 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854040074 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.055488454 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062156673 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15693933 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.985998059 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.904301734 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.202920731 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117892239 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.84471772 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.844670977 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434527694 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.85283448 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.665253834 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.890965331 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.836126957 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131840406 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854479302 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225423664 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.866068695 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.005363887 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.618684182 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.596016197 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136738251 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.837123423 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.911066221 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124495682 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.238893624 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164042572 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911671286 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856983618 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.950615246 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993815888 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.72013991 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.846280112 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848112855 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.896207993 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.558548417 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.858845101 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131925462 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162369928 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.845421724 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.729747164 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868093422 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.857486505 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071200496 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124921511 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104024889 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856145082 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.854435506 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.663256927 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131616497 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91076841 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780785411 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.849556191 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948132852 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.095665265 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867904998 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.300279063 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.558858255 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131229985 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.852162229 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868054759 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.980266501 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.218132262 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185175548 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.385035573 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073616611 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.445735734 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.390547847 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147127959 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.852744691 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.968739306 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151525103 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.85421577 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.899280594 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886975968 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.124358696 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16568223 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.85972162 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750633574 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.821227668 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.192056858 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412368143 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788998701 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.860048164 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.912618537 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.851324744 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.980591115 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861881588 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.732501388 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.978675691 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.629733274 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.153745828 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.855485965 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.842558139 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.670683009 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.12927792 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88411359 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006537915 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858614384 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.52707118 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.202321829 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11024589 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.91000926 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.861286643 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.855233103 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852555561 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.839746131 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.050227273 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.048933548 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138762216 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.940228728 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.887034311 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85554156 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.067946458 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062988947 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.853778969 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002217453 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.898312978 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892223391 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.759241939 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.352949647 seconds)
  done (took 1662.104394436 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.860248112 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.860070123 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.862959547 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.918678289 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.870603686 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.916306226 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.863104553 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.956636289 seconds)
  done (took 56.893121931 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.853315825 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.046173426 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.863852385 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.854574571 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.862002797 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.855106947 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.025346744 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.864421969 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.863569631 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.864530837 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.856367707 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.851880023 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.165238582 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.877835177 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.863915734 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.841918334 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.862500564 seconds)
  done (took 74.063046925 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.898936255 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.91342615 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.890745207 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.874965983 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.803854673 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.867465824 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.618620773 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.870874283 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.856555812 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.087399673 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.486530769 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.8745806 seconds)
  done (took 89.832694254 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.866797475 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.865161697 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.863743016 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.862412122 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.86182879 seconds)
  done (took 11.112681361 seconds)
done (took 2166.01105553 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.21881979 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.084449337 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.085548574 seconds)
  done (took 5.958803504 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.005881763 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.053757895 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.172302683 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.180856326 seconds)
  done (took 10.204791127 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.141219414 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.239714581 seconds)
  done (took 6.168781687 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.254314275 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.860071585 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.240620154 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.854323247 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.853611083 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.85481861 seconds)
  done (took 22.357120606 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.860221662 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.862303708 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.860111271 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.862091704 seconds)
  done (took 9.233162794 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.842028194 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.562381458 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.84208206 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.855235313 seconds)
  done (took 20.891321878 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.609390736 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.61880922 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.603507662 seconds)
  done (took 9.622124178 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.498910348 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.763285429 seconds)
  done (took 9.050430151 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.125328661 seconds)
  done (took 3.91251958 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.994310485 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.171902939 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.347660686 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.438952171 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.509754006 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.564313478 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.17720518 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.101408372 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.27789311 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.307500929 seconds)
  done (took 24.682034268 seconds)
done (took 137.442673354 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.231644016 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.091069569 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.055060324 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.228444319 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.070977919 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.057202318 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.06564378 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.208572253 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.688720353 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.690303763 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.18039167 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.067162191 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.008346501 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.077734845 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.002363212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.19841511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.055163008 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.216515731 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.861456455 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.069203169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.051708913 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.803000846 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.013636524 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.807379263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.044777654 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.980639714 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.377825097 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.190329968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.010334342 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.37443359 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.978884181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.200399439 seconds)
  done (took 169.746430267 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.591548914 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.815683044 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.818426478 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.819099288 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.324341591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.815881907 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.820021409 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.816758763 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.981346341 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.976891991 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.825076798 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.352929203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.832080667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.817902257 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.829449635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.816915291 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.159547696 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.688531968 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.844767795 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.849189921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.851145088 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.271603683 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.850454386 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.306975376 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.187229344 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.848922565 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.818295788 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.848907751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.823842046 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.839261583 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.84404654 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.819599519 seconds)
  done (took 206.861129642 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.821042745 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.81882766 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.825409454 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.819078385 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.829595657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.832086307 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.818462635 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.816860956 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.523711146 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.516529348 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.835379502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.827549705 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.835300537 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.817186568 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.824419476 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.818881421 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.832010684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.83239494 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.825352978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.826528347 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.831770566 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.735205631 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.837904003 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.749160471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.83032431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.832574302 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.818066794 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.830787741 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.83315499 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.83235056 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.831676754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.816926102 seconds)
  done (took 219.462933634 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.017109475 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.828165292 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.827879297 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.758350581 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.82883315 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.824617879 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.821044209 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.017958608 seconds)
  done (took 18.698049837 seconds)
done (took 616.569509145 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.228078085 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.074517676 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.99724718 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.847731823 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.066130402 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.879818915 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.84636483 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.90564499 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.564731886 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.913173106 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.489510847 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.85845392 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.577465184 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.86292301 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.967600948 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.896481206 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.381314074 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.478600649 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.020316618 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.887424109 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.014668994 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.797427376 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.912809345 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.589417736 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.589561587 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.837795275 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.001222306 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.379566404 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.843846536 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.002849563 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.548952152 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.199715504 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.840312769 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.831993578 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.885708547 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.870341827 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.169644306 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.840874961 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.961867448 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.602611164 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.876989494 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.436933452 seconds)
  done (took 100.533253808 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.802400254 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.802617282 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.799013567 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.798103032 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.79944759 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.799920249 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.798406437 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.80104127 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.796337325 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.795763215 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.796079288 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.800735785 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.79657577 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.797993488 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.79240571 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.793891665 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.794205368 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.796441012 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.794994059 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.7910022 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.792633664 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.791724778 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.793762142 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.792024841 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.792868683 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.790570477 seconds)
  done (took 48.452015873 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.801389972 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.945183743 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.029273812 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.816329797 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.799907034 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.802469432 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.819896691 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.804117283 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.80419618 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.801166845 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.889816393 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.801346703 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.815495119 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.019300551 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.806541279 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.794182555 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.79357704 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.794076103 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.943841296 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.811640489 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.811941928 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.796042104 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.811965558 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.805782429 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.795932137 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.790041866 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.793516788 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.256728264 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.796442008 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.885180185 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.828425108 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.806151369 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.221954553 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.020702527 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.838230344 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.790800728 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.786772812 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.883610477 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.791736937 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.787972181 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.809050086 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.787432222 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.009558962 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.293826373 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.795929914 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.786620473 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.261673589 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.887033771 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.822639264 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.792380451 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.014678285 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.79577773 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.784119462 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.783997795 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.820224346 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.789895361 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.786635886 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.146694562 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.791538228 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.797656938 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.784158682 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.785974708 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.935183612 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.786131727 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.92277815 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.786969031 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.78784048 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.783097529 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.001661483 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.7939927 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.29318897 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.791570758 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.779852518 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.867477032 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.92322969 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.283173106 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.786690344 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.937400105 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.224911885 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.798045572 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.782810179 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.229957629 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.805573349 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.779054006 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.774144395 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.775247651 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.773603924 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.816565572 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.791496697 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.217459457 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.285416082 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.149069018 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.79813506 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.789018774 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.772029872 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.138400393 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.775523359 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.769605225 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.992825053 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.292778344 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.781479339 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.777205462 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.268114132 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.782382286 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.785469832 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.775579008 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.995190791 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.779798386 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.809961444 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.767809414 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.773648856 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.769276578 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.784689772 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.772728778 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.770295808 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.253041165 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.870801029 seconds)
  done (took 221.764313018 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.759181983 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.753384539 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.755473434 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.752692034 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.750741377 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.756059997 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.748963051 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.751793855 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.755340966 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.747414483 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.74608362 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.747312229 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.744260334 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.747135687 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.281611478 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.750316177 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.358813234 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.747048336 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.742691206 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.74265973 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.425906454 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.745537438 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.739770498 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.758279155 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.739636397 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.737292983 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.744173161 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.786345858 seconds)
  done (took 164.511822917 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.744306064 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.927215948 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.759537579 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.779242708 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.754783127 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.742629026 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.767353802 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.763684534 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.749033374 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.743785796 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.741285187 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.805237402 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.755883943 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.880461714 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.773538358 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.776148441 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.848117925 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.749398916 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.74470374 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.744198555 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.773626339 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.740113075 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.807043766 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.873487394 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.760315958 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.862187834 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.75063247 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.746599903 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.745135382 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.862889361 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.758934751 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.806109389 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.771400178 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.764902637 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.864865822 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.861923755 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.852301551 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.769730527 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.750234055 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.745551967 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.742728234 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.734616922 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.864782055 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.763670926 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.74643497 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.855498368 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.761259195 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.74700173 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.75377461 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.74535006 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.757895236 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.763173649 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.812454832 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.878213689 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.776625876 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.771879866 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.77082799 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.032611981 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.757044929 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.846424556 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.739946078 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.866129977 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.764869365 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.737074411 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.746095981 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.753106372 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.773331703 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.776204604 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.852180338 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.75149208 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.846941363 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.777961876 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.751226154 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.745624394 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.750253156 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.863785255 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.864736931 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.777267843 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.783393194 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.7777644 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.74223738 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.746275956 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.737448024 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.763483462 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.750325663 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.866127 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.863712349 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.751510057 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.748254309 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.748337241 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.748611565 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.770338574 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.874403386 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.781698504 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.848044081 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.812341149 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.820470457 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.758345014 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.760210086 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.749754454 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.812622313 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.760553575 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.757908626 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.081615959 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.821129948 seconds)
  done (took 189.550001563 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.212638402 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.804323806 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.8024333 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.041645712 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.174190332 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.534772498 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.792394507 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.796707268 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.822170308 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.957733022 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.853138051 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.809749788 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.784638981 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.769656849 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.794394618 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.816730556 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.79793525 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.114589687 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.913581331 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.888162362 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.778469055 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.081873547 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.118407278 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.171576476 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.829962105 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.116464476 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.477671596 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.040604031 seconds)
  done (took 57.780071681 seconds)
done (took 784.346693418 seconds)
SAVING RESULT...
DONE!
