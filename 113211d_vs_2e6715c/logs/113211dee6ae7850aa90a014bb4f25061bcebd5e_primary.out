cset: moving following pidspec: 25171
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.391229913 seconds)
loading group "string"... done (took 0.581740605 seconds)
loading group "linalg"... done (took 7.591251101 seconds)
loading group "parallel"... done (took 0.17310574 seconds)
loading group "find"... done (took 1.140444074 seconds)
loading group "tuple"... done (took 1.873572946 seconds)
loading group "dates"... done (took 1.235673755 seconds)
loading group "micro"... done (took 0.235249058 seconds)
loading group "io"... done (took 0.941876963 seconds)
loading group "scalar"... done (took 37.463520239 seconds)
loading group "sparse"... done (took 11.912787783 seconds)
loading group "broadcast"... done (took 0.954813 seconds)
loading group "union"... done (took 12.259000295 seconds)
loading group "simd"... done (took 4.502775831 seconds)
loading group "random"... done (took 9.085025644 seconds)
loading group "problem"... done (took 1.842995437 seconds)
loading group "array"... done (took 20.952131498 seconds)
loading group "misc"... done (took 1.68863119 seconds)
loading group "sort"... done (took 3.458254155 seconds)
loading group "collection"... done (took 17.213185849 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513971898 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126774381 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120249854 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121155396 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14911316 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114507575 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126933527 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087516226 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.813931677 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149725507 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118468914 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.433048331 seconds)
done (took 5.215841477 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176231722 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085199757 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084429787 seconds)
  done (took 1.332915239 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067101426 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123995577 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06805789 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06808654 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068215931 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068022826 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067613231 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067380968 seconds)
  done (took 1.695367466 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074798177 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069829863 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068596659 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070107798 seconds)
  done (took 1.447881651 seconds)
done (took 5.893351672 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.791539256 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.216348247 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190253145 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.415730174 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132701223 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159671725 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.630383146 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.310810829 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193131231 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082596053 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.1108803 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.331636113 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110337722 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635525767 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076126455 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092397389 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14102306 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425365808 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06875691 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08355388 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090727131 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129141489 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086591161 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076071371 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.15019767 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069138898 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138068387 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08240285 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067960204 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21540434 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17376357 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657900131 seconds)
  done (took 10.339003114 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097863282 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099262015 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070248437 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124343933 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097828895 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071159347 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072212398 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068683864 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08892133 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129375899 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089486219 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102895937 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06728208 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070002894 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087006598 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20526951 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082198808 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083261315 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072198747 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07734757 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106402918 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079254599 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078185002 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07854369 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130754985 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182090011 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09907895 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098815202 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068399169 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080812573 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116539578 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126001364 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066945439 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067442035 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12578916 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095993706 seconds)
  done (took 4.656837497 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.990587918 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145007878 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092415175 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136406544 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066968009 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110923017 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066890663 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082203784 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211009355 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.323430512 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.611121064 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113095151 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107346697 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06931813 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072625719 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068480777 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.535552339 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097809162 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109237236 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083327536 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071834906 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070385941 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356417492 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069219746 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065512818 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069791385 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.112426204 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058885128 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126967682 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069907624 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.959420837 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.159331174 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06840327 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102675585 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.17073565 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.218598662 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.146211089 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071040255 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066290623 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155927643 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072254968 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06639443 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067474227 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085641016 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105516123 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11603575 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06772264 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068203711 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166895133 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067054281 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082059164 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.093475377 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154589724 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078892607 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066785236 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.257635509 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09081118 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071513239 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067092767 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.180025862 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130306921 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069618126 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06821362 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069988222 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070456794 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36048547 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067444003 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.94690553 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070275312 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077880948 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071039509 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070729709 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074247105 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074216516 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088835497 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067792269 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07686515 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067145486 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067925091 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068300718 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085173131 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.386869032 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068280329 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069405347 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066148467 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065219634 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089886644 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098256069 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068519287 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.171709806 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100896711 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069484644 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067670493 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.109607077 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068765859 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085188542 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070957744 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114983642 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068067629 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.088204438 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068363553 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096989687 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071173378 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102510077 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081920052 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069332755 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.429427961 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067088185 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066659867 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069870054 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067676497 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069386427 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067800076 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065651355 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080579694 seconds)
  done (took 21.801005512 seconds)
done (took 38.950890181 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268301995 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075032464 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075940216 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075642015 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075691818 seconds)
  done (took 1.829544558 seconds)
done (took 3.068903063 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124647104 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102181265 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066258356 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098996736 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066275745 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103537215 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10331879 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083500912 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102384113 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065640609 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098989587 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066264893 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066056456 seconds)
  done (took 2.405823586 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085217289 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085665908 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071787117 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085483516 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064867079 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084336156 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083330577 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091049529 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083416905 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074765118 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064961436 seconds)
  done (took 2.105216881 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084178352 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086384776 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071428433 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083845197 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06464475 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083858244 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083534878 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087480057 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083555951 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076122962 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065231495 seconds)
  done (took 2.097756964 seconds)
done (took 7.832862347 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079143447 seconds)
  done (took 1.295956326 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.595564699 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.102304936 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083612686 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113765382 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191814033 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120601415 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276485748 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088626253 seconds)
  done (took 8.974990313 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105370486 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070663094 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070888452 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074538708 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072820496 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072542266 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072700977 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070638538 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070202104 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072424656 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070221122 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073751358 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070898453 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069325954 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069217399 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073572918 seconds)
  done (took 2.471783953 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093106708 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092027925 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075270962 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07653738 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073669497 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073332977 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075615269 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07448778 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072094522 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07379822 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075976512 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07482559 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073276926 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065631715 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075218234 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076922632 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071944051 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075385149 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075396654 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076649977 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076261215 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065717506 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073384627 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075341341 seconds)
  done (took 3.14102234 seconds)
done (took 17.109075126 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116081281 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072900821 seconds)
  done (took 1.415799999 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082354535 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083406381 seconds)
  done (took 1.400725359 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083180008 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066731877 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092028378 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079374636 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067586496 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067002025 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089214011 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067220442 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067601547 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066999101 seconds)
  done (took 1.982455166 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069173098 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079376977 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071585194 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083308824 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074817542 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065584205 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073324741 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06868206 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078674334 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06400782 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072587205 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084159806 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072478335 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086198481 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073093355 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070482942 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072669709 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068565046 seconds)
  done (took 2.567189378 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066756458 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068443536 seconds)
  done (took 1.374984879 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068516947 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066022787 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068833831 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068071877 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064770754 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063401403 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064823088 seconds)
  done (took 1.700569116 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388594564 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11455108 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.31376077 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072898746 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083686007 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262057512 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067154573 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072295653 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072251036 seconds)
  done (took 2.728133933 seconds)
done (took 14.410810253 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08184201 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087584084 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097743567 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.378780989 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092757438 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067275534 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11553106 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18981818 seconds)
done (took 2.362295146 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214355273 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.641326962 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405952031 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206910401 seconds)
  done (took 2.496480891 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348250107 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089980747 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06080506 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067973953 seconds)
  done (took 1.817639427 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067559966 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071444397 seconds)
  done (took 1.385721304 seconds)
done (took 7.164150127 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068531391 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085047578 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.0677657 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065816425 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067400479 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064839363 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06496712 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06823139 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067812593 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068073798 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067997564 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067610232 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.067358724 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.067709881 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06751093 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064683835 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064640218 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067320364 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064858628 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064870538 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064936881 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067659846 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064977089 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065388998 seconds)
  done (took 2.898859492 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086714569 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067390835 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073534082 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073142371 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070532531 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072697437 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072538593 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066987139 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073339556 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069446815 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070173356 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070822187 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069767646 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070828226 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069520065 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070681319 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072657086 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067293213 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06944595 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070839758 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072476882 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067861848 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071207758 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072723783 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070681066 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070479801 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069777898 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067872637 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072475751 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070615176 seconds)
  done (took 3.388794978 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070646148 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064057903 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066481887 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072770915 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064651472 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065790946 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064442807 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065195151 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065851781 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065292905 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.180221342 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06501438 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064946007 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066078076 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065537538 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070112645 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080435309 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064610082 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064640004 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065006721 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068016439 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06472571 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064650532 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06466717 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064726852 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064487125 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065046122 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064850445 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065507461 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064795394 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068375552 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068394587 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.0648483 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072024362 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068657096 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064348891 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069022894 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064524598 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065376023 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064591773 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06413336 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064614866 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065103202 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071548024 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065003431 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066379072 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065418153 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065910136 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066367059 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067744588 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064454574 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065134558 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066933807 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066056204 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068870969 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064479783 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065545643 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064350187 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065460582 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06460236 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064353333 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064511271 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06775223 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065600069 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079986048 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071930015 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065103955 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066532836 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065516932 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067728177 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066260311 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07873026 seconds)
  done (took 6.173835139 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090995511 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088374798 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06692311 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066779044 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06275728 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064982387 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071229719 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06582125 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066868006 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083115371 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06546433 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066382342 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067146809 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068673095 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065821634 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066642126 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07337433 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063232787 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065046267 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069047981 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065387653 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070536563 seconds)
  done (took 2.804999438 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15742597 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072000438 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107088871 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077024694 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071999754 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076670382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071197644 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071364008 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071379933 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068850784 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068648658 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07117657 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071635634 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068857076 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068995673 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068714602 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071686437 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068690076 seconds)
  done (took 2.667334679 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078003507 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067546323 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088470203 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06688472 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067210517 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069490856 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071739822 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075306429 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069363134 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066995545 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075654374 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069362271 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069841674 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067072279 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069762146 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067082547 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069991017 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067246917 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075592672 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07187664 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071738283 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075642273 seconds)
  done (took 2.837386444 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080984027 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069777743 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082636565 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069248726 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062499752 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066454515 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071616562 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066921976 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072008906 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069107166 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067149966 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065635209 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070123994 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067518422 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070417277 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067268559 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069230088 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066736869 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06890361 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062937356 seconds)
  done (took 2.65520519 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087797009 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068680054 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069776031 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076804368 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069114015 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069047072 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076517085 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069302828 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06943791 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090314929 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069205415 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069272077 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076980507 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074043667 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06985916 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076347797 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076617298 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076633518 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068656076 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069089041 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090087174 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069101697 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076719613 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069297338 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068712483 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069134728 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069289373 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073591378 seconds)
  done (took 3.328804794 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068537621 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067757348 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064349821 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066112946 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064282791 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064804903 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065327205 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065390474 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068179454 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064810588 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067658989 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0672307 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067133392 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06736244 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067014309 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067678472 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067297548 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065298968 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064837152 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064721613 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067122319 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066993392 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067910126 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065148665 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064790834 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067109735 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065038102 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065260507 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066962242 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064587643 seconds)
  done (took 3.258693717 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076252844 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07431594 seconds)
  done (took 1.423756048 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064062399 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081756518 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064633517 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071920035 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070622327 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068490431 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074760971 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071639858 seconds)
  done (took 1.837912778 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084306254 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078337198 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068734691 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080628015 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078114397 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084885552 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135941123 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068221062 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073734677 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065725394 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08113656 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066802118 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073923428 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06815951 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073365415 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073969085 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065101901 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073478295 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069889135 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065712948 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068803026 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076772974 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070145665 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062804685 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068989203 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090116423 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078651388 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067030379 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070807884 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075037809 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073858057 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061479821 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06777494 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068462034 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065486096 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077631718 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082735388 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070665804 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077059628 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069087117 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077211579 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062780571 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073247367 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074924898 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078378543 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068630477 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069015432 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062786754 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065702386 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072108814 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063093449 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070618305 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062543376 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075100045 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072013394 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079192656 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06714641 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069524254 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070634028 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070960613 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074921474 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07010735 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070862836 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067964055 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077863488 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072296016 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076548682 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063653416 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062054987 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065752761 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077390162 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091839768 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074152552 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069077374 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068405145 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06596134 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070903111 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068765135 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073092877 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074327547 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068052928 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073576054 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07535073 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067894154 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070411885 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075575849 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066528279 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070910996 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06608046 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084352215 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066590521 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065602147 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065992446 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078639774 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07123879 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067818965 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065917698 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075238961 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062159918 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067951749 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068694276 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068846344 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077572265 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071995635 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072506162 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076111778 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074322871 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067708567 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070337885 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064063341 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067801848 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066047469 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073679251 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060919978 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069543576 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.193213259 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069833445 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078023438 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06700213 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068712767 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077029255 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074091812 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066858291 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06504177 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071052009 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068924836 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07185121 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077538797 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066627802 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063119824 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063411527 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071593458 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068136506 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072242079 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073481556 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070745574 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062277029 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065333102 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073411846 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076384385 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068904654 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068909351 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074822753 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069537627 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067173605 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074996284 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070512941 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.0672894 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074632247 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068826595 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062899928 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070378056 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070237837 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067469857 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072755317 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070456061 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071183603 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069510501 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066349546 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07496215 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068426242 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066760787 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067797853 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066199296 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078057255 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070100498 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063179863 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065191647 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.0765516 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066140991 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067848316 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067601844 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070558476 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06886071 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065356755 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067241265 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070047693 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078260282 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071348586 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068299459 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073658689 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078998256 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06738521 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070710051 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066687386 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068750612 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068658334 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076387622 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073368392 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072592916 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070356991 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064409086 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073304732 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075377024 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067565496 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065352423 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067665806 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071735632 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073698385 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071912114 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068457237 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066864232 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069217423 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071299241 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070594475 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067363839 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066948051 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073569758 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065847568 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074221014 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06861517 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078637278 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071396862 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063230346 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071552258 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066159732 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074035795 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062841143 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066750908 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067061401 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068700433 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066796166 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069987911 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06168129 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074178133 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074756704 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067315417 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066371043 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066629985 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074126443 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068030599 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070331966 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070387786 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.199909055 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079367405 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067918957 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073035372 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079050599 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068678563 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06222638 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074165814 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066522496 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066753269 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067274433 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066600961 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072662514 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077094201 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075409037 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062357397 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070882346 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066419381 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067595414 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063792834 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072989745 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.0713867 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069062896 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074908477 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069076843 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068350894 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072085968 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068152091 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068912154 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.0686439 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071542886 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068435505 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06948859 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068221134 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070850443 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067000549 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065778045 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069479907 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.0682404 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068226799 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073528213 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067688732 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068209197 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070657208 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067960232 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06949247 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068199424 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067216719 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071275075 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068975426 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06849888 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069848197 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063536293 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075216879 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067380645 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075045931 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068682126 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064858193 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074320073 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069593562 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072943973 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068546065 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068655896 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069150493 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066837877 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070464386 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074518877 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066142184 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078710477 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075418735 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068881074 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070867626 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068227416 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069365113 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066978987 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068951702 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069083792 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068080877 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06743713 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07222987 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070646686 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068901541 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069362473 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068588875 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068718777 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068939736 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062179236 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06701703 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067549398 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067842905 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077417215 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068297033 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067795776 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06685459 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06899151 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067042023 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06459694 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075913064 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076400285 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068486217 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074619966 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067029877 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.0698141 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078303319 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062182304 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06645535 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065489463 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065977427 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07517427 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068001834 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076819058 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067756829 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06663203 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064691986 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067898683 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066080748 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061472966 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064977547 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070475311 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066140713 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066093807 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066461103 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.20044284 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06991527 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078109283 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068894196 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069834942 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069041509 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065687525 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067342792 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066937278 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07133086 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068887289 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065805343 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06510544 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067354507 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06918732 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07014474 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070848391 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069242801 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074764916 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067884269 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071037401 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070859931 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062338396 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070758045 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068239339 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068312292 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067399189 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071480365 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072158785 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068450918 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077412521 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067906679 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06954041 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068914597 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065891185 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067737841 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06796484 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067687287 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066651216 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069249741 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075552443 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065838632 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071432327 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067706058 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068850048 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074240127 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068944344 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071439447 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074642559 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068418615 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070563881 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075601965 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072218062 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071669949 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068799319 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069527595 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073750835 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067366166 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074317362 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068590754 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068767871 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068759498 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066389702 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067970111 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067445667 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066783567 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074106701 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068442117 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066914969 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067088716 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.0650834 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068935255 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071203473 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075477121 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069991316 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071437167 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062806434 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064644405 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068255715 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065445356 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069731757 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070826545 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073430219 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070189326 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067936939 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066865664 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076963832 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073799398 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071919054 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06601108 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071735599 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069201964 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070977209 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068727513 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068317621 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069056341 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072201169 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069551688 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067388174 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07518815 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07186005 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068932315 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069665421 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069182034 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068077269 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062720502 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068341726 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069784547 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072985968 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069600529 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067435963 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077731092 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065417087 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068033867 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070647609 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066429149 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071949358 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061917378 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068549928 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067367815 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067342654 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061969465 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.196950232 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066432482 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071590553 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067730291 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063719561 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079326115 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077677826 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071500423 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067258468 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0664567 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063141499 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063520475 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067614442 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069374159 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069695331 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077975677 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067425699 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067213692 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063923294 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068432018 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071063336 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072510879 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065340361 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063047086 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06718006 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071486821 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073875911 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066819451 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067664874 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071324059 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070054815 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06683504 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071503333 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064327644 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071826352 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080806018 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068608195 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068591831 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074556343 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075276814 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068642794 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063122007 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067724445 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071668064 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067958449 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069112417 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.0692328 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082886786 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071159121 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067049236 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06714162 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071146315 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067952087 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077008751 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068193229 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068532759 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072864204 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070095457 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075847389 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070661194 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075211683 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071531136 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070611646 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066887002 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067811646 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066319033 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066825673 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068631623 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067599272 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072023025 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.0753298 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067264021 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079120579 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077254989 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069814039 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064394191 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067161613 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067140996 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063328385 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06869765 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066022755 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066346755 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066364271 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066768262 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069260002 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07309357 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068773311 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068702297 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067952179 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062124812 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070170115 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070882806 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069076649 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064995191 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068477417 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068848098 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072589678 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071241397 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066057579 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069827209 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069703524 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068924545 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063158751 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075113851 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067521121 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070453651 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06779186 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06851112 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068589765 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071051912 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07204509 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068414181 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069676619 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071537402 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069828058 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064864123 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06440745 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072233378 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064726456 seconds)
  done (took 43.505026394 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103136184 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065105096 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063957341 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064003863 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074490715 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064062538 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062841324 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064183992 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063879707 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06659857 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063028197 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062885189 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07144317 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07889074 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074445387 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067483182 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062925843 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064596893 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062831647 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063856652 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071829785 seconds)
  done (took 2.806674893 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07475032 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079061778 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076159452 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083180636 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072791859 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071522426 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076623886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071624951 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079700682 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073648031 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079999386 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071352633 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073146511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073444104 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073260394 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071893781 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079088686 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071732291 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071304636 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076366278 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071675308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076477773 seconds)
  done (took 2.991352279 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068646266 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067283376 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069057177 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062622524 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066612034 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063035761 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070438633 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065270312 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071012123 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067089163 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066317425 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066367419 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069272144 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062532938 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067061239 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064783521 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109274717 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070737619 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066903437 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068357867 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062392045 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068891267 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063395682 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063068664 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066293893 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070805978 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067902585 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065040917 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067335189 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06681643 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067907008 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065542593 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068683876 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067747637 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.0669209 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066561396 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067080244 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068222779 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06302981 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065441555 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068551678 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.0633364 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06769741 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068766024 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065270269 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065168149 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069186455 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06675858 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062105371 seconds)
  done (took 4.655134258 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080270662 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110844857 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068853258 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089978024 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083410035 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07501089 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070840027 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090904617 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064526079 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065115862 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082576758 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080044978 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066687557 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071089372 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070629823 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066842068 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067908806 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065712233 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070999303 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066173772 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070698291 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073702109 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081415491 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079616376 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070574898 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065486786 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06613239 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070814552 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079124335 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071225992 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071155669 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072189072 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081254852 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068944943 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066383201 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069162977 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083016825 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067037625 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069380778 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064486448 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068991463 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070803049 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07353975 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082864881 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066809468 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071718752 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066389359 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063926443 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079048835 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068991312 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074411046 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080680636 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07069833 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066921435 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071398561 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081742708 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067036174 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065051633 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069568531 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078968377 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064458241 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070473708 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079308702 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069252656 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073758125 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080520746 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071894775 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070554937 seconds)
  done (took 6.456887574 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078373239 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097215304 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084854025 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0846014 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077438583 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077267169 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076661344 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076480528 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076999069 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081497074 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077143077 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117051318 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072364747 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078881851 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.0773929 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077006493 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077170989 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077574786 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076559874 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076431501 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076550885 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083714981 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076817858 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08380054 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082079374 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080736759 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076625618 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076519342 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084620865 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076941982 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081034065 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076800835 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077009603 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08448163 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08117773 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076687185 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066816945 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076140983 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076864408 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07674436 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072505677 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084361161 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076331955 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071847496 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077316019 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076577602 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084038459 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081102397 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079310439 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081005206 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077023746 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084277645 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076940421 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07669054 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084570347 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086939006 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084655552 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085146867 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077113252 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084082168 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083821517 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087011796 seconds)
  done (took 6.330034156 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084320385 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075108816 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083935882 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062584276 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065064788 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072819934 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065547797 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065503891 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075354221 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075103815 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077916791 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07289197 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07615896 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07741505 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073013913 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076374198 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073837277 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072868644 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075097563 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073104208 seconds)
  done (took 2.840704925 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07483331 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084663781 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068465992 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072815398 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069695978 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072628905 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070385361 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070549998 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068017542 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071226921 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077252089 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077467448 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06809794 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072868029 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076398159 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072751871 seconds)
  done (took 2.527964368 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085008529 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075221578 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082080407 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067659838 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067759978 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06344692 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067123341 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06324899 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063397269 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07918414 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066965207 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077138451 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067652021 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066354579 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063872077 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07220709 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063703884 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064560828 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066955393 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079619751 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071019792 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065722023 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070717919 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066981131 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06974575 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07144556 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066414627 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067445641 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064141142 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067073435 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070535692 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071008371 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06406144 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064634235 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065947632 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064557071 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066730165 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067226838 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072313763 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066938745 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065234507 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069497352 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067054068 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068521575 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063143945 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067435619 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063249838 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069642558 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065280964 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069809407 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067479943 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069782768 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067548177 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07423002 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069999588 seconds)
  done (took 5.136846132 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080270467 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07117594 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063333765 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065477662 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070796626 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068559014 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071141554 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068684624 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068149085 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065504379 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069075828 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070222573 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068447197 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070849988 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069059413 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071311733 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06299793 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068284031 seconds)
  done (took 2.615480354 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072722018 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067998977 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074798361 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067428091 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066987345 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069781867 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064123979 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066018052 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066276621 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067051603 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066683673 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069817076 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066040835 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069869555 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067595189 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067918755 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07046136 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066083103 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067690854 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063147342 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069977277 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066595225 seconds)
  done (took 2.861015284 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095242758 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084824005 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142160047 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080128287 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085802674 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072895027 seconds)
  done (took 1.927737295 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092299219 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101894088 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067922374 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071328835 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07746791 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071543289 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071294175 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071943756 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079506163 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077820818 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071449911 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079891029 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079686671 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07912724 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077223843 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077376195 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071630919 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07134378 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067540386 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085312595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071647139 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079885527 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072173208 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07100581 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072047292 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07897939 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080319505 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077289529 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071364464 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079493376 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077009113 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071884347 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079867054 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077402696 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070525464 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080045789 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072021663 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085210518 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077616172 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079201792 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070209641 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07735261 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080260169 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076225286 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080170824 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072133581 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076219954 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071560857 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071957393 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087440474 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077806132 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078842709 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079506901 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080532292 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079713391 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087572781 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077684913 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078804695 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077016669 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077556114 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078754246 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077036875 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078624233 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077540692 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076990681 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079405734 seconds)
  done (took 6.466600997 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106242553 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068520642 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072045733 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077601212 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07862544 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071316762 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071892404 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072048586 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071764922 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068782604 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10926981 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072039312 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079286849 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079484568 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071966465 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071266417 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071614909 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07885979 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068301345 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086963074 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071431221 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078990461 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079631401 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079447547 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077715117 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077509341 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071634603 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072092245 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071894542 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071395037 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075873394 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071909088 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078995624 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068637768 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07886916 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071991795 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071869591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076190049 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071877322 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07795041 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079600788 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084771291 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071460951 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071171169 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077304509 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071616745 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071600327 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068342256 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071826964 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069058638 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077454144 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077404482 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077594929 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079496671 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071592094 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071567875 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07164323 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071795669 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071595357 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077117518 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079229779 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072294441 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087461048 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071687882 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07171043 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078983288 seconds)
  done (took 6.374789537 seconds)
done (took 132.015643175 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18866821 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.167035417 seconds)
  done (took 1.72061584 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070131441 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100685499 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078483856 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130514138 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067605895 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101803118 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100845426 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079494189 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067651885 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067570755 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068107538 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069806174 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132628063 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067657441 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067764643 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070809354 seconds)
  done (took 2.719545897 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100200378 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16427106 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104081158 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067330938 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100601626 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074554443 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06636311 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076955892 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072385085 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066577977 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074619969 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072601984 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066550585 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07225162 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072762879 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074039646 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06655666 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074078725 seconds)
  done (took 2.845538713 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10081371 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093243407 seconds)
  done (took 1.574383702 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154912844 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106754168 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.153397559 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.353281315 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162477932 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149423087 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146504511 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145559536 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11577996 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141936111 seconds)
  done (took 3.007053856 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101485126 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156959586 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.271278193 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119042975 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074968 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095377885 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121286443 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080316699 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082711728 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082455417 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081696852 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078357609 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101247683 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074869873 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076006461 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077482045 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104947608 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074942123 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076092626 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077463079 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102475413 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066919814 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074567521 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074496271 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078971516 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079052548 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067434857 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067422609 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077658744 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.0763094 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078283664 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093997913 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07889974 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107427565 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07270678 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108718815 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078496913 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074733052 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076150579 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074803184 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079545006 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078986955 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074074895 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07808343 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067331946 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07864373 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06739733 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067178202 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07865051 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069260064 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078839227 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077596561 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10739779 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068576302 seconds)
  done (took 6.091661545 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10430976 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107044002 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073133274 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114923315 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104849384 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073742492 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104582323 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097476087 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106138007 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072071565 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069727746 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072107233 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083280357 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086058189 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116221327 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107886883 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075218645 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072900144 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107725358 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106262793 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069886763 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098791477 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09261073 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104506583 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068840922 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071599427 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069581005 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071565597 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078121381 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080052688 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071044141 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082077534 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086254055 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079578907 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069025339 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069416499 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069663936 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081064036 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080424281 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080642908 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078500929 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069327948 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069456918 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070874227 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071998356 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069485038 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080059467 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081691561 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080363152 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070798808 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071565082 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070189121 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071406731 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081697741 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079312654 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082344481 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082016585 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070338301 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069892268 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073937736 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082170484 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080354619 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080550382 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071263932 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080311496 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069735014 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081815123 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085520555 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069763553 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071696497 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07048267 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070994988 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071221203 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079230856 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079216819 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071519508 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071062568 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070039947 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081360052 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080075978 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069626093 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078438184 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069335907 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069765739 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070935951 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070893041 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079502124 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081660062 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071228957 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06956694 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07069739 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070159895 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068707875 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078476791 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080666555 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080337234 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078780847 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070080219 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078789329 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078201716 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07074748 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079422809 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.196821053 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072227888 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072325815 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081843117 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079293675 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081525986 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071489518 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070278707 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080396622 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082099663 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069548463 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080429904 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081956116 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080576383 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070024616 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082841794 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070193087 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081713764 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071255969 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081545851 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069761101 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08073636 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070719221 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069873408 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070826765 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081556653 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073969732 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07000943 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070954156 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071359852 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081136458 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083813893 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072092286 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080011008 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079983993 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072893891 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080628657 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070521358 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081148922 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070950457 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071001976 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068906062 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083089948 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07003592 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070018698 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070600921 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081731095 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070044686 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080416901 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079913525 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069975639 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082496878 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08288761 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079660308 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08187565 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071965319 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06925302 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069385431 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07045587 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079191801 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08130378 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07212034 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070001667 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07906819 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080680297 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068747903 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079618304 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078704489 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080088499 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069769649 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070817073 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081445223 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081550043 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080622953 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079494761 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079866014 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069808061 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078774554 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079600312 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069742203 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08574414 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069951499 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084155901 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08017076 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078403185 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080033567 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08153204 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081361255 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082077326 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084427883 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069662757 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069620378 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081470967 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069743049 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07106115 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079432727 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071062456 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071017032 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083238683 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069487483 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080168817 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068494684 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079191497 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068004317 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070315163 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083639639 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068783425 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070207073 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079514677 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070067545 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077607723 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080205119 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077574286 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069027512 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070199213 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07922153 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078219633 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06842772 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068717439 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070474296 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078164661 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076683848 seconds)
  done (took 18.854845559 seconds)
done (took 38.201838827 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214934384 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159375253 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186470768 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.12126799 seconds)
  done (took 2.172866326 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120189537 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104208226 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094679878 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067492589 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101256595 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066798176 seconds)
  done (took 1.97763211 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316163533 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214167774 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.19129526 seconds)
  done (took 2.142444283 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203984894 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191594049 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.423948689 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.267212592 seconds)
  done (took 2.619295346 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147330013 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090685507 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069542669 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086207392 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13653164 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164277407 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103044649 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128686183 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081430068 seconds)
  done (took 2.481820965 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152235337 seconds)
done (took 13.00628325 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.100456515 seconds)
    (2/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084700387 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.229843294 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077071238 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085368567 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.219637734 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.198253096 seconds)
    (8/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07394873 seconds)
    (9/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075011521 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084889007 seconds)
    (11/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.114043219 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08041467 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076218517 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.218579766 seconds)
    (15/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.254343374 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.180970983 seconds)
    (17/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.165907112 seconds)
    (18/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.110483469 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.205394332 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077727285 seconds)
    (21/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.153098736 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.097004273 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082136158 seconds)
    (24/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079569368 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.17518513 seconds)
    (26/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071861914 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073785133 seconds)
    (28/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.206254554 seconds)
    (29/309) benchmarking ("sort", Float64, false)...
    done (took 0.133238155 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.167907382 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.083084509 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113062311 seconds)
    (33/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.146978287 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.09522385 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09410658 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07844963 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073691785 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.102481847 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.206900484 seconds)
    (40/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082744323 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074430238 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068140742 seconds)
    (43/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093199748 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074920361 seconds)
    (45/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.146228497 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09032982 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.092981793 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.18225159 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.092397845 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054038274 seconds)
    (51/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.116775894 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095071701 seconds)
    (53/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.102552496 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.210778043 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078255218 seconds)
    (56/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.076643172 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094652598 seconds)
    (58/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079574791 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.216391572 seconds)
    (60/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.113764581 seconds)
    (61/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.080203299 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075911184 seconds)
    (63/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.116168829 seconds)
    (64/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.113265866 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.232010594 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089117745 seconds)
    (67/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.203679955 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169003528 seconds)
    (69/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052381607 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.197696292 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.180445782 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066984962 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093262368 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06879467 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.184837656 seconds)
    (76/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077957077 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157689236 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052922071 seconds)
    (79/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053904213 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182677727 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096425857 seconds)
    (82/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074059547 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.287206084 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071232897 seconds)
    (85/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078146976 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.06997858 seconds)
    (87/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053173711 seconds)
    (88/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087598231 seconds)
    (89/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.379984898 seconds)
    (90/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07693339 seconds)
    (91/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.158588287 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09134881 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117080105 seconds)
    (94/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.152445785 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082970403 seconds)
    (96/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054168796 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072693249 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.188104175 seconds)
    (99/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.111812038 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07805689 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092550943 seconds)
    (102/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.0769486 seconds)
    (103/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074688634 seconds)
    (104/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070027289 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053562374 seconds)
    (106/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053855396 seconds)
    (107/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053699824 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075699441 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067689702 seconds)
    (110/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066887016 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075179921 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.112975552 seconds)
    (113/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073921221 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.156570787 seconds)
    (115/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.204125201 seconds)
    (116/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091699466 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075059148 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127424784 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089111154 seconds)
    (120/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.121501476 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053052797 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147844683 seconds)
    (123/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084191806 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053164835 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072961023 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053067278 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071482056 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094689595 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.138681665 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07558386 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091784047 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090152041 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074312229 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072792467 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074906156 seconds)
    (136/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090722516 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090328102 seconds)
    (138/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09223926 seconds)
    (139/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053168058 seconds)
    (140/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.112478115 seconds)
    (141/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08204125 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074024095 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051855607 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076661478 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.113670403 seconds)
    (146/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078264723 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067169529 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066736785 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074831985 seconds)
    (150/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054153878 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074107396 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.0758416 seconds)
    (153/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.108266184 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075692269 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080248112 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053870852 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.105170962 seconds)
    (158/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068503828 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068128052 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073465818 seconds)
    (161/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053100974 seconds)
    (162/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077052128 seconds)
    (163/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.208848396 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143325769 seconds)
    (165/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068998555 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07387572 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069063664 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182143917 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078448996 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093015797 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067126519 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052598026 seconds)
    (173/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053214238 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.107527514 seconds)
    (175/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065112473 seconds)
    (176/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065465727 seconds)
    (177/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05560579 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084830359 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075162981 seconds)
    (180/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.102381225 seconds)
    (181/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05235954 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093543418 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052980671 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052401466 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07363168 seconds)
    (186/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.165938584 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066404514 seconds)
    (188/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055096951 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.142675844 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089535037 seconds)
    (191/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066871868 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075595498 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066431909 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052478938 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.251133199 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069126135 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131680767 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054451277 seconds)
    (199/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081541558 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070678487 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067326256 seconds)
    (202/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072720609 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.199866888 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.196170287 seconds)
    (205/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052942319 seconds)
    (206/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062954413 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052762584 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145095917 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091144132 seconds)
    (210/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074481496 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052713702 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076503913 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075927349 seconds)
    (214/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069070722 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150328194 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067521278 seconds)
    (217/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054986776 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091131778 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074921197 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073328513 seconds)
    (221/309) benchmarking ("sort", Float32, false)...
    done (took 0.134019965 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05266027 seconds)
    (223/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067117795 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069050279 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066497555 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118195982 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098610687 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069063495 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068009762 seconds)
    (230/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053162475 seconds)
    (231/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067800934 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054478575 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.117688272 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141588622 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092754008 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095524069 seconds)
    (237/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052486182 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067435153 seconds)
    (239/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053313234 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.126937065 seconds)
    (241/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064465228 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069463568 seconds)
    (243/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075934976 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067323514 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067396433 seconds)
    (246/309) benchmarking ("sort", Int8, false)...
    done (took 0.143406096 seconds)
    (247/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157821409 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067705667 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067620971 seconds)
    (250/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06434162 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066520166 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068324609 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186444944 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135261329 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073947962 seconds)
    (256/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065982181 seconds)
    (257/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188994277 seconds)
    (258/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074438871 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155608923 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06738742 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17391091 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075093528 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052398884 seconds)
    (264/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053250093 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173745166 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052526756 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158050889 seconds)
    (268/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052467947 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067224141 seconds)
    (270/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052263411 seconds)
    (271/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05315777 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07698051 seconds)
    (273/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070019766 seconds)
    (274/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054450895 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088900044 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090949774 seconds)
    (277/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069292412 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088330512 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075196462 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05432079 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065936515 seconds)
    (282/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053717401 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182113165 seconds)
    (284/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06345443 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066458578 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075266321 seconds)
    (287/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070764306 seconds)
    (288/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052617217 seconds)
    (289/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063427405 seconds)
    (290/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075673856 seconds)
    (291/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054123409 seconds)
    (292/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053591554 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148680367 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052585766 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073736876 seconds)
    (296/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070620271 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054659885 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054711345 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13999352 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067166878 seconds)
    (301/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074635576 seconds)
    (302/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072471431 seconds)
    (303/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053360956 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068228003 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072716412 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052797537 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052377223 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066605179 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067442454 seconds)
  done (took 31.648890776 seconds)
done (took 33.0821826 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087894627 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094591471 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077314905 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094688753 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083004404 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078415535 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074995321 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080353911 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082002076 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084280026 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080289854 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056365107 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076168969 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076189511 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076975838 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0935239 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080390761 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075152948 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074763531 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066632764 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074791497 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067131969 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068647955 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055751697 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080126291 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073736944 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074098238 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075572715 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067583383 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067450868 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071264107 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075014862 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066638399 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080060606 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074260423 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075298696 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07648217 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078651572 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06873265 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067045672 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075996708 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067124615 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075303094 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075244396 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07378324 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073266762 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074839443 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079631196 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092481972 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069022317 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076465204 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078183381 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077812776 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074550552 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071188544 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075030747 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072345423 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09338243 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074870715 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069540839 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075804645 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076361732 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073313863 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074574992 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074869595 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077664592 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077288848 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073153882 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076923969 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073709792 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067105203 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074657339 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070779822 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067406145 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077454883 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078811752 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065868951 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073488841 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074756882 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072829321 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066355107 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069111365 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068665102 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073953544 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06896886 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055309493 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071314747 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073583174 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065966742 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074845428 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073916536 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074390309 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068640152 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077238797 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066728143 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072338304 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066847861 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06707274 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068695079 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071554699 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066587024 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068975926 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077034226 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068425434 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073474421 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080878129 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067275468 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073902972 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065968949 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066457839 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081633449 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076563039 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066919764 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068761974 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065560769 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074157497 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065639066 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066425821 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06662633 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066716692 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072563323 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066297744 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068095436 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074540072 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079760162 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065797095 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06996039 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068021232 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066099529 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.20825053 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067516392 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067982025 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069617767 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064324806 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069360944 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067863475 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075470943 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069340129 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075321424 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069460747 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075608439 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072292254 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073134461 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072385361 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066265223 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060390509 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069279676 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069498395 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068996298 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068176263 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068474868 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067493859 seconds)
done (took 12.766483586 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068109178 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142092163 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099090361 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097526546 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088119137 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068694619 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077421094 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102937403 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069426992 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10355321 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090409566 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087506877 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115982027 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066252039 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067231797 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071392304 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069051586 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.083420478 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103421883 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088588119 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117641785 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067141461 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094765576 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091450427 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090532719 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105035998 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070429743 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071429258 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071551304 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094969656 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089973182 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071174827 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068543048 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100435943 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095827163 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085945405 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067708961 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084479921 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067889345 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067074868 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068926395 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.1005077 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081955436 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08254673 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071613614 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071408676 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068936845 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085781015 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091554912 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081030369 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088012403 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103241432 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070649987 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.067358742 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066020392 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088262981 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066667807 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.0704254 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067466634 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070383918 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06742214 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071400021 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082820171 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082422226 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07204351 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081571744 seconds)
  done (took 6.950969039 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085666889 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093273981 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085731552 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085769043 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.0680414 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067889992 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067919228 seconds)
  done (took 2.079796502 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068576217 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090165488 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091453865 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091366493 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084473794 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08971067 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0777768 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067812945 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089579806 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06913563 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089565881 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102749263 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071565569 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075341792 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092355673 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068994594 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092283618 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068935251 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07153732 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092450689 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070432319 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096871239 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071366921 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068498695 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082674266 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067921084 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1159981 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072680326 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069998651 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071364165 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065903462 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109837676 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081798414 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07638286 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068661372 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083073629 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082828275 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066543305 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08483858 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077703281 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082449645 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068606104 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069069942 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066479737 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072223941 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078694368 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069367339 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069115336 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070842738 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08798124 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068912894 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081785042 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071372196 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073816919 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069829838 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075205688 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078578176 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068803746 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088705965 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069995248 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086127471 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084385617 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082075602 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084438643 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070598283 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08264488 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082058883 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070877748 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070672042 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071795123 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084598929 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066848288 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069947537 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079082086 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070039525 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091686732 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092124215 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069783277 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081701967 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068907197 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068897967 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068726987 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091610723 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073411786 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068037081 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072406412 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071414617 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066783422 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06728076 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072365832 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066745933 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069571679 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071538376 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071210045 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071096729 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085667466 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070902277 seconds)
  done (took 9.017095677 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070393528 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070513272 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071172625 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06970578 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069243395 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069496501 seconds)
  done (took 1.964118309 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095626062 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07031591 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082159546 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073909555 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106387416 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088928782 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088975517 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079856721 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085012722 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080073128 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.088266988 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.09023672 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094549883 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073975487 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08821554 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072827379 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088703794 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076262659 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079745194 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073968403 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088467997 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073860924 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074195147 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083575806 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077105772 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073220287 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068650377 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080371013 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079556107 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07981047 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073935058 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07741786 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072230126 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079979148 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088842914 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072250498 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073810855 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.0796541 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073635042 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077410462 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08987026 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074177001 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075382799 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078487635 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079635034 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072036357 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079006204 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076610434 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088142933 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079183226 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079318327 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072416996 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07729449 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078466242 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072099451 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0794943 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078545443 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089200932 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073863234 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072281439 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070756483 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077412565 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078795781 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076674957 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080304135 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078443026 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072608268 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073628847 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07438088 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073309963 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079068609 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07037676 seconds)
  done (took 7.218397114 seconds)
done (took 28.745820378 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535486593 seconds)
  done (took 2.046400875 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620745667 seconds)
  done (took 2.154738383 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.535932788 seconds)
  done (took 8.069727878 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.396825568 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.50898578 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.729262851 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134545998 seconds)
  done (took 3.341859096 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.693319442 seconds)
  done (took 2.234956883 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216198843 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.204920972 seconds)
  done (took 1.970987221 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377128594 seconds)
  done (took 1.909240876 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.135565479 seconds)
  done (took 2.670656331 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259604228 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177074733 seconds)
  done (took 1.975501052 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.477947798 seconds)
  done (took 2.01318166 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.86281397 seconds)
  done (took 6.399772108 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213178083 seconds)
  done (took 1.789443104 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236249602 seconds)
  done (took 1.772873131 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.703963756 seconds)
  done (took 3.242052516 seconds)
done (took 43.129818882 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082142169 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082232672 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082130923 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079467594 seconds)
  done (took 1.851998327 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07781697 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07455056 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078416585 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07345475 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077380008 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073604578 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07552369 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076599287 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073971396 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074411477 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074054239 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073504521 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076388635 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075394236 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072340763 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076183589 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077430364 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073922978 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076623055 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073623652 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071627797 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075711321 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076288978 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0731506 seconds)
  done (took 3.343203615 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.0787695 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074341271 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076801439 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073461971 seconds)
  done (took 1.855385343 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079462588 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094397583 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09355342 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079066059 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094461156 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087997001 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070186516 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070588136 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072024323 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078683855 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069623185 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097606045 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090384261 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078707987 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081776809 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06690254 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069665631 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088822077 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079647342 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079468997 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07148744 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078922055 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069416382 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090137241 seconds)
  done (took 3.481620589 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087146461 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106408258 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082456468 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090813449 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091856029 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066709059 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088951401 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092308741 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127969351 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066614701 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07188092 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067516982 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074419351 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06662161 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082654251 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108860591 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112559196 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070597668 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099233139 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066585946 seconds)
  done (took 3.277313037 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073599163 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070595511 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067058887 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069978765 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079171003 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073910128 seconds)
  done (took 1.991283412 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069364651 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068510608 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068380563 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068191791 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072924642 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068602012 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067354246 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069012252 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068667658 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068916256 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067965274 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067457025 seconds)
  done (took 2.377558833 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202481389 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070624789 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070947218 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067236665 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071644679 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068152018 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083218365 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069655164 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092970674 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067734702 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068594995 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069908938 seconds)
  done (took 2.557688666 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210122384 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077702917 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242025591 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152719679 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112785065 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117596335 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114104949 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116361311 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143537397 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102407059 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170616874 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169866707 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109599549 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139766082 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0907255 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102601415 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156345989 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165819296 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107372707 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174488935 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147882212 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128124399 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150711609 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103456684 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107753036 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123784485 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073091097 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082196926 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172030433 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135187743 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146361134 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112612926 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093821532 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179358694 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173039033 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14290182 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149264367 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086158127 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106510314 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136376634 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201740556 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089846999 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301179293 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111865141 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082898304 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135654567 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123000427 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122374631 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106583531 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090535441 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148223414 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187525566 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139834649 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089839261 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125378889 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115961555 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116949167 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115267923 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184959101 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163207957 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129973772 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073168825 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109482579 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155391754 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13631035 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109770666 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127408581 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093642188 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136725201 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157452648 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122200713 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147207985 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11886403 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090207981 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121073709 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14203227 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129480759 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163367319 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126005425 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074595899 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125025789 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103238908 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082352323 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147419435 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077346777 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179096956 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100735423 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110188094 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126398594 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111106306 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11079925 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160485576 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.289224297 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10739218 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067650652 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107189167 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12297776 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147447512 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088571343 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110428274 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118982578 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078985737 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139153819 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077213743 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124989953 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078898322 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127747852 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134501162 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077927116 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124269541 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10578497 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103425264 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133643113 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16170669 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089866326 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083605563 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171296828 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1235407 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10434126 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145880393 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158427618 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102680141 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102020097 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150205445 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181040343 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089970607 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165788522 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108174104 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084645368 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089263275 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124988501 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113092599 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125019912 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082767647 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119109781 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170933927 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076107793 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096935295 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135495779 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07994496 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081943462 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105954409 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106076691 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096752644 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101393254 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104162015 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137073172 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265863707 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108870101 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127217101 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101020372 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172641402 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089272174 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102686442 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106446502 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071076023 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137340803 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16079651 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080461099 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165385066 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126606127 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119070582 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120588873 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084982585 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142018469 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08079054 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072326452 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146390027 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112599191 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111027084 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152597262 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11787731 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126742222 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119955182 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133876038 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132415096 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131239116 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105841635 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089030636 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113298794 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127793747 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074094336 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091830723 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081147906 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106038574 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097760078 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084056741 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142561265 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125782337 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110970063 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113772026 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097761076 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149797565 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077610463 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129808768 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120585569 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096201454 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153847776 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153898246 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132052827 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099881528 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281812676 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071967754 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075926434 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091272786 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125006045 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084144272 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084576835 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11757174 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149940666 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132021085 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138302425 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124199619 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122170371 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158153764 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071245925 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118508544 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149243491 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123456154 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105454284 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092573905 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100260226 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144350128 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108714572 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185033212 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118475394 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124951066 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154861423 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101901839 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080656663 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103738695 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137699597 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105047922 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145740703 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10126717 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08907499 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111403213 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075818793 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100530181 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128934539 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119941637 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137039837 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116740947 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134447205 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07858609 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117048224 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122454135 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122010623 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064941812 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120965691 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162497387 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095167444 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119685198 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298314169 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080740393 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.137312147 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178206432 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148119815 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086883218 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110045556 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120616908 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130165903 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122017483 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142879183 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108390051 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137561295 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111226742 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087228673 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090078415 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09970605 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10600144 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097149169 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107402387 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114217462 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096587284 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134228464 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104339374 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111993198 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119318874 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099733252 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091872973 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097678261 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180374197 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120279177 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172664823 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101016331 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145965224 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164855571 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076223599 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080565827 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079635444 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141486673 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085737615 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132157753 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108669817 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118696849 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125046793 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144383562 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097330952 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069611581 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11056714 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134767655 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12577335 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099570807 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104565059 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164299366 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101788371 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080079118 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113917004 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260872428 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105775783 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177265546 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063082419 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107967313 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077672957 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082413096 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130488919 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155658864 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082561566 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104431205 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122340736 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115872795 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130345907 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10194277 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109056 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128209616 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149830526 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130330589 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091197251 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113668595 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130272893 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15923471 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10613557 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098102943 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174646237 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154602586 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162353781 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08864122 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115267918 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115528025 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110679799 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139788519 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08401833 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165102986 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083519598 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137465614 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105142907 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090618632 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130753931 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10970935 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089410094 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151036165 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118893655 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083369236 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078410319 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118473591 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120188664 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106966017 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075756571 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139484223 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074231485 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277450833 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164060787 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082997577 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107133453 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097719276 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080989537 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110760194 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103917421 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088325115 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100039786 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174930364 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089094311 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15048115 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135232339 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114452651 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138319587 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103327718 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641618258 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078918661 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154223585 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117290429 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176324543 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102063563 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120284224 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110316899 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123465738 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145667564 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105209719 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181590931 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132598292 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116786589 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080740809 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102950536 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104923154 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088754384 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108829377 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115078023 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116386 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094298975 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117353684 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126170844 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083543248 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097624922 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158621112 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118042151 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145159944 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141446079 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086135454 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118758836 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13902489 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080674695 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.266019314 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154744754 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108508563 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10178199 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083066344 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102387436 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160415451 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075329425 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162117033 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12100742 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112582345 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115006395 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114712101 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133738149 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108713683 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122517445 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093498599 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111405881 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1156108 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083257131 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078222676 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107772747 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111924227 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100445308 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098626872 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099913602 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15367502 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073275019 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100423746 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116440586 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145719365 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176980478 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090193765 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084250167 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119378324 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114851421 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11393857 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12275833 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080223537 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083003253 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082309007 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079331007 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110795133 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114775682 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116016747 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113132759 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16538575 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084272992 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233870125 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09686235 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106357374 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070954096 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079748899 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096292605 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098666385 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107731533 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109902904 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306159761 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096774626 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091506899 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093920877 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076206738 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084551474 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129613273 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111977975 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120299651 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100324814 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064461848 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110062282 seconds)
  done (took 59.869866935 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109785275 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084101885 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.094975677 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146062148 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124780721 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203742792 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155872191 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190414184 seconds)
  done (took 2.770592581 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06943407 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097180693 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104330893 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085252861 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068601644 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069567824 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233163573 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081542264 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067572813 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099485638 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07895741 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070126045 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.429800949 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067647053 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068785562 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062932582 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068785796 seconds)
  done (took 3.47533632 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388247695 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612006511 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.35308517 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073423959 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.926176299 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087087469 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.149895263 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130637017 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075571813 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539983395 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.407859117 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126293252 seconds)
  done (took 18.532342594 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079030339 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072240145 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.087844256 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08733922 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075655731 seconds)
  done (took 2.131673082 seconds)
done (took 109.088751253 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08409607 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.618619658 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055072679 seconds)
  done (took 2.361245434 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085457964 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088023199 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088655641 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085223062 seconds)
  done (took 2.01355199 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075693603 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078741285 seconds)
  done (took 1.815197154 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23823895 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166969197 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098544858 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085261643 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081186248 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081758848 seconds)
  done (took 1.91193292 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074249175 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076637676 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075678354 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07799288 seconds)
  done (took 1.964003427 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079538603 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053790938 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056545579 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059546419 seconds)
  done (took 1.909648519 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088532099 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081781666 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080407805 seconds)
  done (took 1.911983676 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103935889 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088017828 seconds)
  done (took 1.852701333 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084024571 seconds)
  done (took 1.746748428 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097113617 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103962901 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133729296 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113290885 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142528602 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112106895 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086940906 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088221511 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078936029 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089023869 seconds)
  done (took 2.707678367 seconds)
done (took 22.440672985 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080510646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370207003 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362967065 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09250568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670720846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358740207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993344474 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095069608 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117486774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069622779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086516726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649844422 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983605169 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326712192 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968803765 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325275965 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651220583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070179931 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069364939 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069600079 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978258433 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069842537 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069718734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070633109 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651409686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375045718 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070213886 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325526838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070176693 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071849022 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357647477 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070246257 seconds)
  done (took 16.243315849 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072135619 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121998516 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075143964 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087165233 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072730152 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070929844 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073272364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070620161 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122398111 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087054579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087544541 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070440312 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074133802 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070428899 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08975385 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069834239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07077332 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070623025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070286866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070375615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089447128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069982846 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070281718 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071481423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070378961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083434681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070812631 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070402487 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070922096 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072014408 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07272389 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071448383 seconds)
  done (took 4.156777087 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116879058 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127063528 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07632938 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106149085 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114322921 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072285402 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146083423 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095655631 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130384679 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070850441 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087526215 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070067193 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10513403 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070703644 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090898027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070469576 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071171136 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07102593 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070129848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070591699 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090263807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070034566 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070970166 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07096848 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070934394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084191312 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070703563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070996269 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07073577 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072642704 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074180459 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071518699 seconds)
  done (took 4.398348099 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075024539 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077130636 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085080579 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086484372 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071297402 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074652483 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074702241 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072491119 seconds)
  done (took 2.296731071 seconds)
done (took 28.764283194 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081776098 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071139529 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074531388 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084577629 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075706979 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081209421 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06961883 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077697354 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07459998 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075337282 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077225416 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070216583 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07326856 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069840198 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076266581 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069818673 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081614109 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073929144 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08129483 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082341546 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072097033 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075431796 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077043973 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08142802 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081489614 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081930499 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079692776 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075364201 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071303013 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073291829 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079272703 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086759933 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070352637 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081796941 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069911158 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069740389 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073719941 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069653107 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081776608 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078900451 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07140031 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078255772 seconds)
  done (took 4.861359519 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090292075 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095039864 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087474412 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063634993 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068397217 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067682647 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091679819 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061804998 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061422607 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090824949 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057751155 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062089902 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065396264 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055483927 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062226607 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058521396 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064038986 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057958616 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062240593 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061933133 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094414928 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05566951 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079917297 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066049851 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057973132 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063367755 seconds)
  done (took 3.489641336 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076998854 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087410319 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092495358 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134168017 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108649521 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081619381 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08182653 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097672349 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.091259201 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069155848 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073239183 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095188481 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09239303 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076451598 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06974707 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089169137 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086367005 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071246171 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075829537 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096888413 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089025883 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088224919 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098701099 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085953389 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068895343 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071998436 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073365548 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083529359 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075228169 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079255228 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073642355 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073350155 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072531721 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081372834 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073414021 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07149125 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094933985 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079709919 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080990129 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070058746 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077802546 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070761019 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094989476 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128455799 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068545191 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075912949 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07347959 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079227986 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069866394 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09055273 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080894089 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069106153 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072576868 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068808106 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069961087 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083555432 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072135582 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071648416 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079132649 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075759448 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095000593 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074274796 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085812772 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069440819 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077797764 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068878393 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070654924 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069003882 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098599248 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071558487 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113763077 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071080379 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070988293 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078951932 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077962922 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075838351 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069976034 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085940264 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08059109 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073260678 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079190511 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073268237 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072864338 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094228172 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07234988 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071660534 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071077515 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077582472 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072454319 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071204092 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083337645 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068953338 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072391563 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086997147 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069314435 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070920747 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075510239 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074139507 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068973199 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081112635 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074689953 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070656718 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079741 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069866699 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072946816 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082725632 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076205706 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068809368 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074117883 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075512001 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070675604 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071384665 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072461344 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071314576 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078443368 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076211894 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074185546 seconds)
  done (took 10.942480426 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168485987 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161462108 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073196213 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152147521 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078897579 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081784228 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.154987444 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097613566 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069957749 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070794681 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071323888 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11351207 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108765938 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118754802 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081528573 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070117386 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087316217 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117816628 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.156075486 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149809524 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087300698 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079268931 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072102757 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071283173 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072786521 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081212425 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088234907 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07918562 seconds)
  done (took 4.537022406 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083219049 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108264249 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076720743 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092638761 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092857697 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069882366 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072488995 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071604177 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08341798 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080438764 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069572423 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075448814 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07699463 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073597841 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071079448 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076820593 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077139211 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071155014 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073325693 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075330776 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081333573 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094456254 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074287911 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069139965 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075201215 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068932913 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065651358 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086419451 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070098745 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.099067116 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06807682 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075136561 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085013431 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070630867 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070203718 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069888751 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069621329 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070294079 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071369434 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068092863 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06846468 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059137533 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068724454 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081145917 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077125417 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057932177 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074638525 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075174148 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07529334 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067404329 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072665444 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072261694 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072520743 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077613428 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073835671 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075254241 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071128972 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076325586 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079109419 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06977606 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066634121 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068115629 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074535081 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067290984 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078251297 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074560799 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068012492 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.0695522 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071421906 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076324195 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069288003 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074354017 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067166715 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071608034 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074456393 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071446787 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070903731 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067949947 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06934564 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070347219 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05713381 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069761877 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055126803 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072609691 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067744463 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068316629 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069670655 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07451135 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081800155 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071003999 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075663825 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070830901 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069086874 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07273928 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061894125 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072710917 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081417546 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084633468 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069674907 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067487756 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083212823 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074555939 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068650052 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057554434 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074351284 seconds)
  done (took 9.426659421 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09283576 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071689636 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086612895 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09333066 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08986503 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077491179 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079814173 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071407705 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085654652 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076105704 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078937167 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070981164 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081020162 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079887478 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072885374 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080677958 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074096924 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088050745 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085391041 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070467573 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078695802 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083280289 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.093378565 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084792676 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083323683 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084362426 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.093337489 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079800076 seconds)
  done (took 4.017799395 seconds)
done (took 38.947895109 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.772972207 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.940883835 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.764532968 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.127368576 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.836625093 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.938132746 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.854560085 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.767831005 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.961424432 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.799567823 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.997488423 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.878063276 seconds)
done (took 65.339354115 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.809493297 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.901064875 seconds)
    (2/2) benchmarking "String"...
    done (took 1.998965096 seconds)
  done (took 5.596207749 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.988552263 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.317256632 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.007462354 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.760029377 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.765521514 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.101829976 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.562118811 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.293474029 seconds)
  done (took 30.505511701 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.951057026 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.999475916 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.462431397 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.495330763 seconds)
  done (took 15.66055516 seconds)
done (took 63.347719932 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.779672712 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.763079752 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.778813259 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.744852116 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.820271973 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.766124555 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.218456771 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.788544025 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.761553877 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.752918208 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.762049938 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.19742015 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.768281268 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.088927056 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.760023847 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.767705532 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.784007623 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.209714374 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.918708793 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.769914038 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.776754311 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.955709244 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.762699795 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.771808595 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.770776095 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.76573192 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.213918228 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.774311961 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.390466048 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.761339102 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.794235314 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.310455664 seconds)
  done (took 203.947572583 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.760443374 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.771243746 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.83913617 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.777754474 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.090144685 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.945859684 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.864479306 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.245469411 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.764796836 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.762259858 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.992822013 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.762459995 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.000318582 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.713403327 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.812335886 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.869042287 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.018206317 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.003429908 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.816404501 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.911347634 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.764018134 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.958715145 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.908013579 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.978935645 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.784340091 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.763639369 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.772490463 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.782802249 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.954176691 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.993562326 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.784327712 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.787303867 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.96158714 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.636026432 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.776391761 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.779529298 seconds)
  done (took 169.807878811 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.927917786 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.762891257 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.763205928 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.762328872 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.768181979 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.762767408 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.883940669 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.888926617 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.356376576 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.032749568 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.814503728 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.585925066 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.76287909 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.829889028 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.77675216 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.763819059 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.778247131 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.791218027 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.764343108 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.763158012 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.888085034 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.775663333 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.852361655 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.771824249 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.764166267 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.769041468 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.76375621 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.135950321 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.76295535 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.769171551 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.005854092 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.76496506 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.764724011 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.654869766 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.035344108 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.85487418 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.766336815 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.769332981 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.765655858 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.984138784 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.764467286 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.764283703 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.765246662 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.767134719 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.938604937 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.764852363 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.888099066 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.765198951 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.265059277 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.765318458 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764759055 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.898819931 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.449042655 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.766629565 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.765202025 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.767700271 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.764998548 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.765125436 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.771226037 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.758222094 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.997073172 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.767952263 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.767853869 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.780529605 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.767136572 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.958932797 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.765821003 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.382172576 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.82402769 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.884322065 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.907332882 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.766250903 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83332562 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.861254321 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.766935465 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.766550204 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.765986507 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.766019639 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.847281639 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.767201572 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.91503676 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.774850613 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.767554971 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.819858997 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.837541674 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.766932435 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.766936912 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.665585106 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.767291302 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.76677532 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.073785494 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.833964 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.767656198 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.766652037 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.766990565 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.897109617 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.89070924 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.569057016 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.767771694 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.902891569 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.769934424 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.911473713 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.768949393 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.942268658 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.769079065 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.850234482 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.773300493 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.77001716 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.76802667 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.800891179 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.768727469 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.827569014 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.767690088 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.767498991 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.141135613 seconds)
  done (took 400.292119437 seconds)
done (took 777.733719966 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.456856722 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.423642697 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.530388024 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.441792568 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.417934455 seconds)
  done (took 13.976341871 seconds)
done (took 15.683233332 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.857588426 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.8637335 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.793899771 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.860958834 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79059457 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.860003034 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.84361666 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.796291959 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.827110205 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.796055508 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.829632115 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.795434083 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.781551232 seconds)
  done (took 25.402429332 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.007040678 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.005741938 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.841700048 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.996515882 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.818126903 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.995178692 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.931854315 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.922436685 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.920871942 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.786643778 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.784171477 seconds)
  done (took 22.718647278 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.00735286 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.013161745 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849317952 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.007266331 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.821270475 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.004802425 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.93773851 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.924226854 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.92474179 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.786464268 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.783917813 seconds)
  done (took 22.768317547 seconds)
done (took 72.596443553 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.779482668 seconds)
  done (took 3.48822316 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.80593716 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.960942116 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.786753701 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.782811482 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.77910973 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.781799183 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.783810906 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.779633006 seconds)
  done (took 16.170212584 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.779262394 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.776603522 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.776547293 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.779351964 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.779320092 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.778360212 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.779400026 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.77644011 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.775773209 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.779353568 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.77626133 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.77930267 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.77644297 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.776601734 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.776547156 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.781156515 seconds)
  done (took 30.156205049 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.778807709 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.777144186 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.776979695 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.778077404 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.7773594 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.778032885 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.778074422 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.77651066 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.777290772 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.778283926 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.778750808 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.777319851 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.777938852 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.777123111 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.778570525 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.77789311 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.777183199 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.77798792 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.78232117 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.77758682 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.779078413 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.77776996 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.779186718 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.779649842 seconds)
  done (took 44.387657831 seconds)
done (took 95.912894015 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.689791386 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.161795218 seconds)
  done (took 8.561977462 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.782002923 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.781195977 seconds)
  done (took 5.313213195 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.780569997 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.781043149 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.781547978 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.780562634 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.782390628 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.78119095 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.780914964 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.780745743 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.781076205 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.781209116 seconds)
  done (took 19.522078505 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.780957184 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.780598343 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.779615483 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.781697787 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.781387151 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.779396345 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.781755804 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.781052953 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.782808755 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.779757504 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.782702138 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.77943421 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.781649273 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.77990743 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.78161849 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.779554594 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.779383026 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.779273144 seconds)
  done (took 33.764072751 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.782940109 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.78218068 seconds)
  done (took 5.276879454 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.779094694 seconds)
    (2/7) benchmarking "second"...
    done (took 1.78025147 seconds)
    (3/7) benchmarking "month"...
    done (took 1.78117245 seconds)
    (4/7) benchmarking "year"...
    done (took 1.780108108 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.780631837 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.782305109 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.780493464 seconds)
  done (took 14.176882878 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.783822376 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.936417157 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.005777833 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.461415923 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.784832693 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.786292089 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.738952008 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.7870319 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.788399669 seconds)
  done (took 19.786006299 seconds)
done (took 108.11234921 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.618571515 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.778590919 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.100029979 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.834630684 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.836607454 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.076892051 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.813172803 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.082114686 seconds)
done (took 42.85466732 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.837684561 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.328055567 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.355899725 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.221977642 seconds)
  done (took 12.619463486 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.763736192 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.298587633 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.819841004 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.363653001 seconds)
  done (took 19.982524852 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.153282342 seconds)
    (2/2) benchmarking "read"...
    done (took 2.12894071 seconds)
  done (took 6.001487849 seconds)
done (took 47.157003487 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784993848 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.781801747 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.784466349 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.782076112 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.784705754 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.781600813 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.781657481 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.785246965 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.78454564 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.784381925 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.781825989 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.78573646 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.786536717 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.784447406 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784426329 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782549146 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782732898 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78481254 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.783452969 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783503585 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782698161 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785975669 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.78283605 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.783149548 seconds)
  done (took 44.525107247 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.785276113 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.783774977 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.785528546 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.786021447 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.782871285 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.786402482 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.785877868 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.782892259 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.786135686 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.786419807 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783312877 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.78368371 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.785720086 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.783862932 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786718145 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.783048459 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.786853118 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783481594 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786305345 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.78401848 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.787131327 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784455715 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.784323885 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787185296 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.784780941 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785352178 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.787084414 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.785991966 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788497641 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.785131501 seconds)
  done (took 55.274715995 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.791997044 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.795238845 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.78753368 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.787905896 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.787798389 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.788589946 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.788048236 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.790693285 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.790337477 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.790133475 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.790518178 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.791031208 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.791293786 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.790235765 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.791111929 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.791993044 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.791163293 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.790795067 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.79177542 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.790971117 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.790908653 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.790952183 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.791235157 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.783926764 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.784135668 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.784347463 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.783714174 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.783714794 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.784532419 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.784083167 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.784941224 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.78603688 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.78489854 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.7846602 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.78449447 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.784201356 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.789650039 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.792020305 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.785068064 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.785977323 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.785246011 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.785408746 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.785107501 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.78504201 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.785006047 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.786341859 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.785525222 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.786247526 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.786904187 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.786099119 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.786053219 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.785078631 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.786576223 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.785342409 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.786414734 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.786159948 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.7860932 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.78680576 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.785407816 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.785669332 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.785968417 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.785369148 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.78600006 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.785684494 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.787361637 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.786199464 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.786672736 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.786783816 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.786576088 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.786345537 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.78641479 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.786726122 seconds)
  done (took 130.40580841 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.786050252 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.7837683 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.78336437 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.783443897 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783927933 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.786590214 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.784402972 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787171316 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784701065 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.78651464 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787270597 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.785065343 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784227451 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.787562534 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786771896 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.783528279 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.787014194 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.784998627 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.787083501 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.787472991 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.787115431 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.784956693 seconds)
  done (took 40.999792151 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787895577 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.788470791 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.785374785 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.787895778 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.785820536 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.788223286 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.787464312 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788247662 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787768759 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785394674 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786264316 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787645895 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.785854082 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786668743 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786845513 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.786565421 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790085933 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.786467586 seconds)
  done (took 33.886513969 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.788435369 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.785896883 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.788437023 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.785068047 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.785924742 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.788365629 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785590319 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.788971776 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.788935277 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.786161718 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.789235126 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789259358 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.788610438 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787494828 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78881437 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.787678151 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.789545107 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78709132 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789542092 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78661644 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.786374802 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790234911 seconds)
  done (took 41.052324457 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789051831 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.79024602 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.787590137 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.787675814 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.787092964 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.789388704 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.789790961 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.788455687 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.789398973 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.790067933 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788062171 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.790436017 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.787124482 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.788643843 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.787265859 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787852583 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.792007389 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.789143534 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791050689 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.787711976 seconds)
  done (took 37.497925801 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.793296773 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792048556 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79220396 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792434748 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793067281 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.793341168 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79196693 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.793517109 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.792751035 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.792987154 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793266849 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.792763286 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793352447 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.792430351 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793655396 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792037228 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.792084238 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.792598376 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.792558564 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792737071 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.793727995 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.793021052 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793402081 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.793287894 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.794373655 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.793352101 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793334484 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.793209372 seconds)
  done (took 51.924037079 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792660053 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.791493811 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.789995321 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.789703308 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.790080331 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.790077698 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.789192581 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.790325176 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.793337283 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.789807077 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.793575844 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.793677755 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.792814763 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.792614074 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.792509827 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.792979101 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794244649 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.790048003 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789033045 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790657096 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.792818088 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793336337 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.793981843 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.790907178 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790713051 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.793176231 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791357065 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.791281201 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795219444 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.790685904 seconds)
  done (took 55.475073497 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.811485187 seconds)
    (2/2) benchmarking "in"...
    done (took 1.812390827 seconds)
  done (took 5.346746026 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.79148731 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793805047 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.793916567 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.791929 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.791197518 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.793375199 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.794607256 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791650269 seconds)
  done (took 16.065816855 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.79390752 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.794697851 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.795431058 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.794959877 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.795469785 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.793670482 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800067272 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.795055308 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.795736334 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.795892732 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.8023355 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.803167525 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.797425676 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794011599 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.795220086 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796169997 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.795051825 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.795978687 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.796561052 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.79714801 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796811325 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797050042 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.796986435 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.79323582 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.797133142 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.805981822 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.800027109 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.795919144 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79616634 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.799183241 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.795282241 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.793333492 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.797088985 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.796760109 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.796687671 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.797629105 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803336798 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797287544 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.801654391 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796812679 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.79690363 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.793977676 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.798126699 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.797912633 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.798347832 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.797868431 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.796800104 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.794454531 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.797170399 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.801900474 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.802664457 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797058733 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.795176751 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.800921023 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.798097929 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.804007416 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.797902611 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.800638947 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.80667816 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.807923889 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.810125948 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.804795631 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798255026 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.799140152 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807696058 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.82136979 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803625207 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.795621587 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.795749205 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.798199734 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.803595377 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.811775136 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.807566934 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.798914126 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.798972097 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.798061391 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799456042 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.799344867 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.804482756 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.801428949 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.79884032 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.799229723 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.808051881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820978778 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.798467058 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.800811942 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.800025375 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.800310055 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.799887887 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.808159581 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.799793623 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.79962755 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.798629635 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.799341149 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.800710917 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.801437693 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.799961722 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799958302 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.797659075 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.799049681 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.800215434 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.804122584 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.81020921 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.800942936 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.802390709 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.805833726 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.800522763 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799921503 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.806054614 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.801041832 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.800673154 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.800362675 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.806530736 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.797011966 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.803785384 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.809274087 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.801225707 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.802539719 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.801571661 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.801708896 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810578073 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.827596605 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.800520543 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.800654109 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.805865257 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.813191095 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801699734 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.80428458 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.800883281 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.798423334 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.79857921 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.802009779 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.802921205 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.801985928 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.802150831 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.802413226 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.798774174 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.80238384 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.803023511 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.801887965 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.803179857 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.802865548 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.802898253 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.804435889 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.803018371 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.803808914 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.807967609 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.800967993 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.802577023 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.804229378 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.798613743 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802917068 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.80394634 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.804514917 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.80301525 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.804485257 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.803034367 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.804274316 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.803218454 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.803362563 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.803196254 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.803826063 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.807766124 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.804810488 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.806967819 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.803270897 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.801049346 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.803026531 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.803639548 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.803359128 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.803708001 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.80245922 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.806610779 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.812743291 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.803839098 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.803861161 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.80629246 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804819136 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805366169 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805564832 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.807196855 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.812637122 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.80463363 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.80942354 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.805112962 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.806031775 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.804293412 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.804696887 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.803365075 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805012032 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.808040723 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.81247892 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.818161023 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.812784856 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.805841063 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.808236275 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.806320573 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.809609802 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.809144264 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.805676381 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.805321337 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.806427673 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.804180351 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.806672788 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.806358405 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.806180274 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.805308681 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.805240387 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.805806933 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.807266395 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.806273442 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.806395037 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807438093 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.803262283 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.805877949 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.807266385 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.804967099 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.803442594 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.806301338 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.807395981 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.806538873 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.807292907 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.812615315 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.802760455 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80742597 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.806585162 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.805796757 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.806862389 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.805857193 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.808360984 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.806289322 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.81251392 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.807569972 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.807720592 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.812472785 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.807053071 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.80742884 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.809957349 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.80734462 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.804485838 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.810156323 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.816366014 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.807023639 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.808537818 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.808881917 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807265907 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.808058199 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.813284719 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.805491995 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.806523451 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.807559852 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.809046113 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.8052757 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.809500367 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.808256713 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.807882068 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.810461632 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.808475045 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.809203063 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.810166962 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.809149861 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.809344281 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.809643346 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.811091439 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.817751944 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.812390219 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.809484618 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.810910069 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.810084041 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.813036446 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.80997327 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.8100756 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.80908792 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82298583 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.818720054 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814768807 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.81034838 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.809392306 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.81412321 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.809311518 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.813258453 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.808559861 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.809865383 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.809644202 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.809653622 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.80640038 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.811030624 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.810158998 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811170638 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.811236605 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.814307097 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.809723019 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.809414272 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.81093035 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.810567599 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.810921213 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.810465349 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.810428432 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.81229535 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.811709835 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.80839237 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.81047063 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816362245 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810800876 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.811484788 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.810873284 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.809878426 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.809620026 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.810477836 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.811556986 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.813361336 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.820101721 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.814101018 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.821261605 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.812625401 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.820208556 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.812246759 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.815156259 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.821308124 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.809660334 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.810580407 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.812260745 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.812974173 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817537452 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.812992307 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.813677836 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.81643863 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.812699108 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.813319672 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.812801226 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.813113087 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.81268604 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.813386377 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.819558172 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.813105397 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.815986408 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.815709663 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.809801704 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.812327736 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.811655231 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.811403352 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.816644801 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.81272851 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.81260703 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.812318546 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.81340848 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.812034197 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.813882047 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.812967044 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.810345666 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.812907259 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.819113031 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.813800779 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.818783227 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.812883839 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.820669272 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.813440891 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.819820177 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.814319661 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.814021982 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.814054763 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.813243149 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.814734836 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.813526555 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.815024413 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.81470258 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.814889935 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.817329787 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.815582909 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.817526727 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.814340736 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.816374346 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.814488116 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824804769 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839897287 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.816590864 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.818842782 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.811692586 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.816368777 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.819915548 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.815667891 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.81316326 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.817260162 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.824606865 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.823472964 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.815250428 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.816482227 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.815601902 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.816286339 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.815071203 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.815396268 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.816148055 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.815044667 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.816400463 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.815914391 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.818676952 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.815394324 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.815965964 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816651551 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.817255928 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.825270834 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.816466041 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.81748616 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.816589582 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.816058909 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.816448669 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.81675347 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.816615235 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.817034079 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.816553203 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.818644984 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823604016 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.823407861 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.818563358 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.816175687 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.816832115 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.816536929 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.816544335 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817495756 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.817475887 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.818669585 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.817946494 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.817123341 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.816655056 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.816032235 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.816760235 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.817063919 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.817238567 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.820793084 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.825111096 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.817617818 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.815235557 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.817583872 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.81660875 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.817384247 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.818017989 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.824958966 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.820746451 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.828860722 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.82648763 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.823125899 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.818766072 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.820626444 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.826248359 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.816438656 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.818753784 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.819030974 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.819976932 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.819146906 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.821793005 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.818989161 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.823675052 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.819092216 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.818366273 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.826384635 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.819721709 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.819752558 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.819993382 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.822391305 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.818736782 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.816009663 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.818299146 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.818096936 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.824651632 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.81994422 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.82030504 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.821158483 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.817506807 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.820214812 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.824016023 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.819455512 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.820325383 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.81640096 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.819665417 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.821337315 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.819827102 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.817363201 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.818586642 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.819437409 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.82221947 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.826585046 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.816720593 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.823043739 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.820702031 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.820700354 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.822846917 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.820426918 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.817596019 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.817427044 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.820391785 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.822037035 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.82273531 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.823393303 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.820605711 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.820898825 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.821697894 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821332327 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.823969107 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.831434808 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.828894801 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.817392193 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.82078362 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.820773181 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.823340578 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.82219598 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.821993528 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.820868026 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.823368896 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.82088139 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.821833966 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.8211951 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.824350039 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.837694359 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.82181648 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.820935287 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.822282875 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.824317177 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.822498472 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.820133791 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.821579171 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.823630539 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.824694223 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.829784431 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.823261735 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.827672965 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.821552968 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.823396201 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.825465046 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.826045104 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.831203243 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.824974928 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.824129753 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.822674951 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.826724489 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.839242074 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82296518 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.83243433 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.852206149 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.823327589 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.823343861 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.825292072 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.822108096 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.823751088 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.824658786 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.823489941 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.823792089 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.823638092 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.823747164 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.824340792 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.829978173 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.824175327 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.824353679 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.824239101 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.823653127 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.825280003 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.820342313 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.82457601 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.824266647 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.824241687 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.824808858 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.824637496 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.824594852 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.836679199 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.83382875 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.824683804 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.825627685 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.821280565 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.828220163 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.827365823 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.835549368 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.832233268 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.824929449 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.826322603 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.826081766 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.825350218 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.822230646 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.824809759 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.824440637 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.824441605 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.822304511 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.837931383 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.834008714 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.829060017 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.825596881 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827111796 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.824849316 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.825739783 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.826217201 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.826501888 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.82715352 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.826730048 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.831195193 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.825843432 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.826632064 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.829417064 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.834657802 seconds)
  done (took 1081.845279914 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.823322496 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824166496 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823823307 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.824077823 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824562586 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823447246 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82395052 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.823814515 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.825354849 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.824899911 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.824665862 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824901009 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.82485972 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.825684684 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824442747 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.824116114 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823862199 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.823804671 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.823971465 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824063363 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826005554 seconds)
  done (took 40.066357139 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.827034918 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.824382043 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.824171169 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.826908355 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.823617682 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.826678913 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.82419433 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826836504 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82742076 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823603686 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.827436994 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826401086 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.824946503 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.824608562 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825488559 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828103098 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.826984338 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824905182 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.827319613 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.825488372 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.827372867 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.824103888 seconds)
  done (took 41.92353472 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.828551817 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.829707558 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.8271993 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.826095712 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.828042834 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.825244862 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.828236237 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.828306866 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.828644322 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.829503852 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.826434362 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.828566793 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.834207677 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.833435308 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.830457756 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.82782988 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.971580918 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.82890376 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.829399046 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.828890868 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.825510743 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.833535038 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.824578182 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.825744725 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.82764187 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.829311401 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.827854696 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.827579572 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.828695454 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.82951378 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.833095223 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.827086483 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.826052587 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.828614684 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.827459532 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.828239195 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.831416912 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.828812149 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.824079366 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.828179909 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.837619563 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.849376331 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.829094748 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.834048909 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.828292254 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.828109607 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.831766038 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.837071729 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.825557116 seconds)
  done (took 91.54084777 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.827926155 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.829099779 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.826592557 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.82121771 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.819711314 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.82056134 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.821537603 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.821667382 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.819172073 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.816517169 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.819475882 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.817500764 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.817062091 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.822828407 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.814475803 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.812965166 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812435555 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.812067406 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.811827649 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.813510495 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.811466505 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.814254604 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.813635184 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.812312388 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.815798377 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.811361793 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.811383323 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.814025079 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.812018197 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.810984948 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.81284077 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.814263377 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.813782804 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.812610955 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.812446881 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.814928746 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.814366206 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.811728797 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.81463184 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.811312241 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.814041427 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.814865767 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.81366586 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.814593217 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.811104575 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.812427883 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.812050107 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.812022398 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.811702925 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.814052199 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.815297694 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.812127605 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.814953968 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.812019589 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.814911932 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.81461986 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.812588474 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.812151406 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.815644149 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.812643766 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.81226662 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.81530584 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.812691572 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.815257467 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.816315603 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.813660328 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.812876351 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.816251828 seconds)
  done (took 125.179203276 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819476513 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.817519332 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817890453 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817852976 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817659708 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.820079742 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.817902376 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.817397195 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.818050709 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.817565333 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818175274 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.819503505 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.81834433 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.816758384 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.817534136 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818436818 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.818873236 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81758104 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.8182741 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818277338 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.817510932 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.81884571 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.819247204 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.817625588 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.818585793 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.817353039 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81821446 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.819580769 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818712167 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.818483853 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.818441539 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.819260491 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.818270129 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.819901593 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.818512428 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.81818846 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.818316887 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819230268 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.820724208 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.819270673 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.818714039 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818946886 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.818982536 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.819634734 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81959261 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.81796997 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.818636305 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.819968989 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.819247452 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819250143 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.817737093 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.817802571 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.819321092 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.818101264 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.818590304 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.817806238 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816794076 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818102912 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81786551 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.817879197 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.818359938 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.817102118 seconds)
  done (took 114.490449011 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.816639627 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.817908753 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.814031391 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.814046409 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.816657764 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.813435379 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.817430358 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.817868474 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.817173115 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.816409307 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81605021 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813361748 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814536809 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81611627 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.814329262 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813979905 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813549623 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.813542042 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816313054 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.814550634 seconds)
  done (took 38.053527581 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.812601828 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.815649004 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.813660533 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.814724066 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.817082104 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.813270994 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.815783917 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816264617 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814105118 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815973264 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.816424752 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.815694829 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813662747 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.814481299 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.816338099 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.814771639 seconds)
  done (took 30.784845157 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.814206753 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.816453591 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.817748353 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.818331939 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.814683035 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.814996722 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.81713387 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.815444085 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.814642177 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.8181161 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.816291027 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.81732792 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.817513032 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.819157881 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.815605402 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.816857842 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.813001981 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.814017864 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.816488439 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.817878958 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.815953894 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.813346375 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.815874709 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.815366546 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.813430182 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.81532251 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.81278102 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.812333958 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.812409461 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.816642043 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.813422916 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.813381664 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.810296513 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.810791206 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.814050836 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.810612791 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.814919711 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.813087784 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.813471642 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.813068808 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.812302831 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.811418089 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.814173034 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.811669483 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.809323828 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.81224703 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.809537797 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.811723425 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.809085675 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.809274802 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.811522823 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.813002337 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.811419066 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.812953402 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.809389915 seconds)
  done (took 101.512429347 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.81371076 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.815259477 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.81303329 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.814000272 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.814680028 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.81215049 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.815211134 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.812030529 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813456109 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.814637539 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.811939286 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.815534099 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81249981 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.815102407 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.812760768 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81426571 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.811822371 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.812051908 seconds)
  done (took 34.382263869 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.812099953 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.812430914 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.814777766 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.812874196 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.813030945 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.815815263 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.812728203 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.814360027 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814211981 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.812846241 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812432347 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.816509466 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813856356 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.814529174 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.812661486 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812065114 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.814011952 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.815443658 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.811197639 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.812524317 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.815068791 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.814031851 seconds)
  done (took 41.642913696 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.814342171 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.813201792 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.829327523 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.83492751 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.836379348 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.849422053 seconds)
  done (took 12.721918138 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812103601 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814516529 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81207334 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815994569 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814024229 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812226081 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811961123 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812006451 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814586735 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814340093 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812293569 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814573358 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814859989 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812341722 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815458272 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815036987 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813624023 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81179409 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811822595 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815443306 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81217908 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814434654 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81159007 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811451856 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812800412 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812796883 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814601469 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811896663 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811270549 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815478145 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81468567 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813065664 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813340366 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810758678 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813358118 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813749831 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811728113 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812736418 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812882156 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810458671 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.812730703 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8126265 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814243133 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810383715 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812625329 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810278697 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810971248 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809868392 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810559841 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813062269 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812109216 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810140561 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812499845 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814073169 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812378506 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812318435 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810825252 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810086259 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813606909 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810620609 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809531409 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813601138 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81066573 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810043773 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814106831 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811084093 seconds)
  done (took 121.376434338 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809557121 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81010062 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812250893 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810133858 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810699391 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810593549 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810863289 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810736463 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811612629 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81000697 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812662193 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81046714 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810550101 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811455715 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810199235 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810740975 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810187202 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809813151 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810102696 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814404308 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810063174 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80972979 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809713892 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809797187 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813055767 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812853572 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810316922 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811017325 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810789116 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810667338 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811642951 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811862203 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810893018 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.810717235 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810640146 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810926858 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811048753 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809995379 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809921282 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814114475 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810172184 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813729424 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81039351 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8106398 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810819922 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810013406 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81077834 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812046247 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810809426 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810505401 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810721757 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810878179 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81216806 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810877541 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809770177 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810123676 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810894581 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809863189 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812544928 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813478277 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810838597 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810617253 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814128812 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811974116 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810753585 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811033568 seconds)
  done (took 121.270790007 seconds)
done (took 2510.959630768 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.852701692 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.876596623 seconds)
  done (took 15.470993729 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.974671552 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.927348791 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.811749697 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.812523156 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.811876107 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.832346479 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.805370746 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.812222494 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.811704665 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.811441242 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.811969387 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.996940676 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.862623343 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.81147778 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.812759183 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.906237043 seconds)
  done (took 51.36034925 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.815265741 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.81621746 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.826615205 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.818257344 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.815373952 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.827644183 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.849118996 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.81785355 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.850114788 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.831001383 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.884353153 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.826922665 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.815688605 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.866101156 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.829647716 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.831122702 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.912256726 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.890745264 seconds)
  done (took 34.867628223 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.894784694 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.823513167 seconds)
  done (took 10.469162779 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.82519431 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.828851486 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.846543942 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.836034701 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.82178504 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.816884744 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.828678161 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.835540762 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.840169938 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.832868974 seconds)
  done (took 70.059915883 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.821945123 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.816408182 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.816507407 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.815993775 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.80804175 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.813301134 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.815490874 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.814467276 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.494783712 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.852513709 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.822212785 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.822115048 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.816117182 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.819025761 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.814526885 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.839753312 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.939676338 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.815032081 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.81485556 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.822156168 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.817213108 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.869004983 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.82948687 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.817764977 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.847258116 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.496490133 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.825164111 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.822087151 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.93669489 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.81608041 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.815827417 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.81784546 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.819663373 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.208314337 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.089376082 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.816271913 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.826284509 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.826003606 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.815165109 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.944076232 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.818485433 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.822897808 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.712537946 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.070654958 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.930977149 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.861109874 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.237492236 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.821481633 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.819691867 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.850517694 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.820678828 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.819804875 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.832392159 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.326574245 seconds)
  done (took 129.745790884 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.81481863 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.075960037 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.969720223 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.812906331 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103321494 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.019635891 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.814016787 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.863543792 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.815744396 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.044481786 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.034033008 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.923607314 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.814202774 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.811750931 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.813466196 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.811871532 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.975017335 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.887444682 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.815179675 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.811809138 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846469685 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.058302713 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.941063659 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.814717996 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.835217149 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.027665059 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.939358605 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.921073801 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.231526132 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.81120864 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87981064 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.815201339 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.813325385 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.811987709 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.971145934 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.910632254 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.903676782 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.815856925 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.81332557 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.814299698 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.489173065 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010542191 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.912311487 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.957448362 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.068191717 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.021140145 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.60256294 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.813531099 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.551736809 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.977993171 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.049455291 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.04604235 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.940482938 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.816292362 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.079951015 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.813823448 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.814395043 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049809356 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.058317905 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.917702737 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.81720809 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.814636242 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.813659551 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.061020512 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.816306647 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.911393695 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.816861057 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.813726972 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.911944656 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.920083538 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.062667648 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028510865 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.849271346 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.115325908 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.288394188 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.064962475 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.884306244 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048864863 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.81755517 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.814813564 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901354889 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.663027007 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.016060883 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.06568357 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.070719714 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854277261 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.536162256 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.815634059 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.044913951 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.040147231 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.071802263 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.056583101 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.967297467 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.133591053 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.815676612 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.815564154 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.066149011 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.955423126 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.819161794 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.179872147 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052415904 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.382166618 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.850014891 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.127262041 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.95045012 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.819169031 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.459383135 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.817341017 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.044030295 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.859306679 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.818072875 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.817855174 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.040304105 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.800903874 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.817904193 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.461335456 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.881458975 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.821582373 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05225116 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.820145046 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083804175 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.820534183 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.057529681 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.176729157 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.85201626 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.991383393 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.058256074 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.820370888 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.065136735 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.064975178 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.936703686 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.040775666 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.458434368 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.817979967 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109004422 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.819966438 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.817096623 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.990711248 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.818390556 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.054508013 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.821109378 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107306932 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844529959 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973466813 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.821884008 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.07716327 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.855977513 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87233406 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.819851844 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.952813593 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.818960582 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.774702233 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.974492147 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.821646997 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.818621986 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.368061684 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.817966445 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977454807 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.052826293 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844830725 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894886372 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.493344561 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.818652581 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908282395 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.846131478 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.156998953 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.819263238 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.034652455 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.821535286 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.346522323 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.82103257 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.062048684 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.004332962 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.822581831 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.821745718 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.725784199 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.820968038 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.819253473 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.981977534 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.646046411 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.820468788 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.02458282 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.822956245 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.95201352 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.82243269 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.895693349 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.173666576 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.820061098 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.820941488 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.821436594 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.822017068 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.82048651 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.031223978 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.851793513 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.344528092 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.962209827 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.092965422 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.140784555 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.072196379 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.868484237 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.822954178 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.068395004 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.823774799 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.886686356 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.823535296 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.845370251 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054613703 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825544122 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.035985313 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.102837292 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.75439448 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872576704 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.824635436 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.821267413 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.741888726 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.97614824 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913030908 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.823831186 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.821468927 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.939731976 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.949057282 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.038592441 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.82378891 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.051436042 seconds)
  done (took 891.570429577 seconds)
done (took 1205.286137351 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.822794544 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.822871242 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.811184435 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.825890286 seconds)
  done (took 29.041102943 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.832688827 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.829011703 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.832138972 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.829411812 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.832482802 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.82960692 seconds)
  done (took 12.74396109 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.880170807 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.824227808 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.825244046 seconds)
  done (took 21.288232489 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.898713022 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.232533371 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.939942232 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.264002793 seconds)
  done (took 10.094630647 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.831787946 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.832316063 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.832778163 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.832991992 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.834301361 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.835200937 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.832778387 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.832954659 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.835376079 seconds)
  done (took 18.260020872 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.253656595 seconds)
done (took 97.441161651 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.915940487 seconds)
    (2/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.222443499 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.741643555 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.923728499 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.03923562 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.116767351 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.020040375 seconds)
    (8/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.933120513 seconds)
    (9/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.908105375 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.955136741 seconds)
    (11/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.360341973 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.874754275 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.850374987 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.297194116 seconds)
    (15/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.426147404 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.097244691 seconds)
    (17/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.290322381 seconds)
    (18/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.993794649 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.010814082 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.599496515 seconds)
    (21/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.046055359 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.070526134 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.48917532 seconds)
    (24/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.942474843 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.825330063 seconds)
    (26/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.892783954 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.93430003 seconds)
    (28/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.379020985 seconds)
    (29/309) benchmarking ("sort", Float64, false)...
    done (took 5.563556652 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.935751453 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.827403662 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.842965963 seconds)
    (33/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.834517296 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.46724076 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.601848576 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.833108024 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.98281919 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.888546413 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.306375684 seconds)
    (40/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.025391333 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.913294281 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.524179871 seconds)
    (43/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.844215908 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.092899537 seconds)
    (45/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.154576831 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.944540438 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.152614089 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.077427178 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.203923468 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.290731487 seconds)
    (51/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.964556598 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.830867617 seconds)
    (53/309) benchmarking ("map", identity, Float32, false)...
    done (took 3.745934613 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.814150861 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.928062873 seconds)
    (56/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.981110594 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.469473328 seconds)
    (58/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.853228908 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.894318848 seconds)
    (60/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.402528534 seconds)
    (61/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.83823308 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.937776931 seconds)
    (63/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.965768339 seconds)
    (64/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.147294395 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.814295353 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 3.505023273 seconds)
    (67/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.021069444 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.931771612 seconds)
    (69/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.254821098 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.81774955 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 8.353946462 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.165782653 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.942633201 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.88635488 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.005862605 seconds)
    (76/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.841264372 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.896211828 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.816983066 seconds)
    (79/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.077872775 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.09570022 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.920368072 seconds)
    (82/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.960212428 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.857343995 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.967733819 seconds)
    (85/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.93248288 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.509777029 seconds)
    (87/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.933863042 seconds)
    (88/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.660992848 seconds)
    (89/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.861543118 seconds)
    (90/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.958745074 seconds)
    (91/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.448887774 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.848119011 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.902680502 seconds)
    (94/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.329507692 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.393695287 seconds)
    (96/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.196686115 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.917786105 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.830324051 seconds)
    (99/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.770091375 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.815156569 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.931511872 seconds)
    (102/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.666443896 seconds)
    (103/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.949907611 seconds)
    (104/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.893238624 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.203521231 seconds)
    (106/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.624465274 seconds)
    (107/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.465879251 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.858241666 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.227574974 seconds)
    (110/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.965721278 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.859171732 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.744923326 seconds)
    (113/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.952960732 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.12790105 seconds)
    (115/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.392472522 seconds)
    (116/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.860277031 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.033003741 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.816820974 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.868493022 seconds)
    (120/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.998439164 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.200973244 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.833146791 seconds)
    (123/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.744642513 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.936927461 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.853605569 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.216379776 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.898804332 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.516152257 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.27964974 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.854064963 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.15219052 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.031806974 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.09437474 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.048991627 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.088648469 seconds)
    (136/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.834258704 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.796321066 seconds)
    (138/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.925714978 seconds)
    (139/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.960260079 seconds)
    (140/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.109468686 seconds)
    (141/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.343731302 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.94322835 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.055098857 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.696245779 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.483195533 seconds)
    (146/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.936801161 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.188059102 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.074438578 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.861720644 seconds)
    (150/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.313224369 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.985045037 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.854892668 seconds)
    (153/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.818531961 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.871219713 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.506891582 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.812918247 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.908186152 seconds)
    (158/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.882344838 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.15823319 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.977895575 seconds)
    (161/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.981465014 seconds)
    (162/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.836783448 seconds)
    (163/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.860840715 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.838880591 seconds)
    (165/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.914796831 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.167451879 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.837237892 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.930799465 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.122985668 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.476669567 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.542744035 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.754182664 seconds)
    (173/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.169440302 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.046343567 seconds)
    (175/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.8207553 seconds)
    (176/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.430383184 seconds)
    (177/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.820976464 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.064641978 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.861208488 seconds)
    (180/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.003998423 seconds)
    (181/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.142533326 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.212247768 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.844072864 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.201895517 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.861587335 seconds)
    (186/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.024988057 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.215445626 seconds)
    (188/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.661187426 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.901256589 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.923728293 seconds)
    (191/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.159731172 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.886527256 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.323199736 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.190350472 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.985178231 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.079034068 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.967488976 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.182821073 seconds)
    (199/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.960278853 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.930702386 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.903563673 seconds)
    (202/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.310519715 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.485694334 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.09243327 seconds)
    (205/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.981085336 seconds)
    (206/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.028598615 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.245423191 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.866025632 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.80212267 seconds)
    (210/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.884600989 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.948087638 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.625046357 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.051615439 seconds)
    (214/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.929774246 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.845557053 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.849943642 seconds)
    (217/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.869459087 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.459898556 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.884422288 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.865261899 seconds)
    (221/309) benchmarking ("sort", Float32, false)...
    done (took 5.574954986 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.063369008 seconds)
    (223/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.929076427 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.931566485 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.887437489 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.948506793 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.832627792 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.877255559 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 9.011510409 seconds)
    (230/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.160368784 seconds)
    (231/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.848556764 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.901607528 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.158100371 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.956145532 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.670717579 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.959679175 seconds)
    (237/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.030718135 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.017147698 seconds)
    (239/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.984379419 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.925972666 seconds)
    (241/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.157615234 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.848736338 seconds)
    (243/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.263637415 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.086727578 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.23952967 seconds)
    (246/309) benchmarking ("sort", Int8, false)...
    done (took 4.850331032 seconds)
    (247/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.953744898 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.110849283 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.852128317 seconds)
    (250/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.134446048 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.951534534 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.15266893 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.85078483 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.976768562 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.87444225 seconds)
    (256/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.970770992 seconds)
    (257/309) benchmarking ("sort", BigInt, false)...
    done (took 6.848461247 seconds)
    (258/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.880346983 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.926636735 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.618845658 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.067600211 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.217308077 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.149256149 seconds)
    (264/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.188989356 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.852362827 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.168507569 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.943593457 seconds)
    (268/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.068570864 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.154414961 seconds)
    (270/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.278540222 seconds)
    (271/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.20046552 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.326760414 seconds)
    (273/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.762097016 seconds)
    (274/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.979770628 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.483221821 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.104452625 seconds)
    (277/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.936149227 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.815333335 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.94332374 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.419918325 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.933586366 seconds)
    (282/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.194401757 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.854255956 seconds)
    (284/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.069685525 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.005602547 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.613080544 seconds)
    (287/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.843288863 seconds)
    (288/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.043109538 seconds)
    (289/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.145304852 seconds)
    (290/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.862052309 seconds)
    (291/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.238397828 seconds)
    (292/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.32269485 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.856749058 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.012798764 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.892680506 seconds)
    (296/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.913654394 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.835387305 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.839380431 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.930040499 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.147503516 seconds)
    (301/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.883360894 seconds)
    (302/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.873271124 seconds)
    (303/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.993450722 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.854049095 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.963171756 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.014548535 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.161685074 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.181503341 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.583085482 seconds)
  done (took 1009.36806942 seconds)
done (took 1011.204229381 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.915855202 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.878489084 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.861252142 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.883343547 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.973495433 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.889207322 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.872636131 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.864148776 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.910464184 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.911530094 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.861717926 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.888084377 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.863920241 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.862864739 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.862452302 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.876695138 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.18264163 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.89415735 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.879073914 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.871591699 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.880874517 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.862703202 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.912845082 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.889065161 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.866346754 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.866236994 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.866658505 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.329775929 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.975327006 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.866568138 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.866298784 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.875165379 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.1857479 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.891483359 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.858693016 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.882629693 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.874186909 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.872216068 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.866871737 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.895733797 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.332025245 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.871731758 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.865851686 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.865318844 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.864498293 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.868307922 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.865112201 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.87073195 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.876878722 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.879169697 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.330205392 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.888501231 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.868762442 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.865577268 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.875747831 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.865012582 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.868867035 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.88186204 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.885060749 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.881443182 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.175465185 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.902500678 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.868413344 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.883337519 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.873749971 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.36555502 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.869637744 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.871211182 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.329686942 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.878090316 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.365952185 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.883329312 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.86770648 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.879953748 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.897493662 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.184164925 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.892262517 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.867134315 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.873432304 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.864849477 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.876382676 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.879172425 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.872348298 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.867239417 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.880711406 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.89396991 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.877296215 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.867285429 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.877815582 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.886201438 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.873736076 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.876687831 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.870257462 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.863677532 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.877698147 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.871266375 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.870229963 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.870607143 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.87247881 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.878181664 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.330775077 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.89173564 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.864464903 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.864799585 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.867665523 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.882508376 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.331917999 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.876289795 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.89059954 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.915732315 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.870149773 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.176011722 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.902473943 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.884315626 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.878547112 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.871360146 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.86304247 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.179069817 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.361239263 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.891857126 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.870653675 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.866375347 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88455679 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.87064986 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.865357563 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.190680774 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.900868098 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883024459 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.989689003 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.879343286 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.899891453 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.867440079 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.872404667 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.897121076 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.884735434 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.900179948 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.873418898 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.884983522 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.885542266 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.865897 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.880093134 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.880978623 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.871535154 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.876239353 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.863737211 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.898614045 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882120224 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.882908166 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.890385333 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.991544286 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.86845707 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.178985565 seconds)
done (took 294.310383173 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.93818007 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.866797888 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.966171375 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.866307729 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.950926606 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.953383628 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.863708502 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.863649728 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.863904591 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.240151237 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.864727384 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.864253238 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.858132498 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.864262281 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.949568593 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.86662923 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.863398911 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.202343958 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.868051226 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.938525541 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.861984726 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.86491777 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.866613693 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.238511756 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.866060085 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.86256031 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.938759464 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.867027639 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.202834298 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.862054385 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.864685474 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.205724864 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.961255948 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.886194828 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.877826646 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.875146199 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.952089934 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.872851668 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.949977874 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.950369415 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.969114259 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.901360049 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.864041735 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.864542467 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.871226431 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.870556566 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.866082313 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.896537163 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.867096484 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.866310853 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.20591503 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.878750705 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.876067158 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.866708303 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.86605352 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.891642303 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.865450867 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.871118697 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.963089316 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.870383925 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.932457423 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.24003663 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.242254173 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.868585904 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.867784922 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.866473593 seconds)
  done (took 184.143776288 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.936296569 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.942274046 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.936734388 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.874895269 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.917699166 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.93900449 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.875410451 seconds)
  done (took 15.218240983 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.875257148 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.86947613 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.920698823 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.920084128 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.869841581 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.019132597 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.870505981 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.881192212 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.868324527 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.924110167 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.872034509 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.871650509 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.877809261 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.866076876 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.918645465 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.882815731 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.985624289 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.87248208 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.871865767 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.025112551 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.869489654 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.87825283 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.925031747 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.88229808 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.871719681 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.876831289 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.453549163 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.871558733 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.868164418 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.871151884 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.868478661 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.914502193 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.873606306 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.867253727 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.868630318 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.987081211 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.871588069 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.868932795 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.871151371 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.865663783 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.871223808 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.871650472 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.87305852 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.869386902 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.871813247 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.895960355 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.872156973 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.872398299 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.872792952 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.872980314 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.923202583 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.873033733 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.87017856 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.869470991 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.926732443 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.879160605 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.874252659 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.869768144 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.87400504 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.869895041 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.026245747 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.921650186 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.872234061 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.920949764 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.873763479 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.873231195 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.872746083 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.873170518 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.967696247 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.873487259 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.921312592 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.870686165 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.031384677 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.896366359 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.873973554 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.875709691 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.876012036 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.874638827 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.870670825 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.880282411 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.870517411 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.875029249 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.880087384 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.871740237 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.871471857 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.985821024 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.981438356 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.871999937 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.887850493 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.881146919 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.872371118 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.926951665 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.873810771 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.872486291 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.9290552 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.98987824 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.929644908 seconds)
  done (took 206.076798322 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.880503083 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.882949832 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.874931316 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.891676195 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.874804008 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.874223781 seconds)
  done (took 13.079685427 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.877705402 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.876593441 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.874896346 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.874224019 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.876193831 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.875873808 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.876841346 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.87779712 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.879449755 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.874968937 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.875820966 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.876205121 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.87568559 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.875605713 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.876228802 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.874897896 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.875393549 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.872028171 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.875394863 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.875965684 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.033834951 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.875299465 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.876465902 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.877262227 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.879767622 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.875823749 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.883869357 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.874696559 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.876775738 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.881735226 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.880102142 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.876697818 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.877213107 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.881163132 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.880256591 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.87693958 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.879488643 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.877002103 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.872757751 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.876867198 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.87729465 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.876772836 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.876027703 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.878501846 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.879506498 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.881071531 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.882006584 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.883274793 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.877525292 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.877537575 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.878455563 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.877142108 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.878713066 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.878190959 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.879547901 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.882461635 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.881919117 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.878378925 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.877275646 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.87871622 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.877853627 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.876978808 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.878475291 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.882594746 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.874837635 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.87856882 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.878709417 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.882265391 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878609078 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.877263544 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.878907445 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.874575311 seconds)
  done (took 138.15463505 seconds)
done (took 558.48498706 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.985518975 seconds)
  done (took 8.788886655 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.036589628 seconds)
  done (took 8.941245235 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.536500254 seconds)
  done (took 10.339538816 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.895510644 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.934238369 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.874282077 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.875662668 seconds)
  done (took 29.395478683 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.906064026 seconds)
  done (took 8.709788447 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.885885383 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.871343441 seconds)
  done (took 15.597981554 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.891701713 seconds)
  done (took 8.696610891 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.993148364 seconds)
  done (took 8.800987557 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.889575855 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.906453617 seconds)
  done (took 15.615287215 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.859564028 seconds)
  done (took 8.664135496 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.632837439 seconds)
  done (took 11.444581932 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.888027096 seconds)
  done (took 8.706801765 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.883044128 seconds)
  done (took 8.68709387 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.986917322 seconds)
  done (took 8.790983405 seconds)
done (took 162.983879974 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.879963154 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.872701233 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.872227213 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.873743047 seconds)
  done (took 29.303370681 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.912060623 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.913828672 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.914876203 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.92356594 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.916293711 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.912700947 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.906344735 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.905473084 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.924321275 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.916853542 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.917309936 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.916059804 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.913364382 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.905528147 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.917029272 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.915936726 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.924360638 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.914849718 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.905379166 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.916978446 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.880433512 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.924379124 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.915871044 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.882077548 seconds)
  done (took 47.701733764 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.078676627 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.951376186 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.033982137 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.932303667 seconds)
  done (took 9.801965786 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.931558975 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.934186054 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.94552093 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.984335446 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.007885975 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.94473416 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.904612769 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.902738851 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.889926519 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.934513925 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.009500496 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.930273219 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.070954001 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.882140937 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.06759402 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.881290684 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.881697381 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.93332042 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.984476183 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.997541593 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.882126013 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.934649953 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.937934874 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.930807978 seconds)
  done (took 48.511500043 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.881441287 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.888301112 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.886130946 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.880931767 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.880800358 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.88082818 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.887376386 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.882873516 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.90252674 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.882266131 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.880232026 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.8801154 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.880772702 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.881845923 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.880589461 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.893885611 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.895683763 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.881593086 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.885051741 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.888078756 seconds)
  done (took 39.509436309 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.875122123 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.730409575 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.227263112 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.13132378 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.87516732 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.87524478 seconds)
  done (took 31.522611024 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.896113698 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.890877199 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.882410222 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.939188075 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.022142384 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.890165437 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.883765568 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.894833178 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.931016776 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.947936557 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.902855929 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.913268712 seconds)
  done (took 24.804176457 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.878439057 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.878115481 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.878662932 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.894179614 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.894572168 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.892178035 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.889834932 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.875625567 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.896813342 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.903712494 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.891850857 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.896507393 seconds)
  done (took 44.483321065 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966694336 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.770000251 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.940408255 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603547715 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352426063 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090271019 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.40770762 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.221992135 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.883550112 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153434003 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066414382 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987562835 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13376376 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879522377 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.895495137 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.369478212 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17915828 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114388951 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911580832 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.682335068 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932511503 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.477193987 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.76201549 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.940095356 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091270835 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.011721511 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.141204761 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.837893245 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017756831 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919094219 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890767077 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880689273 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155575325 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267064269 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980434744 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891405928 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.538187345 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.601145767 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.893758946 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.68137354 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.746829664 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.013443128 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889461954 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880535693 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.815383494 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.480438075 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268523949 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.886240435 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.592495895 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.881731706 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892919844 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969414878 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.885236672 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.696925401 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8365809 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.162231138 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.879260869 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887886034 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449409703 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.040765023 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.510302926 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.862425164 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.075603735 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.696192787 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282609436 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.03312949 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.888070697 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.885951443 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816599358 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.698020021 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938677286 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028968516 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.902266893 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532872682 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199364329 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.15650264 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828280413 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175173128 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.77022603 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.862049074 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110613341 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.834050656 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817975843 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.743218882 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.819062624 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157218536 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929479921 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.531601881 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930371056 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.222911144 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.895616245 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901347238 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89220056 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.110565477 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.45055565 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886348557 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.832658562 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030476646 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905932817 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.2228073 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819317478 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.89061943 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138588816 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.096036464 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.212331833 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.417123432 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050251604 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88600437 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.963972908 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.87845477 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.938998143 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.162177403 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949399952 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.046135773 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947087259 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.851316749 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19846667 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915753113 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.053926227 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.088101918 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.014164612 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.2266874 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18196902 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950337505 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895002664 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887040055 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.716254945 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.442926376 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.152205055 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.88695899 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.47061364 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.939925331 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.888858957 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821820918 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.488702533 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.111840656 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.858372997 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.110100452 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.887621733 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200834246 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822045965 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.033178712 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.006651259 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.110159905 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.549037024 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.971185057 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143657874 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475545297 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.261042818 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942462451 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906560458 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976342524 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908946013 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.396131615 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.184967389 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.892456891 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.891885545 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.72120237 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.895555095 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893287956 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.893696014 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.688852687 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173311413 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917615202 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.899106519 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.777509717 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.902797998 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955346361 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893976945 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.899019248 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.434072588 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.638806666 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.900311336 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.490283958 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114726887 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898587239 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.717742242 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003859868 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.976686531 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171875587 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951572099 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.823773842 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.600209483 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.581901416 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889899308 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.82577269 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.888413793 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899031761 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900798836 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.271476901 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.172001953 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936815544 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.709429336 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.93720822 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901869349 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.895024793 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890045372 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.432778632 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.04017806 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.526013712 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.942525844 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028721512 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.90426472 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.825280919 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.8945902 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.895472603 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.891161391 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.847784864 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94418248 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.713814166 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284899197 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147892133 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.541465911 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908744864 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.733478091 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.952247411 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.90996394 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.845208479 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906482073 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.042895849 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902477278 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.902131851 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.702387523 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.588790199 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.458931475 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208979487 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.204958724 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346453681 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.46676871 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.201770322 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24589481 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129162545 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.421328186 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95407065 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23965717 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837412847 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979487374 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.54716264 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249632657 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907188546 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12015047 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281887507 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.918216435 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917767494 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103906844 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926748561 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.893629833 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.860143977 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.09764209 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034400008 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.737450062 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103086975 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232159733 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.878883049 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.868324272 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.892274355 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.60002622 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984722996 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.603609994 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.254690477 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.509948727 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.986723535 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400716143 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.903075317 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.340700505 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256026834 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.308316008 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.025437401 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829946805 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.903994045 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.904926031 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.893861854 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.890681352 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.768660983 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.147063689 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905553579 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130759067 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.254111702 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200810039 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.800691407 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.900348683 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894476987 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199228177 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.781378263 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070895117 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.455002855 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.431708807 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899351171 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.830337705 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829796137 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.58853442 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896903534 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.872564796 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125873536 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.08620809 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850680143 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.499609899 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145479307 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.14983328 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.909651876 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.173123347 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172577008 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.632676606 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924801854 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.997282682 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.716026882 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.012770251 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.165669867 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131968349 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702916888 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.127128032 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.969828428 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.71436793 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.896083459 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111810328 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.166221306 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.941899574 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139348866 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.621038563 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.027413798 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223383182 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95756606 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.968450518 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.058002407 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.089416969 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90766153 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981207526 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907015684 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.908280101 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907785153 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94473487 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.987380776 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.029212933 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.911144166 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988196105 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.060192137 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.435789537 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.90436173 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179541405 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268752709 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.230590857 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959773516 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.899180404 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905198477 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833919536 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037514197 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.344643839 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17096452 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.028662491 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.19607447 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923779517 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.731204631 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384320255 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14510344 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172159897 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.795444969 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895419169 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.913968788 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.160471678 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906889557 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.103140961 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126982643 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217179356 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369829992 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.237543555 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.263848367 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164894722 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.264342403 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.888009113 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.476165573 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.888483594 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.727986741 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.945317647 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.986867272 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17681514 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910546636 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297004476 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.921902146 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.098621296 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.417092307 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.722143713 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.190403142 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.898273368 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.96510614 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180615738 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.296508939 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213790935 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974282778 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911783036 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.61385236 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036824727 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.774864767 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.168154989 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900094486 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111817132 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.610729376 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.909782528 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182113748 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210848488 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.897923671 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.781970286 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907566011 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.910147997 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.12311288 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175029043 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156339522 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909580304 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.901345559 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.716985486 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181573752 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95953149 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831839408 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.900355665 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99479221 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.144219102 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916208894 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.411090095 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.606155332 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194475095 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.815877973 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914682864 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.506238683 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.272033505 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227745345 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.442212069 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125233803 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.456471916 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.893528464 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195158415 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.89797123 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.488985411 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206783355 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.89779771 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.599286895 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939106386 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.171143306 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216218161 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.901832969 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830961123 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.875529797 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127017864 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502984858 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845978444 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912829714 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.962398727 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.904922662 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.033213095 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914664519 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.802547999 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904124882 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.655399997 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395858348 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.909273138 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.892494278 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.77296883 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.660025631 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944454779 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049842989 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908510357 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.615821647 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.195050456 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.158395811 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.618070804 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.915551809 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.907808983 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904454618 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832389108 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.100313696 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.287065883 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21175926 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.45900662 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.948486148 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908755911 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.120725349 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115904043 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.948213637 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053730163 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4911496 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9517686 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.675302646 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.584549556 seconds)
  done (took 1703.214935962 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920995036 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.935612474 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.942428205 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.977481061 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.953988352 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920419671 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.972297964 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.946896964 seconds)
  done (took 57.407432936 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.904168904 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.104266059 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.915450368 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.906394777 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.928088715 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.906370272 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.088516877 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.918224005 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.919253875 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.916588859 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.907541115 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.910493097 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.240725113 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.931922222 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.919860346 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.929464453 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.926173389 seconds)
  done (took 75.15100079 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.905916756 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.133324369 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.943599934 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.929594749 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.873234231 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.922407368 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.913349965 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.928883205 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.912190419 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.13985511 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.248223424 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.938373822 seconds)
  done (took 90.628015253 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.918684796 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.913574963 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.914148964 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.913618713 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.914651038 seconds)
  done (took 11.417677744 seconds)
done (took 2215.329138777 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.155854327 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.131314372 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.135117279 seconds)
  done (took 6.105555679 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.052126999 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.099133449 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.220449459 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.224280955 seconds)
  done (took 10.43398692 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.19832582 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.290349343 seconds)
  done (took 6.322793573 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.312312125 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.915495746 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.306491577 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.901266312 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.905059479 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.903654805 seconds)
  done (took 22.549716886 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.907726111 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.911251186 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.908619929 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.911309981 seconds)
  done (took 9.472959303 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.887691782 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.641846065 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.889403544 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.904490167 seconds)
  done (took 21.158010913 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.656485516 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.306800252 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.651553102 seconds)
  done (took 9.451044655 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.448245131 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.807341325 seconds)
  done (took 9.091618515 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.164358926 seconds)
  done (took 4.000110878 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.93706812 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.179279916 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.438153995 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.441655687 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.554942855 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.783172889 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.236897227 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.162149056 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.336939072 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.356418884 seconds)
  done (took 25.263044421 seconds)
done (took 139.37893687 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.291002233 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.149173616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.107136709 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.258736945 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.127913991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.107848969 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.110116168 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.243437461 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.759335473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.752102599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.256844789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.130866351 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.06783549 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.144077854 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.064441377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.143145959 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.129672412 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.308484433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.949083411 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.1532588 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.116477235 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.882429034 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.096572988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.896225863 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.132923315 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.062086372 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.461613131 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.153612262 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.102993181 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.472140798 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.074006622 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.306242228 seconds)
  done (took 173.849043859 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.647751564 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.90751607 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.906605292 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.907624192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.288506285 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.908253045 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.909437473 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.907669794 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.247882149 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.202656745 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.908996936 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.278582925 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.911678547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.907270462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.907607294 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.907614921 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.401386347 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.674758912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.908434093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.908284017 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.910354805 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.123993024 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.909578144 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.13397835 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.379048375 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.91050084 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.835552498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.908465189 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.925256036 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.841658863 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.908711694 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.909324758 seconds)
  done (took 209.084846434 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.900355069 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.908661745 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.910823237 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.910117016 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.910372249 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.909575911 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.911020585 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.909063971 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.536503002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.53402622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.908542003 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.911642659 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.908444436 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.909340403 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.910139256 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.909874905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.910148832 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.908662181 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.909247318 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.911119146 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.912569947 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.650588405 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.910803572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.660917742 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.909254782 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.909837589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.910535698 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.911155245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.911187495 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.91059648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.911352652 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.910538694 seconds)
  done (took 221.698376353 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.113758742 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.917030013 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.918429177 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.857227775 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.919104187 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.91694394 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.86474148 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.106720745 seconds)
  done (took 19.456326173 seconds)
done (took 625.938876939 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.382449633 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.229373446 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.095278198 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.945733397 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.186786855 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.976865974 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.937099526 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.005854597 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.673019841 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.008863103 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.632956676 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.957895388 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.728667442 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.964831133 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.060451463 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.001120981 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.480209006 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.570323178 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.118516604 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.996011607 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.1158172 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.870736999 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.021460884 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.69456903 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.739670071 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.91127387 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.104709073 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.486057697 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.950736921 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.104821454 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.721337746 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.333952313 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.951958617 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.938442879 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.996640966 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.97384268 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.282774754 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.948982295 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.060937311 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.674832656 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.007792542 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.552987182 seconds)
  done (took 105.239516894 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.908144499 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.906764983 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.906633429 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.906872416 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.908679452 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.907507436 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.906326121 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.906185879 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.908335213 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.906928581 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.907298419 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.908263123 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.906825492 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.908613448 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.906838171 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.907753451 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.907539041 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.909052429 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.907163735 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.906174832 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.907367999 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.906838597 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.922224736 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.90756179 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.907235235 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.907544549 seconds)
  done (took 51.462417243 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.920907496 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.092494658 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.182036311 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.941610761 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.920980781 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.924564511 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.939070506 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.929691641 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.923628478 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.923725923 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.015437177 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.93033104 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.939292321 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.180136026 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.938271666 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.921563833 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.921875906 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.922564776 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.100811383 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.940551258 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.941302196 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.929386352 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.940703296 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.93638777 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.924198213 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.923078138 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.925965003 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.397182471 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.931981566 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.016356196 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.967417195 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.944935483 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.35104342 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.193481228 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.977204042 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.930622466 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.9232824 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.01751946 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.929874436 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.923013932 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.942132895 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.929797589 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.179923034 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.431187091 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.93984688 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.924638438 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.409344257 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.029142518 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.965506675 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.933540296 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.182276868 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.94175089 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.925197546 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.923587922 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.959739607 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.933735291 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.922982853 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.251417057 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.937538311 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.941820664 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.929551179 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.924812247 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.099187928 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.934496589 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.090236181 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.93451741 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.931078541 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.924914059 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.181747355 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.942187987 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.43621965 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.945651083 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.929708289 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.021300812 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.103946061 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.443367369 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.944554423 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.106568308 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.372031464 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.956002831 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.93867895 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.394526518 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.959623965 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.937065626 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.931349993 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.932306838 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.930482106 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.976574813 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.946121395 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.36003213 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.448720771 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.275597854 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.959459725 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.946016287 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.930472304 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.255242651 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.940964537 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.931595487 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.180248794 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.453631321 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.948347216 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.938526695 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.42864506 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.948818282 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.950372781 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.940820361 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.193288316 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.949871711 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.976927837 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.930769023 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.938511091 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.9324188 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.951859577 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.938629712 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.931843587 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.420297942 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.045663847 seconds)
  done (took 239.135250108 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.927795051 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.927015927 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.925449461 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.926670002 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.924303085 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.931860475 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.924931392 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.925897238 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.930823981 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.924762344 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.924958612 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.928008633 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.929650917 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.928013868 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.970690596 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.93325053 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.540494257 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.926634086 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.92687793 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.927335596 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.573791872 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.934864399 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.92737347 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.932992961 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.927453149 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.927949643 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.930395778 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.96400404 seconds)
  done (took 169.183154808 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.934068618 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.048914409 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.950121952 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.960132098 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.941895334 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.931131254 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.957087316 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.949684682 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.938629181 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.930616402 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.931674754 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.995255931 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.943902593 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.033655128 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.962978863 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.964479514 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.03735009 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.939645806 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.93139947 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.9317725 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.962121524 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.92825738 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.994438932 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.061596803 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.952052881 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.050299148 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.936825778 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.936441406 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.933273377 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.051357382 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.947926585 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.994152709 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.963042175 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.953498353 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.05616694 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.04931222 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.040107563 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.963714648 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.93862458 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.934161699 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.933238589 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.921873066 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.051372697 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.952384187 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.935642546 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.041309085 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.951464804 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.936518637 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.94404722 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.932614558 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.94780016 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.95285479 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.00110044 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.066330985 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.968637268 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.961854447 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.959941708 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.207590952 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.945497909 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.035140912 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.927291753 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.051478719 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.953916094 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.922952552 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.936336678 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.940959514 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.963968366 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.966822029 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.040962528 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.943921818 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.037265971 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.968773933 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.941710778 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.935185976 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.937987193 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.054092601 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.05106094 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.969640417 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.972314468 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.967654072 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.931263572 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.93533357 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.924577351 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.955152119 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.941483115 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.054027634 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.052939513 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.94526773 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.938458468 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.938680799 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.939875256 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.962448916 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.061250563 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.97030422 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.033671234 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.005400105 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.0107905 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.950183291 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.949279615 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.940491461 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.000271153 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.950026722 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.948101417 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.253929039 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.008932871 seconds)
  done (took 209.456315849 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.386798568 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.991617193 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.993822657 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.264858647 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.363162288 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.847575116 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.984478065 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.987778167 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.009984525 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.170451964 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.058809917 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.007749071 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.972803575 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.959343019 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.985055321 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.006376099 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.000376643 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.306811318 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.106136373 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.081239867 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.965357515 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.260829011 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.305086831 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.416566938 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.024918106 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.324509633 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.656831155 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.131046659 seconds)
  done (took 63.439326222 seconds)
done (took 839.758155613 seconds)
SAVING RESULT...
DONE!
