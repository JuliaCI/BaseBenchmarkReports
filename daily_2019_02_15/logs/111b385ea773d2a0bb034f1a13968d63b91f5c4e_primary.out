cset: moving following pidspec: 23122
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.262456529 seconds)
loading group "string"... done (took 0.578157145 seconds)
loading group "linalg"... done (took 7.299802534 seconds)
loading group "parallel"... done (took 0.169872992 seconds)
loading group "find"... done (took 1.179624995 seconds)
loading group "tuple"... done (took 2.047769469 seconds)
loading group "dates"... done (took 1.300496577 seconds)
loading group "micro"... done (took 0.24058385 seconds)
loading group "io"... done (took 0.993106134 seconds)
loading group "scalar"... done (took 40.905091174 seconds)
loading group "sparse"... done (took 13.114594989 seconds)
loading group "broadcast"... done (took 1.06971034 seconds)
loading group "union"... done (took 14.493437412 seconds)
loading group "simd"... done (took 5.049433027 seconds)
loading group "random"... done (took 10.084028698 seconds)
loading group "problem"... done (took 2.058632414 seconds)
loading group "array"... done (took 23.245234655 seconds)
loading group "misc"... done (took 2.104130728 seconds)
loading group "sort"... done (took 3.534983019 seconds)
loading group "collection"... done (took 20.037985789 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548111245 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143657909 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120718374 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139419524 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19097023 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134240205 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129248497 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.103562359 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.933885176 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152276754 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140583204 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.509211189 seconds)
done (took 4.993561726 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.239793058 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086694719 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097231662 seconds)
  done (took 0.872128656 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066932561 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.1283807 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066166846 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.084942058 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067581545 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082353818 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06819695 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066311741 seconds)
  done (took 1.249273634 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073507054 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068024279 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086734492 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069962992 seconds)
  done (took 0.983487532 seconds)
done (took 4.100784244 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.941848937 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.25880301 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194460727 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.467277683 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.15545502 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.193597885 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.767993397 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.384711149 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.213088798 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.076311183 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.126138286 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.377708524 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127939282 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.760106379 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077959835 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110901653 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17768621 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.480192199 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083950833 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084075602 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106384213 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134115407 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104777354 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091532005 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.160589483 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069293558 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.155023989 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.100629013 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070516741 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.26721864 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174701028 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.765725937 seconds)
  done (took 10.982825069 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098732457 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121208869 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070859278 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144013697 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.107156818 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089909336 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073294282 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084980382 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09552446 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.166552939 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.120262062 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110290503 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08376679 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072491332 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102876303 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.217698779 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109522075 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088377694 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089200261 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077705699 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125857425 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086500208 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097372423 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082074397 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.156901153 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199554345 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101709104 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115307564 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071482498 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101521688 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132200648 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135319046 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067935075 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08611166 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.162147618 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098709447 seconds)
  done (took 4.639838216 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.090728343 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.180470845 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09463221 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160716558 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.147256625 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068809396 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133586493 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.085586264 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104588885 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239195748 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.168924933 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.48795813 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132854313 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.090216624 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070110551 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.090380711 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069796972 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.552366242 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.150747745 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107211978 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106061922 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076831358 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.091314445 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.721178411 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070737572 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068353861 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087843161 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060803249 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06769344 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.152775161 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088664754 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.18188995 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109189491 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07021452 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121425272 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.182636807 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100121623 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123814407 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068104103 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086094781 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165448757 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077101708 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068681508 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.111536171 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123163216 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.108950894 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.087240208 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070697727 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.186662325 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069723414 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.105070537 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.940304233 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.170237259 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096657987 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068565852 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296165214 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085319457 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087951414 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066484168 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.288086848 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.180015516 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087663298 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069952024 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068240691 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084197309 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066056509 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070690088 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.727883179 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087002095 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.137915409 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072272552 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07987612 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08889327 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070284167 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094089611 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076717724 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104864212 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070060727 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070520857 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087180679 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068740816 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070536655 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106157742 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215932875 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069669159 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088782441 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067435872 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.106464968 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100592586 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089534223 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068875068 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1194242 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072811637 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070219658 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.124053313 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06947603 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105197158 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088777808 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117682883 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085954168 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.136561776 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068752586 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119227272 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074083993 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119359585 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10133446 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07166668 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.158931633 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068117249 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.067249115 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087412866 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067798701 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08813654 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071846415 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081196032 seconds)
  done (took 22.570298277 seconds)
done (took 39.965156291 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.322119511 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095864264 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096591048 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079609105 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.096173494 seconds)
  done (took 1.446272325 seconds)
done (took 2.173810826 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.138295442 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124442347 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065969337 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118855943 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066362055 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.123921514 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120048517 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084745904 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122092221 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06733173 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11719089 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06668891 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066058388 seconds)
  done (took 2.039425796 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08297434 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087913526 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089250676 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083762171 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065065159 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102506487 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082514105 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109097402 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082902657 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073625349 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083661166 seconds)
  done (took 1.670844397 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081977444 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085728428 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088126579 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083276728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064738694 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099762292 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081630974 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105186718 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083044437 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074495425 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083660441 seconds)
  done (took 1.663218381 seconds)
done (took 6.091584231 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078720682 seconds)
  done (took 0.803307175 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.745308737 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.811608867 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.104299582 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.140287574 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223012146 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.160640663 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.461602817 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114581686 seconds)
  done (took 10.669986899 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.116696572 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092045429 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071776596 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.089233973 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074959612 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072365855 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089331711 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072412918 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091139564 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073741366 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074508136 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088976418 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073974928 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087675796 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.0751065 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088440591 seconds)
  done (took 2.121188883 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.107947708 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.106504703 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093754392 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078621036 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093737572 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076074253 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095699262 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077735708 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09060033 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07593041 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094659402 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077869332 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091175402 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068649234 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078488565 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.095498911 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074556268 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.09493863 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077939793 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.095622968 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079047411 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084485616 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07576522 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.094778002 seconds)
  done (took 2.913993172 seconds)
done (took 17.235859602 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118058383 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088277553 seconds)
  done (took 0.934347021 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082542323 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102165974 seconds)
  done (took 0.9218354 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083951567 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084303358 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09163768 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098631427 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069692208 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.086339699 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.107826882 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070112665 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069047567 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085811434 seconds)
  done (took 1.584822838 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069782888 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09798 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073030226 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100986572 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077363731 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084243903 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077152644 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.0716943 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099605257 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065747838 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.091717159 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102909242 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075270009 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104243756 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.077577726 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08779728 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074173296 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08701066 seconds)
  done (took 2.255418985 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066774588 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070052329 seconds)
  done (took 0.873796346 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068557642 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066070278 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08632686 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069921799 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082839422 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065682997 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083159223 seconds)
  done (took 1.262274565 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.423008744 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112880759 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258287883 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.091880969 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.108736336 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.283960981 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084404187 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073811076 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09159164 seconds)
  done (took 2.307737503 seconds)
done (took 10.8684201 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081025388 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087412148 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114896664 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.425733347 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095041835 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.084270809 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.13549534 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.230540295 seconds)
done (took 1.993378906 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127759556 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.624444817 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.41296099 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.224590217 seconds)
  done (took 2.008267917 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.387515894 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093070778 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076472866 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070830982 seconds)
  done (took 1.375286151 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067219382 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072791406 seconds)
  done (took 0.886410924 seconds)
done (took 5.138175595 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068254946 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068412063 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.084387727 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069265557 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066188678 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084337121 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069878042 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069266549 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.086121262 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.069430452 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0691408 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083157876 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066612744 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.118278356 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069493187 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066508482 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085865408 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068026252 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068515548 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085260528 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069193576 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069389299 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.085770927 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066933743 seconds)
  done (took 2.591919301 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086502742 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086238825 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075203252 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074919539 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091420356 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074637175 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092599527 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070210448 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.092744762 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071483426 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089600147 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073913867 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071316259 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090758334 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07175924 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.090062569 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075763761 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087060955 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071603422 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091196649 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074907861 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069577458 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090032661 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07476353 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090507132 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074698756 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088714001 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070537238 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092094263 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074687229 seconds)
  done (took 3.17894281 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072488033 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066289344 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08505393 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073826921 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067052353 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086198779 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067859338 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067479382 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08542454 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067012959 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068385399 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.084186819 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066966396 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085225983 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068223154 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070616442 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.102074068 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067708838 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067525576 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.0850445 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070261385 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06681595 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.084730949 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066907558 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084319334 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0669257 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067806494 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.083850153 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068423157 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066372975 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.087216802 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070900076 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066408059 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091356493 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070999774 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066514212 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.088157056 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06656678 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067507967 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.083841448 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066839334 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066754348 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.084202958 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073608127 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066983216 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.086938376 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067196401 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.086394129 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067683333 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069982056 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084527122 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067517227 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068665487 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08506795 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071700417 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083604081 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067683152 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066509242 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085435912 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067063614 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066632509 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083845629 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069720944 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068465124 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.099885249 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073596758 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067174517 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085589303 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068353348 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087095625 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068907758 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081728636 seconds)
  done (took 6.148320327 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.120587684 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093682626 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086186737 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06928472 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0650803 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085845663 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071570641 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084585996 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069285881 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091483978 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067542559 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06877691 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086756314 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083603425 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068206675 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086584149 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073639421 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083212561 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068238692 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070946245 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08570431 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071245779 seconds)
  done (took 2.509138876 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.191297234 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089015881 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.1101652 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093015459 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070550985 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093927191 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074242273 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091643779 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074625991 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089671324 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072152503 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091675473 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071478076 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071788167 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090094443 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07241248 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.207417988 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072530246 seconds)
  done (took 2.487197757 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079601735 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068448454 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.111180681 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070319982 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087832702 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072200813 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093469731 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079784501 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.090356298 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069659818 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095119822 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072212754 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071864489 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08770752 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072700834 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08800606 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072925664 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070106205 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096320701 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075891883 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092978608 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078695586 seconds)
  done (took 2.55813906 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082429125 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072102038 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107199463 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073094034 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083726198 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068448589 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093622126 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069991164 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093464112 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07170756 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070599339 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08718932 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075326744 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087897994 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075299706 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070024865 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089510246 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070584071 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089287014 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066152837 seconds)
  done (took 2.359976756 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088640654 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088791166 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071274555 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096123582 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071739553 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070954533 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098265411 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071293869 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088725606 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113284364 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07187227 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071236341 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097982264 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093865618 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071596087 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096443431 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080657086 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09694743 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071568342 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088653985 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096311201 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089335757 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080098819 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088765576 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071506844 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071283375 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090300689 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076191002 seconds)
  done (took 3.127899425 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067942965 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06866633 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085356269 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06744975 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067665311 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085655398 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067472501 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067788537 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088066467 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067502562 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069817702 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087444334 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070344717 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069622508 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08765243 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069907717 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069948946 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.085266753 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067897257 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068065076 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.087268348 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070119239 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069501241 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085527651 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067721392 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069635146 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085147047 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068135719 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070004688 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085810438 seconds)
  done (took 3.004342322 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077261091 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075693722 seconds)
  done (took 0.918710852 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065770378 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083459163 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085090179 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074023028 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092792214 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070790256 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09675628 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074583116 seconds)
  done (took 1.410963601 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083345522 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081181887 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089223527 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.084308412 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099757575 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086692206 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162094355 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088049441 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075819373 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067892461 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.102923421 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069804031 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.095043924 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070887238 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075883523 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095235797 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068888886 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092857433 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.073830058 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068887997 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089524582 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083274783 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090898967 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.067441688 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07582446 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.099106968 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083151286 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.090114728 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073861265 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096640631 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076890092 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064651421 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08843292 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071229692 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068540051 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098494085 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104716842 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073972985 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080481918 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089751519 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081206514 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.084709817 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075845889 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09432414 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081218166 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071641978 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08953652 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065958298 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067982477 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090545048 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066220457 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088702747 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065405624 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077684973 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.0916279 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081966973 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087109858 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072606288 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073779621 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092954533 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077982362 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090681893 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072916724 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.07057534 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096468967 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07581215 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098184136 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066482246 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065423955 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08722009 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081297425 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110897941 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077977308 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088846212 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070471105 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068539416 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092663586 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07210409 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094233439 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076457977 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.07076984 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095216275 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078780027 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089273143 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073150157 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096818528 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068879908 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072703463 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086357657 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088901675 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087744461 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069249624 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068620001 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.100866092 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074342893 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.088796134 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068597 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07810684 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.083395269 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071881119 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089521905 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071303319 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.081940274 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094851432 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076364371 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.098053946 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078069805 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088927843 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075422303 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067630358 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090152004 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.071081334 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.096965323 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065794748 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073771967 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089113741 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071491042 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.098148168 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069442051 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070931035 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097146015 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077329784 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.087210818 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068107384 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073763058 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08892519 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075338614 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097902007 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069469263 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065661135 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084365404 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074333613 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.088716915 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074415441 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077071392 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092398803 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065664677 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.087373305 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075390001 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097707244 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071725679 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071826316 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095436229 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072244251 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06972681 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09637213 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073625737 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08802755 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07678304 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071344872 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084643621 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074705489 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.09214286 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069658079 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074706518 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092610412 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.074337242 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.090513354 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07003439 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076569556 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090387336 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070597034 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089748964 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069676442 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.0815894 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090748684 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066584977 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.086039208 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.079084319 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069097965 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.089385531 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.07006336 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091663233 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.072427143 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068684715 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.089423348 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073017264 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101500317 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07614305 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090336763 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076834642 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083371248 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.089177189 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074025481 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088818748 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072259677 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071805863 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.099934747 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076871135 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094821251 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074163827 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067524279 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096198595 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079449555 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089198654 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069513557 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069925779 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.093416765 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076666246 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.093771301 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071982452 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06879032 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090129497 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075485025 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092631072 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070880447 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.07003136 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093998548 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.070870538 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097166081 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072724141 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.100598209 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07507753 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066767849 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092907893 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070050088 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.096144849 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06656571 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068981726 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088792256 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.07281457 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069853317 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.093134592 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065205766 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096671715 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079514258 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070838481 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.089161539 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071308013 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096204076 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072939421 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075733119 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093105131 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.078533548 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100570368 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071137007 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074003687 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.100387702 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071190883 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.084173695 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077541561 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069764531 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.089238357 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070770454 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087724168 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075298093 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097803129 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078528954 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065435085 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092043039 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069621949 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069946893 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.085629107 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076494276 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092474871 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072479465 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077965718 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090797777 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.072473541 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093616132 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.071882244 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072186869 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.091141388 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074961325 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091564594 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.074712511 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0705834 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093147381 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070795358 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.087912544 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073356041 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.071690884 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089889324 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07683332 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.071170338 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09037737 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074025169 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090823279 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072968593 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071829573 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089395472 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07488293 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090771793 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072394471 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074047362 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.085435532 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079392301 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.071103189 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097646788 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071969259 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.087207133 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077145345 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073665132 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.09559955 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.07241371 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.090845806 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073061932 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.089065928 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074608115 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07864298 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087976888 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082982546 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099456974 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072305861 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07424295 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090091193 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073110335 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089075416 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072941933 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.072375387 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090273767 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.071217028 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076715553 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093307701 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071939801 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092181444 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.072686757 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071733947 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.091902368 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066203731 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070782003 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090035328 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072205067 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101463246 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.073039544 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089816039 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.070311757 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072558774 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.089836525 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067932446 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.098862622 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081376418 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.091400178 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079242763 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.071245657 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092112602 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082941958 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.087525298 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.069979926 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.069211051 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088564379 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080238444 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072416675 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099710585 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071282945 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089368962 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.069015223 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071951231 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.088941236 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066304704 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068906269 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094628778 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071125701 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089164475 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.072176359 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.075331471 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091591876 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082265711 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.090095461 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073080495 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071889728 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.088305562 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070953619 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089407204 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.075512135 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072661636 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087991937 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069432758 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.071104539 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090984852 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073501721 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.090179382 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073481799 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079133124 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09015396 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074771401 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094256699 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066966718 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074878346 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090585479 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.071414803 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070749229 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.095269375 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075281335 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090834912 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081173724 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.090068504 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07274955 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072439005 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.089124266 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.071513084 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070720364 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.090986596 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071084866 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092438988 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080144894 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069736266 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093905367 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071428054 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090788578 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.078740261 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.072750796 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093533299 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079425632 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.09093685 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073653844 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.097798992 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075547031 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075058454 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092346142 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073556484 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096489 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071325267 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078225311 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091622021 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.072947274 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092818133 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06965311 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071941391 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.091005449 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071491043 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07789174 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091762954 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.07117691 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090198448 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069866939 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072132196 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094443123 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080312592 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093286748 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075163145 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.067068238 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.087844641 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073337444 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069849378 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092260768 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.075709244 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097514346 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074493795 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072563916 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.090085353 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082274756 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09711418 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076212183 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068894397 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095169093 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.072773866 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093117765 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.073416981 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07204158 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093537925 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076215267 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.0927386 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.071488655 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079285755 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094496125 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073240879 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091977952 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07333264 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.0718596 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.086868223 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072979122 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073753062 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097567964 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074623134 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091645414 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083663753 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088561389 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072735146 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076053038 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091077656 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076603663 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066667909 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.09338997 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073479056 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092668707 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.067821505 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071103175 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089578584 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.075213339 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090109008 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.067318401 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083042082 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.101414156 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.075418555 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090277966 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070882538 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066894125 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.086745719 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071631014 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072566401 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09417241 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082928605 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090206422 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071448484 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.067303959 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09191946 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075414523 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094719361 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.069315588 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.067187568 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090571091 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07587737 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096187504 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07110907 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071898501 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095204206 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074616337 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06946012 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094636835 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.069178993 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09507472 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086417652 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.092484731 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0733555 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.078518836 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099873997 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.07339775 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.086771134 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073063391 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075432886 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092387777 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074085393 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.092514176 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088525472 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095016245 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071618156 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070706104 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094177637 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071763949 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080444967 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093536653 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.073535711 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096097209 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074821235 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099993189 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074589119 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080994731 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095349822 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075605077 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.090589809 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073083956 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.07004869 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.09032118 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.073911295 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.092455358 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077526601 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.099136303 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.072546004 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08402981 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101809292 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07444172 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.088083701 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071473552 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071531844 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.086900199 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.073911754 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.070223387 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090512234 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071566932 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.090539517 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.073107018 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078689235 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092262753 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072854294 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.071685682 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.086266235 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074682489 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093690834 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072869489 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06869773 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092071612 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.073973207 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076169483 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096559384 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069960298 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093032189 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073989213 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072181075 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.087239616 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079172542 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090116169 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.075425092 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071010682 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09185104 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.074036581 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075139879 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098275368 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073725164 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094803326 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.081563773 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094181012 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.069579246 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.069341291 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096976575 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.070596737 seconds)
  done (took 49.154203464 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110605481 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085638212 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065446827 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086406742 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080281606 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088722784 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068008849 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068982831 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088269951 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071187285 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066618451 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087480702 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07701231 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111275402 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099198868 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072542454 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086978405 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069044266 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067369147 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087990486 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077781014 seconds)
  done (took 2.527553395 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089353484 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104327647 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080774068 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105149949 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076106429 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.101195824 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100273719 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084495639 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105250855 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079338054 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.105678581 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102135118 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079867884 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.099280522 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079307176 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100399568 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086438117 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098182102 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.084249405 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102277832 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081022107 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102749217 seconds)
  done (took 2.858700701 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069885943 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070291146 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091205907 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.067184953 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.071570282 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.086573594 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07628833 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.069393703 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.096355497 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.080209569 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.089812456 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070786287 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073764744 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.089867602 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071927516 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.069195302 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.138050825 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.093835066 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.071279589 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.092080492 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.067958038 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073388731 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.087453423 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.068598478 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070024076 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.095310381 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073719995 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.090108516 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.071396578 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070950994 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091205206 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069858952 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073455744 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09271038 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071029709 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070407864 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092128387 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072614575 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.087089898 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069640435 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072912942 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.088131927 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.072694419 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07283693 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.089623923 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.070071506 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072807964 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.092233471 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.067476549 seconds)
  done (took 4.709410844 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087992852 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.148410495 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.093830035 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10975454 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.108244079 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.099606255 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0760742 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130678832 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.069766002 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.091621409 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088961212 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107687665 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071744443 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09832513 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07861116 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091902548 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073743888 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091447954 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.0770611 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091137503 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.077278987 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.098716862 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.087350003 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.105407943 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075723321 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091040089 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072129676 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.09691085 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084945725 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.097171438 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.076843027 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.098068711 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087803293 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.097065618 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070874528 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.093770498 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.089187083 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.092122298 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.073918826 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.090149794 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074671718 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097224659 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.078860768 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.108694699 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072872737 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.097049411 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.073479915 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.089613142 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.086253254 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.094643302 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079989447 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105856907 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07586251 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.092291209 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076951565 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.106395528 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.071824642 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090323575 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.076028982 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.104900473 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070852753 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094785753 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.086625509 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.093952937 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.079429535 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.105805932 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.077899423 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.095568671 seconds)
  done (took 7.044585783 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07856628 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095779358 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085732357 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106901457 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075953678 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.096947465 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097386725 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075935796 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097058112 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083186179 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096688899 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120440338 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07440178 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080833308 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10050837 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098568478 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079345324 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098302524 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079362665 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099472858 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079779476 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.106485758 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079335091 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10661299 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127616202 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074707187 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09898862 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079181755 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106949011 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078375499 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111144841 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.097403374 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079896745 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107222041 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.110010538 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079593197 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090952638 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079293951 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.097696618 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080033315 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093743408 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088712436 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097930014 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074336339 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098585926 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078403551 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106615239 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.1103457 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082757376 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103204157 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079799942 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106369853 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097068201 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079325821 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106671811 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.11424351 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105989822 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107008796 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077754919 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105501743 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105628319 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.092410841 seconds)
  done (took 6.628094858 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091629867 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098359877 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080737525 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.086855712 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070252831 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097086714 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070740566 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069995061 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101071923 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080419983 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102989482 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095066263 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079335215 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102974605 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07723123 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098387772 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076492749 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095863123 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08065419 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097495875 seconds)
  done (took 2.581254551 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078408178 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107545199 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070874638 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078745245 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.096463403 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07910274 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.095360447 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076061242 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092595087 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075896294 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102786254 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084334965 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072604476 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099886395 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102123914 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078834549 seconds)
  done (took 2.221114084 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081892128 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100964117 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085015058 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.092948128 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070924447 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067909973 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.094202261 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06856885 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.089744364 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.087443151 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.093367894 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075080486 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072338841 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.091665092 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.070582887 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09623665 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.069953528 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070041348 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.092557538 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.087965601 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104115992 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071706166 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.094142001 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.074376583 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072124839 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.099402932 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.072295831 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.090839232 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.071273387 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.093571801 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073656802 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.100351276 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.070414667 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.07157383 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.091738252 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.070701915 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092765668 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073419639 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074762145 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.092692877 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071616845 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.091717679 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.07360249 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.07278764 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.089422906 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.073913244 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08945244 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.078897015 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070140041 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.094483928 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.073441071 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.094911722 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.074027715 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.103027476 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.077168704 seconds)
  done (took 5.375613289 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084310702 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072695959 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087767112 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070245041 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09482533 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074380664 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076316208 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095214047 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074817223 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090495769 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074478645 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075848204 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094980434 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076843824 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094519349 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07646552 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06815546 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.094284609 seconds)
  done (took 2.311744804 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075072541 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06960784 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097858587 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070194167 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.091345894 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072601185 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069053337 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.091999916 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071856411 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072852413 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092833879 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.075689346 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091992562 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.075800839 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07270718 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093049819 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07590968 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07076098 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093922465 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068487446 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095032627 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07173357 seconds)
  done (took 2.592643067 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075119474 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09709357 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.172219323 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.114747359 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.086449331 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.106322506 seconds)
  done (took 1.488095841 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094254625 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104126349 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071058843 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094619189 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10114594 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073919598 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096926341 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073933398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103440097 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107321213 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073111042 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103545708 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082959715 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106280358 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100727763 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08048244 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094246479 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075441616 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073061687 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115321867 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095202749 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084264742 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095257416 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074711993 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096070278 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08337541 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103373682 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10872621 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075047345 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104579172 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080720693 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095003518 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084964235 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108062792 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074266969 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104035363 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093775726 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094076945 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100763051 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08334252 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097255145 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081335042 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104087431 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099890246 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084066865 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095860141 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080506848 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095771271 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075378634 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120413368 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100433374 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083691397 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102583706 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084695068 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104950696 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120854951 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088383567 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10345083 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10084421 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089193194 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10446377 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101599965 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084915834 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108412984 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081036101 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104676325 seconds)
  done (took 6.999570804 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086149808 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109838305 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072627333 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108451925 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081643005 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094286852 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074456459 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095408218 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073984742 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095380645 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137142638 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076266727 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105321142 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08422029 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095814039 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07448315 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094862434 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103307398 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074631707 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120900784 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074798392 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10335449 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103641022 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082800255 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108406024 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081231544 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095652242 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074977588 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095171912 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075475851 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101705588 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074702576 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103403633 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074021667 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105080002 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095391319 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075017116 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101412466 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075622716 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100850342 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082700242 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113887934 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092945542 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071944066 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10559417 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072662347 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093247801 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072036982 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092994688 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071951078 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105907002 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085719356 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106853021 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1008392 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072789562 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092655336 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073156188 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093724376 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072392937 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099041014 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080367174 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092435439 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118037881 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072356991 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092660245 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081292624 seconds)
  done (took 6.810698002 seconds)
done (took 134.341348571 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.21951614 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.208598416 seconds)
  done (took 1.262649077 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072161499 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099431927 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.106341101 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135079513 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090802467 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108873929 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102148975 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102922052 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070568691 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093903598 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072625695 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073547467 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.157380978 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071120881 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070556658 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092790218 seconds)
  done (took 2.365493634 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098460751 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.204167205 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.087622817 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.09225425 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.076236407 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09609594 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069059593 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076735562 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096502026 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069981453 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072800635 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09171796 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069329068 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072215916 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094734629 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073055316 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.088685058 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073485774 seconds)
  done (took 2.445660656 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097219378 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.121212355 seconds)
  done (took 1.065170952 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.211360909 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127254288 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211811811 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.432941324 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.252409428 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.288297996 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.18294174 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.182989429 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156024698 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.178395389 seconds)
  done (took 3.069133374 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10257604 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.165277583 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277325402 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140593175 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.112297795 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.088846484 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141222468 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.093676221 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.106114437 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10582649 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085339342 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101885289 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101176713 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099967434 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078284113 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10123824 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103489837 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.098765335 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078646629 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100254989 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100867799 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.090578388 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078716771 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097928768 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081754186 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.103775724 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070187673 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06893131 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.102577694 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078514354 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097594876 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.086708588 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102980181 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134560872 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106768193 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136177309 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081567964 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095561726 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078891159 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074384158 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10262763 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101323284 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.087466492 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101550218 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069408698 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.082208307 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.09118037 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069762335 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098920713 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.082070657 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098342105 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077198315 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135626888 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102885574 seconds)
  done (took 6.294890092 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.777540203 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.116063394 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099705932 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.846136123 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122115701 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087913919 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.74288453 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12316441 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.214064778 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.741949959 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118937381 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.081845174 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212231366 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.21987386 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937957917 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.274501599 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.627887072 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11036214 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112374332 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137670888 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103880347 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099416763 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116195806 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.41385114 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.078810675 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097540109 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.082176212 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103571031 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144424787 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087018377 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099785544 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159903287 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.232890788 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187173563 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07894321 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073267119 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09982857 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.15328242 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223769781 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.1971062 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163252743 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071625641 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095950408 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.084512583 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116049717 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07169147 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.147414095 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.157551909 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.152516718 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099353944 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.080549884 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.105522412 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.082574226 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.169910858 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084209254 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.302676037 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.270023867 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09678503 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083462715 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110516025 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220003793 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10853634 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207991905 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101771567 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19375343 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074534701 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.761191555 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.153267372 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074603653 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101464589 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082934809 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102079909 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.083152763 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151692089 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.374230498 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085353873 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099247207 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073859401 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226717824 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087352282 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073508287 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167150831 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.079342575 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105115432 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.087982296 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111896205 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.153269325 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.219228361 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085203489 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105071868 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.078140868 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11085399 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.078069441 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.194792264 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201466867 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.145277754 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.190900452 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107148414 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.148114848 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151950285 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103575057 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.155816202 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.083164999 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108982529 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084667051 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199590439 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.128840137 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086323896 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101060781 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.080993747 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.13252245 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110917234 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.081430262 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.153332423 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459997153 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.151569562 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071684084 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11178327 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083022449 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144965427 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101818846 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.219497784 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106877692 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.153563686 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.082122825 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.093587756 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.083287014 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.146259074 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107490829 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.083680511 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107654843 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081011 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216754257 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.199169531 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105485458 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204329997 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166842646 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.080333032 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154481877 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105928607 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150982804 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082182711 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106331693 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077593884 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.767330144 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107924794 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.083094733 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100095359 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.148479757 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097026242 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086196775 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108914505 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072082161 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757522083 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.090106071 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106290289 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086029196 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102727836 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082697062 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103075556 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.078478549 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144584598 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211929628 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103255366 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.082556971 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108357889 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143710978 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078558394 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108605186 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0865011 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109633475 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.084353108 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10059766 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087564914 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150650903 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167741429 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.179995195 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574907488 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075243808 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108322861 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.188553646 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096831846 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.248047202 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104670441 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.183621002 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167907775 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083679364 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288436156 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.148215611 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171716998 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088907903 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156158794 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093516274 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.081001836 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.147670248 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096491615 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.08052476 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.145851035 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109942792 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.084826059 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.944416578 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073819557 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207651741 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.093872016 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.154941995 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077595721 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104890308 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.277527967 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074713474 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089471577 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.169681524 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078455034 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10829239 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.716768872 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.0861585 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107428583 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10127109 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.181686383 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.146688894 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104172856 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.081603651 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104245531 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.14579487 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.191076123 seconds)
  done (took 39.422492748 seconds)
done (took 56.763360982 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.243011567 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207905489 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.231452318 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.156084905 seconds)
  done (took 1.801633071 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.133210668 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.135278837 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.128455321 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069011413 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.135708258 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069993557 seconds)
  done (took 1.545229616 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.323282567 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281967344 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.205845272 seconds)
  done (took 1.681935337 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.277652792 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235169691 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.46089179 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283948558 seconds)
  done (took 2.253560804 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.195756921 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117920154 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072680225 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110901435 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.15701526 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.228070903 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126363388 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160444907 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.105798317 seconds)
  done (took 2.190827125 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.156866918 seconds)
done (took 10.493583147 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.313170357 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.238787632 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.16924986 seconds)
    (4/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.157067119 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090532542 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.11496951 seconds)
    (7/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089380611 seconds)
    (8/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.259092652 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.248270091 seconds)
    (10/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.148211125 seconds)
    (11/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.222185556 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.113005486 seconds)
    (13/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.133916268 seconds)
    (14/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.17664888 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.105839705 seconds)
    (16/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.087109129 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.247176744 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.081083299 seconds)
    (19/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.198945478 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.123258162 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.136985819 seconds)
    (22/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072273904 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.201753528 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.10080225 seconds)
    (25/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.085554181 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.16934141 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.2253115 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.123339185 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.190259559 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.215250059 seconds)
    (31/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.077704613 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.128143934 seconds)
    (33/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072247265 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.239786888 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.14012495 seconds)
    (36/309) benchmarking ("sort", BigInt, false)...
    done (took 0.222424179 seconds)
    (37/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.183449993 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.082869847 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070316077 seconds)
    (40/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.188466565 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074496052 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.122630838 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077139897 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098812741 seconds)
    (45/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.162110147 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.206961133 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.192385985 seconds)
    (48/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.217854131 seconds)
    (49/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.090182976 seconds)
    (50/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.082983393 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181726564 seconds)
    (52/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.109765509 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.08220702 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.164068237 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065983849 seconds)
    (56/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.12440488 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.136248402 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095852895 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.196826581 seconds)
    (60/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.115286392 seconds)
    (61/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08152293 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.104049682 seconds)
    (63/309) benchmarking ("sort", Float32, false)...
    done (took 0.133120053 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.101178036 seconds)
    (65/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.143402324 seconds)
    (66/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.105292999 seconds)
    (67/309) benchmarking ("sort", Int8, false)...
    done (took 0.170818676 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098452471 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093444283 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.14883547 seconds)
    (71/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.120311169 seconds)
    (72/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078376378 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096552446 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.175928509 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.101832513 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.081592823 seconds)
    (77/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.102572395 seconds)
    (78/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.104183537 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055494643 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.157414482 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.060464223 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.105939323 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085568202 seconds)
    (84/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.068772733 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097555169 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152832595 seconds)
    (87/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.129750394 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06114922 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.145238476 seconds)
    (90/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.063524659 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.077398499 seconds)
    (92/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.175605721 seconds)
    (93/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.058145985 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121814989 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.103830259 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.101524175 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 0.071535865 seconds)
    (98/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081101505 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.188027543 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.147126928 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.106318731 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.187473476 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.170334233 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.144723455 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.113017472 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.055617458 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.168747548 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076826355 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093997092 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.117064238 seconds)
    (111/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.07153429 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.126686528 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07777613 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.100958933 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084451115 seconds)
    (116/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.110515634 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.165562297 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094565191 seconds)
    (119/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079945679 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078132246 seconds)
    (121/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071047463 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.116417872 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.433922865 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.151471716 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.179608195 seconds)
    (126/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.120005432 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070299859 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.095682013 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.177389545 seconds)
    (130/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054933312 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097787602 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.164427811 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097108722 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077560202 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.153329072 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12019177 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070832947 seconds)
    (138/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077554985 seconds)
    (139/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099984552 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079570222 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075440374 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.116847728 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077615647 seconds)
    (144/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.176595986 seconds)
    (145/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.113376335 seconds)
    (146/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.082901481 seconds)
    (147/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080402176 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.137024999 seconds)
    (149/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.109610285 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.079027016 seconds)
    (151/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079092816 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.123490513 seconds)
    (153/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.104858834 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067876721 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072828293 seconds)
    (156/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.104840349 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071373951 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078971395 seconds)
    (159/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.09665076 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.056381971 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.166768111 seconds)
    (162/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077383237 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092938008 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078871666 seconds)
    (165/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081553223 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.079423806 seconds)
    (167/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05702099 seconds)
    (168/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.055364945 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071318171 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.10325691 seconds)
    (171/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.1191467 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.094877385 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.104011238 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101717306 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072489717 seconds)
    (176/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078615657 seconds)
    (177/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.105747594 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071888889 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.055106575 seconds)
    (180/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095404252 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075806795 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.120832364 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069932019 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.191245875 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.072111314 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.072481839 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.16651289 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070220482 seconds)
    (189/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.170199582 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068888577 seconds)
    (191/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.108249984 seconds)
    (192/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087960759 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07648868 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.173560205 seconds)
    (195/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.104121448 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07923509 seconds)
    (197/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.057245264 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.13308402 seconds)
    (199/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.055461377 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057801416 seconds)
    (201/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.098041264 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057122544 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073600926 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.167974747 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069056706 seconds)
    (206/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097009777 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097938537 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.055712427 seconds)
    (209/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.089854623 seconds)
    (210/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.056142156 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079223151 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.101887432 seconds)
    (213/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05699631 seconds)
    (214/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078634227 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155170973 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.2018114 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.056873382 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.119967883 seconds)
    (219/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077451141 seconds)
    (220/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058026216 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.100950973 seconds)
    (222/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.055363818 seconds)
    (223/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.104325424 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.092915603 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056867442 seconds)
    (226/309) benchmarking ("sort", Float64, false)...
    done (took 0.156272913 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055421965 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.17157705 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055687025 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.172045597 seconds)
    (231/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05558209 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.081060364 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093975789 seconds)
    (234/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083998423 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09332235 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.079814283 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097189453 seconds)
    (238/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.127682421 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.056144755 seconds)
    (240/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.189612904 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073560738 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072950466 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082414229 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076514154 seconds)
    (245/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.056442264 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.09298891 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.10887863 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071032172 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.0937507 seconds)
    (250/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.056091362 seconds)
    (251/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.055189441 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.205697434 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069736751 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080368523 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071429353 seconds)
    (256/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056701448 seconds)
    (257/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.102530484 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077163326 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077382291 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.094265435 seconds)
    (261/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.07369664 seconds)
    (262/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057877483 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.102581402 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092810377 seconds)
    (265/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072811159 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.082030196 seconds)
    (267/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066382518 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126505027 seconds)
    (269/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055920522 seconds)
    (270/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075479666 seconds)
    (271/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.097466507 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056680492 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070206482 seconds)
    (274/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.098603795 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.15064569 seconds)
    (276/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.110363063 seconds)
    (277/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.057227468 seconds)
    (278/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076387095 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.055497754 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.095268234 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078695487 seconds)
    (282/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05621883 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.10361711 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055942929 seconds)
    (285/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.056069175 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.093231201 seconds)
    (287/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065664872 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071904278 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.169217742 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.057536059 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.103672937 seconds)
    (292/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.057592382 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071212613 seconds)
    (294/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.122559596 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.067263824 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.154900843 seconds)
    (297/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.059463497 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079624019 seconds)
    (299/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.085428401 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09763147 seconds)
    (301/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.073567154 seconds)
    (302/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.203414505 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094512762 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100231594 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076028344 seconds)
    (306/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082623076 seconds)
    (307/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.057133628 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.102264341 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.114260917 seconds)
  done (took 34.810414116 seconds)
done (took 35.678043601 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083093064 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09484025 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.104414115 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09426517 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.10687449 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080081841 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.102057945 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082379588 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.106665265 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084773766 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081641675 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.083024645 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080208107 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10358146 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079916986 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094794612 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107986112 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077203674 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.101974894 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069560445 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077961594 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093994841 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072096006 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058622755 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105220704 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077842403 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099653155 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079706157 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069859199 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.094301899 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073742391 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077213504 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.094018471 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08396152 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076121428 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.102346496 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079947816 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.10456194 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071928519 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070418572 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.102466646 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070472703 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076785056 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.101719807 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076016062 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.099520149 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078702059 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082551035 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118942479 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072494646 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.10313262 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080797088 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079047581 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.101449147 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07417278 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102929148 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075781106 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094262438 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.105328856 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072945845 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.104813768 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07839198 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075913239 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.105192283 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078501307 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103887509 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081749138 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076055107 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.104088768 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076709093 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070100737 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10231067 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073750784 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.094169021 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079791225 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080947655 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.093524938 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075911468 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077261857 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.099165677 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069889401 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071887166 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.096185962 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076489198 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072072589 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083213609 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074350253 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077068542 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.093259795 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079375028 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.100744271 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076819796 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071829604 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.106039574 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070191442 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077643143 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.096026751 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070414822 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072571663 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.098190923 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070196595 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072052882 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102883075 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072370689 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075963603 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106711226 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070584328 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.100738394 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069291715 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069566844 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.108626053 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080682055 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.094812315 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072891167 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070043429 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.102021579 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069655978 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.071531807 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094375324 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070424927 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076276611 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.094511343 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072376097 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077858386 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.108945427 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070238574 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073474108 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096291002 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070710037 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076157283 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094380591 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070133955 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.09577377 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06657869 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0730248 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.094359602 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078213127 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075360493 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.102596561 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07181999 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079003753 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.099011407 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076184962 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075380633 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.093020187 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063093148 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072212696 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096995543 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071964443 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070051094 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095682599 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070210153 seconds)
done (took 13.788458327 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070957601 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167352762 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.108923295 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.125059122 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.117731347 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07021192 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.081201081 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12782856 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072607329 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126839237 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093200571 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.115613228 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.106276246 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093952401 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071520238 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099587727 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072173217 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085903075 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.129608215 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091612992 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145645406 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.093695779 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.104544691 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.119565652 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.080209697 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.121827145 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07093805 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074305817 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.098945386 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086048238 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.116408495 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074087199 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071012004 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.117778465 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087999122 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.103401801 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070900474 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.101594939 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070585436 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070661834 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.12311629 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.092672169 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100635724 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076004968 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098824952 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074044949 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072126346 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.103940221 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.081461475 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075089728 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109882237 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.138786452 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073794583 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10602509 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069650292 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081899511 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10417955 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072777219 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.095437623 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073457305 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070251688 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.098289224 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085400956 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.124488702 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074561921 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105162134 seconds)
  done (took 7.214471397 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087405646 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097408574 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.113571354 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.089329118 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.094685311 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071405263 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.096138223 seconds)
  done (took 1.583233117 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071256224 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092515311 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118620368 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094800657 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114533626 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091813357 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105986429 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07162242 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088545707 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.097326745 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092432669 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136306399 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073205788 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.10361798 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095873695 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071083104 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120323527 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071299696 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09891596 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09472527 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07452911 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117566652 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073102216 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096969819 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085367529 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071405691 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145219501 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076380424 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09811645 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074551922 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09462001 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.122723987 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11042786 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083134115 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096717361 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086623994 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086038361 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094672545 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087746296 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101882164 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085996197 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072313581 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.098050236 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070517178 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076306314 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106745617 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072922923 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.097168332 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075185472 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091224703 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09732347 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085735152 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071742591 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100488926 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07343661 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102688574 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081665258 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072680727 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.116257373 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073387274 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113773949 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088743197 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.086053603 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112916156 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074252747 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.111030428 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086226248 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074299106 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098609534 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075559463 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112847047 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069823305 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074045612 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106963204 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073617268 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094918901 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.120193597 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073417053 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106907531 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072694359 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071930788 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096951819 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094971826 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100363807 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072098954 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076249047 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099962175 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070312991 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070579784 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.101104226 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071000748 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07407681 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.0999425 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072571509 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099458941 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088444537 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073207699 seconds)
  done (took 9.701964861 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073299654 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072712482 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099055499 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072493634 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073290779 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097590096 seconds)
  done (took 1.43785032 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095839608 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.099782155 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08660244 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.078131489 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.139002892 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086330142 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111661262 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080478539 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.115705762 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084745638 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.111260707 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087535066 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.118841768 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078429363 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.111314855 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077672628 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.111765794 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081921299 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.109581946 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079323233 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118964356 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.079145051 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079368314 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.113253578 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075548718 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.103775981 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082958933 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.110645481 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.085641035 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080162209 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.103977154 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076016454 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.102765276 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080044455 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.111863978 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077096051 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103368795 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076595635 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082380331 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.101542449 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087742823 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104442756 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.08416476 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.102466269 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.08052577 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.102803974 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077030682 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107498068 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086974429 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077211527 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.101751808 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077751057 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.100978747 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076498333 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.102043306 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081163727 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076804482 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.11280563 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079267503 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.103331992 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075650404 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.101719142 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080218183 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07536395 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.110819114 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076550199 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101930292 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078479303 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104478875 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078309094 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.101839861 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075713773 seconds)
  done (took 7.620621703 seconds)
done (took 28.48482199 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.670839192 seconds)
  done (took 1.613240468 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.714042945 seconds)
  done (took 1.657968588 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.674716088 seconds)
  done (took 18.619057679 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.479711643 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.554085083 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.789519171 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159472956 seconds)
  done (took 2.926824041 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.913937142 seconds)
  done (took 1.876591585 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.227495825 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.21295936 seconds)
  done (took 1.390169266 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.754700093 seconds)
  done (took 1.710425428 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.33027789 seconds)
  done (took 2.283286593 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.311687053 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.141984787 seconds)
  done (took 1.414510081 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.541943407 seconds)
  done (took 1.505067717 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.853310437 seconds)
  done (took 7.818781693 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217173752 seconds)
  done (took 1.188301506 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270780639 seconds)
  done (took 1.237893712 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.657002476 seconds)
  done (took 4.619907942 seconds)
done (took 50.809680222 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081291414 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085057762 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11056173 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081679906 seconds)
  done (took 1.316331288 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083725643 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078258715 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109277102 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078197316 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109623542 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.079141055 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080242562 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10956693 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077367118 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.105830539 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077979844 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077731616 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.106811136 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079693396 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.101638332 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.081137837 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.108313898 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078825376 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080841276 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104455374 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076666554 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.106513641 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.081647809 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077718796 seconds)
  done (took 3.120994 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081913133 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076454328 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.104012726 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076260109 seconds)
  done (took 1.309869174 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082490133 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098001 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.120899381 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082631172 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.125357595 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118926071 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074738829 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.075070612 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102474077 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081867082 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073037229 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.13173602 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.12044299 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082653426 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084470099 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.09670962 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.074141045 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.119851297 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082658594 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083676762 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101719893 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08231532 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072861304 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.12199525 seconds)
  done (took 3.26237713 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082576058 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107087351 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.111077497 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094803069 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.123993446 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070539751 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.107883021 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097174286 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.159363209 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070670806 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.102193283 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070646079 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077711009 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.096664518 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082690244 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.141599885 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118867067 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.099969436 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101720181 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071047779 seconds)
  done (took 2.961414717 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079497379 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075558096 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09663644 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073935386 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081168725 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.103909672 seconds)
  done (took 1.487937556 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073436114 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072142339 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098013818 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072213182 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076291116 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.098369952 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070516692 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071918145 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097949887 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072594343 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071375844 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.096745293 seconds)
  done (took 1.943960125 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.467329466 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074177603 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.099915295 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070987357 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076182624 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.098315662 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086165655 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073183063 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.123567666 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071231054 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09861852 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074195094 seconds)
  done (took 2.38723518 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218257673 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107608072 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244279907 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171962924 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140775147 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152957725 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135767504 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119399925 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20559153 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139898479 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189108297 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177967229 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13493468 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172221274 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121071416 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.105529294 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179760862 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227527024 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136905671 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186728068 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18171031 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146968481 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162090448 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134310778 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09480165 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150587475 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.104315982 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086752114 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217466694 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160157107 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169675513 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14691642 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12829879 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195882859 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23192411 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177323661 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169595769 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117984344 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.132773559 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.149213277 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246990664 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094503294 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2162785 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114201606 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115041159 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175169507 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150127964 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.156251297 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131438781 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095456219 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204469113 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195447658 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173629673 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120857645 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14274155 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116099064 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148313724 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134734973 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231922651 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181524684 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161885907 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076232183 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129407724 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173356063 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16404944 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148672483 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161708981 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128524465 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17233756 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169757236 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146289683 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171828319 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.165459135 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120790661 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151237935 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156240766 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151972307 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209253031 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186989777 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078144175 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149123179 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103717477 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112853186 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.177289744 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08098767 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195930722 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132153713 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121902107 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117718441 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142176948 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143650219 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17888993 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171980037 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12935308 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070852701 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137518972 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.138059867 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169578031 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12187728 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113291748 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143381174 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.112408878 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158534191 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079501151 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157289572 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104497148 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129545118 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191525939 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082364545 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140179075 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106623125 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131591452 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157190866 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180822556 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123123574 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088331962 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215238463 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157464088 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104290334 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16048435 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180625726 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.129299946 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131396033 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179763579 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2259179 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094411427 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184649034 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136132639 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117575039 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.094894074 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160072119 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137872795 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.143756594 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08778002 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162221297 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219438566 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.081324997 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120830435 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169102822 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088186192 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114551434 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142050066 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102013629 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.12159765 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128990906 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105543389 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161187274 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160107116 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13439157 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148086429 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133356454 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232399249 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094792998 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131943699 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102253802 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.102576068 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173890256 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178740576 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114066847 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183669596 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.152451845 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137610506 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152802711 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089745814 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159248594 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084815205 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.102852934 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173939066 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148265666 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143730408 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.177402566 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108792597 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18975052 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161867955 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153502196 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155640374 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.118769052 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141073199 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.121437721 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112695478 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146360973 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.106254845 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096615803 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.115499026 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139040739 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097723248 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115824046 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178474788 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149603131 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130842096 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112296465 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131336595 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162156058 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.110262296 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157736925 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.158683803 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10029631 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177083069 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19969027 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167566578 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096728551 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215725948 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075988697 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108001715 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.096043656 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151999002 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115517232 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090214764 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149753767 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161368342 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16365805 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156157996 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144851767 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156248211 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170114817 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077066699 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.150927764 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166572191 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155776398 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.142219646 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120806749 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.132487041 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129446883 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136926071 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237366634 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147496201 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157414757 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189498872 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131129736 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086104241 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133368284 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166062118 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134947041 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157643774 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128844758 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09494868 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141826652 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.113899759 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112682554 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191920036 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116066362 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198065349 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.104964644 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191971547 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082857617 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146796481 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139477284 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117895981 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.09684035 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155357574 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184035614 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129542284 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151064032 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173967347 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085375485 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.158759905 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219667964 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17442492 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091606037 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139324238 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141610493 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145798155 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15382424 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129837066 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139322726 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167990733 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138824599 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.119048843 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093891922 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131697883 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103755767 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.120092337 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129189505 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1556927 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093203282 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196557524 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113888865 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138684323 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152074678 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.131246952 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.098378886 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132473111 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19523865 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155401247 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219734018 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10436457 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.159622161 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183406508 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108298458 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085748858 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.114589678 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158432858 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090591444 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169491966 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.129527896 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139472135 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160853318 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171472238 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093571436 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.102455658 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109209414 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153495862 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144704254 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133284481 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139276337 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186172252 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128964045 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086470533 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152103572 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137916284 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101586685 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175225045 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.095170681 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10216161 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109711209 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087908377 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146379592 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185865837 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.117214998 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.139478187 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147495671 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149880049 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146482608 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130060258 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102501926 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146205809 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17996835 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191871463 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086729031 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138286435 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156455248 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1758119 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14160312 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094259699 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210380773 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173196599 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178937272 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.095283914 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148148487 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14740501 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138223097 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164316561 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115636553 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184960689 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087186886 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205998748 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133310573 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096419038 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155227884 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.129389231 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140896097 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16779868 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15455863 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090069818 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11460645 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148441752 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159034749 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109464842 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.109591635 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160777135 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078836543 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198800391 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210960514 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114874058 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10730579 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129700646 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11649011 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109967673 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1394471 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12115533 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.119689473 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18229181 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.115977202 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170874625 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209466169 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149633947 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153975277 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097815131 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672613157 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.111518244 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174332269 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107008584 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213578982 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103418325 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151352721 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139414594 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14874312 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174285242 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139988497 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.213077431 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17268091 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157537435 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114054499 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110946397 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141703957 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.124319638 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133721793 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119560612 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13975466 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133892546 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.157091445 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149553169 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086673873 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12182791 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178198078 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135615105 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165863319 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159275994 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091325344 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152619728 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190403671 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088083329 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15989644 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214297653 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09503901 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132426621 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086282623 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135797301 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237334494 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.079606814 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1767458 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154677311 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138689831 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146922401 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.126651482 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169240987 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13880316 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15765603 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126099774 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111038393 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136232383 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118097266 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.084395475 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134758294 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146867528 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101268605 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138285207 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.14425496 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172972338 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077873181 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125901487 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108476167 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168380999 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222189497 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094536619 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117338864 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143547269 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104313972 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.154463075 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156897449 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.116819938 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088131341 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.117639668 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.118002731 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.12302861 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133212731 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109052215 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145623767 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183542417 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.119463224 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.259932329 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093288358 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134613274 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075549804 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.113565695 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10201398 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128037803 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138947613 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103821921 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240013835 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.126942061 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086730753 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129809905 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.080240345 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118134292 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118898706 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145563313 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159583417 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127857939 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067754826 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140537555 seconds)
  done (took 69.427234659 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152289634 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130618408 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.139980145 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203949871 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170503381 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268796762 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20622215 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252581912 seconds)
  done (took 2.571788295 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075302604 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.126258548 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109278596 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116490964 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.07264561 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.099912218 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.311964571 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113039333 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072275283 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09468121 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.154573457 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.076249643 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.497778585 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074833009 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.103138529 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.092908138 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072966258 seconds)
  done (took 3.311552613 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.441003249 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.699910641 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.482452802 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079106354 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.174100233 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11624971 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.836441593 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.177063893 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.099119773 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.466016891 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.738572549 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.145144542 seconds)
  done (took 18.50818263 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081109183 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075264247 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.117232663 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089166491 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077336616 seconds)
  done (took 1.49681075 seconds)
done (took 114.057778404 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08652536 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.377983955 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059753085 seconds)
  done (took 1.522758129 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08937271 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090200226 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.119490534 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088608276 seconds)
  done (took 1.449540668 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079180532 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08048634 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.118655779 seconds)
  done (took 1.337528675 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.306517263 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.142357489 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.126270468 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087698327 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083597362 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.112158886 seconds)
  done (took 1.339625458 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07859091 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.081135487 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106979537 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082704302 seconds)
  done (took 1.401435251 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081146769 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.061159549 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.061931876 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.089105776 seconds)
  done (took 1.351910537 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095708784 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084498649 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.113768775 seconds)
  done (took 1.346841868 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110685073 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11895251 seconds)
  done (took 1.286749521 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087088104 seconds)
  done (took 1.139534718 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099662383 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.151228582 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.175337575 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.144744419 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.181430285 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.146764362 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.094295091 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.12334205 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.111898178 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.096260241 seconds)
  done (took 2.384097579 seconds)
done (took 16.269300454 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084197871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.403453082 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.367283127 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126676987 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67600682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361317249 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.050805943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098447781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144204853 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073984165 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11869013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654664361 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.003070279 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330325362 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.989245712 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329983539 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.672713514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102219412 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073775624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073404206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.034326382 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073338747 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101791344 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074936946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655597366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.406192341 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07384232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.357635195 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074308975 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075498962 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.389410823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074378311 seconds)
  done (took 16.174110749 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076266173 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152922157 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080487955 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089109574 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.106310366 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07515164 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105999056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075851645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15568643 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074119388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090015551 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.103018171 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077746024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.103186262 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093082013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073739443 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.103633932 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074760296 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102381547 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074995943 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092368836 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10245104 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074700945 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073746318 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102386253 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086098703 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102545855 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074995615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073769405 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104754826 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077274938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074530368 seconds)
  done (took 3.993265013 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123171578 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.162291959 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081034899 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138518066 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122825764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.104578707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.17981889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100451812 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.160967254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0765696 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119231384 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074276997 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135898013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077420546 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093898547 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.103032981 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07534858 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102126047 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074350379 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074171064 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.121640449 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073831114 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102294163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07551321 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073875712 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.116274638 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075208884 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101613422 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074503883 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075278188 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.105675717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07564135 seconds)
  done (took 4.316764821 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077925651 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080436714 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118069634 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.090236693 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07783921 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.106527144 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078603967 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.104143306 seconds)
  done (took 1.800724019 seconds)
done (took 27.339263252 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085105356 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076336938 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108121487 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087251028 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078540845 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.112626856 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073127058 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.109196863 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081177503 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078386097 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.111085998 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073653406 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076770961 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.102057848 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080872735 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073687137 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.11387537 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077360906 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.11351459 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085262844 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076138221 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.110774992 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079673066 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.112542874 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085187019 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083726948 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.117833937 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079147892 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.103421217 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.077442768 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081167344 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.122470029 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07773857 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.112799879 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074356517 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073878306 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.102059008 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074052992 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084164355 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.109714545 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076764967 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109905519 seconds)
  done (took 4.878842139 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093294403 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.099500732 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.122578538 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071734985 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.07573893 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.096397288 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094402658 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.099096694 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.068425465 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092892779 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.093644324 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.064494728 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065627802 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.059394471 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.09263333 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06263804 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065883346 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061248826 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.092161373 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064426006 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.065684244 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.088148663 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.066203293 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064964125 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061419784 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.096122499 seconds)
  done (took 3.148077248 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080957112 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08815152 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122918981 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131386018 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.141809897 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081114093 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.113401646 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092145102 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.120259292 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073815138 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076321403 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.131712782 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092376695 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.109384992 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.077345603 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088614028 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.117894744 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.076583553 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079257364 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124542915 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089210645 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.11348274 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095252071 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085607655 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.10378012 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075770728 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.108687427 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087859747 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.083087097 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111884801 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.079265027 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.105777051 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075542616 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08465144 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.109813639 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075655315 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.122996021 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083967674 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08327371 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104174871 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077258115 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075894245 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124231229 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.119599583 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.106070459 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.08068859 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110170363 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.086989366 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07492712 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121757808 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082946266 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.074287321 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.105880412 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.074589746 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.104145846 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08960924 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07704263 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.106239082 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081693946 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075755232 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.116136876 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078760351 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118852828 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.077918616 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08077205 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.105318703 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074591005 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072776483 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.125823889 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082336873 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.145067428 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.079530839 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.077474319 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.112601985 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080465514 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109778785 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073658127 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089013003 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114062325 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.0802302 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.113043883 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077706374 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076153087 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.121739842 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076399122 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075340427 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104027946 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.08035548 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.106049673 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075193453 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087275748 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.103739489 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.077059473 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086308632 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.103385106 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075426841 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109669534 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078826277 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07313332 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.116833742 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.078838319 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.104002327 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.084286097 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073745732 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.10696106 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084840118 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078289373 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.103155293 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.078076564 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.109329901 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.075976358 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076762692 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.107009784 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.076435112 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082726104 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110192188 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.078814591 seconds)
  done (took 12.046657389 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.207825393 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.19838406 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076477401 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.190892381 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084958682 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115912409 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.192346191 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.105571139 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.104816131 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.075168244 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074764078 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.144076966 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107033795 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.147820793 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.113172019 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074099285 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092155537 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.146270156 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.195554528 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.187604897 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093829812 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.122645147 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076529499 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074872265 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106485772 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.084077298 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.120367051 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.086206426 seconds)
  done (took 4.487604036 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087838794 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.13685304 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080617207 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095269739 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.128751365 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073719937 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.109826192 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076068953 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086847826 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.116471845 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07457786 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.110290406 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.08120325 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.113957895 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.075354433 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082894264 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.113738653 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075842906 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.107864726 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078394165 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080037341 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.118178796 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.078273086 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.103562732 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081498215 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072646304 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101573829 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.092435648 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.104289301 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096091565 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.102744436 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.080982851 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083563495 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.10511341 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.074461575 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076503751 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.107024627 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.077070768 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.0752774 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103248339 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.073394373 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063560042 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.103462762 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08791172 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.11154776 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.066150666 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080096398 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.110085923 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079418577 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071892288 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.106499939 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.077410831 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107168881 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081651459 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078450759 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.110319869 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.078292253 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.071495768 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.111233945 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076352745 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070428669 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.105633411 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079793341 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073120982 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.113177801 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07899904 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.102934664 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.077100437 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078345284 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.111245712 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07671468 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076241227 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.102669248 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07689279 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078904333 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.109148571 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.077199799 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072521029 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.103699348 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074365581 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061616637 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.104447896 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060446573 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.077678232 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.102621787 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.073167452 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076779224 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109949761 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.088069198 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.105471549 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.080538733 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.105523005 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073589884 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.077531471 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.099760711 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.077542615 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088495612 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.121761439 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073902866 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.103140863 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087967394 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.079439123 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.103884875 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062362699 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081379334 seconds)
  done (took 10.475431826 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096839381 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.099690392 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.106232666 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089103748 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.132526323 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097575201 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.112309075 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081508318 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075520812 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.12261963 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074968883 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.083472287 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.108395236 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082849788 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.128021137 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082404294 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075607344 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114903383 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.082360164 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.140421906 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088344365 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.091061553 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.115976186 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.075074574 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079047503 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.116603016 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.10012043 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.115843142 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.083086168 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.118622563 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.085403809 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099291342 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.120980399 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.079475208 seconds)
  done (took 4.454348206 seconds)
done (took 40.54518251 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.166065071 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.370190383 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.137942723 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.104197393 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.161150615 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.139975714 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.150351923 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.138745775 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.678828779 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.138297162 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.398879912 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.903976692 seconds)
done (took 59.570643079 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.242434034 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.284759344 seconds)
    (2/2) benchmarking "String"...
    done (took 1.412457408 seconds)
  done (took 3.786769257 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.507271807 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.190617488 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.42702058 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.137543169 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.137417522 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.576808746 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.8330458 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.557679119 seconds)
  done (took 27.940750674 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.138795426 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.5522195 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.070943194 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.076450892 seconds)
  done (took 18.922091066 seconds)
done (took 60.481643003 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.171316246 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.211885715 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.174583638 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.122760244 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.255645007 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.168143898 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.328017723 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.253905725 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.140583388 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.129022176 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.160651977 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.138747758 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.170666903 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.358237726 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.144489618 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.139518071 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.15507273 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.803505022 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.563450252 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.152180701 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.153751715 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.151842466 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.165204888 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.140296635 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.142640948 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.139275151 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.153998993 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.154020693 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.89912966 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.144065536 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.160488814 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.476058453 seconds)
  done (took 188.705804419 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.138707779 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.125425761 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.235651619 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.184471263 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.589187045 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.340868008 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.280189455 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.665682625 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.162219181 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.170198149 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.364639222 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.145419941 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.447776197 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.170741334 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.148536607 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.245600674 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.444596476 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.453302715 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.163579216 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.416439143 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.163210254 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.397142677 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.302254858 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.319522231 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.187942315 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.242967467 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.152042403 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.163356453 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.334646069 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.353287109 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.151447882 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.186588818 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.809394396 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.99868169 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.142539041 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.152965988 seconds)
  done (took 148.036995605 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.429429237 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.140168976 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.140813254 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.141259863 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.13985071 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.175279826 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.140808043 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.75874422 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.758158839 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.69700915 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.54536919 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207469172 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490985762 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.146320753 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238560831 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.153540454 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.141600035 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.156381535 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.167896644 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.148092864 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.141581918 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.755308052 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.159108571 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.152297933 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.152074195 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.141863945 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.175779675 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.539675875 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.140446981 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.141407327 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.17548598 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.470517987 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.192789805 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.141764627 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.54456449 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.304523617 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254981283 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.143841864 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.178007595 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.141875338 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.418388119 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.14337699 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.143064944 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.145415933 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.830014183 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.14901717 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.761159536 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.149155897 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.155524331 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.148801361 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.142833108 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.885983022 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.836209393 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.148973497 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.143179375 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.145133044 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.143169365 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.14313707 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.177209924 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.845321666 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.250716374 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.143987527 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.146683038 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.177810423 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.143025565 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.143494954 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.143424921 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.546425127 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.147424083 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.940838723 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.203510366 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.360905999 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.743121305 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.143872872 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240416616 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266723921 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.143788328 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.142907227 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.144998539 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.143703778 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.254482387 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.144336149 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.60564414 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.150355155 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.145894152 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206376345 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.24239388 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.143914264 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.518908095 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.144165553 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.143897302 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.920418846 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241455743 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.144786756 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.145371433 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.144578748 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.609561672 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.764880073 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.432915294 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.151227992 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.846282555 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.150842545 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.618140224 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.740997008 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.844161022 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.15175797 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256466343 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.149529676 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.147135918 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.14504028 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.173893102 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.145995814 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.204541713 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.146310602 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.54602922 seconds)
  done (took 342.123652697 seconds)
done (took 681.37675356 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.844102871 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.78714451 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.919132184 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.804068397 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.779100463 seconds)
  done (took 10.222561893 seconds)
done (took 11.310917586 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.342493219 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.34169413 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.210291248 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.344352973 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.177028485 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.36234738 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.322633649 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.166059301 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.251894682 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.229008439 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.252064586 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.199892998 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.17517998 seconds)
  done (took 17.465076512 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.483537082 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.465845057 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.210368864 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.472137611 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.186212934 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.465425713 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.350582922 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.364948281 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.355064335 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.163543373 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.162211007 seconds)
  done (took 15.76959544 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.472385833 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.476409344 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.214704941 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.47800729 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.188835968 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.477434593 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.354376633 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.379161529 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.359411789 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.162617588 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.161722042 seconds)
  done (took 15.815861822 seconds)
done (took 50.138903775 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.156512537 seconds)
  done (took 2.246325266 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.193769271 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.361897093 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.172898994 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.163504598 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.158253184 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.161153339 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.16243845 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.158432979 seconds)
  done (took 10.624563299 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.157247686 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.157648481 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.154646618 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.154269155 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.156273379 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.155246247 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.154444458 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.155774175 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.157649506 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.15800063 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.158084109 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.155096999 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.158002903 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.15634194 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.158528431 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.156289244 seconds)
  done (took 19.596170277 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.157496112 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.154986234 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.15547021 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.156564731 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.155536842 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.156273694 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.156675722 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.156218118 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.155720329 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.157111153 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.156764857 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.155493092 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.156275711 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.156669031 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.156433223 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.157018157 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.155447699 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.156273796 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.160781618 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.155692 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.157526631 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.157026784 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.155872255 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.157295291 seconds)
  done (took 28.851432125 seconds)
done (took 62.407997203 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.391247445 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.92708922 seconds)
  done (took 9.411195663 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.158765638 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.158264671 seconds)
  done (took 3.411883949 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.159534153 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.15982777 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.159204548 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.159753751 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.158270105 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.15857425 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.159950645 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.159926698 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.15859814 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.159577165 seconds)
  done (took 12.686493087 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.159675767 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.159558385 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.157830365 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.159788228 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.158932942 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.15793805 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.159348207 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.159126822 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.159797119 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.157403941 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.159491188 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.157013966 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.160071856 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.158494028 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.159684329 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.157900835 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.158006133 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.158039456 seconds)
  done (took 21.953406893 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.161390568 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.159578591 seconds)
  done (took 3.415425724 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.158197427 seconds)
    (2/7) benchmarking "second"...
    done (took 1.15725135 seconds)
    (3/7) benchmarking "month"...
    done (took 1.158116423 seconds)
    (4/7) benchmarking "year"...
    done (took 1.157305824 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.157888031 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.158258417 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.157609289 seconds)
  done (took 9.200647055 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.161593894 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.34701995 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.434291513 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.798576963 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.161947531 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.165768511 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.055455031 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.164101446 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.166518514 seconds)
  done (took 13.551372915 seconds)
done (took 74.721893017 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.187954971 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.155624929 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.065352563 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.16644943 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.170530258 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.454056098 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.185582221 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.28314965 seconds)
done (took 36.762477835 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.161623804 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.918403116 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.935919124 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.168079678 seconds)
  done (took 11.118596664 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.143477985 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.152237892 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.143922533 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.240781798 seconds)
  done (took 17.778102956 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.270637088 seconds)
    (2/2) benchmarking "read"...
    done (took 1.49367391 seconds)
  done (took 4.860673195 seconds)
done (took 41.013819118 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.163008194 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.163431475 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.160719876 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.163871788 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.159080613 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.160053485 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.164308754 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.161569307 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.163046574 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.16462796 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.163011109 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.161364784 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161317919 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.16090144 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.163956598 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.161182886 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160574908 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.161286576 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.162735888 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.162126577 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.164103782 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.163617272 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.160869651 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.161256377 seconds)
  done (took 28.988660419 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.163600936 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.16148566 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.16381426 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.163611677 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.161953622 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.163693882 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.163141918 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.160554143 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.164207366 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.163912836 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.161383175 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.161034423 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.163694554 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.161870535 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.164952807 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.162323378 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.165659268 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161937216 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.164025019 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.161860938 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.164077193 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.161750454 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.161549876 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.163865213 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.163078466 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.161960857 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.164905705 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.163108302 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.165633642 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.162920272 seconds)
  done (took 35.990256243 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.170126995 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.172704668 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.166613922 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.165159811 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.164807413 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.165504477 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.165252618 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.165259271 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.164999076 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.164905098 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.165628992 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.16525698 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.165783095 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.165162257 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.166228661 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.166040627 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.166331785 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.165523755 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.165101118 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.165805726 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.166012197 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.166767831 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.165614873 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.165730276 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.167571357 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.166481468 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.166050785 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.165838282 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.166263809 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.16581704 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.166609485 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.166324201 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.165765164 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.167435825 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.166653074 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.166780505 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.171901883 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.174117333 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.167667163 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.166471403 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.166895676 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.166620162 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.167449288 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.16731678 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.166686952 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.166079645 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.166800241 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.166986329 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.166841963 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.16815133 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.167579167 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.16753323 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.168010435 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.167938783 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.16722751 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.166688946 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.167067201 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.166724432 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.168168663 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.167277848 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.16786077 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.167810407 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.167931424 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.167023031 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.168912854 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.167680769 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.167991948 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.167396596 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.167984739 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.168533168 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.168141492 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.168407315 seconds)
  done (took 85.12591194 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.168036485 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.165868129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.16537114 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.166031328 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.166424991 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.168409146 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.16611225 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.167598113 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165498131 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.169766381 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168675241 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.16633732 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165789671 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.169252251 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.168627011 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.166529569 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.169255012 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.166482869 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.16892102 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.169930364 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.167825272 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.166434669 seconds)
  done (took 26.786064852 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.170079622 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.168070292 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.166729932 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.168465884 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.16720003 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.16967458 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.169603629 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.169057963 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.176689121 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.168101215 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166984356 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.169210095 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.167698023 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166936231 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.167914329 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.167295324 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170821285 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.168633737 seconds)
  done (took 22.14272212 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.167980534 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.167520705 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.170776299 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.167803617 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.167918718 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.170051651 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.167382617 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.171327272 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.170369535 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.168724939 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.170774857 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170602013 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.170825255 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169479782 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171103027 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.168942883 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.171249674 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.169106849 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171168419 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.168903468 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.169254335 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.171346277 seconds)
  done (took 26.837013118 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.171867704 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.172311224 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.169448776 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.170449566 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.16941961 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.171376869 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.172326348 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.16928067 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.171781204 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.1715587 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.1692551 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.173746702 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.169456377 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.169687986 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.168976973 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.169046293 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.172014006 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.171363569 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.172569074 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.169357726 seconds)
  done (took 24.521449256 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.172991328 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173492519 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.173358045 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173478604 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173495238 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.173326239 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.173430965 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.173668424 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.173526372 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.17406189 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.173640743 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.173827288 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173219749 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.173333066 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.172838443 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173040593 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.174052986 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.175072336 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.174358773 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173965201 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.174905033 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.174399353 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.173836506 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.174482859 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.1742728 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.174692955 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.174236556 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.173613577 seconds)
  done (took 33.97442392 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.17449742 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.173490685 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.171514875 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.172077216 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.171820977 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.171580176 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.171925558 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.172795423 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.174531389 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.173183418 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.17501364 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.174509997 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.174136497 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.174571467 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.175259316 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.174739329 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173983334 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.172926264 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.172100701 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.173063292 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.175453239 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.175221173 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.175298448 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.172997542 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.173609791 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.175895308 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.173935004 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.173572757 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.175822721 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.172924214 seconds)
  done (took 36.321597007 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.194411864 seconds)
    (2/2) benchmarking "in"...
    done (took 1.194067826 seconds)
  done (took 3.498523794 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.173550486 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.175591176 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.175119765 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.172753354 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.173411246 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.175610877 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.175878836 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.173598061 seconds)
  done (took 10.505628026 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.175246671 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.17636379 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.177092196 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.17601635 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.1766464 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.176539952 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.183040438 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.19445927 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.177588018 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.178247709 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.182687882 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.184335076 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.178923063 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.176194607 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.176125904 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.17728992 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.177390323 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.176831587 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.177664546 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.177636095 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.177453577 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.179086842 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179078654 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.174238142 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.178053167 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.187482472 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.180922325 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.177187296 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.176326804 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.181271051 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.177531851 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.175657453 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.1790121 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.177210672 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.17794363 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.178316305 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.185939362 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.195790667 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.183914063 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.178658024 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.178268849 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.17500341 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.178874662 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.178826099 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.180335854 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.178612376 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.178852997 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.175881652 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.177577032 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.181582939 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.185296304 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.177844577 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.17674283 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.182910467 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.179926256 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.185337974 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.197400253 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.182384108 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.189035806 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.190297083 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.191819797 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.188104222 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.180273706 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.180356254 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.190037645 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.205109521 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.186116567 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.195621009 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.178410549 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.180322104 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.186372112 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.191958981 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.190265484 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.179616179 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.17979535 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.180228034 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179377692 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.18051571 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.187542464 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.200881602 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.18069931 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.180274362 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.190406221 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.204651418 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.179598708 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.180852636 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.180766876 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.18089546 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.181534434 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.191049335 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.199358174 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.179792418 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.179254674 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.179324367 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.181878488 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.181510358 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.179699784 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180146465 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.179245164 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.181126055 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182038407 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.184983044 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.190842365 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.181860235 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.182315718 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.186984882 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.181854217 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.180642049 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.188140595 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.182846408 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.182439853 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.182106935 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.187005933 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.179941608 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.185080073 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.190979405 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.182415634 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.183513952 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.181954123 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.182838641 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.192525834 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.210635699 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.183234565 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.182812323 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.187347604 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.195990591 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182986111 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.185046886 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.183126144 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.180267259 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.180495909 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.184218509 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.183526021 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.183191312 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.183163814 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.183549245 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.180963529 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.184198813 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.183762878 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.184208955 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.184338574 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.182815177 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.185117886 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.185832672 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.18492957 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.185155506 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.189589934 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.183412045 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.184866351 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.185651068 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.181164205 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.18561655 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.185074974 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.184556188 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.182610437 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.18483364 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.183140829 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.185181481 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.185267901 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.184680957 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.185524937 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.1849931 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.188866613 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.185566154 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.18805964 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.183370733 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.182622173 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.186041698 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.184960569 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.184359945 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.185187866 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.183754064 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.188195836 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.193644246 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.186184644 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.185237843 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.18760203 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185774663 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.185565263 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.1852734 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.188462915 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.194666906 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.186413701 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.190569981 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.186580984 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.186523491 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.186862257 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.185569567 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.185303032 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.186303987 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.189999027 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.195443674 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.197692256 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.195748393 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.188101769 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.190772339 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.187527452 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.191515581 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.18990097 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.186060813 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.186612059 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.187201544 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.185475397 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.187101004 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.186951711 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.186129065 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.184678853 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.187206311 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.187813092 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.186429226 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187447885 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.186519829 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.187749867 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.184967123 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.187600129 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.187492588 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.186267177 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.185627964 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.185579748 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.186483054 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.188080435 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.188013094 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.194213476 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.18663712 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.188162891 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.189639397 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.188445667 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.186617205 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.188825478 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.189082193 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.188549475 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.193635082 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.205890443 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.188259097 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.194373646 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.206024777 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.187287867 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.190638776 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.188948522 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.187686463 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.191787149 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.197945529 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.189921764 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.188837829 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.18997972 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.187956263 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.190415515 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.194827665 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.186551648 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.188364632 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.189396871 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.190473374 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.187655163 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.189195587 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.189997129 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.189020011 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.190669118 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.190784325 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.190765315 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.190541161 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.190455038 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.190093733 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.190076501 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.193084304 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.198279802 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.195058742 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.188776156 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.191175321 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.190822411 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.195247194 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.189710369 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.190258492 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.189493297 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.203491315 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.199190474 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.196699424 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.191139877 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.191057184 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.195009345 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.192185671 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.194493278 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.190060682 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.190218257 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.189638147 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.189686878 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.188866662 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.191231488 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.193432961 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.191214356 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.19310219 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.196372117 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.192046869 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.190578367 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.192102516 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.191505466 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.191457176 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.190417984 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.192570207 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.193166707 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.193748552 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.190657734 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.191294347 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.198175204 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.209607421 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.193263682 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.191805519 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.190977599 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.189911937 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.193791373 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.192577611 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.194901052 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.202390127 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.195723916 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.201470627 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.194801675 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.201203712 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.193297122 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.195802763 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.201668599 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.190330801 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.191161199 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.192871019 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.193354691 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.199104148 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.212351478 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.193591807 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.197727479 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.193526766 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.194324087 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.193862332 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.194280361 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.195341989 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.193335291 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.202216858 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.212710254 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.197109572 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.194380851 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.191870471 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.194324517 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.194673583 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.191911291 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.196242997 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.193839366 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.194676698 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.193582374 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.193541703 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.194326083 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.194887149 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.194532157 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.191613071 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.193767909 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.199944366 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.214200376 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.199212887 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.195671252 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.201945888 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.195165908 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.200256078 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.213895351 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.194958199 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.195044122 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.195050059 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.195221053 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.194508188 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.195646257 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.195064485 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.196121241 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.200452949 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.195783693 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.19820658 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.196067914 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.195999976 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.194237958 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.206227355 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.221871065 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.195966727 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.200458252 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.194207382 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.197416784 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.20093572 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.195160865 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.19434532 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.199001915 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.206794261 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.205013263 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.195747946 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.196247289 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.195513523 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.196978174 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.197351569 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.198002194 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.196190996 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.197707363 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.197214068 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.197409402 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.200051512 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.197196829 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.198272148 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.197569079 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.19857781 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.205868519 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.198533286 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.198009452 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.197606495 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.197827205 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.197173872 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.197885269 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.1970702 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.197152973 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.198933261 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.199227645 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.204252799 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.205017193 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.199110444 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.196631597 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.198031755 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.197442276 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.198378143 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.19798099 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.198646345 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.198718852 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.198760688 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.19845103 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.198286317 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.196652317 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.19836685 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.198711733 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.198655585 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20087685 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.206096876 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.197767362 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.196500394 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.198339324 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199495732 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.196464475 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.198664211 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.205681697 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.20251693 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.210337125 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.208265604 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.202547304 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.198918399 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.201579453 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.207830399 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.197854276 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.198993111 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.200159692 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.200422649 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.200346081 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.20253097 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.200223194 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.204783411 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.199642922 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.198733925 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.206817643 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.218895613 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.200187362 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.200273019 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.203818089 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.199947589 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.199200092 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.200590096 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.198898756 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.206625968 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.219445664 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.201485312 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.201567721 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.198853984 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.201180863 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.205424666 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.200667072 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.201207601 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.197426693 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.201204287 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.200149885 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.201761393 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.198261921 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.200667668 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.200326059 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.204602144 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.207453263 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.198624235 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.202944746 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.201306139 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.20255448 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.20362156 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.201425536 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.199534851 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.199326193 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.201185065 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.201976821 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.201191319 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.20349399 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.199734077 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.201474483 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.202999137 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.202483794 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.205989393 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.212750489 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.211580122 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.199390445 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.200873727 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.20249481 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.204464053 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.201841248 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.201897442 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.201959938 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.203322599 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.203067567 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.202616088 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.202779147 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.205485465 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.21935925 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.220952765 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.201104302 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.202765041 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.205053246 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.203597629 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.199931515 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.204303623 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.204194777 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.206728198 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.2120595 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.203007197 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.209454617 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221310033 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.20501179 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.208620328 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.207054724 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.210640636 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.206442232 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.20364775 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.204441712 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.208882593 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.219836236 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.204643742 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.214292215 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23525138 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.223008758 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.205416374 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.204465008 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.20242713 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.204447405 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.205847091 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.204986543 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.204364411 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.204594832 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.20445091 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.205868427 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.210334422 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.205909688 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.204925909 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.205862558 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.20394255 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.205354729 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.203182623 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.20513544 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.205523221 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.204976489 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.206316694 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.20454629 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.20449966 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.218524784 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.216617149 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.206589974 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.207086431 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.202910845 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.209451736 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.208593007 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.218110356 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.215283231 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.205498682 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.206132494 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.206614116 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.206207271 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.203608386 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.205764977 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.20535517 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.205334902 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.204649556 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.219526576 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.216308772 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.210229533 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.206976648 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.206216762 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.207657036 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.207259579 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.207217337 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.206994693 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.206415337 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.20695456 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.210657005 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.207074763 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.20754939 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.209628615 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.216606055 seconds)
  done (took 712.770261769 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.204598114 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204757258 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.203292106 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.204092604 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204506503 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204613934 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204704565 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.204753991 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.20534025 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.205547567 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.20550662 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204823553 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204216036 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.206043441 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205385565 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.205473788 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206290806 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.206114897 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.205745119 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206666 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.205381453 seconds)
  done (took 26.447940077 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.207948636 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.205595395 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.205795366 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.208287491 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206360666 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.208183667 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.206525014 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208669812 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.208071658 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206720535 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.208736912 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209707976 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.206672053 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.20671011 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207001935 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208775167 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.209011195 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206852779 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.209297331 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.205995167 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20935663 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207723211 seconds)
  done (took 27.709709692 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.210355971 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.20912505 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.208275104 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.207663877 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.210449798 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.207975523 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.210990904 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.210255784 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.210281429 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.209346285 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.208204404 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.210926963 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.215794616 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.216351859 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.212124075 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.211225671 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.354126199 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.210104451 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.210802388 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.211205815 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.20816665 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.214739648 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.207808834 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.208148553 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.208732936 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.210018672 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.210926938 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.21142181 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.211253688 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.211339846 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.214827801 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.210732742 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.210915192 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.21171421 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.208960818 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.211099991 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.215741633 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.211913556 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.209243667 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.211298132 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.222076236 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.236175626 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.212083037 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.215933637 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.212998302 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.209962972 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.214736162 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.220399783 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.208057922 seconds)
  done (took 60.670309615 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.211897296 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.212470502 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.20952375 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.211793977 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.212042662 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.212677092 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.212265865 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.212789742 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.209212886 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.210106276 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.212706901 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.211115616 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.210606008 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.21177984 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.213036593 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.210705572 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.210451044 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.210886559 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.209924905 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.210748026 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.210355474 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.212676379 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.21363815 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.212073983 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.212996798 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.211059379 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.209941985 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.213195454 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.210704439 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.210435015 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.213823144 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.211670038 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.214495379 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.211559581 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.211777949 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.213896285 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.213512847 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.211779092 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.213987485 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.211560255 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.213472745 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.212739691 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.214089269 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.213773636 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.211424162 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.211901017 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.211566738 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.212589049 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.212079822 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.213502378 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.213746076 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.213524542 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.214597556 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.21202864 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.214005878 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.214586071 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.210885726 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.212983064 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.215644701 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.212007725 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.213162441 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.215371645 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.212999561 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.214521726 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.215447947 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.21157335 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.213862953 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.215961632 seconds)
  done (took 83.592740893 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213405591 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.214655521 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215643207 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215433337 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215302257 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.215507861 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.215860756 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.215144635 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.21617383 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.215225324 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215640325 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215402247 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.216189675 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.215748385 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.215397542 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216245148 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215508988 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215472206 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.215865383 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215794439 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.216237399 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.21546892 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.215850337 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.215990099 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.216142112 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.21677988 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.215233841 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.21565887 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21637746 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.216329819 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.216711474 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.21742234 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.215924157 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216929254 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.218221867 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.216330454 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.216751295 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21745482 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.217159321 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.216415139 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.217279002 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216829681 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217149784 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.216436385 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216656184 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.218027201 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.218062757 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.218188522 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.217261234 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.216983309 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.217764908 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.218526431 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.217228952 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.21790024 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.218237441 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.218426153 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21896805 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217223603 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217858049 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.218107694 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.218401443 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.219305185 seconds)
  done (took 76.579535627 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218238221 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217490604 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.216477731 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.215815358 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.219422007 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216404415 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218323997 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.218906034 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218536 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.218944658 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217875713 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216298074 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217717622 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218827988 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216674243 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215698538 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217520381 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216303444 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220153355 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216892255 seconds)
  done (took 25.503433023 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.216010321 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.218442915 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.217972709 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.216555564 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.219077131 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.21744795 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.219704245 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219485505 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217030015 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219670335 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220113935 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219499285 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217469182 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.2176885 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.219811257 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.216997679 seconds)
  done (took 20.644986863 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.218180017 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.219647421 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.220197441 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.21990752 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.217581215 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.218053343 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.220297795 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.218369605 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.217821836 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.221320514 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.220571898 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.220983914 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.219717039 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.220003425 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.217006832 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.219634805 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.217568985 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.218276139 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.221106858 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.221248938 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.219336657 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.217880681 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.221569895 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.220755362 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.217721244 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.218474564 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.218567513 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.218695443 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.219577106 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.221696686 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.219440949 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.219879351 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.219042005 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.21975693 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.222803376 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.218612346 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.221959224 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.222007721 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.221887822 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.222964173 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.222065218 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.220631193 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.222978912 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.223101402 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.219821626 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.221410794 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.219895153 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.219637168 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.220232672 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.219585077 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.221860934 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.223299756 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.222898383 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.22315877 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.223291597 seconds)
  done (took 68.267992011 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22375023 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221964457 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.221269517 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221760193 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.223154048 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.221040576 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.222862179 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.22040416 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219959456 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.222054464 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221452995 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.223952021 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220272456 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224450086 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220750231 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223601554 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.221057669 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.219390336 seconds)
  done (took 23.147487581 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222293636 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.221664155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.224171518 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221769263 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.221371814 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223790489 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221875281 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.224565528 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224693396 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.222178158 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221217744 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.224477635 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223144937 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.223892436 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.223253494 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222957956 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.224195957 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225364875 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.2228494 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222524777 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225005365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225366814 seconds)
  done (took 28.067464096 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.2238487 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.222808028 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.240323064 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.267663931 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.257661187 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.223546686 seconds)
  done (took 8.591977217 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222653466 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224612655 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.222934821 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225082042 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225747945 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223520151 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223642646 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221778751 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225724632 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223604052 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223118295 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226621127 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225006731 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22297684 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226129613 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225620656 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223463587 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2232709 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225123713 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227017392 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224351254 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227310876 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223120542 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223255725 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224329282 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224178156 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22621617 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224224438 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224504913 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22714411 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227550482 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222861644 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226881019 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226436782 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227876895 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227110376 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224415978 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227025524 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227493365 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22549195 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.227711199 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227614132 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226946128 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224488428 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22728003 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223895499 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22596986 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224860693 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224976722 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227818064 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229147533 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224460376 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228283021 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228575318 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228504519 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228385799 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226499091 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225934039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227930723 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225689876 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226647345 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228316798 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225330267 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226292183 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229392353 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22586861 seconds)
  done (took 82.054949856 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225632215 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.225817465 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225831003 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228580578 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226355861 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226106159 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226228825 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226468605 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225991443 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22616365 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231252187 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229096729 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226463727 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226807448 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225567319 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227002551 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227422012 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226279334 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227336359 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230209494 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227402517 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227772016 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227254103 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227167758 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227880791 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229559604 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22717236 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227430463 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228831706 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227130153 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227519066 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228128942 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228077984 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.228178597 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227328864 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228144401 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228864635 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227999022 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228867498 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231420848 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227716161 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230236693 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228131458 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228255897 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229994368 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229781658 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228936099 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229390074 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227937506 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229392145 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229757941 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229027571 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228934944 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228771139 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229015413 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229358836 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229026071 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228791535 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22815794 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231860434 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229619678 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229200636 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232964063 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229382894 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228979546 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230109705 seconds)
  done (took 82.227807691 seconds)
done (took 1662.063450454 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.223253983 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.324906948 seconds)
  done (took 13.711013204 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.39402646 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.346132876 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.229080899 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.271174262 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.229231073 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.23542544 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.239686564 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.229860675 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.229131496 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.230119653 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.229888654 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.420719531 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.232488709 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.229802812 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.230763292 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.322809605 seconds)
  done (took 41.470422395 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.260935231 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.236129676 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.361974241 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.254786619 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.260984004 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.443421937 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.296709707 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.234545698 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.429878767 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.280129184 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.002982307 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.261268199 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.235153125 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.488320359 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.255435157 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.443493252 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.513572325 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.008023601 seconds)
  done (took 29.430877228 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.751964242 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.270076206 seconds)
  done (took 9.186111795 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.252012391 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.269635932 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.233389966 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.227366781 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.241188882 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.305949453 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.254040543 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.248604073 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.227156279 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.311396572 seconds)
  done (took 63.741962655 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.256495421 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.235870286 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.236488026 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.234855054 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.22770187 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.228574644 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.23500101 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.22858618 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.464294306 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.378290146 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.252187018 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.242018127 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.236239395 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.23665657 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.234122853 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.272491967 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.385961778 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.234366598 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.232159504 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.24214326 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.236669784 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.3257462 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.280889975 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.23442598 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.378968351 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.483357558 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.23861728 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.243198618 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.366559333 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.235020702 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.234635897 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.236306163 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.239407922 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.829686795 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.709395037 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.245893792 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.262689916 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.244859123 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.23459053 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.358330623 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.237852301 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.243355486 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.229382046 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.681909373 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.399375501 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.360320594 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.631555619 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.238507153 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.23918652 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.303227154 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.237820815 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.238644609 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.268818299 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.033791556 seconds)
  done (took 107.424955388 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.250837977 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.718669625 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.402754302 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.254506923 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.136014125 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.02873803 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.231454738 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.56082699 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.26804513 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.231829327 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.587598429 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.785011548 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.234153641 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.286929296 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.668792918 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.304409974 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.23076818 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.028539648 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.232157834 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.235840078 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.673476252 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.250325318 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.244249728 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.403333272 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.275039043 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.738846 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.891424814 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.725569331 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.233296218 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.230382874 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.745473129 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.235761489 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.271268151 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.232288927 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.527125186 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.633618419 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.607894176 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.234350806 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.237588632 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.233376992 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.248817714 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.736389917 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.619109143 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.244201331 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.232044726 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.757667018 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.233895043 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.241962226 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.236070949 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.446671963 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.146830886 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.233124695 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.894220537 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.233129159 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.516525067 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.233740358 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.267043823 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767748145 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.233467266 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.36174391 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.272756936 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.232294045 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.239469439 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.237781267 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.233076142 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.623761992 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.527572213 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.235604509 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.625273003 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.739930291 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.233996791 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.822407793 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.116374908 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.247262132 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.275085132 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.233787287 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.851886693 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.768191906 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.254833289 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.233018291 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612420493 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.234875104 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.575406887 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.251566141 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.235050731 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.682944832 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.255392878 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.270182531 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.234830037 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.25168997 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.013294934 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.236906327 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.524407707 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.270339436 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.235296703 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.235259869 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.239624917 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.236461281 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.236404446 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.240900923 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.824649004 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.239514007 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.554506854 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.256659052 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245374354 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.235897616 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.239219536 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.235194776 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.465604285 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.818738808 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.238794958 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.235570313 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.252091795 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.238401658 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.361599888 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.240647207 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.586916499 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.236808055 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.235472397 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.24218377 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.079298179 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.241837297 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.236051248 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.253403918 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.080053874 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.446396031 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.256076006 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.236805008 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.236338185 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.254081327 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.79989068 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.237642326 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.328095523 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.239927402 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995331088 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.248169946 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.274837465 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.816414589 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.245721238 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.23757688 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.241716676 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.237923085 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.555185819 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.535629016 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.525575044 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.239174038 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.237465831 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963959005 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.264380607 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.382124031 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.258054971 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.230938931 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.439121302 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.40826819 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.237792443 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.823536157 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.236300315 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462452041 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.251093082 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.567941866 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.775035051 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.23819019 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.245775268 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.989572181 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.925438585 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.87876496 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.23786699 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.595445806 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.245926206 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.681601844 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.238553293 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.237633274 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.823685751 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.237997742 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.242949954 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.238150844 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.238104708 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.302459737 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.415059461 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.793711757 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.239361161 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.744747481 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.260308575 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.238311429 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.242135604 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.242660277 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.590998807 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.30169541 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.240120857 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.271461539 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.239500026 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.240573687 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.753597455 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.16008784 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.238427613 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.394960462 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.945241459 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.24350111 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.239356695 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.972773098 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.445657956 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.7931217 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.295673982 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.592931073 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.245734349 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.282485743 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.083855133 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.254666654 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79806582 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.240158687 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.238399178 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.880404112 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.239358152 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.332269733 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.23925347 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.238769037 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.820820013 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.240238492 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.244455824 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.79128133 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.238579094 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.499194676 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.239796546 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.280501976 seconds)
  done (took 1093.205742769 seconds)
done (took 1359.33296125 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.240883076 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.246605742 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.23206441 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.242943883 seconds)
  done (took 26.140841748 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.254423245 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.249463977 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.250264454 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.247991933 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.252408299 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.249788556 seconds)
  done (took 8.685287217 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.807377746 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.248391861 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.248408181 seconds)
  done (took 19.485162051 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.496043955 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.674144752 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.674699487 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.783297461 seconds)
  done (took 10.810497932 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.25135913 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.250628733 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.250918813 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.253878902 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.256482602 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.257102579 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.253814412 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.254296994 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.256436302 seconds)
  done (took 12.463530527 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.688861899 seconds)
done (took 84.449510565 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.029109954 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.244416297 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.249997754 seconds)
    (4/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.254845119 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.103160284 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.122761509 seconds)
    (7/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.477887087 seconds)
    (8/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.45825394 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.459506191 seconds)
    (10/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.805795114 seconds)
    (11/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.668589534 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.514944861 seconds)
    (13/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.347066288 seconds)
    (14/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.245107033 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.286439403 seconds)
    (16/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.113239395 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.240772912 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.273367975 seconds)
    (19/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.769699564 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.725998472 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.267065336 seconds)
    (22/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.540855952 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.260382015 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.272684232 seconds)
    (25/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.245503267 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.700681881 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.788559523 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.231960644 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.012035689 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.340290842 seconds)
    (31/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.34909483 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.263438388 seconds)
    (33/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.329035312 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.267500244 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.140762696 seconds)
    (36/309) benchmarking ("sort", BigInt, false)...
    done (took 6.264297302 seconds)
    (37/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.231441253 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.331882375 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.245724659 seconds)
    (40/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.600360928 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.310727637 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.107716963 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.376541094 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.263274925 seconds)
    (45/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.93718491 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.693264416 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.232193207 seconds)
    (48/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.850207507 seconds)
    (49/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.943739092 seconds)
    (50/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.975124276 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.246635389 seconds)
    (52/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.333956197 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.248029086 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.331265085 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.520526415 seconds)
    (56/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.264099554 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.351792772 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.266532357 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.355034449 seconds)
    (60/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.749794692 seconds)
    (61/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.306593973 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.361200106 seconds)
    (63/309) benchmarking ("sort", Float32, false)...
    done (took 5.292041019 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.509648467 seconds)
    (65/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.660048335 seconds)
    (66/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.257179964 seconds)
    (67/309) benchmarking ("sort", Int8, false)...
    done (took 4.309138834 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.956551809 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.245554942 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.236536271 seconds)
    (71/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.277259291 seconds)
    (72/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.273496793 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.305947345 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.832106966 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.274081324 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.367477854 seconds)
    (77/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.248498906 seconds)
    (78/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.512922084 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.699933384 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.291046145 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.240999496 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.902909565 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.280133459 seconds)
    (84/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.671465113 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.247366991 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.269591998 seconds)
    (87/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.991661566 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.826966319 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.245227636 seconds)
    (90/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.286002208 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.336044362 seconds)
    (92/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.643667844 seconds)
    (93/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.980998299 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.684476985 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.003447433 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.252303377 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 5.578076862 seconds)
    (98/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.371004022 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.582970896 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.111654615 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.012244616 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.114736074 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.765671122 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.129616067 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.806315687 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.612547456 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.939282673 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.097031238 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.318335559 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.079502247 seconds)
    (111/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.857188645 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.261046774 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.268830267 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.276548937 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.374346658 seconds)
    (116/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.648579806 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.397015591 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.057879918 seconds)
    (119/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.589846627 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.47465113 seconds)
    (121/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.335136193 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.735580073 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.227099031 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.250560085 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.263758474 seconds)
    (126/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.267036155 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.2802928 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.611070353 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.250953299 seconds)
    (130/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.932703866 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.249965657 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.798744659 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.168204585 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.293399973 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.326100754 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.509590038 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.26544687 seconds)
    (138/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.361450281 seconds)
    (139/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.862632682 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.310579687 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.119657693 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.063199125 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.504249787 seconds)
    (144/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.599858582 seconds)
    (145/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.661830827 seconds)
    (146/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.477496083 seconds)
    (147/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.374524532 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.883965292 seconds)
    (149/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.598312819 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.382029764 seconds)
    (151/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.539268344 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.333265081 seconds)
    (153/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.278827599 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.756295687 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.869245306 seconds)
    (156/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.349699839 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.142805284 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.278829215 seconds)
    (159/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.251638661 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.836278547 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.764235005 seconds)
    (162/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.368837616 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.123748392 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.275063599 seconds)
    (165/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.258642278 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.030437118 seconds)
    (167/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.061126021 seconds)
    (168/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.93536491 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.629518722 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.279479366 seconds)
    (171/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.248008075 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.701134289 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.318647851 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.251755071 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.438179849 seconds)
    (176/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.279604516 seconds)
    (177/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.278443951 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.388173043 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.610193266 seconds)
    (180/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.304576672 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.775331301 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.939046464 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.631314622 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.508790722 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.702919997 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.913056712 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.253410857 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.084275317 seconds)
    (189/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.930271006 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.356248634 seconds)
    (191/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.071178259 seconds)
    (192/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.80286828 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.280985641 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.349690577 seconds)
    (195/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.262930154 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.296667415 seconds)
    (197/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.879466576 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.328131764 seconds)
    (199/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.427742346 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.495598317 seconds)
    (201/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.334304407 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.239972803 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.408123929 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.942162864 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.332207517 seconds)
    (206/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.31839475 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.300593854 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.670368287 seconds)
    (209/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.786265162 seconds)
    (210/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.454204139 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.90266555 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.460032217 seconds)
    (213/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.824610238 seconds)
    (214/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.280904921 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.239884611 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.254741109 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.275174677 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.065864302 seconds)
    (219/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.34189696 seconds)
    (220/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.240415127 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.313661537 seconds)
    (222/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.596824831 seconds)
    (223/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.690336108 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.302356849 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.251524538 seconds)
    (226/309) benchmarking ("sort", Float64, false)...
    done (took 5.661870545 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.771798637 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.915717559 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.209105943 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.256324854 seconds)
    (231/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.234510961 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.293094199 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.959638559 seconds)
    (234/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.003860614 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.625303869 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.716752783 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.913034057 seconds)
    (238/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.180123301 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.622931701 seconds)
    (240/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.067065272 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.196093662 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.198776021 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.759325244 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.283945488 seconds)
    (245/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.456169466 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.3401949 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.32958341 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.342152684 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.492019796 seconds)
    (250/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.225788063 seconds)
    (251/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.210251295 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.257620525 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.815861416 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.454136319 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.27714242 seconds)
    (256/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.292004443 seconds)
    (257/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.294163031 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.28419672 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.284287813 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.30129908 seconds)
    (261/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.449457682 seconds)
    (262/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.787126755 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.647526733 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.63359188 seconds)
    (265/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.369968944 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.250507306 seconds)
    (267/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.129415366 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.321475919 seconds)
    (269/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.256975497 seconds)
    (270/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.385093771 seconds)
    (271/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.362283279 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.242808553 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.142555846 seconds)
    (274/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.277567483 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.280884704 seconds)
    (276/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.925440013 seconds)
    (277/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.43476105 seconds)
    (278/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.345608304 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.249107131 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.280425141 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.294603404 seconds)
    (282/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.288378993 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.341185953 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.853148644 seconds)
    (285/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.457692486 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.34247129 seconds)
    (287/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.911007489 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.40966973 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.361984726 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.881125671 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.068126281 seconds)
    (292/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.246757534 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.258805947 seconds)
    (294/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.259391315 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.307400805 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.285071536 seconds)
    (297/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.615126777 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.306483798 seconds)
    (299/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.243993682 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.059525064 seconds)
    (301/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.269784643 seconds)
    (302/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.26052388 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.262658841 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.307132104 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.282246461 seconds)
    (306/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.244421031 seconds)
    (307/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.090245141 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.257528693 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.008962367 seconds)
  done (took 920.783474337 seconds)
done (took 921.965599113 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.294378394 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.286119511 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.272351647 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.294755481 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.382367772 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.301182902 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.283226401 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.275249726 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.321121522 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.321827303 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.270720012 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.298714385 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.272622711 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.271626756 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.273164237 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.286024643 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.451473433 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.27241052 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.288373768 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.282952487 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.288435745 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.271054695 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.323438855 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.299878177 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.278572632 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.277698946 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.274828483 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.291986215 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.383830835 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.27581001 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.278316189 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.283349114 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.450073113 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.272914056 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.268971547 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.292503786 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.283704416 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.283869397 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.278479902 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.304675091 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.916180415 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.27219298 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.274633127 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.275881971 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.276366447 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.279645829 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.274984033 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.28230626 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.286464441 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.286858301 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.908638426 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.288632201 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.277518231 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.276336373 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.28643276 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.274570564 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.279320765 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289561905 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.294667198 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.290132548 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.442712018 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.281621122 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.27828539 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.290823079 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.28188946 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.946771912 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.271484644 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.281231263 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.92182398 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.281726877 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.948058501 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.282727918 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.278377884 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.28949803 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.306495969 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.458672012 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.272218496 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.276418645 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.283622414 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.274356092 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.287345955 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288663327 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.282540893 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.278510705 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289733484 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.304710862 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.288613732 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.27783927 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.28621149 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.294839405 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.283247673 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.287174717 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.282144037 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.273592433 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.287715101 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.28223182 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.27882612 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.278805803 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.282582147 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.287775941 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.92216177 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293023328 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.274881185 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.275186561 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.277652536 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.290724255 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.922837422 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.278256163 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.301962472 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.326186421 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.280796215 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.44816517 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.280030428 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293279558 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.287524863 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.282090807 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.274583763 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.449798458 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.991619162 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.296834121 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.281277416 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.275145035 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293479591 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.28090614 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.275577576 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.462852073 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.281433547 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291219797 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.39856202 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.289834854 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.309865887 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.276163765 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.28290885 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.307285827 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.294359351 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.309532949 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.283855578 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.2934055 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.294642855 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.27708737 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.289388277 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.291518076 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.282134359 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.287421559 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.275300787 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.312557803 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.291305459 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290776822 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.301930962 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.399527603 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.278422645 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.451320903 seconds)
done (took 219.567588734 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.336004626 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.266830585 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.359001409 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.275496326 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.377685212 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.377204103 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.27340593 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.274042389 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.273408583 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.653217314 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.273859088 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.274423554 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.275359559 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.273132866 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.356702969 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.276903801 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.272969018 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.617676642 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.275753902 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.345329345 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.27247339 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.273669799 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.276583012 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.660220083 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.272022781 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.275487415 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.346452391 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.27658716 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.676100364 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.268307716 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.272865236 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.624208081 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.365407588 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.293799216 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.286231534 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.28363099 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.379868127 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.297554885 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.355554692 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.35732146 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.360814376 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.315319598 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.270837163 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.276196736 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.278467748 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.277208595 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.274578133 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.304103851 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.272733843 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.275688797 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.617005346 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.286667207 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.285922639 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.275951501 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.275175284 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.298059136 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.275800946 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.279111484 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.36800797 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.277948027 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.338664722 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.660119814 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.656608115 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.277640035 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.277609269 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.276249087 seconds)
  done (took 144.661345722 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.344431709 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.350982235 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.39740105 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.278396731 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.328642674 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.40258858 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.278536036 seconds)
  done (took 10.587699594 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.283914218 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.27986145 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.327953807 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.327637967 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.27850047 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.426631555 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.279552152 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.289329789 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.275923135 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.330620272 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.280942999 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.280479022 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.287168408 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.277178955 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.327192087 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.290648774 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.393099945 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.279986335 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.280253098 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.430151238 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.278235772 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.286674419 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.330755364 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.290279555 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.282066528 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.285711608 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.847844027 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.280372775 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.278541552 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.28054905 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.278297607 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.3184512 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.280798721 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.277728661 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.277969099 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395724871 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.280569091 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27823157 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.281198781 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.276425893 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.280522862 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.281204758 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.280004856 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.278862149 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.281188165 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.30252097 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.28175895 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.281139852 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.281319971 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.282248323 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.329749752 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.280758766 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.279174658 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.279067903 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.336331483 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.28842186 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.28239611 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.279604258 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.282862588 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.279612744 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.432540967 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.328330061 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.283210581 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.328330974 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.282923841 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.282945726 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.282257724 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.282611249 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335776933 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.282777016 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.331004738 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.280376744 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.435385766 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.304761253 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.28463957 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.285061313 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.28529039 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.282675972 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.275779773 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.286514725 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.280233715 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.283217782 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.288287621 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.280483704 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.281654022 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.384372935 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391488151 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.279968973 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.295968135 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.290354769 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.280391864 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.336082071 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.283699774 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.281703947 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335199954 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.39745198 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.336647544 seconds)
  done (took 148.053690108 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.288124444 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.291465987 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.285112224 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.298932637 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.285280869 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.283680823 seconds)
  done (took 8.944038652 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.286635329 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.286374837 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.283138083 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.285249618 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.284131134 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.285972507 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.284621607 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285525023 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.288601622 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.284414785 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.285954093 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.288539951 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.286718604 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.284717193 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.284910688 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.28536361 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.285773854 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.28280952 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.28565014 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286022276 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.388972464 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.284796705 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285142595 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.286507649 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.291428188 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.286035844 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.2919672 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.285373415 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.286362516 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.291762494 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.288404706 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.288534285 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.287226019 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.292190786 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.290807625 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.287122246 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290974175 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.289543219 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.284424271 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.288424517 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.289701439 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.286736057 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.287024307 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.28961614 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.288427366 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.292643209 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.293996693 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.293765657 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.286775391 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.289681175 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.28924953 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.286499815 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.288015756 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.290343664 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.289116851 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290960403 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.294744424 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.288049993 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.287389146 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.288135981 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.290153487 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.288352563 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.288638703 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.292236878 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.286329037 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.290882701 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.28804094 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.293129485 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.288922535 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.287733711 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.291778284 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.286846372 seconds)
  done (took 95.055564323 seconds)
done (took 408.504358361 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.443353964 seconds)
  done (took 7.659210953 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.490864868 seconds)
  done (took 7.707602115 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.764921114 seconds)
  done (took 24.985003978 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.321796922 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.422525876 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.299298159 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.284922174 seconds)
  done (took 26.545088532 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.579555326 seconds)
  done (took 7.796471323 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.281152935 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.280929357 seconds)
  done (took 13.780365239 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.355946593 seconds)
  done (took 7.572362943 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.993753609 seconds)
  done (took 8.215293865 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.30788223 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.289205578 seconds)
  done (took 14.062997414 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.267493111 seconds)
  done (took 7.48376727 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.660929502 seconds)
  done (took 8.879383231 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.29333575 seconds)
  done (took 7.511208601 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.308562877 seconds)
  done (took 7.525737015 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.454792911 seconds)
  done (took 10.671975924 seconds)
done (took 161.610920699 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.280864674 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.281754419 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.282728057 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.282525423 seconds)
  done (took 26.344227571 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.323490486 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.323627207 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.325143099 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.827265884 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.325485041 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.323659841 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.315319859 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.315442738 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.334984056 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.326914424 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.325106054 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.326173676 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.32424177 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.318107922 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.326234773 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.325573257 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.333849324 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.325525088 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.315601746 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.326808024 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.289253296 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.335569735 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.327095834 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.291565803 seconds)
  done (took 33.450588966 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.49156035 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.361931592 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.444376944 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.342064179 seconds)
  done (took 6.858412849 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.342161662 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.345487533 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.360093515 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.399894812 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.419914052 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.354572262 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.319289866 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.312610793 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.298384042 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.344478864 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.420328249 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.360190038 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.442696083 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.291908116 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.491115992 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.291921564 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.291015951 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.343774696 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.395062532 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.411100536 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.29133193 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.343862617 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.348803548 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.361750435 seconds)
  done (took 33.801849399 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.290651194 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.299060866 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.296958661 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.290950602 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.291587253 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.292089344 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.297660993 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.292068015 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.313288689 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.293149377 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.291013626 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.2907244 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.291807114 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.291986316 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.292077577 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.304529084 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.305385427 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.292209328 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.295456247 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.297877606 seconds)
  done (took 27.131746898 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.285525476 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.143472131 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.635410307 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.540784507 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.285402401 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.290931963 seconds)
  done (took 27.402992687 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.374868133 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.523675045 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.291204627 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.719346087 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.793428404 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.293248637 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.292317413 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.569281561 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.935030568 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.960563753 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.356421302 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.367059837 seconds)
  done (took 19.699619021 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.300361568 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.29120693 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.302998131 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.307317796 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.357070381 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.296780782 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.299091513 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.284762745 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.362272459 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.3609083 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.296335422 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.358477431 seconds)
  done (took 37.040473229 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37597402 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335493438 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.467243817 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.15805699 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.045328143 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50162464 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.208011382 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.736526079 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.293868725 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562935908 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30322919 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379920758 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.547277945 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297834465 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293364166 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.469009415 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522328618 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855021203 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291105867 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.879034559 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319606721 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.288499944 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.086240305 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.326265351 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.501544007 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.272621962 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.551338518 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.068068065 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621813073 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300158297 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300565844 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290644147 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565106984 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010709699 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386565794 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302463599 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.173146766 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.844641024 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.275609005 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.969324787 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314706651 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.292898449 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30158502 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289549853 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.225924404 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290828704 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74528554 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.296792731 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.002155718 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.290623732 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302266804 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386010738 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.294794803 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.864287466 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448989662 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.298043836 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.288591481 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29703351 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86463469 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.538965949 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310951205 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.225801456 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.788362588 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.887615953 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006879442 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.393768727 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.296633985 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.294556008 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235893135 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.886272626 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313185864 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437187378 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.318078449 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.985276843 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150429898 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.305410746 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.233949623 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921000782 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307670237 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.230905089 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.522138684 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.069746324 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231539716 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.239949337 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.228032329 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121530624 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301817505 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.824982512 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.300761314 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.741220567 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.30550066 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311599818 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317597995 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.518432393 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.177619174 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292701949 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.29342901 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422218996 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316211003 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.74400291 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238219134 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.29804874 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551977621 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.506647469 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294043702 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.471695387 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521857622 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308779199 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.308310206 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.30771049 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.303911989 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.953425252 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.306857396 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.537188752 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315892229 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.072590462 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154778942 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296435809 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.399208287 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.297370882 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575800146 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.178653043 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455889204 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362244464 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298948601 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.295592533 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.003943679 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153004396 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.185023559 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.297886956 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296894669 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.305684411 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.295623598 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293693221 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.29306934 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311022845 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.07381404 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.520253648 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295044664 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572709484 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230447835 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439234526 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.341616926 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.520448295 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.647303303 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.294216555 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557362336 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30357054 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.309281084 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.307867215 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315016537 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393194413 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317127555 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.29646831 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.555217884 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.303205872 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.300746063 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.018463508 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.080528359 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300667737 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.303548572 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.252618406 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965229296 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281775735 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.305162464 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189891309 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.310749491 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365704205 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.302361883 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.307479648 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.450114101 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.283259176 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.303059882 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.308432892 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523336652 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30915292 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.006613141 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384369608 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.515531453 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968828381 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310906495 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.231962896 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.008754854 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.991115952 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298500959 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.488585578 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299464624 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308869452 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310233493 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.969922452 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.966027638 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301518617 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.941141522 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.309483614 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310192362 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.305309444 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299462914 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.422412126 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.575621875 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316087755 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.31509603 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442257929 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.311727175 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.232681808 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.81455201 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304428843 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.299923419 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.074602443 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333355927 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.928028628 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822580496 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562092793 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.150785338 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311646269 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.060646734 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.340828822 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.305456347 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.2993188 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313540388 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.314082418 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307691687 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.311044482 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.997012026 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.788303459 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869478249 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16254107 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922132085 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360333296 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.311727586 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.188477491 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.75669737 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235256361 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.959832683 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.521005879 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.755873801 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294560057 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525723025 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.661469073 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18793117 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.310904028 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.530488899 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355496246 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.321407676 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314941347 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512832292 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335351299 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.303314266 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.247560341 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.587109399 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563276796 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312729466 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388331824 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.755270321 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311145649 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.082725166 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.300641498 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.811090885 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503921448 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.856538524 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.728014598 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.313582292 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.310648983 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818992332 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.311580084 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.831164798 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000648417 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.318498527 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.528232277 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243335265 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.314281167 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.313688207 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.30393157 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.927382892 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.300397288 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.559676149 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314465594 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238793955 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.30378889 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935580784 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.162221322 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.309637476 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304233404 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182533786 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311492343 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643471343 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.306444585 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.420205197 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306473248 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.238583898 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238352415 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.996861697 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.305698548 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289042812 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891625944 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.744210325 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.447359759 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332141904 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160374434 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.562418595 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.318189525 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.975897974 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532126578 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.277963693 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326256124 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.405260631 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304976191 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.290199181 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.186018604 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.541214699 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250676906 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.530244465 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.608119401 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.216703155 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.303543371 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.518103633 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.212412394 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31602336 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600851081 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.022400785 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.317669053 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165659615 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330699007 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307578634 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352304539 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.801160774 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.31219108 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376098302 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.317129084 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.317165407 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.316983082 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50756464 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312710428 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315211268 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.320540858 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399612429 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.606570056 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.428339032 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.080956533 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984949885 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179364512 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.980386428 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.319409822 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307265054 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307118981 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249303966 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455442912 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.835142445 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579966727 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43317464 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.895536101 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329654619 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324498788 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323485987 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524389289 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58273865 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.182156198 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318930347 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.975687214 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.467272105 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318693894 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.519021053 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899094967 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965354375 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422125379 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.31550983 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.770650682 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587366274 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.400955353 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307614915 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901992005 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.325522159 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.825378956 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.315417133 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320581831 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456673832 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.318803796 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030954354 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.318620433 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.467434098 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.081864331 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068245606 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.572329711 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.913239886 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.319212714 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987627758 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117043667 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57477557 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378568729 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.319811313 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.416455321 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454944425 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.319754415 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.19827328 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309210318 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157607216 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.018431617 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.319534409 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986931071 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575859238 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.306477288 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.322589816 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333179833 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.3198919 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53511686 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145270477 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535608519 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.319923089 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311943333 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.883958553 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984608878 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.323880371 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253361966 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.313570034 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594884173 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.55260106 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334555042 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.76273172 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.020363969 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948527517 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.286779204 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332762377 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324525476 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119625856 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984800309 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.436797179 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88887742 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.971945173 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315072209 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590216933 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.316268816 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.311338839 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593759917 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.316229983 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.310995094 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346948966 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.987110178 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209221485 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.335901647 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.99717208 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.253839874 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.540990629 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031001511 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258532182 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321671958 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.519917474 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.312360556 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439146545 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.323260963 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.321001824 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31432194 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.075106565 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634676892 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.319440765 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.30757075 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.308460579 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.314800185 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325506757 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576594141 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319537649 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.988123955 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.663212466 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.572283464 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.316505871 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.303429539 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.317456154 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312697847 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068200021 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.319945729 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.00399446 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973015642 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.315251861 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.328644639 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.318551042 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.530306951 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527125227 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.312943876 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327003766 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314434735 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333815966 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.217979554 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.115857285 seconds)
  done (took 1593.475387883 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.327665699 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.332960846 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.356435345 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.350980829 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.359566759 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.410899571 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.418270668 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.347740607 seconds)
  done (took 52.150727982 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.318351132 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.473018246 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.348898069 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.315470369 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.322783444 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.313635269 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.845731475 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.3265887 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.322159933 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.324494563 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.315645677 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.327542452 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.060313548 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.322916288 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.325561937 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.301615252 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.322537543 seconds)
  done (took 65.140833668 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.328490665 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.417428735 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.356183931 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.3183781 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.161223236 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.332309219 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.020935709 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.347671573 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.328232339 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.506069084 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.974227273 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.372041289 seconds)
  done (took 80.712065275 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.323278091 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.322623916 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.322431505 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.322211549 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.322630096 seconds)
  done (took 7.862313771 seconds)
done (took 2012.288631918 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.566664987 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.14858728 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.09858699 seconds)
  done (took 5.495508424 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.46367955 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.514727504 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.652957674 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.661681905 seconds)
  done (took 7.542905514 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.593392433 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.699967185 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.513528098 seconds)
  done (took 6.056015186 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.010471515 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.319504135 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.452423223 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.317858792 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.320907805 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.321673447 seconds)
  done (took 20.212179405 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.321248539 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.32461746 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.322389582 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.324430073 seconds)
  done (took 6.544296877 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.301606334 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.048966223 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.303183862 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.316429777 seconds)
  done (took 18.220320336 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.06783013 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.080372032 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.065871387 seconds)
  done (took 7.463966479 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.327612395 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.161984551 seconds)
  done (took 9.740305517 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.646831746 seconds)
  done (took 2.896882512 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.452929407 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.65226519 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.555883538 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.450981914 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.549738922 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.964223444 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.310474869 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.797726469 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.438539583 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.973437763 seconds)
  done (took 30.398633531 seconds)
done (took 128.167712376 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.76293687 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.337479936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.520805185 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.732340861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.550622989 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.520588632 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.815832443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.700468663 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.236176364 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.22759562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.733923913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.550897942 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.536022565 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.340766418 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.535921177 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.341291421 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.629136647 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.79127107 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.336878418 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.336023779 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.818516551 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.370041137 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.563240849 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.383221606 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.607773018 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.470915308 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.950555069 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.342312058 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.319044268 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.966116124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.471924881 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.319810535 seconds)
  done (took 198.372540217 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.318594073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.340820256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.320705502 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.338035609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.317513654 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.319193665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.320491896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.319440583 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.330406605 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.318564244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.336349965 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.338333885 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.319815285 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.319424541 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.337024635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.338519239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.320153602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.337313751 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.319885595 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.319778873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.32103296 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.319720135 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.3378082 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.319482226 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.319713869 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.338670178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.319975893 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.320317867 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.319670102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.320213107 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.319886208 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.322115526 seconds)
  done (took 203.663204809 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.336006611 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.337996177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.321909674 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.337391027 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.319637574 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.32113283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.341355644 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.322774532 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.335975434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.331331782 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.320901218 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.321211601 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.340756959 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.319694675 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.342388118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.338677164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.324865287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.321287223 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.321412334 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.32120148 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.339484167 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.34549397 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.321362683 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.332142756 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.320860657 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.336220422 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.322117886 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.329063886 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.322044728 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.321662902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.340091872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.320960574 seconds)
  done (took 203.784370319 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.520183923 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.329745781 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.331721871 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.269008543 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.33056188 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.331153611 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.329449629 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.532582397 seconds)
  done (took 14.230493851 seconds)
done (took 621.300441261 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.838003859 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.528919517 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.546090175 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.350408605 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.227622258 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.352053834 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.353040928 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.545355086 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.318578007 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.550736042 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.731222554 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.349099535 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.877279112 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.34960301 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.629362599 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.458928931 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.270656798 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.39374198 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.704335196 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.9731159 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.635413694 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.962005498 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.544936223 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.328617561 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.883482477 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.960667124 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.18590996 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.267536183 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.351409461 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.707503799 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.222519442 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.458946365 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.423641583 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.403138807 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.457102661 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.439745905 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.427935221 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.401008049 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.548171188 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.712740918 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.991978448 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.133950283 seconds)
  done (took 94.054220371 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.320507094 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.320215516 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.319432621 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.321278309 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.322453947 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.32079392 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.319688744 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.319666892 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.320416648 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.319808454 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.320145625 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.320556257 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.319088228 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.322412306 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.320020935 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.320630058 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.320986286 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.321627281 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.319993176 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.320901357 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.320620528 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.320022123 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.321240617 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.319655291 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.321378605 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.320485448 seconds)
  done (took 35.594932311 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.333894533 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.608915312 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.793883586 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.339898559 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.333635886 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.337995019 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.425638298 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.33614523 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.336839052 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.336840162 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.516679676 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.338390077 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.375536164 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.824990008 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.336550139 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.336368086 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.336254575 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.334623499 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.616010702 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.344324251 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.428676689 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.33702837 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.427091137 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.345761367 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.337514379 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.335307118 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.339826326 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.876512574 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.337819785 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.518612098 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.309276313 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.429458377 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.864089575 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.807766025 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.311895577 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.343819776 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.3365373 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.523332704 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.337925519 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.335233406 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.427917061 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.336398149 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.805431602 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.004564238 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.356460857 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.337631083 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.902857258 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.522871623 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.632470636 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.345940183 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.833163134 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.340281267 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.339041756 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.337972148 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.633923286 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.343704797 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.336621809 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.957339185 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.361047677 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.428290041 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.339100612 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.336247908 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.62380856 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.337642798 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.614172821 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.339639307 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.344621285 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.337891558 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.807676038 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.340295441 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.027654275 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.356512012 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.338599124 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.51745679 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.613877957 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.937464838 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.341088508 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.630456699 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.878464202 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.427980773 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.341131624 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.869239181 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.432003825 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.342258437 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.34304403 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.340965241 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.339103536 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.393177076 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.42796696 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.947165176 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.017810798 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.975729597 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.450507041 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.346761983 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.339588234 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.959475134 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.359898929 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.340387929 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.804530452 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.029875911 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.359638755 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.347432673 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.009918422 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.360720667 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.432208222 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.345228206 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.813842411 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.340749882 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.394451018 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.340952256 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.347249987 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.343179935 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.433677451 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.343230417 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.340889627 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.99738282 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.549522306 seconds)
  done (took 178.266587983 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.353748299 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.333325073 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.339357728 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.33215748 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.332874575 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.339460614 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.333018416 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.33365871 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.339571881 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.333333053 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.335937304 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.333362122 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.33572459 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.334951995 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.344344136 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.341474883 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.946115568 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.335877725 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.337633907 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.334194202 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.180727266 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.34986575 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.337669639 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.333894608 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.334941829 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.336374227 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.335818455 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.33745969 seconds)
  done (took 152.163982562 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.342797756 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.014061325 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.343134291 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.498588988 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.366963894 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.340894187 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.496153653 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.409953472 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.343535037 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.340738567 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.340078409 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.701125414 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.34455697 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.957196587 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.57175624 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.499499433 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.956219925 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.344718546 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.341416694 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.341014664 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.500579999 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.355163448 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.703990495 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.017942056 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.345378754 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.018521228 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.332303671 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.345187667 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.341157317 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.020053511 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.342398438 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.706089183 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.43412864 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.413365233 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.02134497 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.958799781 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.960372411 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.517900225 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.341760163 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.342847533 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.341523539 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.332535917 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.023696063 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.34568683 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.343526119 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.015968428 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.364705036 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.346252341 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.352993825 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.342783557 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.413106939 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.413951883 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.709029082 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.028286275 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.435429036 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.365358676 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.499803988 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.743593471 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.348209401 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.960403911 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.33239993 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.077606371 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.353054806 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.333378018 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.345128518 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.349185875 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.52250301 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.500306664 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.961049338 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.345013811 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.961708672 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.524321206 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.344120952 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.344866036 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.346754951 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.075381565 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.968059633 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.525732058 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.504856413 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.580021014 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.335118842 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.344558587 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.334968819 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.436992444 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.34585642 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.027573387 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.964657691 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.348749682 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.347660868 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.348069152 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.347466312 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.558893587 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.027709739 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.438471081 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.956601983 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.729132042 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.711287021 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.347891452 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.414735805 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.346839292 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.711887458 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.347591461 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.414475144 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.810755394 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.711715552 seconds)
  done (took 163.917901118 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.624185524 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.688702315 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.444910932 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.472669603 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.003561395 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.958977891 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.682553243 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.48615612 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.468543668 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.611170101 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.660057385 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.433961933 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.543424082 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.43341517 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.108689872 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.424001184 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.452534703 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.480677981 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.456332863 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.456842799 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.025134343 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.662808812 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.541185629 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.437703078 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.44983804 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.200407004 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.940852725 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.931311071 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.550127463 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.787105619 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.941968139 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.543211109 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.41101403 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.091467791 seconds)
  done (took 66.678585931 seconds)
done (took 691.931257648 seconds)
SAVING RESULT...
DONE!
